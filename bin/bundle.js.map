{
  "version": 3,
  "sources": ["../node_modules/dat.gui/src/dat/color/toString.js", "../node_modules/dat.gui/src/dat/utils/common.js", "../node_modules/dat.gui/src/dat/color/interpret.js", "../node_modules/dat.gui/src/dat/color/math.js", "../node_modules/dat.gui/src/dat/color/Color.js", "../node_modules/dat.gui/src/dat/controllers/Controller.js", "../node_modules/dat.gui/src/dat/dom/dom.js", "../node_modules/dat.gui/src/dat/controllers/BooleanController.js", "../node_modules/dat.gui/src/dat/controllers/OptionController.js", "../node_modules/dat.gui/src/dat/controllers/StringController.js", "../node_modules/dat.gui/src/dat/controllers/NumberController.js", "../node_modules/dat.gui/src/dat/controllers/NumberControllerBox.js", "../node_modules/dat.gui/src/dat/controllers/NumberControllerSlider.js", "../node_modules/dat.gui/src/dat/controllers/FunctionController.js", "../node_modules/dat.gui/src/dat/controllers/ColorController.js", "../node_modules/dat.gui/src/dat/utils/css.js", "../node_modules/dat.gui/src/dat/gui/saveDialogue.html.js", "../node_modules/dat.gui/src/dat/controllers/ControllerFactory.js", "../node_modules/dat.gui/src/dat/utils/requestAnimationFrame.js", "../node_modules/dat.gui/src/dat/dom/CenteredDiv.js", "../node_modules/dat.gui/src/dat/gui/GUI.js", "../node_modules/dat.gui/src/dat/index.js", "../node_modules/three/build/three.js", "../node_modules/three/examples/jsm/loaders/RGBELoader.js", "app.js"],
  "sourcesContent": ["/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nexport default function(color, forceCSSHex) {\n  const colorFormat = color.__state.conversionName.toString();\n\n  const r = Math.round(color.r);\n  const g = Math.round(color.g);\n  const b = Math.round(color.b);\n  const a = color.a;\n  const h = Math.round(color.h);\n  const s = color.s.toFixed(1);\n  const v = color.v.toFixed(1);\n\n  if (forceCSSHex || (colorFormat === 'THREE_CHAR_HEX') || (colorFormat === 'SIX_CHAR_HEX')) {\n    let str = color.hex.toString(16);\n    while (str.length < 6) {\n      str = '0' + str;\n    }\n    return '#' + str;\n  } else if (colorFormat === 'CSS_RGB') {\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  } else if (colorFormat === 'CSS_RGBA') {\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n  } else if (colorFormat === 'HEX') {\n    return '0x' + color.hex.toString(16);\n  } else if (colorFormat === 'RGB_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ']';\n  } else if (colorFormat === 'RGBA_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ',' + a + ']';\n  } else if (colorFormat === 'RGB_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + '}';\n  } else if (colorFormat === 'RGBA_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + ',a:' + a + '}';\n  } else if (colorFormat === 'HSV_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + '}';\n  } else if (colorFormat === 'HSVA_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + ',a:' + a + '}';\n  }\n\n  return 'unknown format';\n}\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst ARR_EACH = Array.prototype.forEach;\nconst ARR_SLICE = Array.prototype.slice;\n\n/**\n * Band-aid methods for things that should be a lot easier in JavaScript.\n * Implementation and structure inspired by underscore.js\n * http://documentcloud.github.com/underscore/\n */\n\nconst Common = {\n  BREAK: {},\n\n  extend: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (!this.isUndefined(obj[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  defaults: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (this.isUndefined(target[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  compose: function() {\n    const toCall = ARR_SLICE.call(arguments);\n    return function() {\n      let args = ARR_SLICE.call(arguments);\n      for (let i = toCall.length - 1; i >= 0; i--) {\n        args = [toCall[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  },\n\n  each: function(obj, itr, scope) {\n    if (!obj) {\n      return;\n    }\n\n    if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n      obj.forEach(itr, scope);\n    } else if (obj.length === obj.length + 0) { // Is number but not NaN\n      let key;\n      let l;\n      for (key = 0, l = obj.length; key < l; key++) {\n        if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    } else {\n      for (const key in obj) {\n        if (itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    }\n  },\n\n  defer: function(fnc) {\n    setTimeout(fnc, 0);\n  },\n\n  // if the function is called repeatedly, wait until threshold passes until we execute the function\n  debounce: function(func, threshold, callImmediately) {\n    let timeout;\n\n    return function() {\n      const obj = this;\n      const args = arguments;\n      function delayed() {\n        timeout = null;\n        if (!callImmediately) func.apply(obj, args);\n      }\n\n      const callNow = callImmediately || !timeout;\n\n      clearTimeout(timeout);\n      timeout = setTimeout(delayed, threshold);\n\n      if (callNow) {\n        func.apply(obj, args);\n      }\n    };\n  },\n\n  toArray: function(obj) {\n    if (obj.toArray) return obj.toArray();\n    return ARR_SLICE.call(obj);\n  },\n\n  isUndefined: function(obj) {\n    return obj === undefined;\n  },\n\n  isNull: function(obj) {\n    return obj === null;\n  },\n\n  isNaN: function(obj) {\n    return isNaN(obj);\n  },\n\n  isArray: Array.isArray || function(obj) {\n    return obj.constructor === Array;\n  },\n\n  isObject: function(obj) {\n    return obj === Object(obj);\n  },\n\n  isNumber: function(obj) {\n    return obj === obj + 0;\n  },\n\n  isString: function(obj) {\n    return obj === obj + '';\n  },\n\n  isBoolean: function(obj) {\n    return obj === false || obj === true;\n  },\n\n  isFunction: function(obj) {\n    return obj instanceof Function;\n  }\n\n};\n\nexport default Common;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport toString from './toString';\nimport common from '../utils/common';\n\nconst INTERPRETATIONS = [\n  // Strings\n  {\n    litmus: common.isString,\n    conversions: {\n      THREE_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9])([A-F0-9])([A-F0-9])$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt(\n              '0x' +\n              test[1].toString() + test[1].toString() +\n              test[2].toString() + test[2].toString() +\n              test[3].toString() + test[3].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      SIX_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9]{6})$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt('0x' + test[1].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGB: {\n        read: function(original) {\n          const test = original.match(/^rgb\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3])\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGBA: {\n        read: function(original) {\n          const test = original.match(/^rgba\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3]),\n            a: parseFloat(test[4])\n          };\n        },\n\n        write: toString\n      }\n    }\n  },\n\n  // Numbers\n  {\n    litmus: common.isNumber,\n\n    conversions: {\n\n      HEX: {\n        read: function(original) {\n          return {\n            space: 'HEX',\n            hex: original,\n            conversionName: 'HEX'\n          };\n        },\n\n        write: function(color) {\n          return color.hex;\n        }\n      }\n\n    }\n\n  },\n\n  // Arrays\n  {\n    litmus: common.isArray,\n    conversions: {\n      RGB_ARRAY: {\n        read: function(original) {\n          if (original.length !== 3) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b];\n        }\n      },\n\n      RGBA_ARRAY: {\n        read: function(original) {\n          if (original.length !== 4) return false;\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2],\n            a: original[3]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b, color.a];\n        }\n      }\n    }\n  },\n\n  // Objects\n  {\n    litmus: common.isObject,\n    conversions: {\n\n      RGBA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b,\n            a: color.a\n          };\n        }\n      },\n\n      RGB_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b\n          };\n        }\n      },\n\n      HSVA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v,\n            a: color.a\n          };\n        }\n      },\n\n      HSV_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v\n          };\n        }\n      }\n    }\n  }\n];\n\nlet result;\nlet toReturn;\n\nconst interpret = function() {\n  toReturn = false;\n\n  const original = arguments.length > 1 ? common.toArray(arguments) : arguments[0];\n  common.each(INTERPRETATIONS, function(family) {\n    if (family.litmus(original)) {\n      common.each(family.conversions, function(conversion, conversionName) {\n        result = conversion.read(original);\n\n        if (toReturn === false && result !== false) {\n          toReturn = result;\n          result.conversionName = conversionName;\n          result.conversion = conversion;\n          return common.BREAK;\n        }\n      });\n\n      return common.BREAK;\n    }\n  });\n\n  return toReturn;\n};\n\nexport default interpret;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nlet tmpComponent;\n\nconst ColorMath = {\n  hsv_to_rgb: function(h, s, v) {\n    const hi = Math.floor(h / 60) % 6;\n\n    const f = h / 60 - Math.floor(h / 60);\n    const p = v * (1.0 - s);\n    const q = v * (1.0 - (f * s));\n    const t = v * (1.0 - ((1.0 - f) * s));\n\n    const c = [\n      [v, t, p],\n      [q, v, p],\n      [p, v, t],\n      [p, q, v],\n      [t, p, v],\n      [v, p, q]\n    ][hi];\n\n    return {\n      r: c[0] * 255,\n      g: c[1] * 255,\n      b: c[2] * 255\n    };\n  },\n\n  rgb_to_hsv: function(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const delta = max - min;\n    let h;\n    let s;\n\n    if (max !== 0) {\n      s = delta / max;\n    } else {\n      return {\n        h: NaN,\n        s: 0,\n        v: 0\n      };\n    }\n\n    if (r === max) {\n      h = (g - b) / delta;\n    } else if (g === max) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n    h /= 6;\n    if (h < 0) {\n      h += 1;\n    }\n\n    return {\n      h: h * 360,\n      s: s,\n      v: max / 255\n    };\n  },\n\n  rgb_to_hex: function(r, g, b) {\n    let hex = this.hex_with_component(0, 2, r);\n    hex = this.hex_with_component(hex, 1, g);\n    hex = this.hex_with_component(hex, 0, b);\n    return hex;\n  },\n\n  component_from_hex: function(hex, componentIndex) {\n    return (hex >> (componentIndex * 8)) & 0xFF;\n  },\n\n  hex_with_component: function(hex, componentIndex, value) {\n    return value << (tmpComponent = componentIndex * 8) | (hex & ~(0xFF << tmpComponent));\n  }\n};\n\nexport default ColorMath;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport interpret from './interpret';\nimport math from './math';\nimport colorToString from './toString';\nimport common from '../utils/common';\n\nclass Color {\n  constructor() {\n    this.__state = interpret.apply(this, arguments);\n\n    if (this.__state === false) {\n      throw new Error('Failed to interpret color arguments');\n    }\n\n    this.__state.a = this.__state.a || 1;\n  }\n\n  toString() {\n    return colorToString(this);\n  }\n\n  toHexString() {\n    return colorToString(this, true);\n  }\n\n  toOriginal() {\n    return this.__state.conversion.write(this);\n  }\n}\n\nfunction defineRGBComponent(target, component, componentHexIndex) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'RGB') {\n        return this.__state[component];\n      }\n\n      Color.recalculateRGB(this, component, componentHexIndex);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'RGB') {\n        Color.recalculateRGB(this, component, componentHexIndex);\n        this.__state.space = 'RGB';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\nfunction defineHSVComponent(target, component) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'HSV') {\n        return this.__state[component];\n      }\n\n      Color.recalculateHSV(this);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'HSV') {\n        Color.recalculateHSV(this);\n        this.__state.space = 'HSV';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\n\nColor.recalculateRGB = function(color, component, componentHexIndex) {\n  if (color.__state.space === 'HEX') {\n    color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n  } else if (color.__state.space === 'HSV') {\n    common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n  } else {\n    throw new Error('Corrupted color state');\n  }\n};\n\nColor.recalculateHSV = function(color) {\n  const result = math.rgb_to_hsv(color.r, color.g, color.b);\n\n  common.extend(color.__state,\n    {\n      s: result.s,\n      v: result.v\n    }\n  );\n\n  if (!common.isNaN(result.h)) {\n    color.__state.h = result.h;\n  } else if (common.isUndefined(color.__state.h)) {\n    color.__state.h = 0;\n  }\n};\n\nColor.COMPONENTS = ['r', 'g', 'b', 'h', 's', 'v', 'hex', 'a'];\n\ndefineRGBComponent(Color.prototype, 'r', 2);\ndefineRGBComponent(Color.prototype, 'g', 1);\ndefineRGBComponent(Color.prototype, 'b', 0);\n\ndefineHSVComponent(Color.prototype, 'h');\ndefineHSVComponent(Color.prototype, 's');\ndefineHSVComponent(Color.prototype, 'v');\n\nObject.defineProperty(Color.prototype, 'a', {\n  get: function() {\n    return this.__state.a;\n  },\n\n  set: function(v) {\n    this.__state.a = v;\n  }\n});\n\nObject.defineProperty(Color.prototype, 'hex', {\n  get: function() {\n    if (this.__state.space !== 'HEX') {\n      this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n      this.__state.space = 'HEX';\n    }\n\n    return this.__state.hex;\n  },\n\n  set: function(v) {\n    this.__state.space = 'HEX';\n    this.__state.hex = v;\n  }\n});\n\nexport default Color;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\n/**\n * @class An \"abstract\" class that represents a given property of an object.\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass Controller {\n  constructor(object, property) {\n    this.initialValue = object[property];\n\n    /**\n     * Those who extend this class will put their DOM elements in here.\n     * @type {DOMElement}\n     */\n    this.domElement = document.createElement('div');\n\n    /**\n     * The object to manipulate\n     * @type {Object}\n     */\n    this.object = object;\n\n    /**\n     * The name of the property to manipulate\n     * @type {String}\n     */\n    this.property = property;\n\n    /**\n     * The function to be called on change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onChange = undefined;\n\n    /**\n     * The function to be called on finishing change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onFinishChange = undefined;\n  }\n\n  /**\n   * Specify that a function fire every time someone changes the value with\n   * this Controller.\n   *\n   * @param {Function} fnc This function will be called whenever the value\n   * is modified via this Controller.\n   * @returns {Controller} this\n   */\n  onChange(fnc) {\n    this.__onChange = fnc;\n    return this;\n  }\n\n  /**\n   * Specify that a function fire every time someone \"finishes\" changing\n   * the value wih this Controller. Useful for values that change\n   * incrementally like numbers or strings.\n   *\n   * @param {Function} fnc This function will be called whenever\n   * someone \"finishes\" changing the value via this Controller.\n   * @returns {Controller} this\n   */\n  onFinishChange(fnc) {\n    this.__onFinishChange = fnc;\n    return this;\n  }\n\n  /**\n   * Change the value of <code>object[property]</code>\n   *\n   * @param {Object} newValue The new value of <code>object[property]</code>\n   */\n  setValue(newValue) {\n    this.object[this.property] = newValue;\n    if (this.__onChange) {\n      this.__onChange.call(this, newValue);\n    }\n\n    this.updateDisplay();\n    return this;\n  }\n\n  /**\n   * Gets the value of <code>object[property]</code>\n   *\n   * @returns {Object} The current value of <code>object[property]</code>\n   */\n  getValue() {\n    return this.object[this.property];\n  }\n\n  /**\n   * Refreshes the visual display of a Controller in order to keep sync\n   * with the object's current value.\n   * @returns {Controller} this\n   */\n  updateDisplay() {\n    return this;\n  }\n\n  /**\n   * @returns {Boolean} true if the value has deviated from initialValue\n   */\n  isModified() {\n    return this.initialValue !== this.getValue();\n  }\n}\n\nexport default Controller;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport common from '../utils/common';\n\nconst EVENT_MAP = {\n  HTMLEvents: ['change'],\n  MouseEvents: ['click', 'mousemove', 'mousedown', 'mouseup', 'mouseover'],\n  KeyboardEvents: ['keydown']\n};\n\nconst EVENT_MAP_INV = {};\ncommon.each(EVENT_MAP, function(v, k) {\n  common.each(v, function(e) {\n    EVENT_MAP_INV[e] = k;\n  });\n});\n\nconst CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n\nfunction cssValueToPixels(val) {\n  if (val === '0' || common.isUndefined(val)) {\n    return 0;\n  }\n\n  const match = val.match(CSS_VALUE_PIXELS);\n\n  if (!common.isNull(match)) {\n    return parseFloat(match[1]);\n  }\n\n  // TODO ...ems? %?\n\n  return 0;\n}\n\n/**\n * @namespace\n * @member dat.dom\n */\nconst dom = {\n\n  /**\n   *\n   * @param elem\n   * @param selectable\n   */\n  makeSelectable: function(elem, selectable) {\n    if (elem === undefined || elem.style === undefined) return;\n\n    elem.onselectstart = selectable ? function() {\n      return false;\n    } : function() {\n    };\n\n    elem.style.MozUserSelect = selectable ? 'auto' : 'none';\n    elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\n    elem.unselectable = selectable ? 'on' : 'off';\n  },\n\n  /**\n   *\n   * @param elem\n   * @param horizontal\n   * @param vert\n   */\n  makeFullscreen: function(elem, hor, vert) {\n    let vertical = vert;\n    let horizontal = hor;\n\n    if (common.isUndefined(horizontal)) {\n      horizontal = true;\n    }\n\n    if (common.isUndefined(vertical)) {\n      vertical = true;\n    }\n\n    elem.style.position = 'absolute';\n\n    if (horizontal) {\n      elem.style.left = 0;\n      elem.style.right = 0;\n    }\n    if (vertical) {\n      elem.style.top = 0;\n      elem.style.bottom = 0;\n    }\n  },\n\n  /**\n   *\n   * @param elem\n   * @param eventType\n   * @param params\n   */\n  fakeEvent: function(elem, eventType, pars, aux) {\n    const params = pars || {};\n    const className = EVENT_MAP_INV[eventType];\n    if (!className) {\n      throw new Error('Event type ' + eventType + ' not supported.');\n    }\n    const evt = document.createEvent(className);\n    switch (className) {\n      case 'MouseEvents':\n        {\n          const clientX = params.x || params.clientX || 0;\n          const clientY = params.y || params.clientY || 0;\n          evt.initMouseEvent(eventType, params.bubbles || false,\n            params.cancelable || true, window, params.clickCount || 1,\n            0, // screen X\n            0, // screen Y\n            clientX, // client X\n            clientY, // client Y\n            false, false, false, false, 0, null);\n          break;\n        }\n      case 'KeyboardEvents':\n        {\n          const init = evt.initKeyboardEvent || evt.initKeyEvent; // webkit || moz\n          common.defaults(params, {\n            cancelable: true,\n            ctrlKey: false,\n            altKey: false,\n            shiftKey: false,\n            metaKey: false,\n            keyCode: undefined,\n            charCode: undefined\n          });\n          init(eventType, params.bubbles || false,\n            params.cancelable, window,\n            params.ctrlKey, params.altKey,\n            params.shiftKey, params.metaKey,\n            params.keyCode, params.charCode);\n          break;\n        }\n      default:\n        {\n          evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n          break;\n        }\n    }\n    common.defaults(evt, aux);\n    elem.dispatchEvent(evt);\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  bind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.addEventListener) {\n      elem.addEventListener(event, func, bool);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  unbind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.removeEventListener) {\n      elem.removeEventListener(event, func, bool);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  addClass: function(elem, className) {\n    if (elem.className === undefined) {\n      elem.className = className;\n    } else if (elem.className !== className) {\n      const classes = elem.className.split(/ +/);\n      if (classes.indexOf(className) === -1) {\n        classes.push(className);\n        elem.className = classes.join(' ').replace(/^\\s+/, '').replace(/\\s+$/, '');\n      }\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  removeClass: function(elem, className) {\n    if (className) {\n      if (elem.className === className) {\n        elem.removeAttribute('class');\n      } else {\n        const classes = elem.className.split(/ +/);\n        const index = classes.indexOf(className);\n        if (index !== -1) {\n          classes.splice(index, 1);\n          elem.className = classes.join(' ');\n        }\n      }\n    } else {\n      elem.className = undefined;\n    }\n    return dom;\n  },\n\n  hasClass: function(elem, className) {\n    return new RegExp('(?:^|\\\\s+)' + className + '(?:\\\\s+|$)').test(elem.className) || false;\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getWidth: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-left-width']) +\n      cssValueToPixels(style['border-right-width']) +\n      cssValueToPixels(style['padding-left']) +\n      cssValueToPixels(style['padding-right']) +\n      cssValueToPixels(style.width);\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getHeight: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-top-width']) +\n      cssValueToPixels(style['border-bottom-width']) +\n      cssValueToPixels(style['padding-top']) +\n      cssValueToPixels(style['padding-bottom']) +\n      cssValueToPixels(style.height);\n  },\n\n  /**\n   *\n   * @param el\n   */\n  getOffset: function(el) {\n    let elem = el;\n    const offset = { left: 0, top: 0 };\n    if (elem.offsetParent) {\n      do {\n        offset.left += elem.offsetLeft;\n        offset.top += elem.offsetTop;\n        elem = elem.offsetParent;\n      } while (elem);\n    }\n    return offset;\n  },\n\n  // http://stackoverflow.com/posts/2684561/revisions\n  /**\n   *\n   * @param elem\n   */\n  isActive: function(elem) {\n    return elem === document.activeElement && (elem.type || elem.href);\n  }\n\n};\n\nexport default dom;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a checkbox input to alter the boolean property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass BooleanController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n    this.__prev = this.getValue();\n\n    this.__checkbox = document.createElement('input');\n    this.__checkbox.setAttribute('type', 'checkbox');\n\n    function onChange() {\n      _this.setValue(!_this.__prev);\n    }\n\n    dom.bind(this.__checkbox, 'change', onChange, false);\n\n    this.domElement.appendChild(this.__checkbox);\n\n    // Match original value\n    this.updateDisplay();\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    this.__prev = this.getValue();\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (this.getValue() === true) {\n      this.__checkbox.setAttribute('checked', 'checked');\n      this.__checkbox.checked = true;\n      this.__prev = true;\n    } else {\n      this.__checkbox.checked = false;\n      this.__prev = false;\n    }\n\n    return super.updateDisplay();\n  }\n}\n\nexport default BooleanController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\n/**\n * @class Provides a select input to alter the property of an object, using a\n * list of accepted values.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object|string[]} options A map of labels to acceptable values, or\n * a list of acceptable string values.\n */\nclass OptionController extends Controller {\n  constructor(object, property, opts) {\n    super(object, property);\n\n    let options = opts;\n\n    const _this = this;\n\n    /**\n     * The drop down menu\n     * @ignore\n     */\n    this.__select = document.createElement('select');\n\n    if (common.isArray(options)) {\n      const map = {};\n      common.each(options, function(element) {\n        map[element] = element;\n      });\n      options = map;\n    }\n\n    common.each(options, function(value, key) {\n      const opt = document.createElement('option');\n      opt.innerHTML = key;\n      opt.setAttribute('value', value);\n      _this.__select.appendChild(opt);\n    });\n\n    // Acknowledge original value\n    this.updateDisplay();\n\n    dom.bind(this.__select, 'change', function() {\n      const desiredValue = this.options[this.selectedIndex].value;\n      _this.setValue(desiredValue);\n    });\n\n    this.domElement.appendChild(this.__select);\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (dom.isActive(this.__select)) return this; // prevent number from updating if user is trying to manually update\n    this.__select.value = this.getValue();\n    return super.updateDisplay();\n  }\n}\n\nexport default OptionController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a text input to alter the string property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass StringController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n\n    function onChange() {\n      _this.setValue(_this.__input.value);\n    }\n\n    function onBlur() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    dom.bind(this.__input, 'keyup', onChange);\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) {\n        this.blur();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    // Stops the caret from moving on account of:\n    // keyup -> setValue -> updateDisplay\n    if (!dom.isActive(this.__input)) {\n      this.__input.value = this.getValue();\n    }\n    return super.updateDisplay();\n  }\n}\n\nexport default StringController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport common from '../utils/common';\n\nfunction numDecimals(x) {\n  const _x = x.toString();\n  if (_x.indexOf('.') > -1) {\n    return _x.length - _x.indexOf('.') - 1;\n  }\n\n  return 0;\n}\n\n/**\n * @class Represents a given property of an object that is a number.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberController extends Controller {\n  constructor(object, property, params) {\n    super(object, property);\n\n    const _params = params || {};\n\n    this.__min = _params.min;\n    this.__max = _params.max;\n    this.__step = _params.step;\n\n    if (common.isUndefined(this.__step)) {\n      if (this.initialValue === 0) {\n        this.__impliedStep = 1; // What are we, psychics?\n      } else {\n        // Hey Doug, check this out.\n        this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n      }\n    } else {\n      this.__impliedStep = this.__step;\n    }\n\n    this.__precision = numDecimals(this.__impliedStep);\n  }\n\n  setValue(v) {\n    let _v = v;\n\n    if (this.__min !== undefined && _v < this.__min) {\n      _v = this.__min;\n    } else if (this.__max !== undefined && _v > this.__max) {\n      _v = this.__max;\n    }\n\n    if (this.__step !== undefined && _v % this.__step !== 0) {\n      _v = Math.round(_v / this.__step) * this.__step;\n    }\n\n    return super.setValue(_v);\n  }\n\n  /**\n   * Specify a minimum value for <code>object[property]</code>.\n   *\n   * @param {Number} minValue The minimum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  min(minValue) {\n    this.__min = minValue;\n    return this;\n  }\n\n  /**\n   * Specify a maximum value for <code>object[property]</code>.\n   *\n   * @param {Number} maxValue The maximum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  max(maxValue) {\n    this.__max = maxValue;\n    return this;\n  }\n\n  /**\n   * Specify a step value that dat.controllers.NumberController\n   * increments by.\n   *\n   * @param {Number} stepValue The step value for\n   * dat.controllers.NumberController\n   * @default if minimum and maximum specified increment is 1% of the\n   * difference otherwise stepValue is 1\n   * @returns {dat.controllers.NumberController} this\n   */\n  step(stepValue) {\n    this.__step = stepValue;\n    this.__impliedStep = stepValue;\n    this.__precision = numDecimals(stepValue);\n    return this;\n  }\n}\n\nexport default NumberController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nfunction roundToDecimal(value, decimals) {\n  const tenTo = Math.pow(10, decimals);\n  return Math.round(value * tenTo) / tenTo;\n}\n\n/**\n * @class Represents a given property of an object that is a number and\n * provides an input element with which to manipulate it.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberControllerBox extends NumberController {\n  constructor(object, property, params) {\n    super(object, property, params);\n\n    this.__truncationSuspended = false;\n\n    const _this = this;\n\n    /**\n     * {Number} Previous mouse y position\n     * @ignore\n     */\n    let prevY;\n\n    function onChange() {\n      const attempted = parseFloat(_this.__input.value);\n      if (!common.isNaN(attempted)) {\n        _this.setValue(attempted);\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onBlur() {\n      onFinish();\n    }\n\n    function onMouseDrag(e) {\n      const diff = prevY - e.clientY;\n      _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n\n      prevY = e.clientY;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      onFinish();\n    }\n\n    function onMouseDown(e) {\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n      prevY = e.clientY;\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    // Makes it so manually specified values are not truncated.\n\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'mousedown', onMouseDown);\n    dom.bind(this.__input, 'keydown', function(e) {\n      // When pressing enter, you can be as precise as you want.\n      if (e.keyCode === 13) {\n        _this.__truncationSuspended = true;\n        this.blur();\n        _this.__truncationSuspended = false;\n        onFinish();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerBox;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\n\nfunction map(v, i1, i2, o1, o2) {\n  return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n}\n\n/**\n * @class Represents a given property of an object that is a number, contains\n * a minimum and maximum, and provides a slider element with which to\n * manipulate it. It should be noted that the slider element is made up of\n * <code>&lt;div&gt;</code> tags, <strong>not</strong> the html5\n * <code>&lt;slider&gt;</code> element.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Number} minValue Minimum allowed value\n * @param {Number} maxValue Maximum allowed value\n * @param {Number} stepValue Increment by which to change value\n */\nclass NumberControllerSlider extends NumberController {\n  constructor(object, property, min, max, step) {\n    super(object, property, { min: min, max: max, step: step });\n\n    const _this = this;\n\n    this.__background = document.createElement('div');\n    this.__foreground = document.createElement('div');\n\n    dom.bind(this.__background, 'mousedown', onMouseDown);\n    dom.bind(this.__background, 'touchstart', onTouchStart);\n\n    dom.addClass(this.__background, 'slider');\n    dom.addClass(this.__foreground, 'slider-fg');\n\n    function onMouseDown(e) {\n      document.activeElement.blur();\n\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n\n      onMouseDrag(e);\n    }\n\n    function onMouseDrag(e) {\n      e.preventDefault();\n\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n\n      return false;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onTouchStart(e) {\n      if (e.touches.length !== 1) { return; }\n      dom.bind(window, 'touchmove', onTouchMove);\n      dom.bind(window, 'touchend', onTouchEnd);\n      onTouchMove(e);\n    }\n\n    function onTouchMove(e) {\n      const clientX = e.touches[0].clientX;\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n    }\n\n    function onTouchEnd() {\n      dom.unbind(window, 'touchmove', onTouchMove);\n      dom.unbind(window, 'touchend', onTouchEnd);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.updateDisplay();\n\n    this.__background.appendChild(this.__foreground);\n    this.domElement.appendChild(this.__background);\n  }\n\n  updateDisplay() {\n    const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n    this.__foreground.style.width = pct * 100 + '%';\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerSlider;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a GUI interface to fire a specified method, a property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass FunctionController extends Controller {\n  constructor(object, property, text) {\n    super(object, property);\n\n    const _this = this;\n\n    this.__button = document.createElement('div');\n    this.__button.innerHTML = text === undefined ? 'Fire' : text;\n\n    dom.bind(this.__button, 'click', function(e) {\n      e.preventDefault();\n      _this.fire();\n      return false;\n    });\n\n    dom.addClass(this.__button, 'button');\n\n    this.domElement.appendChild(this.__button);\n  }\n\n  fire() {\n    if (this.__onChange) {\n      this.__onChange.call(this);\n    }\n    this.getValue().call(this.object);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n  }\n}\n\nexport default FunctionController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport Color from '../color/Color';\nimport interpret from '../color/interpret';\nimport common from '../utils/common';\n\n/**\n * @class Represents a given property of an object that is a color.\n * @param {Object} object\n * @param {string} property\n */\nclass ColorController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    this.__color = new Color(this.getValue());\n    this.__temp = new Color(0);\n\n    const _this = this;\n\n    this.domElement = document.createElement('div');\n\n    dom.makeSelectable(this.domElement, false);\n\n    this.__selector = document.createElement('div');\n    this.__selector.className = 'selector';\n\n    this.__saturation_field = document.createElement('div');\n    this.__saturation_field.className = 'saturation-field';\n\n    this.__field_knob = document.createElement('div');\n    this.__field_knob.className = 'field-knob';\n    this.__field_knob_border = '2px solid ';\n\n    this.__hue_knob = document.createElement('div');\n    this.__hue_knob.className = 'hue-knob';\n\n    this.__hue_field = document.createElement('div');\n    this.__hue_field.className = 'hue-field';\n\n    this.__input = document.createElement('input');\n    this.__input.type = 'text';\n    this.__input_textShadow = '0 1px 1px ';\n\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) { // on enter\n        onBlur.call(this);\n      }\n    });\n\n    dom.bind(this.__input, 'blur', onBlur);\n\n    dom.bind(this.__selector, 'mousedown', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'mouseup', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    dom.bind(this.__selector, 'touchstart', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'touchend', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    const valueField = document.createElement('div');\n\n    common.extend(this.__selector.style, {\n      width: '122px',\n      height: '102px',\n      padding: '3px',\n      backgroundColor: '#222',\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.3)'\n    });\n\n    common.extend(this.__field_knob.style, {\n      position: 'absolute',\n      width: '12px',\n      height: '12px',\n      border: this.__field_knob_border + (this.__color.v < 0.5 ? '#fff' : '#000'),\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.5)',\n      borderRadius: '12px',\n      zIndex: 1\n    });\n\n    common.extend(this.__hue_knob.style, {\n      position: 'absolute',\n      width: '15px',\n      height: '2px',\n      borderRight: '4px solid #fff',\n      zIndex: 1\n    });\n\n    common.extend(this.__saturation_field.style, {\n      width: '100px',\n      height: '100px',\n      border: '1px solid #555',\n      marginRight: '3px',\n      display: 'inline-block',\n      cursor: 'pointer'\n    });\n\n    common.extend(valueField.style, {\n      width: '100%',\n      height: '100%',\n      background: 'none'\n    });\n\n    linearGradient(valueField, 'top', 'rgba(0,0,0,0)', '#000');\n\n    common.extend(this.__hue_field.style, {\n      width: '15px',\n      height: '100px',\n      border: '1px solid #555',\n      cursor: 'ns-resize',\n      position: 'absolute',\n      top: '3px',\n      right: '3px'\n    });\n\n    hueGradient(this.__hue_field);\n\n    common.extend(this.__input.style, {\n      outline: 'none',\n//      width: '120px',\n      textAlign: 'center',\n//      padding: '4px',\n//      marginBottom: '6px',\n      color: '#fff',\n      border: 0,\n      fontWeight: 'bold',\n      textShadow: this.__input_textShadow + 'rgba(0,0,0,0.7)'\n    });\n\n    dom.bind(this.__saturation_field, 'mousedown', fieldDown);\n    dom.bind(this.__saturation_field, 'touchstart', fieldDown);\n\n    dom.bind(this.__field_knob, 'mousedown', fieldDown);\n    dom.bind(this.__field_knob, 'touchstart', fieldDown);\n\n    dom.bind(this.__hue_field, 'mousedown', fieldDownH);\n    dom.bind(this.__hue_field, 'touchstart', fieldDownH);\n\n    function fieldDown(e) {\n      setSV(e);\n      dom.bind(window, 'mousemove', setSV);\n      dom.bind(window, 'touchmove', setSV);\n      dom.bind(window, 'mouseup', fieldUpSV);\n      dom.bind(window, 'touchend', fieldUpSV);\n    }\n\n    function fieldDownH(e) {\n      setH(e);\n      dom.bind(window, 'mousemove', setH);\n      dom.bind(window, 'touchmove', setH);\n      dom.bind(window, 'mouseup', fieldUpH);\n      dom.bind(window, 'touchend', fieldUpH);\n    }\n\n    function fieldUpSV() {\n      dom.unbind(window, 'mousemove', setSV);\n      dom.unbind(window, 'touchmove', setSV);\n      dom.unbind(window, 'mouseup', fieldUpSV);\n      dom.unbind(window, 'touchend', fieldUpSV);\n      onFinish();\n    }\n\n    function fieldUpH() {\n      dom.unbind(window, 'mousemove', setH);\n      dom.unbind(window, 'touchmove', setH);\n      dom.unbind(window, 'mouseup', fieldUpH);\n      dom.unbind(window, 'touchend', fieldUpH);\n      onFinish();\n    }\n\n    function onBlur() {\n      const i = interpret(this.value);\n      if (i !== false) {\n        _this.__color.__state = i;\n        _this.setValue(_this.__color.toOriginal());\n      } else {\n        this.value = _this.__color.toString();\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.__color.toOriginal());\n      }\n    }\n\n    this.__saturation_field.appendChild(valueField);\n    this.__selector.appendChild(this.__field_knob);\n    this.__selector.appendChild(this.__saturation_field);\n    this.__selector.appendChild(this.__hue_field);\n    this.__hue_field.appendChild(this.__hue_knob);\n\n    this.domElement.appendChild(this.__input);\n    this.domElement.appendChild(this.__selector);\n\n    this.updateDisplay();\n\n    function setSV(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__saturation_field.getBoundingClientRect();\n      const { clientX, clientY } = (e.touches && e.touches[0]) || e;\n      let s = (clientX - fieldRect.left) / (fieldRect.right - fieldRect.left);\n      let v = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (v > 1) {\n        v = 1;\n      } else if (v < 0) {\n        v = 0;\n      }\n\n      if (s > 1) {\n        s = 1;\n      } else if (s < 0) {\n        s = 0;\n      }\n\n      _this.__color.v = v;\n      _this.__color.s = s;\n\n      _this.setValue(_this.__color.toOriginal());\n\n\n      return false;\n    }\n\n    function setH(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__hue_field.getBoundingClientRect();\n      const { clientY } = (e.touches && e.touches[0]) || e;\n      let h = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (h > 1) {\n        h = 1;\n      } else if (h < 0) {\n        h = 0;\n      }\n\n      _this.__color.h = h * 360;\n\n      _this.setValue(_this.__color.toOriginal());\n\n      return false;\n    }\n  }\n\n  updateDisplay() {\n    const i = interpret(this.getValue());\n\n    if (i !== false) {\n      let mismatch = false;\n\n      // Check for mismatch on the interpreted value.\n\n      common.each(Color.COMPONENTS, function(component) {\n        if (!common.isUndefined(i[component]) && !common.isUndefined(this.__color.__state[component]) &&\n          i[component] !== this.__color.__state[component]) {\n          mismatch = true;\n          return {}; // break\n        }\n      }, this);\n\n      // If nothing diverges, we keep our previous values\n      // for statefulness, otherwise we recalculate fresh\n      if (mismatch) {\n        common.extend(this.__color.__state, i);\n      }\n    }\n\n    common.extend(this.__temp.__state, this.__color.__state);\n\n    this.__temp.a = 1;\n\n    const flip = (this.__color.v < 0.5 || this.__color.s > 0.5) ? 255 : 0;\n    const _flip = 255 - flip;\n\n    common.extend(this.__field_knob.style, {\n      marginLeft: 100 * this.__color.s - 7 + 'px',\n      marginTop: 100 * (1 - this.__color.v) - 7 + 'px',\n      backgroundColor: this.__temp.toHexString(),\n      border: this.__field_knob_border + 'rgb(' + flip + ',' + flip + ',' + flip + ')'\n    });\n\n    this.__hue_knob.style.marginTop = (1 - this.__color.h / 360) * 100 + 'px';\n\n    this.__temp.s = 1;\n    this.__temp.v = 1;\n\n    linearGradient(this.__saturation_field, 'left', '#fff', this.__temp.toHexString());\n\n    this.__input.value = this.__color.toString();\n\n    common.extend(this.__input.style, {\n      backgroundColor: this.__color.toHexString(),\n      color: 'rgb(' + flip + ',' + flip + ',' + flip + ')',\n      textShadow: this.__input_textShadow + 'rgba(' + _flip + ',' + _flip + ',' + _flip + ',.7)'\n    });\n  }\n}\n\nconst vendors = ['-moz-', '-o-', '-webkit-', '-ms-', ''];\n\nfunction linearGradient(elem, x, a, b) {\n  elem.style.background = '';\n  common.each(vendors, function(vendor) {\n    elem.style.cssText += 'background: ' + vendor + 'linear-gradient(' + x + ', ' + a + ' 0%, ' + b + ' 100%); ';\n  });\n}\n\nfunction hueGradient(elem) {\n  elem.style.background = '';\n  elem.style.cssText += 'background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);';\n  elem.style.cssText += 'background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n}\n\nexport default ColorController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst css = {\n  load: function(url, indoc) {\n    const doc = indoc || document;\n    const link = doc.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.href = url;\n    doc.getElementsByTagName('head')[0].appendChild(link);\n  },\n\n  inject: function(cssContent, indoc) {\n    const doc = indoc || document;\n    const injected = document.createElement('style');\n    injected.type = 'text/css';\n    injected.innerHTML = cssContent;\n    const head = doc.getElementsByTagName('head')[0];\n    try {\n      head.appendChild(injected);\n    } catch (e) { // Unable to inject CSS, probably because of a Content Security Policy\n    }\n  }\n};\n\nexport default css;\n", "const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n\nexport default saveDialogContents;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport OptionController from './OptionController';\nimport NumberControllerBox from './NumberControllerBox';\nimport NumberControllerSlider from './NumberControllerSlider';\nimport StringController from './StringController';\nimport FunctionController from './FunctionController';\nimport BooleanController from './BooleanController';\nimport common from '../utils/common';\n\nconst ControllerFactory = function(object, property) {\n  const initialValue = object[property];\n\n  // Providing options?\n  if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n    return new OptionController(object, property, arguments[2]);\n  }\n\n  // Providing a map?\n  if (common.isNumber(initialValue)) {\n    // Has min and max? (slider)\n    if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n      // has step?\n      if (common.isNumber(arguments[4])) {\n        return new NumberControllerSlider(object, property,\n                        arguments[2], arguments[3], arguments[4]);\n      }\n\n      return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n    }\n\n    // number box\n    if (common.isNumber(arguments[4])) { // has step\n      return new NumberControllerBox(object, property,\n                        { min: arguments[2], max: arguments[3], step: arguments[4] });\n    }\n    return new NumberControllerBox(object, property, { min: arguments[2], max: arguments[3] });\n  }\n\n  if (common.isString(initialValue)) {\n    return new StringController(object, property);\n  }\n\n  if (common.isFunction(initialValue)) {\n    return new FunctionController(object, property, '');\n  }\n\n  if (common.isBoolean(initialValue)) {\n    return new BooleanController(object, property);\n  }\n\n  return null;\n};\n\nexport default ControllerFactory;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction requestAnimationFrame(callback) {\n  setTimeout(callback, 1000 / 60);\n}\n\nexport default window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    requestAnimationFrame;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nclass CenteredDiv {\n  constructor() {\n    this.backgroundElement = document.createElement('div');\n    common.extend(this.backgroundElement.style, {\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      top: 0,\n      left: 0,\n      display: 'none',\n      zIndex: '1000',\n      opacity: 0,\n      WebkitTransition: 'opacity 0.2s linear',\n      transition: 'opacity 0.2s linear'\n    });\n\n    dom.makeFullscreen(this.backgroundElement);\n    this.backgroundElement.style.position = 'fixed';\n\n    this.domElement = document.createElement('div');\n    common.extend(this.domElement.style, {\n      position: 'fixed',\n      display: 'none',\n      zIndex: '1001',\n      opacity: 0,\n      WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n      transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n    });\n\n\n    document.body.appendChild(this.backgroundElement);\n    document.body.appendChild(this.domElement);\n\n    const _this = this;\n    dom.bind(this.backgroundElement, 'click', function() {\n      _this.hide();\n    });\n  }\n\n  show() {\n    const _this = this;\n\n    this.backgroundElement.style.display = 'block';\n\n    this.domElement.style.display = 'block';\n    this.domElement.style.opacity = 0;\n//    this.domElement.style.top = '52%';\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n\n    this.layout();\n\n    common.defer(function() {\n      _this.backgroundElement.style.opacity = 1;\n      _this.domElement.style.opacity = 1;\n      _this.domElement.style.webkitTransform = 'scale(1)';\n    });\n  }\n\n  /**\n   * Hide centered div\n   */\n  hide() {\n    const _this = this;\n\n    const hide = function() {\n      _this.domElement.style.display = 'none';\n      _this.backgroundElement.style.display = 'none';\n\n      dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n      dom.unbind(_this.domElement, 'transitionend', hide);\n      dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n    };\n\n    dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n    dom.bind(this.domElement, 'transitionend', hide);\n    dom.bind(this.domElement, 'oTransitionEnd', hide);\n\n    this.backgroundElement.style.opacity = 0;\n//    this.domElement.style.top = '48%';\n    this.domElement.style.opacity = 0;\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n  }\n\n  layout() {\n    this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n    this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n  }\n}\n\nexport default CenteredDiv;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport css from '../utils/css';\nimport saveDialogueContents from './saveDialogue.html';\nimport ControllerFactory from '../controllers/ControllerFactory';\nimport Controller from '../controllers/Controller';\nimport BooleanController from '../controllers/BooleanController';\nimport FunctionController from '../controllers/FunctionController';\nimport NumberControllerBox from '../controllers/NumberControllerBox';\nimport NumberControllerSlider from '../controllers/NumberControllerSlider';\nimport ColorController from '../controllers/ColorController';\nimport requestAnimationFrame from '../utils/requestAnimationFrame';\nimport CenteredDiv from '../dom/CenteredDiv';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nimport styleSheet from './style.scss'; // CSS to embed in build\n\ncss.inject(styleSheet);\n\n/** @ignore Outer-most className for GUI's */\nconst CSS_NAMESPACE = 'dg';\n\nconst HIDE_KEY_CODE = 72;\n\n/** @ignore The only value shared between the JS and SCSS. Use caution. */\nconst CLOSE_BUTTON_HEIGHT = 20;\n\nconst DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n\nconst SUPPORTS_LOCAL_STORAGE = (function() {\n  try {\n    return !!window.localStorage;\n  } catch (e) {\n    return false;\n  }\n}());\n\nlet SAVE_DIALOGUE;\n\n/** @ignore Have we yet to create an autoPlace GUI? */\nlet autoPlaceVirgin = true;\n\n/** @ignore Fixed position div that auto place GUI's go inside */\nlet autoPlaceContainer;\n\n/** @ignore Are we hiding the GUI's ? */\nlet hide = false;\n\n/** @private GUI's which should be hidden */\nconst hideableGuis = [];\n\n/**\n * @class A lightweight controller library for JavaScript. It allows you to easily\n * manipulate variables and fire functions on the fly.\n *\n * @typicalname gui\n *\n * @example\n * // Creating a GUI with options.\n * var gui = new dat.GUI({name: 'My GUI'});\n *\n * @example\n * // Creating a GUI and a subfolder.\n * var gui = new dat.GUI();\n * var folder1 = gui.addFolder('Flow Field');\n *\n * @param {Object} [params]\n * @param {String} [params.name] The name of this GUI.\n * @param {Object} [params.load] JSON object representing the saved state of\n * this GUI.\n * @param {dat.gui.GUI} [params.parent] The GUI I'm nested in.\n * @param {Boolean} [params.autoPlace=true]\n * @param {Boolean} [params.hideable=true] If true, GUI is shown/hidden by <kbd>h</kbd> keypress.\n * @param {Boolean} [params.closed=false] If true, starts closed\n * @param {Boolean} [params.closeOnTop=false] If true, close/open button shows on top of the GUI\n */\nconst GUI = function(pars) {\n  const _this = this;\n\n  let params = pars || {};\n\n  /**\n   * Outermost DOM Element\n   * @type {DOMElement}\n   */\n  this.domElement = document.createElement('div');\n  this.__ul = document.createElement('ul');\n  this.domElement.appendChild(this.__ul);\n\n  dom.addClass(this.domElement, CSS_NAMESPACE);\n\n  /**\n   * Nested GUI's by name\n   * @ignore\n   */\n  this.__folders = {};\n\n  this.__controllers = [];\n\n  /**\n   * List of objects I'm remembering for save, only used in top level GUI\n   * @ignore\n   */\n  this.__rememberedObjects = [];\n\n  /**\n   * Maps the index of remembered objects to a map of controllers, only used\n   * in top level GUI.\n   *\n   * @private\n   * @ignore\n   *\n   * @example\n   * [\n   *  {\n     *    propertyName: Controller,\n     *    anotherPropertyName: Controller\n     *  },\n   *  {\n     *    propertyName: Controller\n     *  }\n   * ]\n   */\n  this.__rememberedObjectIndecesToControllers = [];\n\n  this.__listening = [];\n\n  // Default parameters\n  params = common.defaults(params, {\n    closeOnTop: false,\n    autoPlace: true,\n    width: GUI.DEFAULT_WIDTH\n  });\n\n  params = common.defaults(params, {\n    resizable: params.autoPlace,\n    hideable: params.autoPlace\n  });\n\n  if (!common.isUndefined(params.load)) {\n    // Explicit preset\n    if (params.preset) {\n      params.load.preset = params.preset;\n    }\n  } else {\n    params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n  }\n\n  if (common.isUndefined(params.parent) && params.hideable) {\n    hideableGuis.push(this);\n  }\n\n  // Only root level GUI's are resizable.\n  params.resizable = common.isUndefined(params.parent) && params.resizable;\n\n  if (params.autoPlace && common.isUndefined(params.scrollable)) {\n    params.scrollable = true;\n  }\n//    params.scrollable = common.isUndefined(params.parent) && params.scrollable === true;\n\n  // Not part of params because I don't want people passing this in via\n  // constructor. Should be a 'remembered' value.\n  let useLocalStorage =\n    SUPPORTS_LOCAL_STORAGE &&\n    localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n\n  let saveToLocalStorage;\n  let titleRow;\n\n  Object.defineProperties(this,\n    /** @lends GUI.prototype */\n    {\n      /**\n       * The parent <code>GUI</code>\n       * @type dat.gui.GUI\n       */\n      parent: {\n        get: function() {\n          return params.parent;\n        }\n      },\n\n      scrollable: {\n        get: function() {\n          return params.scrollable;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s element placement for you\n       * @type Boolean\n       */\n      autoPlace: {\n        get: function() {\n          return params.autoPlace;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s position of open/close button\n       * @type Boolean\n       */\n      closeOnTop: {\n        get: function() {\n          return params.closeOnTop;\n        }\n      },\n\n      /**\n       * The identifier for a set of saved values\n       * @type String\n       */\n      preset: {\n        get: function() {\n          if (_this.parent) {\n            return _this.getRoot().preset;\n          }\n\n          return params.load.preset;\n        },\n\n        set: function(v) {\n          if (_this.parent) {\n            _this.getRoot().preset = v;\n          } else {\n            params.load.preset = v;\n          }\n          setPresetSelectIndex(this);\n          _this.revert();\n        }\n      },\n\n      /**\n       * The width of <code>GUI</code> element\n       * @type Number\n       */\n      width: {\n        get: function() {\n          return params.width;\n        },\n        set: function(v) {\n          params.width = v;\n          setWidth(_this, v);\n        }\n      },\n\n      /**\n       * The name of <code>GUI</code>. Used for folders. i.e\n       * a folder's name\n       * @type String\n       */\n      name: {\n        get: function() {\n          return params.name;\n        },\n        set: function(v) {\n          // TODO Check for collisions among sibling folders\n          params.name = v;\n          if (titleRow) {\n            titleRow.innerHTML = params.name;\n          }\n        }\n      },\n\n      /**\n       * Whether the <code>GUI</code> is collapsed or not\n       * @type Boolean\n       */\n      closed: {\n        get: function() {\n          return params.closed;\n        },\n        set: function(v) {\n          params.closed = v;\n          if (params.closed) {\n            dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n          } else {\n            dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n          }\n          // For browsers that aren't going to respect the CSS transition,\n          // Lets just check our height against the window height right off\n          // the bat.\n          this.onResize();\n\n          if (_this.__closeButton) {\n            _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n          }\n        }\n      },\n\n      /**\n       * Contains all presets\n       * @type Object\n       */\n      load: {\n        get: function() {\n          return params.load;\n        }\n      },\n\n      /**\n       * Determines whether or not to use <a href=\"https://developer.mozilla.org/en/DOM/Storage#localStorage\">localStorage</a> as the means for\n       * <code>remember</code>ing\n       * @type Boolean\n       */\n      useLocalStorage: {\n\n        get: function() {\n          return useLocalStorage;\n        },\n        set: function(bool) {\n          if (SUPPORTS_LOCAL_STORAGE) {\n            useLocalStorage = bool;\n            if (bool) {\n              dom.bind(window, 'unload', saveToLocalStorage);\n            } else {\n              dom.unbind(window, 'unload', saveToLocalStorage);\n            }\n            localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n          }\n        }\n      }\n    });\n\n  // Are we a root level GUI?\n  if (common.isUndefined(params.parent)) {\n    this.closed = params.closed || false;\n\n    dom.addClass(this.domElement, GUI.CLASS_MAIN);\n    dom.makeSelectable(this.domElement, false);\n\n    // Are we supposed to be loading locally?\n    if (SUPPORTS_LOCAL_STORAGE) {\n      if (useLocalStorage) {\n        _this.useLocalStorage = true;\n\n        const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n\n        if (savedGui) {\n          params.load = JSON.parse(savedGui);\n        }\n      }\n    }\n\n    this.__closeButton = document.createElement('div');\n    this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n    dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n    if (params.closeOnTop) {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n      this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n    } else {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n      this.domElement.appendChild(this.__closeButton);\n    }\n\n    dom.bind(this.__closeButton, 'click', function() {\n      _this.closed = !_this.closed;\n    });\n    // Oh, you're a nested GUI!\n  } else {\n    if (params.closed === undefined) {\n      params.closed = true;\n    }\n\n    const titleRowName = document.createTextNode(params.name);\n    dom.addClass(titleRowName, 'controller-name');\n\n    titleRow = addRow(_this, titleRowName);\n\n    const onClickTitle = function(e) {\n      e.preventDefault();\n      _this.closed = !_this.closed;\n      return false;\n    };\n\n    dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n\n    dom.addClass(titleRow, 'title');\n    dom.bind(titleRow, 'click', onClickTitle);\n\n    if (!params.closed) {\n      this.closed = false;\n    }\n  }\n\n  if (params.autoPlace) {\n    if (common.isUndefined(params.parent)) {\n      if (autoPlaceVirgin) {\n        autoPlaceContainer = document.createElement('div');\n        dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n        dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n        document.body.appendChild(autoPlaceContainer);\n        autoPlaceVirgin = false;\n      }\n\n      // Put it in the dom for you.\n      autoPlaceContainer.appendChild(this.domElement);\n\n      // Apply the auto styles\n      dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n    }\n\n\n    // Make it not elastic.\n    if (!this.parent) {\n      setWidth(_this, params.width);\n    }\n  }\n\n  this.__resizeHandler = function() {\n    _this.onResizeDebounced();\n  };\n\n  dom.bind(window, 'resize', this.__resizeHandler);\n  dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n  dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n  dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n  this.onResize();\n\n  if (params.resizable) {\n    addResizeHandle(this);\n  }\n\n  saveToLocalStorage = function() {\n    if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n      localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n    }\n  };\n\n  // expose this method publicly\n  this.saveToLocalStorageIfPossible = saveToLocalStorage;\n\n  function resetWidth() {\n    const root = _this.getRoot();\n    root.width += 1;\n    common.defer(function() {\n      root.width -= 1;\n    });\n  }\n\n  if (!params.parent) {\n    resetWidth();\n  }\n};\n\nGUI.toggleHide = function() {\n  hide = !hide;\n  common.each(hideableGuis, function(gui) {\n    gui.domElement.style.display = hide ? 'none' : '';\n  });\n};\n\nGUI.CLASS_AUTO_PLACE = 'a';\nGUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\nGUI.CLASS_MAIN = 'main';\nGUI.CLASS_CONTROLLER_ROW = 'cr';\nGUI.CLASS_TOO_TALL = 'taller-than-window';\nGUI.CLASS_CLOSED = 'closed';\nGUI.CLASS_CLOSE_BUTTON = 'close-button';\nGUI.CLASS_CLOSE_TOP = 'close-top';\nGUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\nGUI.CLASS_DRAG = 'drag';\n\nGUI.DEFAULT_WIDTH = 245;\nGUI.TEXT_CLOSED = 'Close Controls';\nGUI.TEXT_OPEN = 'Open Controls';\n\nGUI._keydownHandler = function(e) {\n  if (document.activeElement.type !== 'text' &&\n    (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n    GUI.toggleHide();\n  }\n};\ndom.bind(window, 'keydown', GUI._keydownHandler, false);\n\ncommon.extend(\n  GUI.prototype,\n\n  /** @lends GUI.prototype */\n  {\n\n    /**\n     * Adds a new {@link Controller} to the GUI. The type of controller created\n     * is inferred from the initial value of <code>object[property]</code>. For\n     * color properties, see {@link addColor}.\n     *\n     * @param {Object} object The object to be manipulated\n     * @param {String} property The name of the property to be manipulated\n     * @param {Number} [min] Minimum allowed value\n     * @param {Number} [max] Maximum allowed value\n     * @param {Number} [step] Increment by which to change value\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * // Add a string controller.\n     * var person = {name: 'Sam'};\n     * gui.add(person, 'name');\n     *\n     * @example\n     * // Add a number controller slider.\n     * var person = {age: 45};\n     * gui.add(person, 'age', 0, 100);\n     */\n    add: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          factoryArgs: Array.prototype.slice.call(arguments, 2)\n        }\n      );\n    },\n\n    /**\n     * Adds a new color controller to the GUI.\n     *\n     * @param object\n     * @param property\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * var palette = {\n     *   color1: '#FF0000', // CSS string\n     *   color2: [ 0, 128, 255 ], // RGB array\n     *   color3: [ 0, 128, 255, 0.3 ], // RGB with alpha\n     *   color4: { h: 350, s: 0.9, v: 0.3 } // Hue, saturation, value\n     * };\n     * gui.addColor(palette, 'color1');\n     * gui.addColor(palette, 'color2');\n     * gui.addColor(palette, 'color3');\n     * gui.addColor(palette, 'color4');\n     */\n    addColor: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          color: true\n        }\n      );\n    },\n\n    /**\n     * Removes the given controller from the GUI.\n     * @param {Controller} controller\n     * @instance\n     */\n    remove: function(controller) {\n      // TODO listening?\n      this.__ul.removeChild(controller.__li);\n      this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n      const _this = this;\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Removes the root GUI from the document and unbinds all event listeners.\n     * For subfolders, use `gui.removeFolder(folder)` instead.\n     * @instance\n     */\n    destroy: function() {\n      if (this.parent) {\n        throw new Error(\n          'Only the root GUI should be removed with .destroy(). ' +\n          'For subfolders, use gui.removeFolder(folder) instead.'\n        );\n      }\n\n      if (this.autoPlace) {\n        autoPlaceContainer.removeChild(this.domElement);\n      }\n\n      const _this = this;\n      common.each(this.__folders, function(subfolder) {\n        _this.removeFolder(subfolder);\n      });\n\n      dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n\n      removeListeners(this);\n    },\n\n    /**\n     * Creates a new subfolder GUI instance.\n     * @param name\n     * @returns {dat.gui.GUI} The new folder.\n     * @throws {Error} if this GUI already has a folder by the specified\n     * name\n     * @instance\n     */\n    addFolder: function(name) {\n      // We have to prevent collisions on names in order to have a key\n      // by which to remember saved values\n      if (this.__folders[name] !== undefined) {\n        throw new Error('You already have a folder in this GUI by the' +\n          ' name \"' + name + '\"');\n      }\n\n      const newGuiParams = { name: name, parent: this };\n\n      // We need to pass down the autoPlace trait so that we can\n      // attach event listeners to open/close folder actions to\n      // ensure that a scrollbar appears if the window is too short.\n      newGuiParams.autoPlace = this.autoPlace;\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[name]) { // Did daddy remember me?\n        // Start me closed if I was closed\n        newGuiParams.closed = this.load.folders[name].closed;\n\n        // Pass down the loaded data\n        newGuiParams.load = this.load.folders[name];\n      }\n\n      const gui = new GUI(newGuiParams);\n      this.__folders[name] = gui;\n\n      const li = addRow(this, gui.domElement);\n      dom.addClass(li, 'folder');\n      return gui;\n    },\n\n    /**\n     * Removes a subfolder GUI instance.\n     * @param {dat.gui.GUI} folder The folder to remove.\n     * @instance\n     */\n    removeFolder: function(folder) {\n      this.__ul.removeChild(folder.domElement.parentElement);\n\n      delete this.__folders[folder.name];\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[folder.name]) {\n        delete this.load.folders[folder.name];\n      }\n\n      removeListeners(folder);\n\n      const _this = this;\n\n      common.each(folder.__folders, function(subfolder) {\n        folder.removeFolder(subfolder);\n      });\n\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Opens the GUI.\n     */\n    open: function() {\n      this.closed = false;\n    },\n\n    /**\n     * Closes the GUI.\n     */\n    close: function() {\n      this.closed = true;\n    },\n\n    /**\n    * Hides the GUI.\n    */\n    hide: function() {\n      this.domElement.style.display = 'none';\n    },\n\n    /**\n    * Shows the GUI.\n    */\n    show: function() {\n      this.domElement.style.display = '';\n    },\n\n\n    onResize: function() {\n      // we debounce this function to prevent performance issues when rotating on tablet/mobile\n      const root = this.getRoot();\n      if (root.scrollable) {\n        const top = dom.getOffset(root.__ul).top;\n        let h = 0;\n\n        common.each(root.__ul.childNodes, function(node) {\n          if (!(root.autoPlace && node === root.__save_row)) {\n            h += dom.getHeight(node);\n          }\n        });\n\n        if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n          dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n        } else {\n          dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = 'auto';\n        }\n      }\n\n      if (root.__resize_handle) {\n        common.defer(function() {\n          root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n        });\n      }\n\n      if (root.__closeButton) {\n        root.__closeButton.style.width = root.width + 'px';\n      }\n    },\n\n    onResizeDebounced: common.debounce(function() { this.onResize(); }, 50),\n\n    /**\n     * Mark objects for saving. The order of these objects cannot change as\n     * the GUI grows. When remembering new objects, append them to the end\n     * of the list.\n     *\n     * @param {...Object} objects\n     * @throws {Error} if not called on a top level GUI.\n     * @instance\n     * @ignore\n     */\n    remember: function() {\n      if (common.isUndefined(SAVE_DIALOGUE)) {\n        SAVE_DIALOGUE = new CenteredDiv();\n        SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n      }\n\n      if (this.parent) {\n        throw new Error('You can only call remember on a top level GUI.');\n      }\n\n      const _this = this;\n\n      common.each(Array.prototype.slice.call(arguments), function(object) {\n        if (_this.__rememberedObjects.length === 0) {\n          addSaveMenu(_this);\n        }\n        if (_this.__rememberedObjects.indexOf(object) === -1) {\n          _this.__rememberedObjects.push(object);\n        }\n      });\n\n      if (this.autoPlace) {\n        // Set save row width\n        setWidth(this, this.width);\n      }\n    },\n\n    /**\n     * @returns {dat.gui.GUI} the topmost parent GUI of a nested GUI.\n     * @instance\n     */\n    getRoot: function() {\n      let gui = this;\n      while (gui.parent) {\n        gui = gui.parent;\n      }\n      return gui;\n    },\n\n    /**\n     * @returns {Object} a JSON object representing the current state of\n     * this GUI as well as its remembered properties.\n     * @instance\n     */\n    getSaveObject: function() {\n      const toReturn = this.load;\n      toReturn.closed = this.closed;\n\n      // Am I remembering any values?\n      if (this.__rememberedObjects.length > 0) {\n        toReturn.preset = this.preset;\n\n        if (!toReturn.remembered) {\n          toReturn.remembered = {};\n        }\n\n        toReturn.remembered[this.preset] = getCurrentPreset(this);\n      }\n\n      toReturn.folders = {};\n      common.each(this.__folders, function(element, key) {\n        toReturn.folders[key] = element.getSaveObject();\n      });\n\n      return toReturn;\n    },\n\n    save: function() {\n      if (!this.load.remembered) {\n        this.load.remembered = {};\n      }\n\n      this.load.remembered[this.preset] = getCurrentPreset(this);\n      markPresetModified(this, false);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    saveAs: function(presetName) {\n      if (!this.load.remembered) {\n        // Retain default values upon first save\n        this.load.remembered = {};\n        this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n      }\n\n      this.load.remembered[presetName] = getCurrentPreset(this);\n      this.preset = presetName;\n      addPresetOption(this, presetName, true);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    revert: function(gui) {\n      common.each(this.__controllers, function(controller) {\n        // Make revert work on Default.\n        if (!this.getRoot().load.remembered) {\n          controller.setValue(controller.initialValue);\n        } else {\n          recallSavedValue(gui || this.getRoot(), controller);\n        }\n\n        // fire onFinishChange callback\n        if (controller.__onFinishChange) {\n          controller.__onFinishChange.call(controller, controller.getValue());\n        }\n      }, this);\n\n      common.each(this.__folders, function(folder) {\n        folder.revert(folder);\n      });\n\n      if (!gui) {\n        markPresetModified(this.getRoot(), false);\n      }\n    },\n\n    listen: function(controller) {\n      const init = this.__listening.length === 0;\n      this.__listening.push(controller);\n      if (init) {\n        updateDisplays(this.__listening);\n      }\n    },\n\n    updateDisplay: function() {\n      common.each(this.__controllers, function(controller) {\n        controller.updateDisplay();\n      });\n      common.each(this.__folders, function(folder) {\n        folder.updateDisplay();\n      });\n    }\n  }\n);\n\n/**\n * Add a row to the end of the GUI or before another row.\n *\n * @param gui\n * @param [newDom] If specified, inserts the dom content in the new row\n * @param [liBefore] If specified, places the new row before another row\n *\n * @ignore\n */\nfunction addRow(gui, newDom, liBefore) {\n  const li = document.createElement('li');\n  if (newDom) {\n    li.appendChild(newDom);\n  }\n\n  if (liBefore) {\n    gui.__ul.insertBefore(li, liBefore);\n  } else {\n    gui.__ul.appendChild(li);\n  }\n  gui.onResize();\n  return li;\n}\n\nfunction removeListeners(gui) {\n  dom.unbind(window, 'resize', gui.__resizeHandler);\n\n  if (gui.saveToLocalStorageIfPossible) {\n    dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n  }\n}\n\nfunction markPresetModified(gui, modified) {\n  const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n\n  if (modified) {\n    opt.innerHTML = opt.value + '*';\n  } else {\n    opt.innerHTML = opt.value;\n  }\n}\n\nfunction augmentController(gui, li, controller) {\n  controller.__li = li;\n  controller.__gui = gui;\n\n  common.extend(controller, /** @lends Controller.prototype */ {\n    /**\n     * @param  {Array|Object} options\n     * @return {Controller}\n     */\n    options: function(options) {\n      if (arguments.length > 1) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [common.toArray(arguments)]\n          }\n        );\n      }\n\n      if (common.isArray(options) || common.isObject(options)) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [options]\n          }\n        );\n      }\n    },\n\n    /**\n     * Sets the name of the controller.\n     * @param  {string} name\n     * @return {Controller}\n     */\n    name: function(name) {\n      controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n      return controller;\n    },\n\n    /**\n     * Sets controller to listen for changes on its underlying object.\n     * @return {Controller}\n     */\n    listen: function() {\n      controller.__gui.listen(controller);\n      return controller;\n    },\n\n    /**\n     * Removes the controller from its parent GUI.\n     * @return {Controller}\n     */\n    remove: function() {\n      controller.__gui.remove(controller);\n      return controller;\n    }\n  });\n\n  // All sliders should be accompanied by a box.\n  if (controller instanceof NumberControllerSlider) {\n    const box = new NumberControllerBox(controller.object, controller.property,\n      { min: controller.__min, max: controller.__max, step: controller.__step });\n\n    common.each(['updateDisplay', 'onChange', 'onFinishChange', 'step', 'min', 'max'], function(method) {\n      const pc = controller[method];\n      const pb = box[method];\n      controller[method] = box[method] = function() {\n        const args = Array.prototype.slice.call(arguments);\n        pb.apply(box, args);\n        return pc.apply(controller, args);\n      };\n    });\n\n    dom.addClass(li, 'has-slider');\n    controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n  } else if (controller instanceof NumberControllerBox) {\n    const r = function(returned) {\n      // Have we defined both boundaries?\n      if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n        // Well, then lets just replace this with a slider.\n\n        // lets remember if the old controller had a specific name or was listening\n        const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n        const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n\n        controller.remove();\n        const newController = add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: controller.__li.nextElementSibling,\n            factoryArgs: [controller.__min, controller.__max, controller.__step]\n          });\n\n        newController.name(oldName);\n        if (wasListening) newController.listen();\n\n        return newController;\n      }\n\n      return returned;\n    };\n\n    controller.min = common.compose(r, controller.min);\n    controller.max = common.compose(r, controller.max);\n  } else if (controller instanceof BooleanController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__checkbox, 'click');\n    });\n\n    dom.bind(controller.__checkbox, 'click', function(e) {\n      e.stopPropagation(); // Prevents double-toggle\n    });\n  } else if (controller instanceof FunctionController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__button, 'click');\n    });\n\n    dom.bind(li, 'mouseover', function() {\n      dom.addClass(controller.__button, 'hover');\n    });\n\n    dom.bind(li, 'mouseout', function() {\n      dom.removeClass(controller.__button, 'hover');\n    });\n  } else if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n    controller.updateDisplay = common.compose(function(val) {\n      li.style.borderLeftColor = controller.__color.toString();\n      return val;\n    }, controller.updateDisplay);\n\n    controller.updateDisplay();\n  }\n\n  controller.setValue = common.compose(function(val) {\n    if (gui.getRoot().__preset_select && controller.isModified()) {\n      markPresetModified(gui.getRoot(), true);\n    }\n\n    return val;\n  }, controller.setValue);\n}\n\nfunction recallSavedValue(gui, controller) {\n  // Find the topmost GUI, that's where remembered objects live.\n  const root = gui.getRoot();\n\n  // Does the object we're controlling match anything we've been told to\n  // remember?\n  const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n\n  // Why yes, it does!\n  if (matchedIndex !== -1) {\n    // Let me fetch a map of controllers for thcommon.isObject.\n    let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n\n    // Ohp, I believe this is the first controller we've created for this\n    // object. Lets make the map fresh.\n    if (controllerMap === undefined) {\n      controllerMap = {};\n      root.__rememberedObjectIndecesToControllers[matchedIndex] =\n        controllerMap;\n    }\n\n    // Keep track of this controller\n    controllerMap[controller.property] = controller;\n\n    // Okay, now have we saved any values for this controller?\n    if (root.load && root.load.remembered) {\n      const presetMap = root.load.remembered;\n\n      // Which preset are we trying to load?\n      let preset;\n\n      if (presetMap[gui.preset]) {\n        preset = presetMap[gui.preset];\n      } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n        // Uhh, you can have the default instead?\n        preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n      } else {\n        // Nada.\n        return;\n      }\n\n      // Did the loaded object remember thcommon.isObject? &&  Did we remember this particular property?\n      if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n        // We did remember something for this guy ...\n        const value = preset[matchedIndex][controller.property];\n\n        // And that's what it is.\n        controller.initialValue = value;\n        controller.setValue(value);\n      }\n    }\n  }\n}\n\nfunction add(gui, object, property, params) {\n  if (object[property] === undefined) {\n    throw new Error(`Object \"${object}\" has no property \"${property}\"`);\n  }\n\n  let controller;\n\n  if (params.color) {\n    controller = new ColorController(object, property);\n  } else {\n    const factoryArgs = [object, property].concat(params.factoryArgs);\n    controller = ControllerFactory.apply(gui, factoryArgs);\n  }\n\n  if (params.before instanceof Controller) {\n    params.before = params.before.__li;\n  }\n\n  recallSavedValue(gui, controller);\n\n  dom.addClass(controller.domElement, 'c');\n\n  const name = document.createElement('span');\n  dom.addClass(name, 'property-name');\n  name.innerHTML = controller.property;\n\n  const container = document.createElement('div');\n  container.appendChild(name);\n  container.appendChild(controller.domElement);\n\n  const li = addRow(gui, container, params.before);\n\n  dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n  if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n  } else {\n    dom.addClass(li, typeof controller.getValue());\n  }\n\n  augmentController(gui, li, controller);\n\n  gui.__controllers.push(controller);\n\n  return controller;\n}\n\nfunction getLocalStorageHash(gui, key) {\n  // TODO how does this deal with multiple GUI's?\n  return document.location.href + '.' + key;\n}\n\nfunction addPresetOption(gui, name, setSelected) {\n  const opt = document.createElement('option');\n  opt.innerHTML = name;\n  opt.value = name;\n  gui.__preset_select.appendChild(opt);\n  if (setSelected) {\n    gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n  }\n}\n\nfunction showHideExplain(gui, explain) {\n  explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n}\n\nfunction addSaveMenu(gui) {\n  const div = gui.__save_row = document.createElement('li');\n\n  dom.addClass(gui.domElement, 'has-save');\n\n  gui.__ul.insertBefore(div, gui.__ul.firstChild);\n\n  dom.addClass(div, 'save-row');\n\n  const gears = document.createElement('span');\n  gears.innerHTML = '&nbsp;';\n  dom.addClass(gears, 'button gears');\n\n  // TODO replace with FunctionController\n  const button = document.createElement('span');\n  button.innerHTML = 'Save';\n  dom.addClass(button, 'button');\n  dom.addClass(button, 'save');\n\n  const button2 = document.createElement('span');\n  button2.innerHTML = 'New';\n  dom.addClass(button2, 'button');\n  dom.addClass(button2, 'save-as');\n\n  const button3 = document.createElement('span');\n  button3.innerHTML = 'Revert';\n  dom.addClass(button3, 'button');\n  dom.addClass(button3, 'revert');\n\n  const select = gui.__preset_select = document.createElement('select');\n\n  if (gui.load && gui.load.remembered) {\n    common.each(gui.load.remembered, function(value, key) {\n      addPresetOption(gui, key, key === gui.preset);\n    });\n  } else {\n    addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n  }\n\n  dom.bind(select, 'change', function() {\n    for (let index = 0; index < gui.__preset_select.length; index++) {\n      gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n    }\n\n    gui.preset = this.value;\n  });\n\n  div.appendChild(select);\n  div.appendChild(gears);\n  div.appendChild(button);\n  div.appendChild(button2);\n  div.appendChild(button3);\n\n  if (SUPPORTS_LOCAL_STORAGE) {\n    const explain = document.getElementById('dg-local-explain');\n    const localStorageCheckBox = document.getElementById('dg-local-storage');\n    const saveLocally = document.getElementById('dg-save-locally');\n\n    saveLocally.style.display = 'block';\n\n    if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n      localStorageCheckBox.setAttribute('checked', 'checked');\n    }\n\n    showHideExplain(gui, explain);\n\n    // TODO: Use a boolean controller, fool!\n    dom.bind(localStorageCheckBox, 'change', function() {\n      gui.useLocalStorage = !gui.useLocalStorage;\n      showHideExplain(gui, explain);\n    });\n  }\n\n  const newConstructorTextArea = document.getElementById('dg-new-constructor');\n\n  dom.bind(newConstructorTextArea, 'keydown', function(e) {\n    if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n      SAVE_DIALOGUE.hide();\n    }\n  });\n\n  dom.bind(gears, 'click', function() {\n    newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n    SAVE_DIALOGUE.show();\n    newConstructorTextArea.focus();\n    newConstructorTextArea.select();\n  });\n\n  dom.bind(button, 'click', function() {\n    gui.save();\n  });\n\n  dom.bind(button2, 'click', function() {\n    const presetName = prompt('Enter a new preset name.');\n    if (presetName) {\n      gui.saveAs(presetName);\n    }\n  });\n\n  dom.bind(button3, 'click', function() {\n    gui.revert();\n  });\n\n  // div.appendChild(button2);\n}\n\nfunction addResizeHandle(gui) {\n  let pmouseX;\n\n  gui.__resize_handle = document.createElement('div');\n\n  common.extend(gui.__resize_handle.style, {\n\n    width: '6px',\n    marginLeft: '-3px',\n    height: '200px',\n    cursor: 'ew-resize',\n    position: 'absolute'\n    // border: '1px solid blue'\n\n  });\n\n  function drag(e) {\n    e.preventDefault();\n\n    gui.width += pmouseX - e.clientX;\n    gui.onResize();\n    pmouseX = e.clientX;\n\n    return false;\n  }\n\n  function dragStop() {\n    dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.unbind(window, 'mousemove', drag);\n    dom.unbind(window, 'mouseup', dragStop);\n  }\n\n  function dragStart(e) {\n    e.preventDefault();\n\n    pmouseX = e.clientX;\n\n    dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.bind(window, 'mousemove', drag);\n    dom.bind(window, 'mouseup', dragStop);\n\n    return false;\n  }\n\n  dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n  dom.bind(gui.__closeButton, 'mousedown', dragStart);\n\n  gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n}\n\nfunction setWidth(gui, w) {\n  gui.domElement.style.width = w + 'px';\n  // Auto placed save-rows are position fixed, so we have to\n  // set the width manually if we want it to bleed to the edge\n  if (gui.__save_row && gui.autoPlace) {\n    gui.__save_row.style.width = w + 'px';\n  }\n  if (gui.__closeButton) {\n    gui.__closeButton.style.width = w + 'px';\n  }\n}\n\nfunction getCurrentPreset(gui, useInitialValues) {\n  const toReturn = {};\n\n  // For each object I'm remembering\n  common.each(gui.__rememberedObjects, function(val, index) {\n    const savedValues = {};\n\n    // The controllers I've made for thcommon.isObject by property\n    const controllerMap =\n      gui.__rememberedObjectIndecesToControllers[index];\n\n    // Remember each value for each property\n    common.each(controllerMap, function(controller, property) {\n      savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n    });\n\n    // Save the values for thcommon.isObject\n    toReturn[index] = savedValues;\n  });\n\n  return toReturn;\n}\n\nfunction setPresetSelectIndex(gui) {\n  for (let index = 0; index < gui.__preset_select.length; index++) {\n    if (gui.__preset_select[index].value === gui.preset) {\n      gui.__preset_select.selectedIndex = index;\n    }\n  }\n}\n\nfunction updateDisplays(controllerArray) {\n  if (controllerArray.length !== 0) {\n    requestAnimationFrame.call(window, function() {\n      updateDisplays(controllerArray);\n    });\n  }\n\n  common.each(controllerArray, function(c) {\n    c.updateDisplay();\n  });\n}\n\nexport default GUI;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Color from './color/Color';\nimport math from './color/math';\nimport interpret from './color/interpret';\n\nimport Controller from './controllers/Controller';\nimport BooleanController from './controllers/BooleanController';\nimport OptionController from './controllers/OptionController';\nimport StringController from './controllers/StringController';\nimport NumberController from './controllers/NumberController';\nimport NumberControllerBox from './controllers/NumberControllerBox';\nimport NumberControllerSlider from './controllers/NumberControllerSlider';\nimport FunctionController from './controllers/FunctionController';\nimport ColorController from './controllers/ColorController';\n\nimport domImport from './dom/dom';\nimport GUIImport from './gui/GUI';\n\nexport const color = {\n  Color: Color,\n  math: math,\n  interpret: interpret\n};\n\nexport const controllers = {\n  Controller: Controller,\n  BooleanController: BooleanController,\n  OptionController: OptionController,\n  StringController: StringController,\n  NumberController: NumberController,\n  NumberControllerBox: NumberControllerBox,\n  NumberControllerSlider: NumberControllerSlider,\n  FunctionController: FunctionController,\n  ColorController: ColorController\n};\n\nexport const dom = { dom: domImport };\n\nexport const gui = { GUI: GUIImport };\n\nexport const GUI = GUIImport;\n\nexport default {\n  color,\n  controllers,\n  dom,\n  gui,\n  GUI\n};\n", "/**\n * @license\n * Copyright 2010-2021 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.THREE = {}));\n})(this, (function (exports) { 'use strict';\n\n\tconst REVISION = '134dev';\n\tconst MOUSE = {\n\t\tLEFT: 0,\n\t\tMIDDLE: 1,\n\t\tRIGHT: 2,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2\n\t};\n\tconst TOUCH = {\n\t\tROTATE: 0,\n\t\tPAN: 1,\n\t\tDOLLY_PAN: 2,\n\t\tDOLLY_ROTATE: 3\n\t};\n\tconst CullFaceNone = 0;\n\tconst CullFaceBack = 1;\n\tconst CullFaceFront = 2;\n\tconst CullFaceFrontBack = 3;\n\tconst BasicShadowMap = 0;\n\tconst PCFShadowMap = 1;\n\tconst PCFSoftShadowMap = 2;\n\tconst VSMShadowMap = 3;\n\tconst FrontSide = 0;\n\tconst BackSide = 1;\n\tconst DoubleSide = 2;\n\tconst FlatShading = 1;\n\tconst SmoothShading = 2;\n\tconst NoBlending = 0;\n\tconst NormalBlending = 1;\n\tconst AdditiveBlending = 2;\n\tconst SubtractiveBlending = 3;\n\tconst MultiplyBlending = 4;\n\tconst CustomBlending = 5;\n\tconst AddEquation = 100;\n\tconst SubtractEquation = 101;\n\tconst ReverseSubtractEquation = 102;\n\tconst MinEquation = 103;\n\tconst MaxEquation = 104;\n\tconst ZeroFactor = 200;\n\tconst OneFactor = 201;\n\tconst SrcColorFactor = 202;\n\tconst OneMinusSrcColorFactor = 203;\n\tconst SrcAlphaFactor = 204;\n\tconst OneMinusSrcAlphaFactor = 205;\n\tconst DstAlphaFactor = 206;\n\tconst OneMinusDstAlphaFactor = 207;\n\tconst DstColorFactor = 208;\n\tconst OneMinusDstColorFactor = 209;\n\tconst SrcAlphaSaturateFactor = 210;\n\tconst NeverDepth = 0;\n\tconst AlwaysDepth = 1;\n\tconst LessDepth = 2;\n\tconst LessEqualDepth = 3;\n\tconst EqualDepth = 4;\n\tconst GreaterEqualDepth = 5;\n\tconst GreaterDepth = 6;\n\tconst NotEqualDepth = 7;\n\tconst MultiplyOperation = 0;\n\tconst MixOperation = 1;\n\tconst AddOperation = 2;\n\tconst NoToneMapping = 0;\n\tconst LinearToneMapping = 1;\n\tconst ReinhardToneMapping = 2;\n\tconst CineonToneMapping = 3;\n\tconst ACESFilmicToneMapping = 4;\n\tconst CustomToneMapping = 5;\n\tconst UVMapping = 300;\n\tconst CubeReflectionMapping = 301;\n\tconst CubeRefractionMapping = 302;\n\tconst EquirectangularReflectionMapping = 303;\n\tconst EquirectangularRefractionMapping = 304;\n\tconst CubeUVReflectionMapping = 306;\n\tconst CubeUVRefractionMapping = 307;\n\tconst RepeatWrapping = 1000;\n\tconst ClampToEdgeWrapping = 1001;\n\tconst MirroredRepeatWrapping = 1002;\n\tconst NearestFilter = 1003;\n\tconst NearestMipmapNearestFilter = 1004;\n\tconst NearestMipMapNearestFilter = 1004;\n\tconst NearestMipmapLinearFilter = 1005;\n\tconst NearestMipMapLinearFilter = 1005;\n\tconst LinearFilter = 1006;\n\tconst LinearMipmapNearestFilter = 1007;\n\tconst LinearMipMapNearestFilter = 1007;\n\tconst LinearMipmapLinearFilter = 1008;\n\tconst LinearMipMapLinearFilter = 1008;\n\tconst UnsignedByteType = 1009;\n\tconst ByteType = 1010;\n\tconst ShortType = 1011;\n\tconst UnsignedShortType = 1012;\n\tconst IntType = 1013;\n\tconst UnsignedIntType = 1014;\n\tconst FloatType = 1015;\n\tconst HalfFloatType = 1016;\n\tconst UnsignedShort4444Type = 1017;\n\tconst UnsignedShort5551Type = 1018;\n\tconst UnsignedShort565Type = 1019;\n\tconst UnsignedInt248Type = 1020;\n\tconst AlphaFormat = 1021;\n\tconst RGBFormat = 1022;\n\tconst RGBAFormat = 1023;\n\tconst LuminanceFormat = 1024;\n\tconst LuminanceAlphaFormat = 1025;\n\tconst RGBEFormat = RGBAFormat;\n\tconst DepthFormat = 1026;\n\tconst DepthStencilFormat = 1027;\n\tconst RedFormat = 1028;\n\tconst RedIntegerFormat = 1029;\n\tconst RGFormat = 1030;\n\tconst RGIntegerFormat = 1031;\n\tconst RGBIntegerFormat = 1032;\n\tconst RGBAIntegerFormat = 1033;\n\tconst RGB_S3TC_DXT1_Format = 33776;\n\tconst RGBA_S3TC_DXT1_Format = 33777;\n\tconst RGBA_S3TC_DXT3_Format = 33778;\n\tconst RGBA_S3TC_DXT5_Format = 33779;\n\tconst RGB_PVRTC_4BPPV1_Format = 35840;\n\tconst RGB_PVRTC_2BPPV1_Format = 35841;\n\tconst RGBA_PVRTC_4BPPV1_Format = 35842;\n\tconst RGBA_PVRTC_2BPPV1_Format = 35843;\n\tconst RGB_ETC1_Format = 36196;\n\tconst RGB_ETC2_Format = 37492;\n\tconst RGBA_ETC2_EAC_Format = 37496;\n\tconst RGBA_ASTC_4x4_Format = 37808;\n\tconst RGBA_ASTC_5x4_Format = 37809;\n\tconst RGBA_ASTC_5x5_Format = 37810;\n\tconst RGBA_ASTC_6x5_Format = 37811;\n\tconst RGBA_ASTC_6x6_Format = 37812;\n\tconst RGBA_ASTC_8x5_Format = 37813;\n\tconst RGBA_ASTC_8x6_Format = 37814;\n\tconst RGBA_ASTC_8x8_Format = 37815;\n\tconst RGBA_ASTC_10x5_Format = 37816;\n\tconst RGBA_ASTC_10x6_Format = 37817;\n\tconst RGBA_ASTC_10x8_Format = 37818;\n\tconst RGBA_ASTC_10x10_Format = 37819;\n\tconst RGBA_ASTC_12x10_Format = 37820;\n\tconst RGBA_ASTC_12x12_Format = 37821;\n\tconst RGBA_BPTC_Format = 36492;\n\tconst SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\n\tconst SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\n\tconst SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\n\tconst SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\n\tconst SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\n\tconst SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\n\tconst SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\n\tconst SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\n\tconst SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\n\tconst SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\n\tconst SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\n\tconst SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\n\tconst SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\n\tconst SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\n\tconst LoopOnce = 2200;\n\tconst LoopRepeat = 2201;\n\tconst LoopPingPong = 2202;\n\tconst InterpolateDiscrete = 2300;\n\tconst InterpolateLinear = 2301;\n\tconst InterpolateSmooth = 2302;\n\tconst ZeroCurvatureEnding = 2400;\n\tconst ZeroSlopeEnding = 2401;\n\tconst WrapAroundEnding = 2402;\n\tconst NormalAnimationBlendMode = 2500;\n\tconst AdditiveAnimationBlendMode = 2501;\n\tconst TrianglesDrawMode = 0;\n\tconst TriangleStripDrawMode = 1;\n\tconst TriangleFanDrawMode = 2;\n\tconst LinearEncoding = 3000;\n\tconst sRGBEncoding = 3001;\n\tconst GammaEncoding = 3007;\n\tconst RGBEEncoding = 3002;\n\tconst LogLuvEncoding = 3003;\n\tconst RGBM7Encoding = 3004;\n\tconst RGBM16Encoding = 3005;\n\tconst RGBDEncoding = 3006;\n\tconst BasicDepthPacking = 3200;\n\tconst RGBADepthPacking = 3201;\n\tconst TangentSpaceNormalMap = 0;\n\tconst ObjectSpaceNormalMap = 1;\n\tconst ZeroStencilOp = 0;\n\tconst KeepStencilOp = 7680;\n\tconst ReplaceStencilOp = 7681;\n\tconst IncrementStencilOp = 7682;\n\tconst DecrementStencilOp = 7683;\n\tconst IncrementWrapStencilOp = 34055;\n\tconst DecrementWrapStencilOp = 34056;\n\tconst InvertStencilOp = 5386;\n\tconst NeverStencilFunc = 512;\n\tconst LessStencilFunc = 513;\n\tconst EqualStencilFunc = 514;\n\tconst LessEqualStencilFunc = 515;\n\tconst GreaterStencilFunc = 516;\n\tconst NotEqualStencilFunc = 517;\n\tconst GreaterEqualStencilFunc = 518;\n\tconst AlwaysStencilFunc = 519;\n\tconst StaticDrawUsage = 35044;\n\tconst DynamicDrawUsage = 35048;\n\tconst StreamDrawUsage = 35040;\n\tconst StaticReadUsage = 35045;\n\tconst DynamicReadUsage = 35049;\n\tconst StreamReadUsage = 35041;\n\tconst StaticCopyUsage = 35046;\n\tconst DynamicCopyUsage = 35050;\n\tconst StreamCopyUsage = 35042;\n\tconst GLSL1 = '100';\n\tconst GLSL3 = '300 es';\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\tclass EventDispatcher {\n\t\taddEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) this._listeners = {};\n\t\t\tconst listeners = this._listeners;\n\n\t\t\tif (listeners[type] === undefined) {\n\t\t\t\tlisteners[type] = [];\n\t\t\t}\n\n\t\t\tif (listeners[type].indexOf(listener) === -1) {\n\t\t\t\tlisteners[type].push(listener);\n\t\t\t}\n\t\t}\n\n\t\thasEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) return false;\n\t\t\tconst listeners = this._listeners;\n\t\t\treturn listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n\t\t}\n\n\t\tremoveEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) return;\n\t\t\tconst listeners = this._listeners;\n\t\t\tconst listenerArray = listeners[type];\n\n\t\t\tif (listenerArray !== undefined) {\n\t\t\t\tconst index = listenerArray.indexOf(listener);\n\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tlistenerArray.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdispatchEvent(event) {\n\t\t\tif (this._listeners === undefined) return;\n\t\t\tconst listeners = this._listeners;\n\t\t\tconst listenerArray = listeners[event.type];\n\n\t\t\tif (listenerArray !== undefined) {\n\t\t\t\tevent.target = this; // Make a copy, in case listeners are removed while iterating.\n\n\t\t\t\tconst array = listenerArray.slice(0);\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\n\t\t\t\t\tarray[i].call(this, event);\n\t\t\t\t}\n\n\t\t\t\tevent.target = null;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tlet _seed = 1234567;\n\tconst DEG2RAD = Math.PI / 180;\n\tconst RAD2DEG = 180 / Math.PI; //\n\n\tconst _lut = [];\n\n\tfor (let i = 0; i < 256; i++) {\n\t\t_lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n\t}\n\n\tconst hasRandomUUID = typeof crypto !== 'undefined' && 'randomUUID' in crypto;\n\n\tfunction generateUUID() {\n\t\tif (hasRandomUUID) {\n\t\t\treturn crypto.randomUUID().toUpperCase();\n\t\t} // TODO Remove this code when crypto.randomUUID() is available everywhere\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\n\t\tconst d0 = Math.random() * 0xffffffff | 0;\n\t\tconst d1 = Math.random() * 0xffffffff | 0;\n\t\tconst d2 = Math.random() * 0xffffffff | 0;\n\t\tconst d3 = Math.random() * 0xffffffff | 0;\n\t\tconst uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' + _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' + _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] + _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff]; // .toUpperCase() here flattens concatenated strings to save heap memory space.\n\n\t\treturn uuid.toUpperCase();\n\t}\n\n\tfunction clamp(value, min, max) {\n\t\treturn Math.max(min, Math.min(max, value));\n\t} // compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\n\tfunction euclideanModulo(n, m) {\n\t\treturn (n % m + m) % m;\n\t} // Linear mapping from range <a1, a2> to range <b1, b2>\n\n\n\tfunction mapLinear(x, a1, a2, b1, b2) {\n\t\treturn b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n\t} // https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\n\n\n\tfunction inverseLerp(x, y, value) {\n\t\tif (x !== y) {\n\t\t\treturn (value - x) / (y - x);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t} // https://en.wikipedia.org/wiki/Linear_interpolation\n\n\n\tfunction lerp(x, y, t) {\n\t\treturn (1 - t) * x + t * y;\n\t} // http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n\n\n\tfunction damp(x, y, lambda, dt) {\n\t\treturn lerp(x, y, 1 - Math.exp(-lambda * dt));\n\t} // https://www.desmos.com/calculator/vcsjnyz7x4\n\n\n\tfunction pingpong(x, length = 1) {\n\t\treturn length - Math.abs(euclideanModulo(x, length * 2) - length);\n\t} // http://en.wikipedia.org/wiki/Smoothstep\n\n\n\tfunction smoothstep(x, min, max) {\n\t\tif (x <= min) return 0;\n\t\tif (x >= max) return 1;\n\t\tx = (x - min) / (max - min);\n\t\treturn x * x * (3 - 2 * x);\n\t}\n\n\tfunction smootherstep(x, min, max) {\n\t\tif (x <= min) return 0;\n\t\tif (x >= max) return 1;\n\t\tx = (x - min) / (max - min);\n\t\treturn x * x * x * (x * (x * 6 - 15) + 10);\n\t} // Random integer from <low, high> interval\n\n\n\tfunction randInt(low, high) {\n\t\treturn low + Math.floor(Math.random() * (high - low + 1));\n\t} // Random float from <low, high> interval\n\n\n\tfunction randFloat(low, high) {\n\t\treturn low + Math.random() * (high - low);\n\t} // Random float from <-range/2, range/2> interval\n\n\n\tfunction randFloatSpread(range) {\n\t\treturn range * (0.5 - Math.random());\n\t} // Deterministic pseudo-random float in the interval [ 0, 1 ]\n\n\n\tfunction seededRandom(s) {\n\t\tif (s !== undefined) _seed = s % 2147483647; // Park-Miller algorithm\n\n\t\t_seed = _seed * 16807 % 2147483647;\n\t\treturn (_seed - 1) / 2147483646;\n\t}\n\n\tfunction degToRad(degrees) {\n\t\treturn degrees * DEG2RAD;\n\t}\n\n\tfunction radToDeg(radians) {\n\t\treturn radians * RAD2DEG;\n\t}\n\n\tfunction isPowerOfTwo(value) {\n\t\treturn (value & value - 1) === 0 && value !== 0;\n\t}\n\n\tfunction ceilPowerOfTwo(value) {\n\t\treturn Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n\t}\n\n\tfunction floorPowerOfTwo(value) {\n\t\treturn Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n\t}\n\n\tfunction setQuaternionFromProperEuler(q, a, b, c, order) {\n\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t// angles are in radians\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\t\tconst c2 = cos(b / 2);\n\t\tconst s2 = sin(b / 2);\n\t\tconst c13 = cos((a + c) / 2);\n\t\tconst s13 = sin((a + c) / 2);\n\t\tconst c1_3 = cos((a - c) / 2);\n\t\tconst s1_3 = sin((a - c) / 2);\n\t\tconst c3_1 = cos((c - a) / 2);\n\t\tconst s3_1 = sin((c - a) / 2);\n\n\t\tswitch (order) {\n\t\t\tcase 'XYX':\n\t\t\t\tq.set(c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZY':\n\t\t\t\tq.set(s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXZ':\n\t\t\t\tq.set(s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZX':\n\t\t\t\tq.set(c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXY':\n\t\t\t\tq.set(s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYZ':\n\t\t\t\tq.set(s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order);\n\t\t}\n\t}\n\n\tvar MathUtils = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tDEG2RAD: DEG2RAD,\n\t\tRAD2DEG: RAD2DEG,\n\t\tgenerateUUID: generateUUID,\n\t\tclamp: clamp,\n\t\teuclideanModulo: euclideanModulo,\n\t\tmapLinear: mapLinear,\n\t\tinverseLerp: inverseLerp,\n\t\tlerp: lerp,\n\t\tdamp: damp,\n\t\tpingpong: pingpong,\n\t\tsmoothstep: smoothstep,\n\t\tsmootherstep: smootherstep,\n\t\trandInt: randInt,\n\t\trandFloat: randFloat,\n\t\trandFloatSpread: randFloatSpread,\n\t\tseededRandom: seededRandom,\n\t\tdegToRad: degToRad,\n\t\tradToDeg: radToDeg,\n\t\tisPowerOfTwo: isPowerOfTwo,\n\t\tceilPowerOfTwo: ceilPowerOfTwo,\n\t\tfloorPowerOfTwo: floorPowerOfTwo,\n\t\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler\n\t});\n\n\tclass Vector2 {\n\t\tconstructor(x = 0, y = 0) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.x;\n\t\t}\n\n\t\tset width(value) {\n\t\t\tthis.x = value;\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.y;\n\t\t}\n\n\t\tset height(value) {\n\t\t\tthis.y = value;\n\t\t}\n\n\t\tset(x, y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v) {\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivide(v) {\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6];\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7];\n\t\t\treturn this;\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y;\n\t\t}\n\n\t\tcross(v) {\n\t\t\treturn this.x * v.y - this.y * v.x;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tangle() {\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\t\t\tconst angle = Math.atan2(-this.y, -this.x) + Math.PI;\n\t\t\treturn angle;\n\t\t}\n\n\t\tdistanceTo(v) {\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t\t}\n\n\t\tdistanceToSquared(v) {\n\t\t\tconst dx = this.x - v.x,\n\t\t\t\t\t\tdy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t}\n\n\t\tmanhattanDistanceTo(v) {\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateAround(center, angle) {\n\t\t\tconst c = Math.cos(angle),\n\t\t\t\t\t\ts = Math.sin(angle);\n\t\t\tconst x = this.x - center.x;\n\t\t\tconst y = this.y - center.y;\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t\t*[Symbol.iterator]() {\n\t\t\tyield this.x;\n\t\t\tyield this.y;\n\t\t}\n\n\t}\n\n\tVector2.prototype.isVector2 = true;\n\n\tclass Matrix3 {\n\t\tconstructor() {\n\t\t\tthis.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tconsole.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n\t\t\t}\n\t\t}\n\n\t\tset(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] = n11;\n\t\t\tte[1] = n21;\n\t\t\tte[2] = n31;\n\t\t\tte[3] = n12;\n\t\t\tte[4] = n22;\n\t\t\tte[5] = n32;\n\t\t\tte[6] = n13;\n\t\t\tte[7] = n23;\n\t\t\tte[8] = n33;\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\tthis.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(m) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\t\t\tte[0] = me[0];\n\t\t\tte[1] = me[1];\n\t\t\tte[2] = me[2];\n\t\t\tte[3] = me[3];\n\t\t\tte[4] = me[4];\n\t\t\tte[5] = me[5];\n\t\t\tte[6] = me[6];\n\t\t\tte[7] = me[7];\n\t\t\tte[8] = me[8];\n\t\t\treturn this;\n\t\t}\n\n\t\textractBasis(xAxis, yAxis, zAxis) {\n\t\t\txAxis.setFromMatrix3Column(this, 0);\n\t\t\tyAxis.setFromMatrix3Column(this, 1);\n\t\t\tzAxis.setFromMatrix3Column(this, 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrix4(m) {\n\t\t\tconst me = m.elements;\n\t\t\tthis.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(m) {\n\t\t\treturn this.multiplyMatrices(this, m);\n\t\t}\n\n\t\tpremultiply(m) {\n\t\t\treturn this.multiplyMatrices(m, this);\n\t\t}\n\n\t\tmultiplyMatrices(a, b) {\n\t\t\tconst ae = a.elements;\n\t\t\tconst be = b.elements;\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = ae[0],\n\t\t\t\t\t\ta12 = ae[3],\n\t\t\t\t\t\ta13 = ae[6];\n\t\t\tconst a21 = ae[1],\n\t\t\t\t\t\ta22 = ae[4],\n\t\t\t\t\t\ta23 = ae[7];\n\t\t\tconst a31 = ae[2],\n\t\t\t\t\t\ta32 = ae[5],\n\t\t\t\t\t\ta33 = ae[8];\n\t\t\tconst b11 = be[0],\n\t\t\t\t\t\tb12 = be[3],\n\t\t\t\t\t\tb13 = be[6];\n\t\t\tconst b21 = be[1],\n\t\t\t\t\t\tb22 = be[4],\n\t\t\t\t\t\tb23 = be[7];\n\t\t\tconst b31 = be[2],\n\t\t\t\t\t\tb32 = be[5],\n\t\t\t\t\t\tb33 = be[8];\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[3] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[6] = a11 * b13 + a12 * b23 + a13 * b33;\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[4] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[7] = a21 * b13 + a22 * b23 + a23 * b33;\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[5] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[8] = a31 * b13 + a32 * b23 + a33 * b33;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= s;\n\t\t\tte[3] *= s;\n\t\t\tte[6] *= s;\n\t\t\tte[1] *= s;\n\t\t\tte[4] *= s;\n\t\t\tte[7] *= s;\n\t\t\tte[2] *= s;\n\t\t\tte[5] *= s;\n\t\t\tte[8] *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeterminant() {\n\t\t\tconst te = this.elements;\n\t\t\tconst a = te[0],\n\t\t\t\t\t\tb = te[1],\n\t\t\t\t\t\tc = te[2],\n\t\t\t\t\t\td = te[3],\n\t\t\t\t\t\te = te[4],\n\t\t\t\t\t\tf = te[5],\n\t\t\t\t\t\tg = te[6],\n\t\t\t\t\t\th = te[7],\n\t\t\t\t\t\ti = te[8];\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\t\t}\n\n\t\tinvert() {\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tn11 = te[0],\n\t\t\t\t\t\tn21 = te[1],\n\t\t\t\t\t\tn31 = te[2],\n\t\t\t\t\t\tn12 = te[3],\n\t\t\t\t\t\tn22 = te[4],\n\t\t\t\t\t\tn32 = te[5],\n\t\t\t\t\t\tn13 = te[6],\n\t\t\t\t\t\tn23 = te[7],\n\t\t\t\t\t\tn33 = te[8],\n\t\t\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\t\t\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\n\t\t\tconst detInv = 1 / det;\n\t\t\tte[0] = t11 * detInv;\n\t\t\tte[1] = (n31 * n23 - n33 * n21) * detInv;\n\t\t\tte[2] = (n32 * n21 - n31 * n22) * detInv;\n\t\t\tte[3] = t12 * detInv;\n\t\t\tte[4] = (n33 * n11 - n31 * n13) * detInv;\n\t\t\tte[5] = (n31 * n12 - n32 * n11) * detInv;\n\t\t\tte[6] = t13 * detInv;\n\t\t\tte[7] = (n21 * n13 - n23 * n11) * detInv;\n\t\t\tte[8] = (n22 * n11 - n21 * n12) * detInv;\n\t\t\treturn this;\n\t\t}\n\n\t\ttranspose() {\n\t\t\tlet tmp;\n\t\t\tconst m = this.elements;\n\t\t\ttmp = m[1];\n\t\t\tm[1] = m[3];\n\t\t\tm[3] = tmp;\n\t\t\ttmp = m[2];\n\t\t\tm[2] = m[6];\n\t\t\tm[6] = tmp;\n\t\t\ttmp = m[5];\n\t\t\tm[5] = m[7];\n\t\t\tm[7] = tmp;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetNormalMatrix(matrix4) {\n\t\t\treturn this.setFromMatrix4(matrix4).invert().transpose();\n\t\t}\n\n\t\ttransposeIntoArray(r) {\n\t\t\tconst m = this.elements;\n\t\t\tr[0] = m[0];\n\t\t\tr[1] = m[3];\n\t\t\tr[2] = m[6];\n\t\t\tr[3] = m[1];\n\t\t\tr[4] = m[4];\n\t\t\tr[5] = m[7];\n\t\t\tr[6] = m[2];\n\t\t\tr[7] = m[5];\n\t\t\tr[8] = m[8];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n\t\t\tconst c = Math.cos(rotation);\n\t\t\tconst s = Math.sin(rotation);\n\t\t\tthis.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(sx, sy) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= sx;\n\t\t\tte[3] *= sx;\n\t\t\tte[6] *= sx;\n\t\t\tte[1] *= sy;\n\t\t\tte[4] *= sy;\n\t\t\tte[7] *= sy;\n\t\t\treturn this;\n\t\t}\n\n\t\trotate(theta) {\n\t\t\tconst c = Math.cos(theta);\n\t\t\tconst s = Math.sin(theta);\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = te[0],\n\t\t\t\t\t\ta12 = te[3],\n\t\t\t\t\t\ta13 = te[6];\n\t\t\tconst a21 = te[1],\n\t\t\t\t\t\ta22 = te[4],\n\t\t\t\t\t\ta23 = te[7];\n\t\t\tte[0] = c * a11 + s * a21;\n\t\t\tte[3] = c * a12 + s * a22;\n\t\t\tte[6] = c * a13 + s * a23;\n\t\t\tte[1] = -s * a11 + c * a21;\n\t\t\tte[4] = -s * a12 + c * a22;\n\t\t\tte[7] = -s * a13 + c * a23;\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(tx, ty) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] += tx * te[2];\n\t\t\tte[3] += tx * te[5];\n\t\t\tte[6] += tx * te[8];\n\t\t\tte[1] += ty * te[2];\n\t\t\tte[4] += ty * te[5];\n\t\t\tte[7] += ty * te[8];\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(matrix) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = matrix.elements;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tif (te[i] !== me[i]) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.elements[i] = array[i + offset];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst te = this.elements;\n\t\t\tarray[offset] = te[0];\n\t\t\tarray[offset + 1] = te[1];\n\t\t\tarray[offset + 2] = te[2];\n\t\t\tarray[offset + 3] = te[3];\n\t\t\tarray[offset + 4] = te[4];\n\t\t\tarray[offset + 5] = te[5];\n\t\t\tarray[offset + 6] = te[6];\n\t\t\tarray[offset + 7] = te[7];\n\t\t\tarray[offset + 8] = te[8];\n\t\t\treturn array;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().fromArray(this.elements);\n\t\t}\n\n\t}\n\n\tMatrix3.prototype.isMatrix3 = true;\n\n\tfunction arrayMax(array) {\n\t\tif (array.length === 0) return -Infinity;\n\t\tlet max = array[0];\n\n\t\tfor (let i = 1, l = array.length; i < l; ++i) {\n\t\t\tif (array[i] > max) max = array[i];\n\t\t}\n\n\t\treturn max;\n\t}\n\n\tconst TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\tUint8ClampedArray: Uint8ClampedArray,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\tfunction getTypedArray(type, buffer) {\n\t\treturn new TYPED_ARRAYS[type](buffer);\n\t}\n\n\tfunction createElementNS(name) {\n\t\treturn document.createElementNS('http://www.w3.org/1999/xhtml', name);\n\t}\n\t/**\n\t\t* cyrb53 hash for string from: https://stackoverflow.com/a/52171480\n\t\t*\n\t\t* Public Domain, @bryc - https://stackoverflow.com/users/815680/bryc\n\t\t*\n\t\t* It is roughly similar to the well-known MurmurHash/xxHash algorithms. It uses a combination\n\t\t* of multiplication and Xorshift to generate the hash, but not as thorough. As a result it's\n\t\t* faster than either would be in JavaScript and significantly simpler to implement. Keep in\n\t\t* mind this is not a secure algorithm, if privacy/security is a concern, this is not for you.\n\t\t*\n\t\t* @param {string} str\n\t\t* @param {number} seed, default 0\n\t\t* @returns number\n\t\t*/\n\n\n\tfunction hashString(str, seed = 0) {\n\t\tlet h1 = 0xdeadbeef ^ seed,\n\t\t\t\th2 = 0x41c6ce57 ^ seed;\n\n\t\tfor (let i = 0, ch; i < str.length; i++) {\n\t\t\tch = str.charCodeAt(i);\n\t\t\th1 = Math.imul(h1 ^ ch, 2654435761);\n\t\t\th2 = Math.imul(h2 ^ ch, 1597334677);\n\t\t}\n\n\t\th1 = Math.imul(h1 ^ h1 >>> 16, 2246822507) ^ Math.imul(h2 ^ h2 >>> 13, 3266489909);\n\t\th2 = Math.imul(h2 ^ h2 >>> 16, 2246822507) ^ Math.imul(h1 ^ h1 >>> 13, 3266489909);\n\t\treturn 4294967296 * (2097151 & h2) + (h1 >>> 0);\n\t}\n\n\tlet _canvas;\n\n\tclass ImageUtils {\n\t\tstatic getDataURL(image) {\n\t\t\tif (/^data:/i.test(image.src)) {\n\t\t\t\treturn image.src;\n\t\t\t}\n\n\t\t\tif (typeof HTMLCanvasElement == 'undefined') {\n\t\t\t\treturn image.src;\n\t\t\t}\n\n\t\t\tlet canvas;\n\n\t\t\tif (image instanceof HTMLCanvasElement) {\n\t\t\t\tcanvas = image;\n\t\t\t} else {\n\t\t\t\tif (_canvas === undefined) _canvas = createElementNS('canvas');\n\t\t\t\t_canvas.width = image.width;\n\t\t\t\t_canvas.height = image.height;\n\n\t\t\t\tconst context = _canvas.getContext('2d');\n\n\t\t\t\tif (image instanceof ImageData) {\n\t\t\t\t\tcontext.putImageData(image, 0, 0);\n\t\t\t\t} else {\n\t\t\t\t\tcontext.drawImage(image, 0, 0, image.width, image.height);\n\t\t\t\t}\n\n\t\t\t\tcanvas = _canvas;\n\t\t\t}\n\n\t\t\tif (canvas.width > 2048 || canvas.height > 2048) {\n\t\t\t\tconsole.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image);\n\t\t\t\treturn canvas.toDataURL('image/jpeg', 0.6);\n\t\t\t} else {\n\t\t\t\treturn canvas.toDataURL('image/png');\n\t\t\t}\n\t\t}\n\n\t}\n\n\tlet textureId = 0;\n\n\tclass Texture extends EventDispatcher {\n\t\tconstructor(image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding) {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: textureId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.image = image;\n\t\t\tthis.mipmaps = [];\n\t\t\tthis.mapping = mapping;\n\t\t\tthis.wrapS = wrapS;\n\t\t\tthis.wrapT = wrapT;\n\t\t\tthis.magFilter = magFilter;\n\t\t\tthis.minFilter = minFilter;\n\t\t\tthis.anisotropy = anisotropy;\n\t\t\tthis.format = format;\n\t\t\tthis.internalFormat = null;\n\t\t\tthis.type = type;\n\t\t\tthis.offset = new Vector2(0, 0);\n\t\t\tthis.repeat = new Vector2(1, 1);\n\t\t\tthis.center = new Vector2(0, 0);\n\t\t\tthis.rotation = 0;\n\t\t\tthis.matrixAutoUpdate = true;\n\t\t\tthis.matrix = new Matrix3();\n\t\t\tthis.generateMipmaps = true;\n\t\t\tthis.premultiplyAlpha = false;\n\t\t\tthis.flipY = true;\n\t\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\t\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t\t//\n\t\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n\t\t\tthis.encoding = encoding;\n\t\t\tthis.userData = {};\n\t\t\tthis.version = 0;\n\t\t\tthis.onUpdate = null;\n\t\t\tthis.isRenderTargetTexture = false;\n\t\t}\n\n\t\tupdateMatrix() {\n\t\t\tthis.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice(0);\n\t\t\tthis.mapping = source.mapping;\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\t\t\tthis.anisotropy = source.anisotropy;\n\t\t\tthis.format = source.format;\n\t\t\tthis.internalFormat = source.internalFormat;\n\t\t\tthis.type = source.type;\n\t\t\tthis.offset.copy(source.offset);\n\t\t\tthis.repeat.copy(source.repeat);\n\t\t\tthis.center.copy(source.center);\n\t\t\tthis.rotation = source.rotation;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrix.copy(source.matrix);\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst isRootObject = meta === undefined || typeof meta === 'string';\n\n\t\t\tif (!isRootObject && meta.textures[this.uuid] !== undefined) {\n\t\t\t\treturn meta.textures[this.uuid];\n\t\t\t}\n\n\t\t\tconst output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\t\t\t\tmapping: this.mapping,\n\t\t\t\trepeat: [this.repeat.x, this.repeat.y],\n\t\t\t\toffset: [this.offset.x, this.offset.y],\n\t\t\t\tcenter: [this.center.x, this.center.y],\n\t\t\t\trotation: this.rotation,\n\t\t\t\twrap: [this.wrapS, this.wrapT],\n\t\t\t\tformat: this.format,\n\t\t\t\ttype: this.type,\n\t\t\t\tencoding: this.encoding,\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\t\t\t\tflipY: this.flipY,\n\t\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\t\tunpackAlignment: this.unpackAlignment\n\t\t\t};\n\n\t\t\tif (this.image !== undefined) {\n\t\t\t\t// TODO: Move to THREE.Image\n\t\t\t\tconst image = this.image;\n\n\t\t\t\tif (image.uuid === undefined) {\n\t\t\t\t\timage.uuid = generateUUID(); // UGH\n\t\t\t\t}\n\n\t\t\t\tif (!isRootObject && meta.images[image.uuid] === undefined) {\n\t\t\t\t\tlet url;\n\n\t\t\t\t\tif (Array.isArray(image)) {\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\n\t\t\t\t\t\turl = [];\n\n\t\t\t\t\t\tfor (let i = 0, l = image.length; i < l; i++) {\n\t\t\t\t\t\t\t// check cube texture with data textures\n\t\t\t\t\t\t\tif (image[i].isDataTexture) {\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i].image));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// process single image\n\t\t\t\t\t\turl = serializeImage(image);\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.images[image.uuid] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: url\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\t\t\t}\n\n\t\t\tif (JSON.stringify(this.userData) !== '{}') output.userData = this.userData;\n\n\t\t\tif (!isRootObject) {\n\t\t\t\tmeta.textures[this.uuid] = output;\n\t\t\t}\n\n\t\t\treturn output;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t\ttransformUv(uv) {\n\t\t\tif (this.mapping !== UVMapping) return uv;\n\t\t\tuv.applyMatrix3(this.matrix);\n\n\t\t\tif (uv.x < 0 || uv.x > 1) {\n\t\t\t\tswitch (this.wrapS) {\n\t\t\t\t\tcase RepeatWrapping:\n\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.x) % 2) === 1) {\n\t\t\t\t\t\t\tuv.x = Math.ceil(uv.x) - uv.x;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (uv.y < 0 || uv.y > 1) {\n\t\t\t\tswitch (this.wrapT) {\n\t\t\t\t\tcase RepeatWrapping:\n\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.y) % 2) === 1) {\n\t\t\t\t\t\t\tuv.y = Math.ceil(uv.y) - uv.y;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.flipY) {\n\t\t\t\tuv.y = 1 - uv.y;\n\t\t\t}\n\n\t\t\treturn uv;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\tTexture.prototype.isTexture = true;\n\n\tfunction serializeImage(image) {\n\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n\t\t\t// default images\n\t\t\treturn ImageUtils.getDataURL(image);\n\t\t} else {\n\t\t\tif (image.data) {\n\t\t\t\t// images of DataTexture\n\t\t\t\treturn {\n\t\t\t\t\tdata: Array.prototype.slice.call(image.data),\n\t\t\t\t\twidth: image.width,\n\t\t\t\t\theight: image.height,\n\t\t\t\t\ttype: image.data.constructor.name\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.Texture: Unable to serialize Texture.');\n\t\t\t\treturn {};\n\t\t\t}\n\t\t}\n\t}\n\n\tclass Vector4 {\n\t\tconstructor(x = 0, y = 0, z = 0, w = 1) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.z;\n\t\t}\n\n\t\tset width(value) {\n\t\t\tthis.z = value;\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.w;\n\t\t}\n\n\t\tset height(value) {\n\t\t\tthis.w = value;\n\t\t}\n\n\t\tset(x, y, z, w) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(z) {\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetW(w) {\n\t\t\tthis.w = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.z = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.w = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tcase 2:\n\t\t\t\t\treturn this.z;\n\n\t\t\t\tcase 3:\n\t\t\t\t\treturn this.w;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y, this.z, this.w);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = v.w !== undefined ? v.w : 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v) {\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\t\t\tthis.w *= v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z,\n\t\t\t\t\t\tw = this.w;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n\t\t\tthis.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tsetAxisAngleFromQuaternion(q) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\t\t\t// q is assumed to be normalized\n\t\t\tthis.w = 2 * Math.acos(q.w);\n\t\t\tconst s = Math.sqrt(1 - q.w * q.w);\n\n\t\t\tif (s < 0.0001) {\n\t\t\t\tthis.x = 1;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\t\t\t} else {\n\t\t\t\tthis.x = q.x / s;\n\t\t\t\tthis.y = q.y / s;\n\t\t\t\tthis.z = q.z / s;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetAxisAngleFromRotationMatrix(m) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tlet angle, x, y, z; // variables for result\n\n\t\t\tconst epsilon = 0.01,\n\t\t\t\t\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\n\t\t\t\t\t\t// margin to distinguish between 0 and 180 degrees\n\t\t\tte = m.elements,\n\t\t\t\t\t\tm11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8],\n\t\t\t\t\t\tm21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9],\n\t\t\t\t\t\tm31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10];\n\n\t\t\tif (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\t\t\t\tif (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\t\t\t\t\tthis.set(1, 0, 0, 0);\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\t\t\t\t} // otherwise this singularity is angle = 180\n\n\n\t\t\t\tangle = Math.PI;\n\t\t\t\tconst xx = (m11 + 1) / 2;\n\t\t\t\tconst yy = (m22 + 1) / 2;\n\t\t\t\tconst zz = (m33 + 1) / 2;\n\t\t\t\tconst xy = (m12 + m21) / 4;\n\t\t\t\tconst xz = (m13 + m31) / 4;\n\t\t\t\tconst yz = (m23 + m32) / 4;\n\n\t\t\t\tif (xx > yy && xx > zz) {\n\t\t\t\t\t// m11 is the largest diagonal term\n\t\t\t\t\tif (xx < epsilon) {\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = Math.sqrt(xx);\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\t\t\t\t\t}\n\t\t\t\t} else if (yy > zz) {\n\t\t\t\t\t// m22 is the largest diagonal term\n\t\t\t\t\tif (yy < epsilon) {\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty = Math.sqrt(yy);\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\t\t\t\t\tif (zz < epsilon) {\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tz = Math.sqrt(zz);\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.set(x, y, z, angle);\n\t\t\t\treturn this; // return 180 deg rotation\n\t\t\t} // as we have reached here there are no singularities so we can handle normally\n\n\n\t\t\tlet s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n\t\t\tif (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = (m32 - m23) / s;\n\t\t\tthis.y = (m13 - m31) / s;\n\t\t\tthis.z = (m21 - m12) / s;\n\t\t\tthis.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\tthis.z = Math.min(this.z, v.z);\n\t\t\tthis.w = Math.min(this.w, v.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\tthis.z = Math.max(this.z, v.z);\n\t\t\tthis.w = Math.max(this.w, v.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\t\tthis.w = Math.max(min.w, Math.min(max.w, this.w));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\t\tthis.w = Math.max(minVal, Math.min(maxVal, this.w));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\tthis.z = Math.floor(this.z);\n\t\t\tthis.w = Math.floor(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\tthis.z = Math.ceil(this.z);\n\t\t\tthis.w = Math.ceil(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\tthis.z = Math.round(this.z);\n\t\t\tthis.w = Math.round(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\t\t\tthis.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\tthis.z = -this.z;\n\t\t\tthis.w = -this.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\tthis.z += (v.z - this.z) * alpha;\n\t\t\tthis.w += (v.w - this.w) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\n\t\t\tthis.w = v1.w + (v2.w - v1.w) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\tthis.z = array[offset + 2];\n\t\t\tthis.w = array[offset + 3];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\tarray[offset + 2] = this.z;\n\t\t\tarray[offset + 3] = this.w;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\tthis.z = attribute.getZ(index);\n\t\t\tthis.w = attribute.getW(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\tthis.w = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t\t*[Symbol.iterator]() {\n\t\t\tyield this.x;\n\t\t\tyield this.y;\n\t\t\tyield this.z;\n\t\t\tyield this.w;\n\t\t}\n\n\t}\n\n\tVector4.prototype.isVector4 = true;\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\n\tclass WebGLRenderTarget extends EventDispatcher {\n\t\tconstructor(width, height, options = {}) {\n\t\t\tsuper();\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = 1;\n\t\t\tthis.scissor = new Vector4(0, 0, width, height);\n\t\t\tthis.scissorTest = false;\n\t\t\tthis.viewport = new Vector4(0, 0, width, height);\n\t\t\tthis.texture = new Texture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n\t\t\tthis.texture.isRenderTargetTexture = true;\n\t\t\tthis.texture.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: 1\n\t\t\t};\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\t\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\t\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\t\t}\n\n\t\tsetTexture(texture) {\n\t\t\ttexture.image = {\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t\tdepth: this.depth\n\t\t\t};\n\t\t\tthis.texture = texture;\n\t\t}\n\n\t\tsetSize(width, height, depth = 1) {\n\t\t\tif (this.width !== width || this.height !== height || this.depth !== depth) {\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\t\t\t\tthis.depth = depth;\n\t\t\t\tthis.texture.image.width = width;\n\t\t\t\tthis.texture.image.height = height;\n\t\t\t\tthis.texture.image.depth = depth;\n\t\t\t\tthis.dispose();\n\t\t\t}\n\n\t\t\tthis.viewport.set(0, 0, width, height);\n\t\t\tthis.scissor.set(0, 0, width, height);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\tthis.depth = source.depth;\n\t\t\tthis.viewport.copy(source.viewport);\n\t\t\tthis.texture = source.texture.clone();\n\t\t\tthis.texture.image = { ...this.texture.image\n\t\t\t}; // See #20328.\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\n\tclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\t\tconstructor(width, height, count) {\n\t\t\tsuper(width, height);\n\t\t\tconst texture = this.texture;\n\t\t\tthis.texture = [];\n\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tthis.texture[i] = texture.clone();\n\t\t\t}\n\t\t}\n\n\t\tsetSize(width, height, depth = 1) {\n\t\t\tif (this.width !== width || this.height !== height || this.depth !== depth) {\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\t\t\t\tthis.depth = depth;\n\n\t\t\t\tfor (let i = 0, il = this.texture.length; i < il; i++) {\n\t\t\t\t\tthis.texture[i].image.width = width;\n\t\t\t\t\tthis.texture[i].image.height = height;\n\t\t\t\t\tthis.texture[i].image.depth = depth;\n\t\t\t\t}\n\n\t\t\t\tthis.dispose();\n\t\t\t}\n\n\t\t\tthis.viewport.set(0, 0, width, height);\n\t\t\tthis.scissor.set(0, 0, width, height);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.dispose();\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\tthis.depth = source.depth;\n\t\t\tthis.viewport.set(0, 0, this.width, this.height);\n\t\t\tthis.scissor.set(0, 0, this.width, this.height);\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\t\t\tthis.texture.length = 0;\n\n\t\t\tfor (let i = 0, il = source.texture.length; i < il; i++) {\n\t\t\t\tthis.texture[i] = source.texture[i].clone();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tWebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\n\n\tclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\t\tconstructor(width, height, options) {\n\t\t\tsuper(width, height, options);\n\t\t\tthis.samples = 4;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy.call(this, source);\n\t\t\tthis.samples = source.samples;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tWebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\n\n\tclass Quaternion {\n\t\tconstructor(x = 0, y = 0, z = 0, w = 1) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\t\t}\n\n\t\tstatic slerp(qa, qb, qm, t) {\n\t\t\tconsole.warn('THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.');\n\t\t\treturn qm.slerpQuaternions(qa, qb, t);\n\t\t}\n\n\t\tstatic slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\t\t\tlet x0 = src0[srcOffset0 + 0],\n\t\t\t\t\ty0 = src0[srcOffset0 + 1],\n\t\t\t\t\tz0 = src0[srcOffset0 + 2],\n\t\t\t\t\tw0 = src0[srcOffset0 + 3];\n\t\t\tconst x1 = src1[srcOffset1 + 0],\n\t\t\t\t\t\ty1 = src1[srcOffset1 + 1],\n\t\t\t\t\t\tz1 = src1[srcOffset1 + 2],\n\t\t\t\t\t\tw1 = src1[srcOffset1 + 3];\n\n\t\t\tif (t === 0) {\n\t\t\t\tdst[dstOffset + 0] = x0;\n\t\t\t\tdst[dstOffset + 1] = y0;\n\t\t\t\tdst[dstOffset + 2] = z0;\n\t\t\t\tdst[dstOffset + 3] = w0;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (t === 1) {\n\t\t\t\tdst[dstOffset + 0] = x1;\n\t\t\t\tdst[dstOffset + 1] = y1;\n\t\t\t\tdst[dstOffset + 2] = z1;\n\t\t\t\tdst[dstOffset + 3] = w1;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n\t\t\t\tlet s = 1 - t;\n\t\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\t\t\t\tdir = cos >= 0 ? 1 : -1,\n\t\t\t\t\t\t\tsqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n\t\t\t\tif (sqrSin > Number.EPSILON) {\n\t\t\t\t\tconst sin = Math.sqrt(sqrSin),\n\t\t\t\t\t\t\t\tlen = Math.atan2(sin, cos * dir);\n\t\t\t\t\ts = Math.sin(s * len) / sin;\n\t\t\t\t\tt = Math.sin(t * len) / sin;\n\t\t\t\t}\n\n\t\t\t\tconst tDir = t * dir;\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n\t\t\t\tif (s === 1 - t) {\n\t\t\t\t\tconst f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdst[dstOffset] = x0;\n\t\t\tdst[dstOffset + 1] = y0;\n\t\t\tdst[dstOffset + 2] = z0;\n\t\t\tdst[dstOffset + 3] = w0;\n\t\t}\n\n\t\tstatic multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\n\t\t\tconst x0 = src0[srcOffset0];\n\t\t\tconst y0 = src0[srcOffset0 + 1];\n\t\t\tconst z0 = src0[srcOffset0 + 2];\n\t\t\tconst w0 = src0[srcOffset0 + 3];\n\t\t\tconst x1 = src1[srcOffset1];\n\t\t\tconst y1 = src1[srcOffset1 + 1];\n\t\t\tconst z1 = src1[srcOffset1 + 2];\n\t\t\tconst w1 = src1[srcOffset1 + 3];\n\t\t\tdst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\t\tdst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\t\tdst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\t\tdst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\t\t\treturn dst;\n\t\t}\n\n\t\tget x() {\n\t\t\treturn this._x;\n\t\t}\n\n\t\tset x(value) {\n\t\t\tthis._x = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget y() {\n\t\t\treturn this._y;\n\t\t}\n\n\t\tset y(value) {\n\t\t\tthis._y = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget z() {\n\t\t\treturn this._z;\n\t\t}\n\n\t\tset z(value) {\n\t\t\tthis._z = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget w() {\n\t\t\treturn this._w;\n\t\t}\n\n\t\tset w(value) {\n\t\t\tthis._w = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tset(x, y, z, w) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._w);\n\t\t}\n\n\t\tcopy(quaternion) {\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromEuler(euler, update) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tthrow new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\tconst x = euler._x,\n\t\t\t\t\t\ty = euler._y,\n\t\t\t\t\t\tz = euler._z,\n\t\t\t\t\t\torder = euler._order; // http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tconst cos = Math.cos;\n\t\t\tconst sin = Math.sin;\n\t\t\tconst c1 = cos(x / 2);\n\t\t\tconst c2 = cos(y / 2);\n\t\t\tconst c3 = cos(z / 2);\n\t\t\tconst s1 = sin(x / 2);\n\t\t\tconst s2 = sin(y / 2);\n\t\t\tconst s3 = sin(z / 2);\n\n\t\t\tswitch (order) {\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order);\n\t\t\t}\n\n\t\t\tif (update !== false) this._onChangeCallback();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromAxisAngle(axis, angle) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\t\t\t// assumes axis is normalized\n\t\t\tconst halfAngle = angle / 2,\n\t\t\t\t\t\ts = Math.sin(halfAngle);\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos(halfAngle);\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromRotationMatrix(m) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tconst te = m.elements,\n\t\t\t\t\t\tm11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8],\n\t\t\t\t\t\tm21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9],\n\t\t\t\t\t\tm31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10],\n\t\t\t\t\t\ttrace = m11 + m22 + m33;\n\n\t\t\tif (trace > 0) {\n\t\t\t\tconst s = 0.5 / Math.sqrt(trace + 1.0);\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = (m32 - m23) * s;\n\t\t\t\tthis._y = (m13 - m31) * s;\n\t\t\t\tthis._z = (m21 - m12) * s;\n\t\t\t} else if (m11 > m22 && m11 > m33) {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\t\t\t\tthis._w = (m32 - m23) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = (m12 + m21) / s;\n\t\t\t\tthis._z = (m13 + m31) / s;\n\t\t\t} else if (m22 > m33) {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\t\t\t\tthis._w = (m13 - m31) / s;\n\t\t\t\tthis._x = (m12 + m21) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = (m23 + m32) / s;\n\t\t\t} else {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\t\t\t\tthis._w = (m21 - m12) / s;\n\t\t\t\tthis._x = (m13 + m31) / s;\n\t\t\t\tthis._y = (m23 + m32) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromUnitVectors(vFrom, vTo) {\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\t\t\tlet r = vFrom.dot(vTo) + 1;\n\n\t\t\tif (r < Number.EPSILON) {\n\t\t\t\t// vFrom and vTo point in opposite directions\n\t\t\t\tr = 0;\n\n\t\t\t\tif (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n\t\t\t\t\tthis._x = -vFrom.y;\n\t\t\t\t\tthis._y = vFrom.x;\n\t\t\t\t\tthis._z = 0;\n\t\t\t\t\tthis._w = r;\n\t\t\t\t} else {\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = -vFrom.z;\n\t\t\t\t\tthis._z = vFrom.y;\n\t\t\t\t\tthis._w = r;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\t\tthis._w = r;\n\t\t\t}\n\n\t\t\treturn this.normalize();\n\t\t}\n\n\t\tangleTo(q) {\n\t\t\treturn 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));\n\t\t}\n\n\t\trotateTowards(q, step) {\n\t\t\tconst angle = this.angleTo(q);\n\t\t\tif (angle === 0) return this;\n\t\t\tconst t = Math.min(1, step / angle);\n\t\t\tthis.slerp(q, t);\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\treturn this.set(0, 0, 0, 1);\n\t\t}\n\n\t\tinvert() {\n\t\t\t// quaternion is assumed to have unit length\n\t\t\treturn this.conjugate();\n\t\t}\n\n\t\tconjugate() {\n\t\t\tthis._x *= -1;\n\t\t\tthis._y *= -1;\n\t\t\tthis._z *= -1;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n\t\t}\n\n\t\tnormalize() {\n\t\t\tlet l = this.length();\n\n\t\t\tif (l === 0) {\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\t\t\t} else {\n\t\t\t\tl = 1 / l;\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(q, p) {\n\t\t\tif (p !== undefined) {\n\t\t\t\tconsole.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n\t\t\t\treturn this.multiplyQuaternions(q, p);\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions(this, q);\n\t\t}\n\n\t\tpremultiply(q) {\n\t\t\treturn this.multiplyQuaternions(q, this);\n\t\t}\n\n\t\tmultiplyQuaternions(a, b) {\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\t\t\tconst qax = a._x,\n\t\t\t\t\t\tqay = a._y,\n\t\t\t\t\t\tqaz = a._z,\n\t\t\t\t\t\tqaw = a._w;\n\t\t\tconst qbx = b._x,\n\t\t\t\t\t\tqby = b._y,\n\t\t\t\t\t\tqbz = b._z,\n\t\t\t\t\t\tqbw = b._w;\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tslerp(qb, t) {\n\t\t\tif (t === 0) return this;\n\t\t\tif (t === 1) return this.copy(qb);\n\t\t\tconst x = this._x,\n\t\t\t\t\t\ty = this._y,\n\t\t\t\t\t\tz = this._z,\n\t\t\t\t\t\tw = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif (cosHalfTheta < 0) {\n\t\t\t\tthis._w = -qb._w;\n\t\t\t\tthis._x = -qb._x;\n\t\t\t\tthis._y = -qb._y;\n\t\t\t\tthis._z = -qb._z;\n\t\t\t\tcosHalfTheta = -cosHalfTheta;\n\t\t\t} else {\n\t\t\t\tthis.copy(qb);\n\t\t\t}\n\n\t\t\tif (cosHalfTheta >= 1.0) {\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\t\tif (sqrSinHalfTheta <= Number.EPSILON) {\n\t\t\t\tconst s = 1 - t;\n\t\t\t\tthis._w = s * w + t * this._w;\n\t\t\t\tthis._x = s * x + t * this._x;\n\t\t\t\tthis._y = s * y + t * this._y;\n\t\t\t\tthis._z = s * z + t * this._z;\n\t\t\t\tthis.normalize();\n\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n\t\t\tconst halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n\t\t\tconst ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n\t\t\t\t\t\tratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n\t\t\tthis._w = w * ratioA + this._w * ratioB;\n\t\t\tthis._x = x * ratioA + this._x * ratioB;\n\t\t\tthis._y = y * ratioA + this._y * ratioB;\n\t\t\tthis._z = z * ratioA + this._z * ratioB;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tslerpQuaternions(qa, qb, t) {\n\t\t\tthis.copy(qa).slerp(qb, t);\n\t\t}\n\n\t\trandom() {\n\t\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t\t// Note, this source uses w, x, y, z ordering,\n\t\t\t// so we swap the order below.\n\t\t\tconst u1 = Math.random();\n\t\t\tconst sqrt1u1 = Math.sqrt(1 - u1);\n\t\t\tconst sqrtu1 = Math.sqrt(u1);\n\t\t\tconst u2 = 2 * Math.PI * Math.random();\n\t\t\tconst u3 = 2 * Math.PI * Math.random();\n\t\t\treturn this.set(sqrt1u1 * Math.cos(u2), sqrtu1 * Math.sin(u3), sqrtu1 * Math.cos(u3), sqrt1u1 * Math.sin(u2));\n\t\t}\n\n\t\tequals(quaternion) {\n\t\t\treturn quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis._x = array[offset];\n\t\t\tthis._y = array[offset + 1];\n\t\t\tthis._z = array[offset + 2];\n\t\t\tthis._w = array[offset + 3];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this._x;\n\t\t\tarray[offset + 1] = this._y;\n\t\t\tarray[offset + 2] = this._z;\n\t\t\tarray[offset + 3] = this._w;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index) {\n\t\t\tthis._x = attribute.getX(index);\n\t\t\tthis._y = attribute.getY(index);\n\t\t\tthis._z = attribute.getZ(index);\n\t\t\tthis._w = attribute.getW(index);\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChange(callback) {\n\t\t\tthis._onChangeCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChangeCallback() {}\n\n\t}\n\n\tQuaternion.prototype.isQuaternion = true;\n\n\tclass Vector3 {\n\t\tconstructor(x = 0, y = 0, z = 0) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tset(x, y, z) {\n\t\t\tif (z === undefined) z = this.z; // sprite.scale.set(x,y)\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(z) {\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.z = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tcase 2:\n\t\t\t\t\treturn this.z;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y, this.z);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n\t\t\t\treturn this.multiplyVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyVectors(a, b) {\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyEuler(euler) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tconsole.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion(_quaternion$4.setFromEuler(euler));\n\t\t}\n\n\t\tapplyAxisAngle(axis, angle) {\n\t\t\treturn this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6] * z;\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7] * z;\n\t\t\tthis.z = e[2] * x + e[5] * y + e[8] * z;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\treturn this.applyMatrix3(m).normalize();\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tconst w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n\t\t\tthis.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n\t\t\tthis.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n\t\t\tthis.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst qx = q.x,\n\t\t\t\t\t\tqy = q.y,\n\t\t\t\t\t\tqz = q.z,\n\t\t\t\t\t\tqw = q.w; // calculate quat * vector\n\n\t\t\tconst ix = qw * x + qy * z - qz * y;\n\t\t\tconst iy = qw * y + qz * x - qx * z;\n\t\t\tconst iz = qw * z + qx * y - qy * x;\n\t\t\tconst iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t\t\tthis.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t\t\tthis.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t\t\treturn this;\n\t\t}\n\n\t\tproject(camera) {\n\t\t\treturn this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n\t\t}\n\n\t\tunproject(camera) {\n\t\t\treturn this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z;\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z;\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z;\n\t\t\treturn this.normalize();\n\t\t}\n\n\t\tdivide(v) {\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\tthis.z = Math.min(this.z, v.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\tthis.z = Math.max(this.z, v.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\tthis.z = Math.floor(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\tthis.z = Math.ceil(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\tthis.z = Math.round(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\tthis.z = -this.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\t\t} // TODO lengthSquared?\n\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\tthis.z += (v.z - this.z) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tcross(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n\t\t\t\treturn this.crossVectors(v, w);\n\t\t\t}\n\n\t\t\treturn this.crossVectors(this, v);\n\t\t}\n\n\t\tcrossVectors(a, b) {\n\t\t\tconst ax = a.x,\n\t\t\t\t\t\tay = a.y,\n\t\t\t\t\t\taz = a.z;\n\t\t\tconst bx = b.x,\n\t\t\t\t\t\tby = b.y,\n\t\t\t\t\t\tbz = b.z;\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\t\t\treturn this;\n\t\t}\n\n\t\tprojectOnVector(v) {\n\t\t\tconst denominator = v.lengthSq();\n\t\t\tif (denominator === 0) return this.set(0, 0, 0);\n\t\t\tconst scalar = v.dot(this) / denominator;\n\t\t\treturn this.copy(v).multiplyScalar(scalar);\n\t\t}\n\n\t\tprojectOnPlane(planeNormal) {\n\t\t\t_vector$c.copy(this).projectOnVector(planeNormal);\n\n\t\t\treturn this.sub(_vector$c);\n\t\t}\n\n\t\treflect(normal) {\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\t\t\treturn this.sub(_vector$c.copy(normal).multiplyScalar(2 * this.dot(normal)));\n\t\t}\n\n\t\tangleTo(v) {\n\t\t\tconst denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n\t\t\tif (denominator === 0) return Math.PI / 2;\n\t\t\tconst theta = this.dot(v) / denominator; // clamp, to handle numerical problems\n\n\t\t\treturn Math.acos(clamp(theta, -1, 1));\n\t\t}\n\n\t\tdistanceTo(v) {\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t\t}\n\n\t\tdistanceToSquared(v) {\n\t\t\tconst dx = this.x - v.x,\n\t\t\t\t\t\tdy = this.y - v.y,\n\t\t\t\t\t\tdz = this.z - v.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t}\n\n\t\tmanhattanDistanceTo(v) {\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n\t\t}\n\n\t\tsetFromSpherical(s) {\n\t\t\treturn this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n\t\t}\n\n\t\tsetFromSphericalCoords(radius, phi, theta) {\n\t\t\tconst sinPhiRadius = Math.sin(phi) * radius;\n\t\t\tthis.x = sinPhiRadius * Math.sin(theta);\n\t\t\tthis.y = Math.cos(phi) * radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos(theta);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCylindrical(c) {\n\t\t\treturn this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n\t\t}\n\n\t\tsetFromCylindricalCoords(radius, theta, y) {\n\t\t\tthis.x = radius * Math.sin(theta);\n\t\t\tthis.y = y;\n\t\t\tthis.z = radius * Math.cos(theta);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixPosition(m) {\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[12];\n\t\t\tthis.y = e[13];\n\t\t\tthis.z = e[14];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixScale(m) {\n\t\t\tconst sx = this.setFromMatrixColumn(m, 0).length();\n\t\t\tconst sy = this.setFromMatrixColumn(m, 1).length();\n\t\t\tconst sz = this.setFromMatrixColumn(m, 2).length();\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixColumn(m, index) {\n\t\t\treturn this.fromArray(m.elements, index * 4);\n\t\t}\n\n\t\tsetFromMatrix3Column(m, index) {\n\t\t\treturn this.fromArray(m.elements, index * 3);\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\tthis.z = array[offset + 2];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\tarray[offset + 2] = this.z;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\tthis.z = attribute.getZ(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t\trandomDirection() {\n\t\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\t\t\tconst u = (Math.random() - 0.5) * 2;\n\t\t\tconst t = Math.random() * Math.PI * 2;\n\t\t\tconst f = Math.sqrt(1 - u ** 2);\n\t\t\tthis.x = f * Math.cos(t);\n\t\t\tthis.y = f * Math.sin(t);\n\t\t\tthis.z = u;\n\t\t\treturn this;\n\t\t}\n\n\t\t*[Symbol.iterator]() {\n\t\t\tyield this.x;\n\t\t\tyield this.y;\n\t\t\tyield this.z;\n\t\t}\n\n\t}\n\n\tVector3.prototype.isVector3 = true;\n\n\tconst _vector$c = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$4 = /*@__PURE__*/new Quaternion();\n\n\tclass Box3 {\n\t\tconstructor(min = new Vector3(+Infinity, +Infinity, +Infinity), max = new Vector3(-Infinity, -Infinity, -Infinity)) {\n\t\t\tthis.min = min;\n\t\t\tthis.max = max;\n\t\t}\n\n\t\tset(min, max) {\n\t\t\tthis.min.copy(min);\n\t\t\tthis.max.copy(max);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromArray(array) {\n\t\t\tlet minX = +Infinity;\n\t\t\tlet minY = +Infinity;\n\t\t\tlet minZ = +Infinity;\n\t\t\tlet maxX = -Infinity;\n\t\t\tlet maxY = -Infinity;\n\t\t\tlet maxZ = -Infinity;\n\n\t\t\tfor (let i = 0, l = array.length; i < l; i += 3) {\n\t\t\t\tconst x = array[i];\n\t\t\t\tconst y = array[i + 1];\n\t\t\t\tconst z = array[i + 2];\n\t\t\t\tif (x < minX) minX = x;\n\t\t\t\tif (y < minY) minY = y;\n\t\t\t\tif (z < minZ) minZ = z;\n\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\tif (z > maxZ) maxZ = z;\n\t\t\t}\n\n\t\t\tthis.min.set(minX, minY, minZ);\n\t\t\tthis.max.set(maxX, maxY, maxZ);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromBufferAttribute(attribute) {\n\t\t\tlet minX = +Infinity;\n\t\t\tlet minY = +Infinity;\n\t\t\tlet minZ = +Infinity;\n\t\t\tlet maxX = -Infinity;\n\t\t\tlet maxY = -Infinity;\n\t\t\tlet maxZ = -Infinity;\n\n\t\t\tfor (let i = 0, l = attribute.count; i < l; i++) {\n\t\t\t\tconst x = attribute.getX(i);\n\t\t\t\tconst y = attribute.getY(i);\n\t\t\t\tconst z = attribute.getZ(i);\n\t\t\t\tif (x < minX) minX = x;\n\t\t\t\tif (y < minY) minY = y;\n\t\t\t\tif (z < minZ) minZ = z;\n\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\tif (z > maxZ) maxZ = z;\n\t\t\t}\n\n\t\t\tthis.min.set(minX, minY, minZ);\n\t\t\tthis.max.set(maxX, maxY, maxZ);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tthis.expandByPoint(points[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCenterAndSize(center, size) {\n\t\t\tconst halfSize = _vector$b.copy(size).multiplyScalar(0.5);\n\n\t\t\tthis.min.copy(center).sub(halfSize);\n\t\t\tthis.max.copy(center).add(halfSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromObject(object) {\n\t\t\tthis.makeEmpty();\n\t\t\treturn this.expandByObject(object);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(box) {\n\t\t\tthis.min.copy(box.min);\n\t\t\tthis.max.copy(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.min.x = this.min.y = this.min.z = +Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = -Infinity;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n\t\t}\n\n\t\tgetSize(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\tthis.min.min(point);\n\t\t\tthis.max.max(point);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByVector(vector) {\n\t\t\tthis.min.sub(vector);\n\t\t\tthis.max.add(vector);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByScalar(scalar) {\n\t\t\tthis.min.addScalar(-scalar);\n\t\t\tthis.max.addScalar(scalar);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByObject(object) {\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\t\t\tobject.updateWorldMatrix(false, false);\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif (geometry !== undefined) {\n\t\t\t\tif (geometry.boundingBox === null) {\n\t\t\t\t\tgeometry.computeBoundingBox();\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy(geometry.boundingBox);\n\n\t\t\t\t_box$3.applyMatrix4(object.matrixWorld);\n\n\t\t\t\tthis.union(_box$3);\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tthis.expandByObject(children[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n\t\t}\n\n\t\tcontainsBox(box) {\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n\t\t}\n\n\t\tgetParameter(point, target) {\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint(sphere.center, _vector$b); // If that point is inside the sphere, the AABB and sphere intersect.\n\n\t\t\treturn _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\t\t\tlet min, max;\n\n\t\t\tif (plane.normal.x > 0) {\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\t\t\t} else {\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\t\t\t}\n\n\t\t\tif (plane.normal.y > 0) {\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\t\t\t} else {\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\t\t\t}\n\n\t\t\tif (plane.normal.z > 0) {\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\t\t\t} else {\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\t\t\t}\n\n\t\t\treturn min <= -plane.constant && max >= -plane.constant;\n\t\t}\n\n\t\tintersectsTriangle(triangle) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t} // compute box center and extents\n\n\n\t\t\tthis.getCenter(_center);\n\n\t\t\t_extents.subVectors(this.max, _center); // translate triangle to aabb origin\n\n\n\t\t\t_v0$2.subVectors(triangle.a, _center);\n\n\t\t\t_v1$7.subVectors(triangle.b, _center);\n\n\t\t\t_v2$3.subVectors(triangle.c, _center); // compute edge vectors for triangle\n\n\n\t\t\t_f0.subVectors(_v1$7, _v0$2);\n\n\t\t\t_f1.subVectors(_v2$3, _v1$7);\n\n\t\t\t_f2.subVectors(_v0$2, _v2$3); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\n\n\t\t\tlet axes = [0, -_f0.z, _f0.y, 0, -_f1.z, _f1.y, 0, -_f2.z, _f2.y, _f0.z, 0, -_f0.x, _f1.z, 0, -_f1.x, _f2.z, 0, -_f2.x, -_f0.y, _f0.x, 0, -_f1.y, _f1.x, 0, -_f2.y, _f2.x, 0];\n\n\t\t\tif (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n\t\t\t\treturn false;\n\t\t\t} // test 3 face normals from the aabb\n\n\n\t\t\taxes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n\t\t\tif (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n\t\t\t\treturn false;\n\t\t\t} // finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\n\n\t\t\t_triangleNormal.crossVectors(_f0, _f1);\n\n\t\t\taxes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\n\t\t\treturn satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents);\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\tconst clampedPoint = _vector$b.copy(point).clamp(this.min, this.max);\n\n\t\t\treturn clampedPoint.sub(point).length();\n\t\t}\n\n\t\tgetBoundingSphere(target) {\n\t\t\tthis.getCenter(target.center);\n\t\t\ttarget.radius = this.getSize(_vector$b).length() * 0.5;\n\t\t\treturn target;\n\t\t}\n\n\t\tintersect(box) {\n\t\t\tthis.min.max(box.min);\n\t\t\tthis.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n\t\t\tif (this.isEmpty()) this.makeEmpty();\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(box) {\n\t\t\tthis.min.min(box.min);\n\t\t\tthis.max.max(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n\t\t\t_points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n\n\t\t\t_points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n\n\t\t\t_points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n\n\t\t\t_points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n\n\t\t\t_points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n\n\t\t\t_points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n\n\t\t\t_points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n\n\t\t\t_points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n\n\t\t\tthis.setFromPoints(_points);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.min.add(offset);\n\t\t\tthis.max.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(box) {\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\n\t\t}\n\n\t}\n\n\tBox3.prototype.isBox3 = true;\n\tconst _points = [/*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3()];\n\n\tconst _vector$b = /*@__PURE__*/new Vector3();\n\n\tconst _box$3 = /*@__PURE__*/new Box3(); // triangle centered vertices\n\n\n\tconst _v0$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v1$7 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$3 = /*@__PURE__*/new Vector3(); // triangle edge vectors\n\n\n\tconst _f0 = /*@__PURE__*/new Vector3();\n\n\tconst _f1 = /*@__PURE__*/new Vector3();\n\n\tconst _f2 = /*@__PURE__*/new Vector3();\n\n\tconst _center = /*@__PURE__*/new Vector3();\n\n\tconst _extents = /*@__PURE__*/new Vector3();\n\n\tconst _triangleNormal = /*@__PURE__*/new Vector3();\n\n\tconst _testAxis = /*@__PURE__*/new Vector3();\n\n\tfunction satForAxes(axes, v0, v1, v2, extents) {\n\t\tfor (let i = 0, j = axes.length - 3; i <= j; i += 3) {\n\t\t\t_testAxis.fromArray(axes, i); // project the aabb onto the seperating axis\n\n\n\t\t\tconst r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z); // project all 3 vertices of the triangle onto the seperating axis\n\n\t\t\tconst p0 = v0.dot(_testAxis);\n\t\t\tconst p1 = v1.dot(_testAxis);\n\t\t\tconst p2 = v2.dot(_testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\n\n\t\t\tif (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tconst _box$2 = /*@__PURE__*/new Box3();\n\n\tconst _v1$6 = /*@__PURE__*/new Vector3();\n\n\tconst _toFarthestPoint = /*@__PURE__*/new Vector3();\n\n\tconst _toPoint = /*@__PURE__*/new Vector3();\n\n\tclass Sphere {\n\t\tconstructor(center = new Vector3(), radius = -1) {\n\t\t\tthis.center = center;\n\t\t\tthis.radius = radius;\n\t\t}\n\n\t\tset(center, radius) {\n\t\t\tthis.center.copy(center);\n\t\t\tthis.radius = radius;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points, optionalCenter) {\n\t\t\tconst center = this.center;\n\n\t\t\tif (optionalCenter !== undefined) {\n\t\t\t\tcenter.copy(optionalCenter);\n\t\t\t} else {\n\t\t\t\t_box$2.setFromPoints(points).getCenter(center);\n\t\t\t}\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt(maxRadiusSq);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(sphere) {\n\t\t\tthis.center.copy(sphere.center);\n\t\t\tthis.radius = sphere.radius;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\treturn this.radius < 0;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.center.set(0, 0, 0);\n\t\t\tthis.radius = -1;\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.distanceToSquared(this.center) <= this.radius * this.radius;\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn point.distanceTo(this.center) - this.radius;\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\tconst radiusSum = this.radius + sphere.radius;\n\t\t\treturn sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsSphere(this);\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\treturn Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\tconst deltaLengthSq = this.center.distanceToSquared(point);\n\t\t\ttarget.copy(point);\n\n\t\t\tif (deltaLengthSq > this.radius * this.radius) {\n\t\t\t\ttarget.sub(this.center).normalize();\n\t\t\t\ttarget.multiplyScalar(this.radius).add(this.center);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\tgetBoundingBox(target) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\t// Empty sphere produces empty bounding box\n\t\t\t\ttarget.makeEmpty();\n\t\t\t\treturn target;\n\t\t\t}\n\n\t\t\ttarget.set(this.center, this.center);\n\t\t\ttarget.expandByScalar(this.radius);\n\t\t\treturn target;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tthis.center.applyMatrix4(matrix);\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.center.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\t\t\t_toPoint.subVectors(point, this.center);\n\n\t\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\t\tif (lengthSq > this.radius * this.radius) {\n\t\t\t\tconst length = Math.sqrt(lengthSq);\n\t\t\t\tconst missingRadiusHalf = (length - this.radius) * 0.5; // Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\t\tthis.center.add(_toPoint.multiplyScalar(missingRadiusHalf / length));\n\t\t\t\tthis.radius += missingRadiusHalf;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(sphere) {\n\t\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\t\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\t\t\t_toFarthestPoint.subVectors(sphere.center, this.center).normalize().multiplyScalar(sphere.radius);\n\n\t\t\tthis.expandByPoint(_v1$6.copy(sphere.center).add(_toFarthestPoint));\n\t\t\tthis.expandByPoint(_v1$6.copy(sphere.center).sub(_toFarthestPoint));\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(sphere) {\n\t\t\treturn sphere.center.equals(this.center) && sphere.radius === this.radius;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tconst _vector$a = /*@__PURE__*/new Vector3();\n\n\tconst _segCenter = /*@__PURE__*/new Vector3();\n\n\tconst _segDir = /*@__PURE__*/new Vector3();\n\n\tconst _diff = /*@__PURE__*/new Vector3();\n\n\tconst _edge1 = /*@__PURE__*/new Vector3();\n\n\tconst _edge2 = /*@__PURE__*/new Vector3();\n\n\tconst _normal$1 = /*@__PURE__*/new Vector3();\n\n\tclass Ray {\n\t\tconstructor(origin = new Vector3(), direction = new Vector3(0, 0, -1)) {\n\t\t\tthis.origin = origin;\n\t\t\tthis.direction = direction;\n\t\t}\n\n\t\tset(origin, direction) {\n\t\t\tthis.origin.copy(origin);\n\t\t\tthis.direction.copy(direction);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(ray) {\n\t\t\tthis.origin.copy(ray.origin);\n\t\t\tthis.direction.copy(ray.direction);\n\t\t\treturn this;\n\t\t}\n\n\t\tat(t, target) {\n\t\t\treturn target.copy(this.direction).multiplyScalar(t).add(this.origin);\n\t\t}\n\n\t\tlookAt(v) {\n\t\t\tthis.direction.copy(v).sub(this.origin).normalize();\n\t\t\treturn this;\n\t\t}\n\n\t\trecast(t) {\n\t\t\tthis.origin.copy(this.at(t, _vector$a));\n\t\t\treturn this;\n\t\t}\n\n\t\tclosestPointToPoint(point, target) {\n\t\t\ttarget.subVectors(point, this.origin);\n\t\t\tconst directionDistance = target.dot(this.direction);\n\n\t\t\tif (directionDistance < 0) {\n\t\t\t\treturn target.copy(this.origin);\n\t\t\t}\n\n\t\t\treturn target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn Math.sqrt(this.distanceSqToPoint(point));\n\t\t}\n\n\t\tdistanceSqToPoint(point) {\n\t\t\tconst directionDistance = _vector$a.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n\n\t\t\tif (directionDistance < 0) {\n\t\t\t\treturn this.origin.distanceToSquared(point);\n\t\t\t}\n\n\t\t\t_vector$a.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\n\t\t\treturn _vector$a.distanceToSquared(point);\n\t\t}\n\n\t\tdistanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\t\t\t_segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n\n\t\t\t_segDir.copy(v1).sub(v0).normalize();\n\n\t\t\t_diff.copy(this.origin).sub(_segCenter);\n\n\t\t\tconst segExtent = v0.distanceTo(v1) * 0.5;\n\t\t\tconst a01 = -this.direction.dot(_segDir);\n\n\t\t\tconst b0 = _diff.dot(this.direction);\n\n\t\t\tconst b1 = -_diff.dot(_segDir);\n\n\t\t\tconst c = _diff.lengthSq();\n\n\t\t\tconst det = Math.abs(1 - a01 * a01);\n\t\t\tlet s0, s1, sqrDist, extDet;\n\n\t\t\tif (det > 0) {\n\t\t\t\t// The ray and segment are not parallel.\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif (s0 >= 0) {\n\t\t\t\t\tif (s1 >= -extDet) {\n\t\t\t\t\t\tif (s1 <= extDet) {\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\t\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// region 1\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// region 5\n\t\t\t\t\t\ts1 = -segExtent;\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (s1 <= -extDet) {\n\t\t\t\t\t\t// region 4\n\t\t\t\t\t\ts0 = Math.max(0, -(-a01 * segExtent + b0));\n\t\t\t\t\t\ts1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t} else if (s1 <= extDet) {\n\t\t\t\t\t\t// region 3\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// region 2\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * segExtent + b0));\n\t\t\t\t\t\ts1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Ray and segment are parallel.\n\t\t\t\ts1 = a01 > 0 ? -segExtent : segExtent;\n\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t}\n\n\t\t\tif (optionalPointOnRay) {\n\t\t\t\toptionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n\t\t\t}\n\n\t\t\tif (optionalPointOnSegment) {\n\t\t\t\toptionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\t\t}\n\n\t\tintersectSphere(sphere, target) {\n\t\t\t_vector$a.subVectors(sphere.center, this.origin);\n\n\t\t\tconst tca = _vector$a.dot(this.direction);\n\n\t\t\tconst d2 = _vector$a.dot(_vector$a) - tca * tca;\n\t\t\tconst radius2 = sphere.radius * sphere.radius;\n\t\t\tif (d2 > radius2) return null;\n\t\t\tconst thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n\t\t\tconst t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n\t\t\tconst t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n\t\t\tif (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\n\t\t\tif (t0 < 0) return this.at(t1, target); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n\t\t\treturn this.at(t0, target);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\treturn this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\n\t\t}\n\n\t\tdistanceToPlane(plane) {\n\t\t\tconst denominator = plane.normal.dot(this.direction);\n\n\t\t\tif (denominator === 0) {\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif (plane.distanceToPoint(this.origin) === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t} // Null is preferable to undefined since undefined means.... it is undefined\n\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t : null;\n\t\t}\n\n\t\tintersectPlane(plane, target) {\n\t\t\tconst t = this.distanceToPlane(plane);\n\n\t\t\tif (t === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.at(t, target);\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\t// check if the ray lies on the plane first\n\t\t\tconst distToPoint = plane.distanceToPoint(this.origin);\n\n\t\t\tif (distToPoint === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst denominator = plane.normal.dot(this.direction);\n\n\t\t\tif (denominator * distToPoint < 0) {\n\t\t\t\treturn true;\n\t\t\t} // ray origin is behind the plane (and is pointing behind it)\n\n\n\t\t\treturn false;\n\t\t}\n\n\t\tintersectBox(box, target) {\n\t\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\t\t\tconst invdirx = 1 / this.direction.x,\n\t\t\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\t\t\tinvdirz = 1 / this.direction.z;\n\t\t\tconst origin = this.origin;\n\n\t\t\tif (invdirx >= 0) {\n\t\t\t\ttmin = (box.min.x - origin.x) * invdirx;\n\t\t\t\ttmax = (box.max.x - origin.x) * invdirx;\n\t\t\t} else {\n\t\t\t\ttmin = (box.max.x - origin.x) * invdirx;\n\t\t\t\ttmax = (box.min.x - origin.x) * invdirx;\n\t\t\t}\n\n\t\t\tif (invdiry >= 0) {\n\t\t\t\ttymin = (box.min.y - origin.y) * invdiry;\n\t\t\t\ttymax = (box.max.y - origin.y) * invdiry;\n\t\t\t} else {\n\t\t\t\ttymin = (box.max.y - origin.y) * invdiry;\n\t\t\t\ttymax = (box.min.y - origin.y) * invdiry;\n\t\t\t}\n\n\t\t\tif (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif (tymin > tmin || tmin !== tmin) tmin = tymin;\n\t\t\tif (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n\t\t\tif (invdirz >= 0) {\n\t\t\t\ttzmin = (box.min.z - origin.z) * invdirz;\n\t\t\t\ttzmax = (box.max.z - origin.z) * invdirz;\n\t\t\t} else {\n\t\t\t\ttzmin = (box.max.z - origin.z) * invdirz;\n\t\t\t\ttzmax = (box.min.z - origin.z) * invdirz;\n\t\t\t}\n\n\t\t\tif (tmin > tzmax || tzmin > tmax) return null;\n\t\t\tif (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n\t\t\tif (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n\t\t\tif (tmax < 0) return null;\n\t\t\treturn this.at(tmin >= 0 ? tmin : tmax, target);\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn this.intersectBox(box, _vector$a) !== null;\n\t\t}\n\n\t\tintersectTriangle(a, b, c, backfaceCulling, target) {\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\t\t\t_edge1.subVectors(b, a);\n\n\t\t\t_edge2.subVectors(c, a);\n\n\t\t\t_normal$1.crossVectors(_edge1, _edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//\t |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//\t |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//\t |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n\n\t\t\tlet DdN = this.direction.dot(_normal$1);\n\t\t\tlet sign;\n\n\t\t\tif (DdN > 0) {\n\t\t\t\tif (backfaceCulling) return null;\n\t\t\t\tsign = 1;\n\t\t\t} else if (DdN < 0) {\n\t\t\t\tsign = -1;\n\t\t\t\tDdN = -DdN;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t_diff.subVectors(this.origin, a);\n\n\t\t\tconst DdQxE2 = sign * this.direction.dot(_edge2.crossVectors(_diff, _edge2)); // b1 < 0, no intersection\n\n\t\t\tif (DdQxE2 < 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst DdE1xQ = sign * this.direction.dot(_edge1.cross(_diff)); // b2 < 0, no intersection\n\n\t\t\tif (DdE1xQ < 0) {\n\t\t\t\treturn null;\n\t\t\t} // b1+b2 > 1, no intersection\n\n\n\t\t\tif (DdQxE2 + DdE1xQ > DdN) {\n\t\t\t\treturn null;\n\t\t\t} // Line intersects triangle, check if ray does.\n\n\n\t\t\tconst QdN = -sign * _diff.dot(_normal$1); // t < 0, no intersection\n\n\n\t\t\tif (QdN < 0) {\n\t\t\t\treturn null;\n\t\t\t} // Ray intersects triangle.\n\n\n\t\t\treturn this.at(QdN / DdN, target);\n\t\t}\n\n\t\tapplyMatrix4(matrix4) {\n\t\t\tthis.origin.applyMatrix4(matrix4);\n\t\t\tthis.direction.transformDirection(matrix4);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(ray) {\n\t\t\treturn ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tclass Matrix4 {\n\t\tconstructor() {\n\t\t\tthis.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tconsole.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n\t\t\t}\n\t\t}\n\n\t\tset(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] = n11;\n\t\t\tte[4] = n12;\n\t\t\tte[8] = n13;\n\t\t\tte[12] = n14;\n\t\t\tte[1] = n21;\n\t\t\tte[5] = n22;\n\t\t\tte[9] = n23;\n\t\t\tte[13] = n24;\n\t\t\tte[2] = n31;\n\t\t\tte[6] = n32;\n\t\t\tte[10] = n33;\n\t\t\tte[14] = n34;\n\t\t\tte[3] = n41;\n\t\t\tte[7] = n42;\n\t\t\tte[11] = n43;\n\t\t\tte[15] = n44;\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\tthis.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Matrix4().fromArray(this.elements);\n\t\t}\n\n\t\tcopy(m) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\t\t\tte[0] = me[0];\n\t\t\tte[1] = me[1];\n\t\t\tte[2] = me[2];\n\t\t\tte[3] = me[3];\n\t\t\tte[4] = me[4];\n\t\t\tte[5] = me[5];\n\t\t\tte[6] = me[6];\n\t\t\tte[7] = me[7];\n\t\t\tte[8] = me[8];\n\t\t\tte[9] = me[9];\n\t\t\tte[10] = me[10];\n\t\t\tte[11] = me[11];\n\t\t\tte[12] = me[12];\n\t\t\tte[13] = me[13];\n\t\t\tte[14] = me[14];\n\t\t\tte[15] = me[15];\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyPosition(m) {\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tme = m.elements;\n\t\t\tte[12] = me[12];\n\t\t\tte[13] = me[13];\n\t\t\tte[14] = me[14];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrix3(m) {\n\t\t\tconst me = m.elements;\n\t\t\tthis.set(me[0], me[3], me[6], 0, me[1], me[4], me[7], 0, me[2], me[5], me[8], 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\textractBasis(xAxis, yAxis, zAxis) {\n\t\t\txAxis.setFromMatrixColumn(this, 0);\n\t\t\tyAxis.setFromMatrixColumn(this, 1);\n\t\t\tzAxis.setFromMatrixColumn(this, 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeBasis(xAxis, yAxis, zAxis) {\n\t\t\tthis.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\textractRotation(m) {\n\t\t\t// this method does not support reflection matrices\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\n\t\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn(m, 0).length();\n\n\t\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn(m, 1).length();\n\n\t\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn(m, 2).length();\n\n\t\t\tte[0] = me[0] * scaleX;\n\t\t\tte[1] = me[1] * scaleX;\n\t\t\tte[2] = me[2] * scaleX;\n\t\t\tte[3] = 0;\n\t\t\tte[4] = me[4] * scaleY;\n\t\t\tte[5] = me[5] * scaleY;\n\t\t\tte[6] = me[6] * scaleY;\n\t\t\tte[7] = 0;\n\t\t\tte[8] = me[8] * scaleZ;\n\t\t\tte[9] = me[9] * scaleZ;\n\t\t\tte[10] = me[10] * scaleZ;\n\t\t\tte[11] = 0;\n\t\t\tte[12] = 0;\n\t\t\tte[13] = 0;\n\t\t\tte[14] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationFromEuler(euler) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tconsole.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\tconst te = this.elements;\n\t\t\tconst x = euler.x,\n\t\t\t\t\t\ty = euler.y,\n\t\t\t\t\t\tz = euler.z;\n\t\t\tconst a = Math.cos(x),\n\t\t\t\t\t\tb = Math.sin(x);\n\t\t\tconst c = Math.cos(y),\n\t\t\t\t\t\td = Math.sin(y);\n\t\t\tconst e = Math.cos(z),\n\t\t\t\t\t\tf = Math.sin(z);\n\n\t\t\tif (euler.order === 'XYZ') {\n\t\t\t\tconst ae = a * e,\n\t\t\t\t\t\t\taf = a * f,\n\t\t\t\t\t\t\tbe = b * e,\n\t\t\t\t\t\t\tbf = b * f;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = -c * f;\n\t\t\t\tte[8] = d;\n\t\t\t\tte[1] = af + be * d;\n\t\t\t\tte[5] = ae - bf * d;\n\t\t\t\tte[9] = -b * c;\n\t\t\t\tte[2] = bf - ae * d;\n\t\t\t\tte[6] = be + af * d;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'YXZ') {\n\t\t\t\tconst ce = c * e,\n\t\t\t\t\t\t\tcf = c * f,\n\t\t\t\t\t\t\tde = d * e,\n\t\t\t\t\t\t\tdf = d * f;\n\t\t\t\tte[0] = ce + df * b;\n\t\t\t\tte[4] = de * b - cf;\n\t\t\t\tte[8] = a * d;\n\t\t\t\tte[1] = a * f;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = -b;\n\t\t\t\tte[2] = cf * b - de;\n\t\t\t\tte[6] = df + ce * b;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'ZXY') {\n\t\t\t\tconst ce = c * e,\n\t\t\t\t\t\t\tcf = c * f,\n\t\t\t\t\t\t\tde = d * e,\n\t\t\t\t\t\t\tdf = d * f;\n\t\t\t\tte[0] = ce - df * b;\n\t\t\t\tte[4] = -a * f;\n\t\t\t\tte[8] = de + cf * b;\n\t\t\t\tte[1] = cf + de * b;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = df - ce * b;\n\t\t\t\tte[2] = -a * d;\n\t\t\t\tte[6] = b;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'ZYX') {\n\t\t\t\tconst ae = a * e,\n\t\t\t\t\t\t\taf = a * f,\n\t\t\t\t\t\t\tbe = b * e,\n\t\t\t\t\t\t\tbf = b * f;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = be * d - af;\n\t\t\t\tte[8] = ae * d + bf;\n\t\t\t\tte[1] = c * f;\n\t\t\t\tte[5] = bf * d + ae;\n\t\t\t\tte[9] = af * d - be;\n\t\t\t\tte[2] = -d;\n\t\t\t\tte[6] = b * c;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'YZX') {\n\t\t\t\tconst ac = a * c,\n\t\t\t\t\t\t\tad = a * d,\n\t\t\t\t\t\t\tbc = b * c,\n\t\t\t\t\t\t\tbd = b * d;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = bd - ac * f;\n\t\t\t\tte[8] = bc * f + ad;\n\t\t\t\tte[1] = f;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = -b * e;\n\t\t\t\tte[2] = -d * e;\n\t\t\t\tte[6] = ad * f + bc;\n\t\t\t\tte[10] = ac - bd * f;\n\t\t\t} else if (euler.order === 'XZY') {\n\t\t\t\tconst ac = a * c,\n\t\t\t\t\t\t\tad = a * d,\n\t\t\t\t\t\t\tbc = b * c,\n\t\t\t\t\t\t\tbd = b * d;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = -f;\n\t\t\t\tte[8] = d * e;\n\t\t\t\tte[1] = ac * f + bd;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = ad * f - bc;\n\t\t\t\tte[2] = bc * f - ad;\n\t\t\t\tte[6] = b * e;\n\t\t\t\tte[10] = bd * f + ac;\n\t\t\t} // bottom row\n\n\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = 0; // last column\n\n\t\t\tte[12] = 0;\n\t\t\tte[13] = 0;\n\t\t\tte[14] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationFromQuaternion(q) {\n\t\t\treturn this.compose(_zero, q, _one);\n\t\t}\n\n\t\tlookAt(eye, target, up) {\n\t\t\tconst te = this.elements;\n\n\t\t\t_z.subVectors(eye, target);\n\n\t\t\tif (_z.lengthSq() === 0) {\n\t\t\t\t// eye and target are in the same position\n\t\t\t\t_z.z = 1;\n\t\t\t}\n\n\t\t\t_z.normalize();\n\n\t\t\t_x.crossVectors(up, _z);\n\n\t\t\tif (_x.lengthSq() === 0) {\n\t\t\t\t// up and z are parallel\n\t\t\t\tif (Math.abs(up.z) === 1) {\n\t\t\t\t\t_z.x += 0.0001;\n\t\t\t\t} else {\n\t\t\t\t\t_z.z += 0.0001;\n\t\t\t\t}\n\n\t\t\t\t_z.normalize();\n\n\t\t\t\t_x.crossVectors(up, _z);\n\t\t\t}\n\n\t\t\t_x.normalize();\n\n\t\t\t_y.crossVectors(_z, _x);\n\n\t\t\tte[0] = _x.x;\n\t\t\tte[4] = _y.x;\n\t\t\tte[8] = _z.x;\n\t\t\tte[1] = _x.y;\n\t\t\tte[5] = _y.y;\n\t\t\tte[9] = _z.y;\n\t\t\tte[2] = _x.z;\n\t\t\tte[6] = _y.z;\n\t\t\tte[10] = _z.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(m, n) {\n\t\t\tif (n !== undefined) {\n\t\t\t\tconsole.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n\t\t\t\treturn this.multiplyMatrices(m, n);\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices(this, m);\n\t\t}\n\n\t\tpremultiply(m) {\n\t\t\treturn this.multiplyMatrices(m, this);\n\t\t}\n\n\t\tmultiplyMatrices(a, b) {\n\t\t\tconst ae = a.elements;\n\t\t\tconst be = b.elements;\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = ae[0],\n\t\t\t\t\t\ta12 = ae[4],\n\t\t\t\t\t\ta13 = ae[8],\n\t\t\t\t\t\ta14 = ae[12];\n\t\t\tconst a21 = ae[1],\n\t\t\t\t\t\ta22 = ae[5],\n\t\t\t\t\t\ta23 = ae[9],\n\t\t\t\t\t\ta24 = ae[13];\n\t\t\tconst a31 = ae[2],\n\t\t\t\t\t\ta32 = ae[6],\n\t\t\t\t\t\ta33 = ae[10],\n\t\t\t\t\t\ta34 = ae[14];\n\t\t\tconst a41 = ae[3],\n\t\t\t\t\t\ta42 = ae[7],\n\t\t\t\t\t\ta43 = ae[11],\n\t\t\t\t\t\ta44 = ae[15];\n\t\t\tconst b11 = be[0],\n\t\t\t\t\t\tb12 = be[4],\n\t\t\t\t\t\tb13 = be[8],\n\t\t\t\t\t\tb14 = be[12];\n\t\t\tconst b21 = be[1],\n\t\t\t\t\t\tb22 = be[5],\n\t\t\t\t\t\tb23 = be[9],\n\t\t\t\t\t\tb24 = be[13];\n\t\t\tconst b31 = be[2],\n\t\t\t\t\t\tb32 = be[6],\n\t\t\t\t\t\tb33 = be[10],\n\t\t\t\t\t\tb34 = be[14];\n\t\t\tconst b41 = be[3],\n\t\t\t\t\t\tb42 = be[7],\n\t\t\t\t\t\tb43 = be[11],\n\t\t\t\t\t\tb44 = be[15];\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\t\t\tte[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= s;\n\t\t\tte[4] *= s;\n\t\t\tte[8] *= s;\n\t\t\tte[12] *= s;\n\t\t\tte[1] *= s;\n\t\t\tte[5] *= s;\n\t\t\tte[9] *= s;\n\t\t\tte[13] *= s;\n\t\t\tte[2] *= s;\n\t\t\tte[6] *= s;\n\t\t\tte[10] *= s;\n\t\t\tte[14] *= s;\n\t\t\tte[3] *= s;\n\t\t\tte[7] *= s;\n\t\t\tte[11] *= s;\n\t\t\tte[15] *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeterminant() {\n\t\t\tconst te = this.elements;\n\t\t\tconst n11 = te[0],\n\t\t\t\t\t\tn12 = te[4],\n\t\t\t\t\t\tn13 = te[8],\n\t\t\t\t\t\tn14 = te[12];\n\t\t\tconst n21 = te[1],\n\t\t\t\t\t\tn22 = te[5],\n\t\t\t\t\t\tn23 = te[9],\n\t\t\t\t\t\tn24 = te[13];\n\t\t\tconst n31 = te[2],\n\t\t\t\t\t\tn32 = te[6],\n\t\t\t\t\t\tn33 = te[10],\n\t\t\t\t\t\tn34 = te[14];\n\t\t\tconst n41 = te[3],\n\t\t\t\t\t\tn42 = te[7],\n\t\t\t\t\t\tn43 = te[11],\n\t\t\t\t\t\tn44 = te[15]; //TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n\t\t}\n\n\t\ttranspose() {\n\t\t\tconst te = this.elements;\n\t\t\tlet tmp;\n\t\t\ttmp = te[1];\n\t\t\tte[1] = te[4];\n\t\t\tte[4] = tmp;\n\t\t\ttmp = te[2];\n\t\t\tte[2] = te[8];\n\t\t\tte[8] = tmp;\n\t\t\ttmp = te[6];\n\t\t\tte[6] = te[9];\n\t\t\tte[9] = tmp;\n\t\t\ttmp = te[3];\n\t\t\tte[3] = te[12];\n\t\t\tte[12] = tmp;\n\t\t\ttmp = te[7];\n\t\t\tte[7] = te[13];\n\t\t\tte[13] = tmp;\n\t\t\ttmp = te[11];\n\t\t\tte[11] = te[14];\n\t\t\tte[14] = tmp;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetPosition(x, y, z) {\n\t\t\tconst te = this.elements;\n\n\t\t\tif (x.isVector3) {\n\t\t\t\tte[12] = x.x;\n\t\t\t\tte[13] = x.y;\n\t\t\t\tte[14] = x.z;\n\t\t\t} else {\n\t\t\t\tte[12] = x;\n\t\t\t\tte[13] = y;\n\t\t\t\tte[14] = z;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tinvert() {\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tn11 = te[0],\n\t\t\t\t\t\tn21 = te[1],\n\t\t\t\t\t\tn31 = te[2],\n\t\t\t\t\t\tn41 = te[3],\n\t\t\t\t\t\tn12 = te[4],\n\t\t\t\t\t\tn22 = te[5],\n\t\t\t\t\t\tn32 = te[6],\n\t\t\t\t\t\tn42 = te[7],\n\t\t\t\t\t\tn13 = te[8],\n\t\t\t\t\t\tn23 = te[9],\n\t\t\t\t\t\tn33 = te[10],\n\t\t\t\t\t\tn43 = te[11],\n\t\t\t\t\t\tn14 = te[12],\n\t\t\t\t\t\tn24 = te[13],\n\t\t\t\t\t\tn34 = te[14],\n\t\t\t\t\t\tn44 = te[15],\n\t\t\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\t\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n\t\t\tconst detInv = 1 / det;\n\t\t\tte[0] = t11 * detInv;\n\t\t\tte[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n\t\t\tte[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n\t\t\tte[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n\t\t\tte[4] = t12 * detInv;\n\t\t\tte[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n\t\t\tte[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n\t\t\tte[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n\t\t\tte[8] = t13 * detInv;\n\t\t\tte[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n\t\t\tte[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n\t\t\tte[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n\t\t\tte[12] = t14 * detInv;\n\t\t\tte[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n\t\t\tte[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n\t\t\tte[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(v) {\n\t\t\tconst te = this.elements;\n\t\t\tconst x = v.x,\n\t\t\t\t\t\ty = v.y,\n\t\t\t\t\t\tz = v.z;\n\t\t\tte[0] *= x;\n\t\t\tte[4] *= y;\n\t\t\tte[8] *= z;\n\t\t\tte[1] *= x;\n\t\t\tte[5] *= y;\n\t\t\tte[9] *= z;\n\t\t\tte[2] *= x;\n\t\t\tte[6] *= y;\n\t\t\tte[10] *= z;\n\t\t\tte[3] *= x;\n\t\t\tte[7] *= y;\n\t\t\tte[11] *= z;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMaxScaleOnAxis() {\n\t\t\tconst te = this.elements;\n\t\t\tconst scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n\t\t\tconst scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n\t\t\tconst scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n\t\t\treturn Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n\t\t}\n\n\t\tmakeTranslation(x, y, z) {\n\t\t\tthis.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationX(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationY(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationZ(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationAxis(axis, angle) {\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\t\t\tconst c = Math.cos(angle);\n\t\t\tconst s = Math.sin(angle);\n\t\t\tconst t = 1 - c;\n\t\t\tconst x = axis.x,\n\t\t\t\t\t\ty = axis.y,\n\t\t\t\t\t\tz = axis.z;\n\t\t\tconst tx = t * x,\n\t\t\t\t\t\tty = t * y;\n\t\t\tthis.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeScale(x, y, z) {\n\t\t\tthis.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeShear(xy, xz, yx, yz, zx, zy) {\n\t\t\tthis.set(1, yx, zx, 0, xy, 1, zy, 0, xz, yz, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tcompose(position, quaternion, scale) {\n\t\t\tconst te = this.elements;\n\t\t\tconst x = quaternion._x,\n\t\t\t\t\t\ty = quaternion._y,\n\t\t\t\t\t\tz = quaternion._z,\n\t\t\t\t\t\tw = quaternion._w;\n\t\t\tconst x2 = x + x,\n\t\t\t\t\t\ty2 = y + y,\n\t\t\t\t\t\tz2 = z + z;\n\t\t\tconst xx = x * x2,\n\t\t\t\t\t\txy = x * y2,\n\t\t\t\t\t\txz = x * z2;\n\t\t\tconst yy = y * y2,\n\t\t\t\t\t\tyz = y * z2,\n\t\t\t\t\t\tzz = z * z2;\n\t\t\tconst wx = w * x2,\n\t\t\t\t\t\twy = w * y2,\n\t\t\t\t\t\twz = w * z2;\n\t\t\tconst sx = scale.x,\n\t\t\t\t\t\tsy = scale.y,\n\t\t\t\t\t\tsz = scale.z;\n\t\t\tte[0] = (1 - (yy + zz)) * sx;\n\t\t\tte[1] = (xy + wz) * sx;\n\t\t\tte[2] = (xz - wy) * sx;\n\t\t\tte[3] = 0;\n\t\t\tte[4] = (xy - wz) * sy;\n\t\t\tte[5] = (1 - (xx + zz)) * sy;\n\t\t\tte[6] = (yz + wx) * sy;\n\t\t\tte[7] = 0;\n\t\t\tte[8] = (xz + wy) * sz;\n\t\t\tte[9] = (yz - wx) * sz;\n\t\t\tte[10] = (1 - (xx + yy)) * sz;\n\t\t\tte[11] = 0;\n\t\t\tte[12] = position.x;\n\t\t\tte[13] = position.y;\n\t\t\tte[14] = position.z;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tdecompose(position, quaternion, scale) {\n\t\t\tconst te = this.elements;\n\n\t\t\tlet sx = _v1$5.set(te[0], te[1], te[2]).length();\n\n\t\t\tconst sy = _v1$5.set(te[4], te[5], te[6]).length();\n\n\t\t\tconst sz = _v1$5.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n\n\t\t\tconst det = this.determinant();\n\t\t\tif (det < 0) sx = -sx;\n\t\t\tposition.x = te[12];\n\t\t\tposition.y = te[13];\n\t\t\tposition.z = te[14]; // scale the rotation part\n\n\t\t\t_m1$2.copy(this);\n\n\t\t\tconst invSX = 1 / sx;\n\t\t\tconst invSY = 1 / sy;\n\t\t\tconst invSZ = 1 / sz;\n\t\t\t_m1$2.elements[0] *= invSX;\n\t\t\t_m1$2.elements[1] *= invSX;\n\t\t\t_m1$2.elements[2] *= invSX;\n\t\t\t_m1$2.elements[4] *= invSY;\n\t\t\t_m1$2.elements[5] *= invSY;\n\t\t\t_m1$2.elements[6] *= invSY;\n\t\t\t_m1$2.elements[8] *= invSZ;\n\t\t\t_m1$2.elements[9] *= invSZ;\n\t\t\t_m1$2.elements[10] *= invSZ;\n\t\t\tquaternion.setFromRotationMatrix(_m1$2);\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakePerspective(left, right, top, bottom, near, far) {\n\t\t\tif (far === undefined) {\n\t\t\t\tconsole.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n\t\t\t}\n\n\t\t\tconst te = this.elements;\n\t\t\tconst x = 2 * near / (right - left);\n\t\t\tconst y = 2 * near / (top - bottom);\n\t\t\tconst a = (right + left) / (right - left);\n\t\t\tconst b = (top + bottom) / (top - bottom);\n\t\t\tconst c = -(far + near) / (far - near);\n\t\t\tconst d = -2 * far * near / (far - near);\n\t\t\tte[0] = x;\n\t\t\tte[4] = 0;\n\t\t\tte[8] = a;\n\t\t\tte[12] = 0;\n\t\t\tte[1] = 0;\n\t\t\tte[5] = y;\n\t\t\tte[9] = b;\n\t\t\tte[13] = 0;\n\t\t\tte[2] = 0;\n\t\t\tte[6] = 0;\n\t\t\tte[10] = c;\n\t\t\tte[14] = d;\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = -1;\n\t\t\tte[15] = 0;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeOrthographic(left, right, top, bottom, near, far) {\n\t\t\tconst te = this.elements;\n\t\t\tconst w = 1.0 / (right - left);\n\t\t\tconst h = 1.0 / (top - bottom);\n\t\t\tconst p = 1.0 / (far - near);\n\t\t\tconst x = (right + left) * w;\n\t\t\tconst y = (top + bottom) * h;\n\t\t\tconst z = (far + near) * p;\n\t\t\tte[0] = 2 * w;\n\t\t\tte[4] = 0;\n\t\t\tte[8] = 0;\n\t\t\tte[12] = -x;\n\t\t\tte[1] = 0;\n\t\t\tte[5] = 2 * h;\n\t\t\tte[9] = 0;\n\t\t\tte[13] = -y;\n\t\t\tte[2] = 0;\n\t\t\tte[6] = 0;\n\t\t\tte[10] = -2 * p;\n\t\t\tte[14] = -z;\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(matrix) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = matrix.elements;\n\n\t\t\tfor (let i = 0; i < 16; i++) {\n\t\t\t\tif (te[i] !== me[i]) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tfor (let i = 0; i < 16; i++) {\n\t\t\t\tthis.elements[i] = array[i + offset];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst te = this.elements;\n\t\t\tarray[offset] = te[0];\n\t\t\tarray[offset + 1] = te[1];\n\t\t\tarray[offset + 2] = te[2];\n\t\t\tarray[offset + 3] = te[3];\n\t\t\tarray[offset + 4] = te[4];\n\t\t\tarray[offset + 5] = te[5];\n\t\t\tarray[offset + 6] = te[6];\n\t\t\tarray[offset + 7] = te[7];\n\t\t\tarray[offset + 8] = te[8];\n\t\t\tarray[offset + 9] = te[9];\n\t\t\tarray[offset + 10] = te[10];\n\t\t\tarray[offset + 11] = te[11];\n\t\t\tarray[offset + 12] = te[12];\n\t\t\tarray[offset + 13] = te[13];\n\t\t\tarray[offset + 14] = te[14];\n\t\t\tarray[offset + 15] = te[15];\n\t\t\treturn array;\n\t\t}\n\n\t}\n\n\tMatrix4.prototype.isMatrix4 = true;\n\n\tconst _v1$5 = /*@__PURE__*/new Vector3();\n\n\tconst _m1$2 = /*@__PURE__*/new Matrix4();\n\n\tconst _zero = /*@__PURE__*/new Vector3(0, 0, 0);\n\n\tconst _one = /*@__PURE__*/new Vector3(1, 1, 1);\n\n\tconst _x = /*@__PURE__*/new Vector3();\n\n\tconst _y = /*@__PURE__*/new Vector3();\n\n\tconst _z = /*@__PURE__*/new Vector3();\n\n\tconst _matrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _quaternion$3 = /*@__PURE__*/new Quaternion();\n\n\tclass Euler {\n\t\tconstructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order;\n\t\t}\n\n\t\tget x() {\n\t\t\treturn this._x;\n\t\t}\n\n\t\tset x(value) {\n\t\t\tthis._x = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget y() {\n\t\t\treturn this._y;\n\t\t}\n\n\t\tset y(value) {\n\t\t\tthis._y = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget z() {\n\t\t\treturn this._z;\n\t\t}\n\n\t\tset z(value) {\n\t\t\tthis._z = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget order() {\n\t\t\treturn this._order;\n\t\t}\n\n\t\tset order(value) {\n\t\t\tthis._order = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tset(x, y, z, order = this._order) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._order);\n\t\t}\n\n\t\tcopy(euler) {\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromRotationMatrix(m, order = this._order, update = true) {\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tconst te = m.elements;\n\t\t\tconst m11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8];\n\t\t\tconst m21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9];\n\t\t\tconst m31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10];\n\n\t\t\tswitch (order) {\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._y = Math.asin(clamp(m13, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m13) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\n\t\t\t\t\t\tthis._z = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = Math.asin(-clamp(m23, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m23) < 0.9999999) {\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m22);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\n\t\t\t\t\t\tthis._z = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = Math.asin(clamp(m32, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m32) < 0.9999999) {\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._y = Math.asin(-clamp(m31, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m31) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._z = Math.asin(clamp(m21, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m21) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m22);\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._z = Math.asin(-clamp(m12, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m12) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order);\n\t\t\t}\n\n\t\t\tthis._order = order;\n\t\t\tif (update === true) this._onChangeCallback();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromQuaternion(q, order, update) {\n\t\t\t_matrix$1.makeRotationFromQuaternion(q);\n\n\t\t\treturn this.setFromRotationMatrix(_matrix$1, order, update);\n\t\t}\n\n\t\tsetFromVector3(v, order = this._order) {\n\t\t\treturn this.set(v.x, v.y, v.z, order);\n\t\t}\n\n\t\treorder(newOrder) {\n\t\t\t// WARNING: this discards revolution information -bhouston\n\t\t\t_quaternion$3.setFromEuler(this);\n\n\t\t\treturn this.setFromQuaternion(_quaternion$3, newOrder);\n\t\t}\n\n\t\tequals(euler) {\n\t\t\treturn euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n\t\t}\n\n\t\tfromArray(array) {\n\t\t\tthis._x = array[0];\n\t\t\tthis._y = array[1];\n\t\t\tthis._z = array[2];\n\t\t\tif (array[3] !== undefined) this._order = array[3];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this._x;\n\t\t\tarray[offset + 1] = this._y;\n\t\t\tarray[offset + 2] = this._z;\n\t\t\tarray[offset + 3] = this._order;\n\t\t\treturn array;\n\t\t}\n\n\t\ttoVector3(optionalResult) {\n\t\t\tif (optionalResult) {\n\t\t\t\treturn optionalResult.set(this._x, this._y, this._z);\n\t\t\t} else {\n\t\t\t\treturn new Vector3(this._x, this._y, this._z);\n\t\t\t}\n\t\t}\n\n\t\t_onChange(callback) {\n\t\t\tthis._onChangeCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChangeCallback() {}\n\n\t}\n\n\tEuler.prototype.isEuler = true;\n\tEuler.DefaultOrder = 'XYZ';\n\tEuler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\n\n\tclass Layers {\n\t\tconstructor() {\n\t\t\tthis.mask = 1 | 0;\n\t\t}\n\n\t\tset(channel) {\n\t\t\tthis.mask = 1 << channel | 0;\n\t\t}\n\n\t\tenable(channel) {\n\t\t\tthis.mask |= 1 << channel | 0;\n\t\t}\n\n\t\tenableAll() {\n\t\t\tthis.mask = 0xffffffff | 0;\n\t\t}\n\n\t\ttoggle(channel) {\n\t\t\tthis.mask ^= 1 << channel | 0;\n\t\t}\n\n\t\tdisable(channel) {\n\t\t\tthis.mask &= ~(1 << channel | 0);\n\t\t}\n\n\t\tdisableAll() {\n\t\t\tthis.mask = 0;\n\t\t}\n\n\t\ttest(layers) {\n\t\t\treturn (this.mask & layers.mask) !== 0;\n\t\t}\n\n\t}\n\n\tlet _object3DId = 0;\n\n\tconst _v1$4 = /*@__PURE__*/new Vector3();\n\n\tconst _q1 = /*@__PURE__*/new Quaternion();\n\n\tconst _m1$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _target = /*@__PURE__*/new Vector3();\n\n\tconst _position$3 = /*@__PURE__*/new Vector3();\n\n\tconst _scale$2 = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$2 = /*@__PURE__*/new Quaternion();\n\n\tconst _xAxis = /*@__PURE__*/new Vector3(1, 0, 0);\n\n\tconst _yAxis = /*@__PURE__*/new Vector3(0, 1, 0);\n\n\tconst _zAxis = /*@__PURE__*/new Vector3(0, 0, 1);\n\n\tconst _addedEvent = {\n\t\ttype: 'added'\n\t};\n\tconst _removedEvent = {\n\t\ttype: 'removed'\n\t};\n\n\tclass Object3D extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: _object3DId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Object3D';\n\t\t\tthis.parent = null;\n\t\t\tthis.children = [];\n\t\t\tthis.up = Object3D.DefaultUp.clone();\n\t\t\tconst position = new Vector3();\n\t\t\tconst rotation = new Euler();\n\t\t\tconst quaternion = new Quaternion();\n\t\t\tconst scale = new Vector3(1, 1, 1);\n\n\t\t\tfunction onRotationChange() {\n\t\t\t\tquaternion.setFromEuler(rotation, false);\n\t\t\t}\n\n\t\t\tfunction onQuaternionChange() {\n\t\t\t\trotation.setFromQuaternion(quaternion, undefined, false);\n\t\t\t}\n\n\t\t\trotation._onChange(onRotationChange);\n\n\t\t\tquaternion._onChange(onQuaternionChange);\n\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tposition: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: position\n\t\t\t\t},\n\t\t\t\trotation: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: rotation\n\t\t\t\t},\n\t\t\t\tquaternion: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: quaternion\n\t\t\t\t},\n\t\t\t\tscale: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: scale\n\t\t\t\t},\n\t\t\t\tmodelViewMatrix: {\n\t\t\t\t\tvalue: new Matrix4()\n\t\t\t\t},\n\t\t\t\tnormalMatrix: {\n\t\t\t\t\tvalue: new Matrix3()\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.matrix = new Matrix4();\n\t\t\tthis.matrixWorld = new Matrix4();\n\t\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\t\t\tthis.layers = new Layers();\n\t\t\tthis.visible = true;\n\t\t\tthis.castShadow = false;\n\t\t\tthis.receiveShadow = false;\n\t\t\tthis.frustumCulled = true;\n\t\t\tthis.renderOrder = 0;\n\t\t\tthis.animations = [];\n\t\t\tthis.userData = {};\n\t\t}\n\n\t\tonBeforeRender() {}\n\n\t\tonAfterRender() {}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\t\t\tthis.matrix.premultiply(matrix);\n\t\t\tthis.matrix.decompose(this.position, this.quaternion, this.scale);\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\tthis.quaternion.premultiply(q);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRotationFromAxisAngle(axis, angle) {\n\t\t\t// assumes axis is normalized\n\t\t\tthis.quaternion.setFromAxisAngle(axis, angle);\n\t\t}\n\n\t\tsetRotationFromEuler(euler) {\n\t\t\tthis.quaternion.setFromEuler(euler, true);\n\t\t}\n\n\t\tsetRotationFromMatrix(m) {\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tthis.quaternion.setFromRotationMatrix(m);\n\t\t}\n\n\t\tsetRotationFromQuaternion(q) {\n\t\t\t// assumes q is normalized\n\t\t\tthis.quaternion.copy(q);\n\t\t}\n\n\t\trotateOnAxis(axis, angle) {\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\t\t\t_q1.setFromAxisAngle(axis, angle);\n\n\t\t\tthis.quaternion.multiply(_q1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateOnWorldAxis(axis, angle) {\n\t\t\t// rotate object on axis in world space\n\t\t\t// axis is assumed to be normalized\n\t\t\t// method assumes no rotated parent\n\t\t\t_q1.setFromAxisAngle(axis, angle);\n\n\t\t\tthis.quaternion.premultiply(_q1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateX(angle) {\n\t\t\treturn this.rotateOnAxis(_xAxis, angle);\n\t\t}\n\n\t\trotateY(angle) {\n\t\t\treturn this.rotateOnAxis(_yAxis, angle);\n\t\t}\n\n\t\trotateZ(angle) {\n\t\t\treturn this.rotateOnAxis(_zAxis, angle);\n\t\t}\n\n\t\ttranslateOnAxis(axis, distance) {\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\t\t\t_v1$4.copy(axis).applyQuaternion(this.quaternion);\n\n\t\t\tthis.position.add(_v1$4.multiplyScalar(distance));\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslateX(distance) {\n\t\t\treturn this.translateOnAxis(_xAxis, distance);\n\t\t}\n\n\t\ttranslateY(distance) {\n\t\t\treturn this.translateOnAxis(_yAxis, distance);\n\t\t}\n\n\t\ttranslateZ(distance) {\n\t\t\treturn this.translateOnAxis(_zAxis, distance);\n\t\t}\n\n\t\tlocalToWorld(vector) {\n\t\t\treturn vector.applyMatrix4(this.matrixWorld);\n\t\t}\n\n\t\tworldToLocal(vector) {\n\t\t\treturn vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());\n\t\t}\n\n\t\tlookAt(x, y, z) {\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\t\t\tif (x.isVector3) {\n\t\t\t\t_target.copy(x);\n\t\t\t} else {\n\t\t\t\t_target.set(x, y, z);\n\t\t\t}\n\n\t\t\tconst parent = this.parent;\n\t\t\tthis.updateWorldMatrix(true, false);\n\n\t\t\t_position$3.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\tif (this.isCamera || this.isLight) {\n\t\t\t\t_m1$1.lookAt(_position$3, _target, this.up);\n\t\t\t} else {\n\t\t\t\t_m1$1.lookAt(_target, _position$3, this.up);\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix(_m1$1);\n\n\t\t\tif (parent) {\n\t\t\t\t_m1$1.extractRotation(parent.matrixWorld);\n\n\t\t\t\t_q1.setFromRotationMatrix(_m1$1);\n\n\t\t\t\tthis.quaternion.premultiply(_q1.invert());\n\t\t\t}\n\t\t}\n\n\t\tadd(object) {\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\t\t\tthis.add(arguments[i]);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (object === this) {\n\t\t\t\tconsole.error('THREE.Object3D.add: object can\\'t be added as a child of itself.', object);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (object && object.isObject3D) {\n\t\t\t\tif (object.parent !== null) {\n\t\t\t\t\tobject.parent.remove(object);\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tthis.children.push(object);\n\t\t\t\tobject.dispatchEvent(_addedEvent);\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Object3D.add: object not an instance of THREE.Object3D.', object);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tremove(object) {\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\t\t\tthis.remove(arguments[i]);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst index = this.children.indexOf(object);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tobject.parent = null;\n\t\t\t\tthis.children.splice(index, 1);\n\t\t\t\tobject.dispatchEvent(_removedEvent);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tremoveFromParent() {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent !== null) {\n\t\t\t\tparent.remove(this);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclear() {\n\t\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\t\tconst object = this.children[i];\n\t\t\t\tobject.parent = null;\n\t\t\t\tobject.dispatchEvent(_removedEvent);\n\t\t\t}\n\n\t\t\tthis.children.length = 0;\n\t\t\treturn this;\n\t\t}\n\n\t\tattach(object) {\n\t\t\t// adds object as a child of this, while maintaining the object's world transform\n\t\t\tthis.updateWorldMatrix(true, false);\n\n\t\t\t_m1$1.copy(this.matrixWorld).invert();\n\n\t\t\tif (object.parent !== null) {\n\t\t\t\tobject.parent.updateWorldMatrix(true, false);\n\n\t\t\t\t_m1$1.multiply(object.parent.matrixWorld);\n\t\t\t}\n\n\t\t\tobject.applyMatrix4(_m1$1);\n\t\t\tthis.add(object);\n\t\t\tobject.updateWorldMatrix(false, true);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetObjectById(id) {\n\t\t\treturn this.getObjectByProperty('id', id);\n\t\t}\n\n\t\tgetObjectByName(name) {\n\t\t\treturn this.getObjectByProperty('name', name);\n\t\t}\n\n\t\tgetObjectByProperty(name, value) {\n\t\t\tif (this[name] === value) return this;\n\n\t\t\tfor (let i = 0, l = this.children.length; i < l; i++) {\n\t\t\t\tconst child = this.children[i];\n\t\t\t\tconst object = child.getObjectByProperty(name, value);\n\n\t\t\t\tif (object !== undefined) {\n\t\t\t\t\treturn object;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tgetWorldPosition(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\treturn target.setFromMatrixPosition(this.matrixWorld);\n\t\t}\n\n\t\tgetWorldQuaternion(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tthis.matrixWorld.decompose(_position$3, target, _scale$2);\n\t\t\treturn target;\n\t\t}\n\n\t\tgetWorldScale(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tthis.matrixWorld.decompose(_position$3, _quaternion$2, target);\n\t\t\treturn target;\n\t\t}\n\n\t\tgetWorldDirection(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tconst e = this.matrixWorld.elements;\n\t\t\treturn target.set(e[8], e[9], e[10]).normalize();\n\t\t}\n\n\t\traycast() {}\n\n\t\ttraverse(callback) {\n\t\t\tcallback(this);\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].traverse(callback);\n\t\t\t}\n\t\t}\n\n\t\ttraverseVisible(callback) {\n\t\t\tif (this.visible === false) return;\n\t\t\tcallback(this);\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].traverseVisible(callback);\n\t\t\t}\n\t\t}\n\n\t\ttraverseAncestors(callback) {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent !== null) {\n\t\t\t\tcallback(parent);\n\t\t\t\tparent.traverseAncestors(callback);\n\t\t\t}\n\t\t}\n\n\t\tupdateMatrix() {\n\t\t\tthis.matrix.compose(this.position, this.quaternion, this.scale);\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\n\t\t\tif (this.matrixWorldNeedsUpdate || force) {\n\t\t\t\tif (this.parent === null) {\n\t\t\t\t\tthis.matrixWorld.copy(this.matrix);\n\t\t\t\t} else {\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\t\t\t\tforce = true;\n\t\t\t} // update children\n\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].updateMatrixWorld(force);\n\t\t\t}\n\t\t}\n\n\t\tupdateWorldMatrix(updateParents, updateChildren) {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (updateParents === true && parent !== null) {\n\t\t\t\tparent.updateWorldMatrix(true, false);\n\t\t\t}\n\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\n\t\t\tif (this.parent === null) {\n\t\t\t\tthis.matrixWorld.copy(this.matrix);\n\t\t\t} else {\n\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n\t\t\t} // update children\n\n\n\t\t\tif (updateChildren === true) {\n\t\t\t\tconst children = this.children;\n\n\t\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tchildren[i].updateWorldMatrix(false, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\t// meta is a string when called from JSON.stringify\n\t\t\tconst isRootObject = meta === undefined || typeof meta === 'string';\n\t\t\tconst output = {}; // meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\n\t\t\tif (isRootObject) {\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {},\n\t\t\t\t\tshapes: {},\n\t\t\t\t\tskeletons: {},\n\t\t\t\t\tanimations: {}\n\t\t\t\t};\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\t\t\t} // standard Object3D serialization\n\n\n\t\t\tconst object = {};\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\t\t\tif (this.name !== '') object.name = this.name;\n\t\t\tif (this.castShadow === true) object.castShadow = true;\n\t\t\tif (this.receiveShadow === true) object.receiveShadow = true;\n\t\t\tif (this.visible === false) object.visible = false;\n\t\t\tif (this.frustumCulled === false) object.frustumCulled = false;\n\t\t\tif (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n\t\t\tif (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n\t\t\tobject.layers = this.layers.mask;\n\t\t\tobject.matrix = this.matrix.toArray();\n\t\t\tif (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\n\n\t\t\tif (this.isInstancedMesh) {\n\t\t\t\tobject.type = 'InstancedMesh';\n\t\t\t\tobject.count = this.count;\n\t\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\t\tif (this.instanceColor !== null) object.instanceColor = this.instanceColor.toJSON();\n\t\t\t} //\n\n\n\t\t\tfunction serialize(library, element) {\n\t\t\t\tif (library[element.uuid] === undefined) {\n\t\t\t\t\tlibrary[element.uuid] = element.toJSON(meta);\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\t\t\t}\n\n\t\t\tif (this.isScene) {\n\t\t\t\tif (this.background) {\n\t\t\t\t\tif (this.background.isColor) {\n\t\t\t\t\t\tobject.background = this.background.toJSON();\n\t\t\t\t\t} else if (this.background.isTexture) {\n\t\t\t\t\t\tobject.background = this.background.toJSON(meta).uuid;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.environment && this.environment.isTexture) {\n\t\t\t\t\tobject.environment = this.environment.toJSON(meta).uuid;\n\t\t\t\t}\n\t\t\t} else if (this.isMesh || this.isLine || this.isPoints) {\n\t\t\t\tobject.geometry = serialize(meta.geometries, this.geometry);\n\t\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\t\tif (parameters !== undefined && parameters.shapes !== undefined) {\n\t\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\t\tif (Array.isArray(shapes)) {\n\t\t\t\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\t\t\t\tconst shape = shapes[i];\n\t\t\t\t\t\t\tserialize(meta.shapes, shape);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tserialize(meta.shapes, shapes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isSkinnedMesh) {\n\t\t\t\tobject.bindMode = this.bindMode;\n\t\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\t\tif (this.skeleton !== undefined) {\n\t\t\t\t\tserialize(meta.skeletons, this.skeleton);\n\t\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.material !== undefined) {\n\t\t\t\tif (Array.isArray(this.material)) {\n\t\t\t\t\tconst uuids = [];\n\n\t\t\t\t\tfor (let i = 0, l = this.material.length; i < l; i++) {\n\t\t\t\t\t\tuuids.push(serialize(meta.materials, this.material[i]));\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\t\t\t\t} else {\n\t\t\t\t\tobject.material = serialize(meta.materials, this.material);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tif (this.children.length > 0) {\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\t\t\tobject.children.push(this.children[i].toJSON(meta).object);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tif (this.animations.length > 0) {\n\t\t\t\tobject.animations = [];\n\n\t\t\t\tfor (let i = 0; i < this.animations.length; i++) {\n\t\t\t\t\tconst animation = this.animations[i];\n\t\t\t\t\tobject.animations.push(serialize(meta.animations, animation));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRootObject) {\n\t\t\t\tconst geometries = extractFromCache(meta.geometries);\n\t\t\t\tconst materials = extractFromCache(meta.materials);\n\t\t\t\tconst textures = extractFromCache(meta.textures);\n\t\t\t\tconst images = extractFromCache(meta.images);\n\t\t\t\tconst shapes = extractFromCache(meta.shapes);\n\t\t\t\tconst skeletons = extractFromCache(meta.skeletons);\n\t\t\t\tconst animations = extractFromCache(meta.animations);\n\t\t\t\tif (geometries.length > 0) output.geometries = geometries;\n\t\t\t\tif (materials.length > 0) output.materials = materials;\n\t\t\t\tif (textures.length > 0) output.textures = textures;\n\t\t\t\tif (images.length > 0) output.images = images;\n\t\t\t\tif (shapes.length > 0) output.shapes = shapes;\n\t\t\t\tif (skeletons.length > 0) output.skeletons = skeletons;\n\t\t\t\tif (animations.length > 0) output.animations = animations;\n\t\t\t}\n\n\t\t\toutput.object = object;\n\t\t\treturn output; // extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\n\t\t\tfunction extractFromCache(cache) {\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (const key in cache) {\n\t\t\t\t\tconst data = cache[key];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push(data);\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\n\t\tclone(recursive) {\n\t\t\treturn new this.constructor().copy(this, recursive);\n\t\t}\n\n\t\tcopy(source, recursive = true) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.up.copy(source.up);\n\t\t\tthis.position.copy(source.position);\n\t\t\tthis.rotation.order = source.rotation.order;\n\t\t\tthis.quaternion.copy(source.quaternion);\n\t\t\tthis.scale.copy(source.scale);\n\t\t\tthis.matrix.copy(source.matrix);\n\t\t\tthis.matrixWorld.copy(source.matrixWorld);\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\n\t\t\tif (recursive === true) {\n\t\t\t\tfor (let i = 0; i < source.children.length; i++) {\n\t\t\t\t\tconst child = source.children[i];\n\t\t\t\t\tthis.add(child.clone());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tObject3D.DefaultUp = new Vector3(0, 1, 0);\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\tObject3D.prototype.isObject3D = true;\n\n\tconst _v0$1 = /*@__PURE__*/new Vector3();\n\n\tconst _v1$3 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v3$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vab = /*@__PURE__*/new Vector3();\n\n\tconst _vac = /*@__PURE__*/new Vector3();\n\n\tconst _vbc = /*@__PURE__*/new Vector3();\n\n\tconst _vap = /*@__PURE__*/new Vector3();\n\n\tconst _vbp = /*@__PURE__*/new Vector3();\n\n\tconst _vcp = /*@__PURE__*/new Vector3();\n\n\tclass Triangle {\n\t\tconstructor(a = new Vector3(), b = new Vector3(), c = new Vector3()) {\n\t\t\tthis.a = a;\n\t\t\tthis.b = b;\n\t\t\tthis.c = c;\n\t\t}\n\n\t\tstatic getNormal(a, b, c, target) {\n\t\t\ttarget.subVectors(c, b);\n\n\t\t\t_v0$1.subVectors(a, b);\n\n\t\t\ttarget.cross(_v0$1);\n\t\t\tconst targetLengthSq = target.lengthSq();\n\n\t\t\tif (targetLengthSq > 0) {\n\t\t\t\treturn target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n\t\t\t}\n\n\t\t\treturn target.set(0, 0, 0);\n\t\t} // static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\n\n\t\tstatic getBarycoord(point, a, b, c, target) {\n\t\t\t_v0$1.subVectors(c, a);\n\n\t\t\t_v1$3.subVectors(b, a);\n\n\t\t\t_v2$2.subVectors(point, a);\n\n\t\t\tconst dot00 = _v0$1.dot(_v0$1);\n\n\t\t\tconst dot01 = _v0$1.dot(_v1$3);\n\n\t\t\tconst dot02 = _v0$1.dot(_v2$2);\n\n\t\t\tconst dot11 = _v1$3.dot(_v1$3);\n\n\t\t\tconst dot12 = _v1$3.dot(_v2$2);\n\n\t\t\tconst denom = dot00 * dot11 - dot01 * dot01; // collinear or singular triangle\n\n\t\t\tif (denom === 0) {\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set(-2, -1, -1);\n\t\t\t}\n\n\t\t\tconst invDenom = 1 / denom;\n\t\t\tconst u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n\t\t\tconst v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n\t\t\treturn target.set(1 - u - v, v, u);\n\t\t}\n\n\t\tstatic containsPoint(point, a, b, c) {\n\t\t\tthis.getBarycoord(point, a, b, c, _v3$1);\n\t\t\treturn _v3$1.x >= 0 && _v3$1.y >= 0 && _v3$1.x + _v3$1.y <= 1;\n\t\t}\n\n\t\tstatic getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\n\t\t\tthis.getBarycoord(point, p1, p2, p3, _v3$1);\n\t\t\ttarget.set(0, 0);\n\t\t\ttarget.addScaledVector(uv1, _v3$1.x);\n\t\t\ttarget.addScaledVector(uv2, _v3$1.y);\n\t\t\ttarget.addScaledVector(uv3, _v3$1.z);\n\t\t\treturn target;\n\t\t}\n\n\t\tstatic isFrontFacing(a, b, c, direction) {\n\t\t\t_v0$1.subVectors(c, b);\n\n\t\t\t_v1$3.subVectors(a, b); // strictly front facing\n\n\n\t\t\treturn _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;\n\t\t}\n\n\t\tset(a, b, c) {\n\t\t\tthis.a.copy(a);\n\t\t\tthis.b.copy(b);\n\t\t\tthis.c.copy(c);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPointsAndIndices(points, i0, i1, i2) {\n\t\t\tthis.a.copy(points[i0]);\n\t\t\tthis.b.copy(points[i1]);\n\t\t\tthis.c.copy(points[i2]);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromAttributeAndIndices(attribute, i0, i1, i2) {\n\t\t\tthis.a.fromBufferAttribute(attribute, i0);\n\t\t\tthis.b.fromBufferAttribute(attribute, i1);\n\t\t\tthis.c.fromBufferAttribute(attribute, i2);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(triangle) {\n\t\t\tthis.a.copy(triangle.a);\n\t\t\tthis.b.copy(triangle.b);\n\t\t\tthis.c.copy(triangle.c);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetArea() {\n\t\t\t_v0$1.subVectors(this.c, this.b);\n\n\t\t\t_v1$3.subVectors(this.a, this.b);\n\n\t\t\treturn _v0$1.cross(_v1$3).length() * 0.5;\n\t\t}\n\n\t\tgetMidpoint(target) {\n\t\t\treturn target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n\t\t}\n\n\t\tgetNormal(target) {\n\t\t\treturn Triangle.getNormal(this.a, this.b, this.c, target);\n\t\t}\n\n\t\tgetPlane(target) {\n\t\t\treturn target.setFromCoplanarPoints(this.a, this.b, this.c);\n\t\t}\n\n\t\tgetBarycoord(point, target) {\n\t\t\treturn Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n\t\t}\n\n\t\tgetUV(point, uv1, uv2, uv3, target) {\n\t\t\treturn Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn Triangle.containsPoint(point, this.a, this.b, this.c);\n\t\t}\n\n\t\tisFrontFacing(direction) {\n\t\t\treturn Triangle.isFrontFacing(this.a, this.b, this.c, direction);\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsTriangle(this);\n\t\t}\n\n\t\tclosestPointToPoint(p, target) {\n\t\t\tconst a = this.a,\n\t\t\t\t\t\tb = this.b,\n\t\t\t\t\t\tc = this.c;\n\t\t\tlet v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\t_vab.subVectors(b, a);\n\n\t\t\t_vac.subVectors(c, a);\n\n\t\t\t_vap.subVectors(p, a);\n\n\t\t\tconst d1 = _vab.dot(_vap);\n\n\t\t\tconst d2 = _vac.dot(_vap);\n\n\t\t\tif (d1 <= 0 && d2 <= 0) {\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy(a);\n\t\t\t}\n\n\t\t\t_vbp.subVectors(p, b);\n\n\t\t\tconst d3 = _vab.dot(_vbp);\n\n\t\t\tconst d4 = _vac.dot(_vbp);\n\n\t\t\tif (d3 >= 0 && d4 <= d3) {\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy(b);\n\t\t\t}\n\n\t\t\tconst vc = d1 * d4 - d3 * d2;\n\n\t\t\tif (vc <= 0 && d1 >= 0 && d3 <= 0) {\n\t\t\t\tv = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\n\n\t\t\t\treturn target.copy(a).addScaledVector(_vab, v);\n\t\t\t}\n\n\t\t\t_vcp.subVectors(p, c);\n\n\t\t\tconst d5 = _vab.dot(_vcp);\n\n\t\t\tconst d6 = _vac.dot(_vcp);\n\n\t\t\tif (d6 >= 0 && d5 <= d6) {\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy(c);\n\t\t\t}\n\n\t\t\tconst vb = d5 * d2 - d1 * d6;\n\n\t\t\tif (vb <= 0 && d2 >= 0 && d6 <= 0) {\n\t\t\t\tw = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\n\n\t\t\t\treturn target.copy(a).addScaledVector(_vac, w);\n\t\t\t}\n\n\t\t\tconst va = d3 * d6 - d5 * d4;\n\n\t\t\tif (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\n\t\t\t\t_vbc.subVectors(c, b);\n\n\t\t\t\tw = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\n\n\t\t\t\treturn target.copy(b).addScaledVector(_vbc, w); // edge region of BC\n\t\t\t} // face region\n\n\n\t\t\tconst denom = 1 / (va + vb + vc); // u = va * denom\n\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\n\t\t}\n\n\t\tequals(triangle) {\n\t\t\treturn triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n\t\t}\n\n\t}\n\n\tlet materialId = 0;\n\n\tclass Material extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: materialId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Material';\n\t\t\tthis.fog = true;\n\t\t\tthis.blending = NormalBlending;\n\t\t\tthis.side = FrontSide;\n\t\t\tthis.vertexColors = false;\n\t\t\tthis.opacity = 1;\n\t\t\tthis.format = RGBAFormat;\n\t\t\tthis.transparent = false;\n\t\t\tthis.blendSrc = SrcAlphaFactor;\n\t\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\t\tthis.blendEquation = AddEquation;\n\t\t\tthis.blendSrcAlpha = null;\n\t\t\tthis.blendDstAlpha = null;\n\t\t\tthis.blendEquationAlpha = null;\n\t\t\tthis.depthFunc = LessEqualDepth;\n\t\t\tthis.depthTest = true;\n\t\t\tthis.depthWrite = true;\n\t\t\tthis.stencilWriteMask = 0xff;\n\t\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\t\tthis.stencilRef = 0;\n\t\t\tthis.stencilFuncMask = 0xff;\n\t\t\tthis.stencilFail = KeepStencilOp;\n\t\t\tthis.stencilZFail = KeepStencilOp;\n\t\t\tthis.stencilZPass = KeepStencilOp;\n\t\t\tthis.stencilWrite = false;\n\t\t\tthis.clippingPlanes = null;\n\t\t\tthis.clipIntersection = false;\n\t\t\tthis.clipShadows = false;\n\t\t\tthis.shadowSide = null;\n\t\t\tthis.colorWrite = true;\n\t\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\t\tthis.polygonOffset = false;\n\t\t\tthis.polygonOffsetFactor = 0;\n\t\t\tthis.polygonOffsetUnits = 0;\n\t\t\tthis.dithering = false;\n\t\t\tthis.alphaToCoverage = false;\n\t\t\tthis.premultipliedAlpha = false;\n\t\t\tthis.visible = true;\n\t\t\tthis.toneMapped = true;\n\t\t\tthis.userData = {};\n\t\t\tthis.version = 0;\n\t\t\tthis._alphaTest = 0;\n\t\t}\n\n\t\tget alphaTest() {\n\t\t\treturn this._alphaTest;\n\t\t}\n\n\t\tset alphaTest(value) {\n\t\t\tif (this._alphaTest > 0 !== value > 0) {\n\t\t\t\tthis.version++;\n\t\t\t}\n\n\t\t\tthis._alphaTest = value;\n\t\t}\n\n\t\tonBuild() {}\n\n\t\tonBeforeRender() {}\n\n\t\tonBeforeCompile() {}\n\n\t\tcustomProgramCacheKey() {\n\t\t\treturn this.onBeforeCompile.toString();\n\t\t}\n\n\t\tsetValues(values) {\n\t\t\tif (values === undefined) return;\n\n\t\t\tfor (const key in values) {\n\t\t\t\tconst newValue = values[key];\n\n\t\t\t\tif (newValue === undefined) {\n\t\t\t\t\tconsole.warn('THREE.Material: \\'' + key + '\\' parameter is undefined.');\n\t\t\t\t\tcontinue;\n\t\t\t\t} // for backward compatability if shading is set in the constructor\n\n\n\t\t\t\tif (key === 'shading') {\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t\t\tthis.flatShading = newValue === FlatShading ? true : false;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst currentValue = this[key];\n\n\t\t\t\tif (currentValue === undefined) {\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.');\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (currentValue && currentValue.isColor) {\n\t\t\t\t\tcurrentValue.set(newValue);\n\t\t\t\t} else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n\t\t\t\t\tcurrentValue.copy(newValue);\n\t\t\t\t} else {\n\t\t\t\t\tthis[key] = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst isRoot = meta === undefined || typeof meta === 'string';\n\n\t\t\tif (isRoot) {\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t}; // standard Material serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (this.color && this.color.isColor) data.color = this.color.getHex();\n\t\t\tif (this.roughness !== undefined) data.roughness = this.roughness;\n\t\t\tif (this.metalness !== undefined) data.metalness = this.metalness;\n\t\t\tif (this.sheen !== undefined) data.sheen = this.sheen;\n\t\t\tif (this.sheenTint && this.sheenTint.isColor) data.sheenTint = this.sheenTint.getHex();\n\t\t\tif (this.sheenRoughness !== undefined) data.sheenRoughness = this.sheenRoughness;\n\t\t\tif (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n\t\t\tif (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n\t\t\tif (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n\t\t\tif (this.specularIntensity !== undefined) data.specularIntensity = this.specularIntensity;\n\t\t\tif (this.specularTint && this.specularTint.isColor) data.specularTint = this.specularTint.getHex();\n\t\t\tif (this.shininess !== undefined) data.shininess = this.shininess;\n\t\t\tif (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\n\t\t\tif (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\t\tif (this.clearcoatMap && this.clearcoatMap.isTexture) {\n\t\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\n\t\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n\t\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n\t\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\t\t\t}\n\n\t\t\tif (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n\t\t\tif (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\n\t\t\tif (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n\n\t\t\tif (this.lightMap && this.lightMap.isTexture) {\n\t\t\t\tdata.lightMap = this.lightMap.toJSON(meta).uuid;\n\t\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\t\t\t}\n\n\t\t\tif (this.aoMap && this.aoMap.isTexture) {\n\t\t\t\tdata.aoMap = this.aoMap.toJSON(meta).uuid;\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\t\t\t}\n\n\t\t\tif (this.bumpMap && this.bumpMap.isTexture) {\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON(meta).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\t\t\t}\n\n\t\t\tif (this.normalMap && this.normalMap.isTexture) {\n\t\t\t\tdata.normalMap = this.normalMap.toJSON(meta).uuid;\n\t\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\t\t\t}\n\n\t\t\tif (this.displacementMap && this.displacementMap.isTexture) {\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON(meta).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\t\t\t}\n\n\t\t\tif (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n\t\t\tif (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n\t\t\tif (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n\t\t\tif (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\t\t\tif (this.specularIntensityMap && this.specularIntensityMap.isTexture) data.specularIntensityMap = this.specularIntensityMap.toJSON(meta).uuid;\n\t\t\tif (this.specularTintMap && this.specularTintMap.isTexture) data.specularTintMap = this.specularTintMap.toJSON(meta).uuid;\n\n\t\t\tif (this.envMap && this.envMap.isTexture) {\n\t\t\t\tdata.envMap = this.envMap.toJSON(meta).uuid;\n\t\t\t\tif (this.combine !== undefined) data.combine = this.combine;\n\t\t\t}\n\n\t\t\tif (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n\t\t\tif (this.reflectivity !== undefined) data.reflectivity = this.reflectivity;\n\t\t\tif (this.refractionRatio !== undefined) data.refractionRatio = this.refractionRatio;\n\n\t\t\tif (this.gradientMap && this.gradientMap.isTexture) {\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.transmission !== undefined) data.transmission = this.transmission;\n\t\t\tif (this.transmissionMap && this.transmissionMap.isTexture) data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;\n\t\t\tif (this.thickness !== undefined) data.thickness = this.thickness;\n\t\t\tif (this.thicknessMap && this.thicknessMap.isTexture) data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;\n\t\t\tif (this.attenuationDistance !== undefined) data.attenuationDistance = this.attenuationDistance;\n\t\t\tif (this.attenuationTint !== undefined) data.attenuationTint = this.attenuationTint.getHex();\n\t\t\tif (this.size !== undefined) data.size = this.size;\n\t\t\tif (this.shadowSide !== null) data.shadowSide = this.shadowSide;\n\t\t\tif (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n\t\t\tif (this.blending !== NormalBlending) data.blending = this.blending;\n\t\t\tif (this.side !== FrontSide) data.side = this.side;\n\t\t\tif (this.vertexColors) data.vertexColors = true;\n\t\t\tif (this.opacity < 1) data.opacity = this.opacity;\n\t\t\tif (this.format !== RGBAFormat) data.format = this.format;\n\t\t\tif (this.transparent === true) data.transparent = this.transparent;\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\t\t\tdata.colorWrite = this.colorWrite;\n\t\t\tdata.stencilWrite = this.stencilWrite;\n\t\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\t\tdata.stencilFunc = this.stencilFunc;\n\t\t\tdata.stencilRef = this.stencilRef;\n\t\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\t\tdata.stencilFail = this.stencilFail;\n\t\t\tdata.stencilZFail = this.stencilZFail;\n\t\t\tdata.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\n\n\t\t\tif (this.rotation && this.rotation !== 0) data.rotation = this.rotation;\n\t\t\tif (this.polygonOffset === true) data.polygonOffset = true;\n\t\t\tif (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\t\tif (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\t\t\tif (this.linewidth && this.linewidth !== 1) data.linewidth = this.linewidth;\n\t\t\tif (this.dashSize !== undefined) data.dashSize = this.dashSize;\n\t\t\tif (this.gapSize !== undefined) data.gapSize = this.gapSize;\n\t\t\tif (this.scale !== undefined) data.scale = this.scale;\n\t\t\tif (this.dithering === true) data.dithering = true;\n\t\t\tif (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n\t\t\tif (this.alphaToCoverage === true) data.alphaToCoverage = this.alphaToCoverage;\n\t\t\tif (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\t\tif (this.wireframe === true) data.wireframe = this.wireframe;\n\t\t\tif (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n\t\t\tif (this.flatShading === true) data.flatShading = this.flatShading;\n\t\t\tif (this.visible === false) data.visible = false;\n\t\t\tif (this.toneMapped === false) data.toneMapped = false;\n\t\t\tif (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache(cache) {\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (const key in cache) {\n\t\t\t\t\tconst data = cache[key];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push(data);\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t}\n\n\t\t\tif (isRoot) {\n\t\t\t\tconst textures = extractFromCache(meta.textures);\n\t\t\t\tconst images = extractFromCache(meta.images);\n\t\t\t\tif (textures.length > 0) data.textures = textures;\n\t\t\t\tif (images.length > 0) data.images = images;\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.vertexColors = source.vertexColors;\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.format = source.format;\n\t\t\tthis.transparent = source.transparent;\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\t\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\t\tthis.stencilFunc = source.stencilFunc;\n\t\t\tthis.stencilRef = source.stencilRef;\n\t\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\t\tthis.stencilFail = source.stencilFail;\n\t\t\tthis.stencilZFail = source.stencilZFail;\n\t\t\tthis.stencilZPass = source.stencilZPass;\n\t\t\tthis.stencilWrite = source.stencilWrite;\n\t\t\tconst srcPlanes = source.clippingPlanes;\n\t\t\tlet dstPlanes = null;\n\n\t\t\tif (srcPlanes !== null) {\n\t\t\t\tconst n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array(n);\n\n\t\t\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\t\t\tdstPlanes[i] = srcPlanes[i].clone();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\tthis.shadowSide = source.shadowSide;\n\t\t\tthis.colorWrite = source.colorWrite;\n\t\t\tthis.precision = source.precision;\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\t\t\tthis.dithering = source.dithering;\n\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.toneMapped = source.toneMapped;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t}\n\n\tMaterial.prototype.isMaterial = true;\n\n\tconst _colorKeywords = {\n\t\t'aliceblue': 0xF0F8FF,\n\t\t'antiquewhite': 0xFAEBD7,\n\t\t'aqua': 0x00FFFF,\n\t\t'aquamarine': 0x7FFFD4,\n\t\t'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC,\n\t\t'bisque': 0xFFE4C4,\n\t\t'black': 0x000000,\n\t\t'blanchedalmond': 0xFFEBCD,\n\t\t'blue': 0x0000FF,\n\t\t'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A,\n\t\t'burlywood': 0xDEB887,\n\t\t'cadetblue': 0x5F9EA0,\n\t\t'chartreuse': 0x7FFF00,\n\t\t'chocolate': 0xD2691E,\n\t\t'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED,\n\t\t'cornsilk': 0xFFF8DC,\n\t\t'crimson': 0xDC143C,\n\t\t'cyan': 0x00FFFF,\n\t\t'darkblue': 0x00008B,\n\t\t'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B,\n\t\t'darkgray': 0xA9A9A9,\n\t\t'darkgreen': 0x006400,\n\t\t'darkgrey': 0xA9A9A9,\n\t\t'darkkhaki': 0xBDB76B,\n\t\t'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F,\n\t\t'darkorange': 0xFF8C00,\n\t\t'darkorchid': 0x9932CC,\n\t\t'darkred': 0x8B0000,\n\t\t'darksalmon': 0xE9967A,\n\t\t'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B,\n\t\t'darkslategray': 0x2F4F4F,\n\t\t'darkslategrey': 0x2F4F4F,\n\t\t'darkturquoise': 0x00CED1,\n\t\t'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493,\n\t\t'deepskyblue': 0x00BFFF,\n\t\t'dimgray': 0x696969,\n\t\t'dimgrey': 0x696969,\n\t\t'dodgerblue': 0x1E90FF,\n\t\t'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0,\n\t\t'forestgreen': 0x228B22,\n\t\t'fuchsia': 0xFF00FF,\n\t\t'gainsboro': 0xDCDCDC,\n\t\t'ghostwhite': 0xF8F8FF,\n\t\t'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520,\n\t\t'gray': 0x808080,\n\t\t'green': 0x008000,\n\t\t'greenyellow': 0xADFF2F,\n\t\t'grey': 0x808080,\n\t\t'honeydew': 0xF0FFF0,\n\t\t'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C,\n\t\t'indigo': 0x4B0082,\n\t\t'ivory': 0xFFFFF0,\n\t\t'khaki': 0xF0E68C,\n\t\t'lavender': 0xE6E6FA,\n\t\t'lavenderblush': 0xFFF0F5,\n\t\t'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD,\n\t\t'lightblue': 0xADD8E6,\n\t\t'lightcoral': 0xF08080,\n\t\t'lightcyan': 0xE0FFFF,\n\t\t'lightgoldenrodyellow': 0xFAFAD2,\n\t\t'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90,\n\t\t'lightgrey': 0xD3D3D3,\n\t\t'lightpink': 0xFFB6C1,\n\t\t'lightsalmon': 0xFFA07A,\n\t\t'lightseagreen': 0x20B2AA,\n\t\t'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899,\n\t\t'lightslategrey': 0x778899,\n\t\t'lightsteelblue': 0xB0C4DE,\n\t\t'lightyellow': 0xFFFFE0,\n\t\t'lime': 0x00FF00,\n\t\t'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6,\n\t\t'magenta': 0xFF00FF,\n\t\t'maroon': 0x800000,\n\t\t'mediumaquamarine': 0x66CDAA,\n\t\t'mediumblue': 0x0000CD,\n\t\t'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB,\n\t\t'mediumseagreen': 0x3CB371,\n\t\t'mediumslateblue': 0x7B68EE,\n\t\t'mediumspringgreen': 0x00FA9A,\n\t\t'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585,\n\t\t'midnightblue': 0x191970,\n\t\t'mintcream': 0xF5FFFA,\n\t\t'mistyrose': 0xFFE4E1,\n\t\t'moccasin': 0xFFE4B5,\n\t\t'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080,\n\t\t'oldlace': 0xFDF5E6,\n\t\t'olive': 0x808000,\n\t\t'olivedrab': 0x6B8E23,\n\t\t'orange': 0xFFA500,\n\t\t'orangered': 0xFF4500,\n\t\t'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA,\n\t\t'palegreen': 0x98FB98,\n\t\t'paleturquoise': 0xAFEEEE,\n\t\t'palevioletred': 0xDB7093,\n\t\t'papayawhip': 0xFFEFD5,\n\t\t'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F,\n\t\t'pink': 0xFFC0CB,\n\t\t'plum': 0xDDA0DD,\n\t\t'powderblue': 0xB0E0E6,\n\t\t'purple': 0x800080,\n\t\t'rebeccapurple': 0x663399,\n\t\t'red': 0xFF0000,\n\t\t'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1,\n\t\t'saddlebrown': 0x8B4513,\n\t\t'salmon': 0xFA8072,\n\t\t'sandybrown': 0xF4A460,\n\t\t'seagreen': 0x2E8B57,\n\t\t'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D,\n\t\t'silver': 0xC0C0C0,\n\t\t'skyblue': 0x87CEEB,\n\t\t'slateblue': 0x6A5ACD,\n\t\t'slategray': 0x708090,\n\t\t'slategrey': 0x708090,\n\t\t'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F,\n\t\t'steelblue': 0x4682B4,\n\t\t'tan': 0xD2B48C,\n\t\t'teal': 0x008080,\n\t\t'thistle': 0xD8BFD8,\n\t\t'tomato': 0xFF6347,\n\t\t'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE,\n\t\t'wheat': 0xF5DEB3,\n\t\t'white': 0xFFFFFF,\n\t\t'whitesmoke': 0xF5F5F5,\n\t\t'yellow': 0xFFFF00,\n\t\t'yellowgreen': 0x9ACD32\n\t};\n\tconst _hslA = {\n\t\th: 0,\n\t\ts: 0,\n\t\tl: 0\n\t};\n\tconst _hslB = {\n\t\th: 0,\n\t\ts: 0,\n\t\tl: 0\n\t};\n\n\tfunction hue2rgb(p, q, t) {\n\t\tif (t < 0) t += 1;\n\t\tif (t > 1) t -= 1;\n\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\tif (t < 1 / 2) return q;\n\t\tif (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n\t\treturn p;\n\t}\n\n\tfunction SRGBToLinear(c) {\n\t\treturn c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n\t}\n\n\tfunction LinearToSRGB(c) {\n\t\treturn c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n\t}\n\n\tclass Color {\n\t\tconstructor(r, g, b) {\n\t\t\tif (g === undefined && b === undefined) {\n\t\t\t\t// r is THREE.Color, hex or string\n\t\t\t\treturn this.set(r);\n\t\t\t}\n\n\t\t\treturn this.setRGB(r, g, b);\n\t\t}\n\n\t\tset(value) {\n\t\t\tif (value && value.isColor) {\n\t\t\t\tthis.copy(value);\n\t\t\t} else if (typeof value === 'number') {\n\t\t\t\tthis.setHex(value);\n\t\t\t} else if (typeof value === 'string') {\n\t\t\t\tthis.setStyle(value);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetHex(hex) {\n\t\t\thex = Math.floor(hex);\n\t\t\tthis.r = (hex >> 16 & 255) / 255;\n\t\t\tthis.g = (hex >> 8 & 255) / 255;\n\t\t\tthis.b = (hex & 255) / 255;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRGB(r, g, b) {\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetHSL(h, s, l) {\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = euclideanModulo(h, 1);\n\t\t\ts = clamp(s, 0, 1);\n\t\t\tl = clamp(l, 0, 1);\n\n\t\t\tif (s === 0) {\n\t\t\t\tthis.r = this.g = this.b = l;\n\t\t\t} else {\n\t\t\t\tconst p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n\t\t\t\tconst q = 2 * l - p;\n\t\t\t\tthis.r = hue2rgb(q, p, h + 1 / 3);\n\t\t\t\tthis.g = hue2rgb(q, p, h);\n\t\t\t\tthis.b = hue2rgb(q, p, h - 1 / 3);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetStyle(style) {\n\t\t\tfunction handleAlpha(string) {\n\t\t\t\tif (string === undefined) return;\n\n\t\t\t\tif (parseFloat(string) < 1) {\n\t\t\t\t\tconsole.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet m;\n\n\t\t\tif (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\n\t\t\t\t// rgb / hsl\n\t\t\t\tlet color;\n\t\t\t\tconst name = m[1];\n\t\t\t\tconst components = m[2];\n\n\t\t\t\tswitch (name) {\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min(255, parseInt(color[1], 10)) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min(255, parseInt(color[2], 10)) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min(255, parseInt(color[3], 10)) / 255;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min(100, parseInt(color[1], 10)) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min(100, parseInt(color[2], 10)) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min(100, parseInt(color[3], 10)) / 100;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\t\t\t\t\t\tif (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tconst h = parseFloat(color[1]) / 360;\n\t\t\t\t\t\t\tconst s = parseInt(color[2], 10) / 100;\n\t\t\t\t\t\t\tconst l = parseInt(color[3], 10) / 100;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this.setHSL(h, s, l);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n\t\t\t\t// hex color\n\t\t\t\tconst hex = m[1];\n\t\t\t\tconst size = hex.length;\n\n\t\t\t\tif (size === 3) {\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n\t\t\t\t\tthis.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n\t\t\t\t\tthis.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n\t\t\t\t\treturn this;\n\t\t\t\t} else if (size === 6) {\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n\t\t\t\t\tthis.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n\t\t\t\t\tthis.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (style && style.length > 0) {\n\t\t\t\treturn this.setColorName(style);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetColorName(style) {\n\t\t\t// color keywords\n\t\t\tconst hex = _colorKeywords[style.toLowerCase()];\n\n\t\t\tif (hex !== undefined) {\n\t\t\t\t// red\n\t\t\t\tthis.setHex(hex);\n\t\t\t} else {\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn('THREE.Color: Unknown color ' + style);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.r, this.g, this.b);\n\t\t}\n\n\t\tcopy(color) {\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyGammaToLinear(color, gammaFactor = 2.0) {\n\t\t\tthis.r = Math.pow(color.r, gammaFactor);\n\t\t\tthis.g = Math.pow(color.g, gammaFactor);\n\t\t\tthis.b = Math.pow(color.b, gammaFactor);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyLinearToGamma(color, gammaFactor = 2.0) {\n\t\t\tconst safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n\t\t\tthis.r = Math.pow(color.r, safeInverse);\n\t\t\tthis.g = Math.pow(color.g, safeInverse);\n\t\t\tthis.b = Math.pow(color.b, safeInverse);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertGammaToLinear(gammaFactor) {\n\t\t\tthis.copyGammaToLinear(this, gammaFactor);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertLinearToGamma(gammaFactor) {\n\t\t\tthis.copyLinearToGamma(this, gammaFactor);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopySRGBToLinear(color) {\n\t\t\tthis.r = SRGBToLinear(color.r);\n\t\t\tthis.g = SRGBToLinear(color.g);\n\t\t\tthis.b = SRGBToLinear(color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyLinearToSRGB(color) {\n\t\t\tthis.r = LinearToSRGB(color.r);\n\t\t\tthis.g = LinearToSRGB(color.g);\n\t\t\tthis.b = LinearToSRGB(color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertSRGBToLinear() {\n\t\t\tthis.copySRGBToLinear(this);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertLinearToSRGB() {\n\t\t\tthis.copyLinearToSRGB(this);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetHex() {\n\t\t\treturn this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n\t\t}\n\n\t\tgetHexString() {\n\t\t\treturn ('000000' + this.getHex().toString(16)).slice(-6);\n\t\t}\n\n\t\tgetHSL(target) {\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\tconst r = this.r,\n\t\t\t\t\t\tg = this.g,\n\t\t\t\t\t\tb = this.b;\n\t\t\tconst max = Math.max(r, g, b);\n\t\t\tconst min = Math.min(r, g, b);\n\t\t\tlet hue, saturation;\n\t\t\tconst lightness = (min + max) / 2.0;\n\n\t\t\tif (min === max) {\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\t\t\t} else {\n\t\t\t\tconst delta = max - min;\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n\t\t\t\tswitch (max) {\n\t\t\t\t\tcase r:\n\t\t\t\t\t\thue = (g - b) / delta + (g < b ? 6 : 0);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase g:\n\t\t\t\t\t\thue = (b - r) / delta + 2;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase b:\n\t\t\t\t\t\thue = (r - g) / delta + 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\t\t\t}\n\n\t\t\ttarget.h = hue;\n\t\t\ttarget.s = saturation;\n\t\t\ttarget.l = lightness;\n\t\t\treturn target;\n\t\t}\n\n\t\tgetStyle() {\n\t\t\treturn 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n\t\t}\n\n\t\toffsetHSL(h, s, l) {\n\t\t\tthis.getHSL(_hslA);\n\t\t\t_hslA.h += h;\n\t\t\t_hslA.s += s;\n\t\t\t_hslA.l += l;\n\t\t\tthis.setHSL(_hslA.h, _hslA.s, _hslA.l);\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(color) {\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\taddColors(color1, color2) {\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(color) {\n\t\t\tthis.r = Math.max(0, this.r - color.r);\n\t\t\tthis.g = Math.max(0, this.g - color.g);\n\t\t\tthis.b = Math.max(0, this.b - color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(color) {\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerp(color, alpha) {\n\t\t\tthis.r += (color.r - this.r) * alpha;\n\t\t\tthis.g += (color.g - this.g) * alpha;\n\t\t\tthis.b += (color.b - this.b) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpColors(color1, color2, alpha) {\n\t\t\tthis.r = color1.r + (color2.r - color1.r) * alpha;\n\t\t\tthis.g = color1.g + (color2.g - color1.g) * alpha;\n\t\t\tthis.b = color1.b + (color2.b - color1.b) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpHSL(color, alpha) {\n\t\t\tthis.getHSL(_hslA);\n\t\t\tcolor.getHSL(_hslB);\n\t\t\tconst h = lerp(_hslA.h, _hslB.h, alpha);\n\t\t\tconst s = lerp(_hslA.s, _hslB.s, alpha);\n\t\t\tconst l = lerp(_hslA.l, _hslB.l, alpha);\n\t\t\tthis.setHSL(h, s, l);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(c) {\n\t\t\treturn c.r === this.r && c.g === this.g && c.b === this.b;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.r = array[offset];\n\t\t\tthis.g = array[offset + 1];\n\t\t\tthis.b = array[offset + 2];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.r;\n\t\t\tarray[offset + 1] = this.g;\n\t\t\tarray[offset + 2] = this.b;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index) {\n\t\t\tthis.r = attribute.getX(index);\n\t\t\tthis.g = attribute.getY(index);\n\t\t\tthis.b = attribute.getZ(index);\n\n\t\t\tif (attribute.normalized === true) {\n\t\t\t\t// assuming Uint8Array\n\t\t\t\tthis.r /= 255;\n\t\t\t\tthis.g /= 255;\n\t\t\t\tthis.b /= 255;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn this.getHex();\n\t\t}\n\n\t}\n\n\tColor.NAMES = _colorKeywords;\n\tColor.prototype.isColor = true;\n\tColor.prototype.r = 1;\n\tColor.prototype.g = 1;\n\tColor.prototype.b = 1;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.Multiply,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\tdepthTest: <bool>,\n\t *\tdepthWrite: <bool>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t * }\n\t */\n\n\tclass MeshBasicMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshBasicMaterial';\n\t\t\tthis.color = new Color(0xffffff); // emissive\n\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tconst _vector$9 = /*@__PURE__*/new Vector3();\n\n\tconst _vector2$1 = /*@__PURE__*/new Vector2();\n\n\tclass BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tif (Array.isArray(array)) {\n\t\t\t\tthrow new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n\t\t\t}\n\n\t\t\tthis.name = '';\n\t\t\tthis.array = array;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\t\tthis.normalized = normalized === true;\n\t\t\tthis.usage = StaticDrawUsage;\n\t\t\tthis.updateRange = {\n\t\t\t\toffset: 0,\n\t\t\t\tcount: -1\n\t\t\t};\n\t\t\tthis.version = 0;\n\t\t}\n\n\t\tonUploadCallback() {}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetUsage(value) {\n\t\t\tthis.usage = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.array = new source.array.constructor(source.array);\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\t\t\tthis.usage = source.usage;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyAt(index1, attribute, index2) {\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor (let i = 0, l = this.itemSize; i < l; i++) {\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyArray(array) {\n\t\t\tthis.array.set(array);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyColorsArray(colors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = colors.length; i < l; i++) {\n\t\t\t\tlet color = colors[i];\n\n\t\t\t\tif (color === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n\t\t\t\t\tcolor = new Color();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = color.r;\n\t\t\t\tarray[offset++] = color.g;\n\t\t\t\tarray[offset++] = color.b;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector2sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector2();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector3sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector3();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t\tarray[offset++] = vector.z;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector4sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector4();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t\tarray[offset++] = vector.z;\n\t\t\t\tarray[offset++] = vector.w;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tif (this.itemSize === 2) {\n\t\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t\t_vector2$1.fromBufferAttribute(this, i);\n\n\t\t\t\t\t_vector2$1.applyMatrix3(m);\n\n\t\t\t\t\tthis.setXY(i, _vector2$1.x, _vector2$1.y);\n\t\t\t\t}\n\t\t\t} else if (this.itemSize === 3) {\n\t\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t\t_vector$9.fromBufferAttribute(this, i);\n\n\t\t\t\t\t_vector$9.applyMatrix3(m);\n\n\t\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.applyMatrix4(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.applyNormalMatrix(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.transformDirection(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(value, offset = 0) {\n\t\t\tthis.array.set(value, offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetX(index) {\n\t\t\treturn this.array[index * this.itemSize];\n\t\t}\n\n\t\tsetX(index, x) {\n\t\t\tthis.array[index * this.itemSize] = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetY(index) {\n\t\t\treturn this.array[index * this.itemSize + 1];\n\t\t}\n\n\t\tsetY(index, y) {\n\t\t\tthis.array[index * this.itemSize + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetZ(index) {\n\t\t\treturn this.array[index * this.itemSize + 2];\n\t\t}\n\n\t\tsetZ(index, z) {\n\t\t\tthis.array[index * this.itemSize + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetW(index) {\n\t\t\treturn this.array[index * this.itemSize + 3];\n\t\t}\n\n\t\tsetW(index, w) {\n\t\t\tthis.array[index * this.itemSize + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXY(index, x, y) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZ(index, x, y, z) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\tthis.array[index + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZW(index, x, y, z, w) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\tthis.array[index + 2] = z;\n\t\t\tthis.array[index + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tonUpload(callback) {\n\t\t\tthis.onUploadCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.array, this.itemSize).copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call(this.array),\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (this.usage !== StaticDrawUsage) data.usage = this.usage;\n\t\t\tif (this.updateRange.offset !== 0 || this.updateRange.count !== -1) data.updateRange = this.updateRange;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tBufferAttribute.prototype.isBufferAttribute = true; //\n\n\tclass Int8BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int8Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint8BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint8Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint8ClampedArray(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Int16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Int32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Float16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\n\tclass Float32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Float32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Float64BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Float64Array(array), itemSize, normalized);\n\t\t}\n\n\t} //\n\n\tlet _id = 0;\n\n\tconst _m1 = /*@__PURE__*/new Matrix4();\n\n\tconst _obj = /*@__PURE__*/new Object3D();\n\n\tconst _offset = /*@__PURE__*/new Vector3();\n\n\tconst _box$1 = /*@__PURE__*/new Box3();\n\n\tconst _boxMorphTargets = /*@__PURE__*/new Box3();\n\n\tconst _vector$8 = /*@__PURE__*/new Vector3();\n\n\tclass BufferGeometry extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: _id++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'BufferGeometry';\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.morphTargetsRelative = false;\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\t\t\tthis.drawRange = {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: Infinity\n\t\t\t};\n\t\t\tthis.userData = {};\n\t\t}\n\n\t\tgetIndex() {\n\t\t\treturn this.index;\n\t\t}\n\n\t\tsetIndex(index) {\n\t\t\tif (Array.isArray(index)) {\n\t\t\t\tthis.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n\t\t\t} else {\n\t\t\t\tthis.index = index;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetAttribute(name) {\n\t\t\treturn this.attributes[name];\n\t\t}\n\n\t\tsetAttribute(name, attribute) {\n\t\t\tthis.attributes[name] = attribute;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeleteAttribute(name) {\n\t\t\tdelete this.attributes[name];\n\t\t\treturn this;\n\t\t}\n\n\t\thasAttribute(name) {\n\t\t\treturn this.attributes[name] !== undefined;\n\t\t}\n\n\t\taddGroup(start, count, materialIndex = 0) {\n\t\t\tthis.groups.push({\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex\n\t\t\t});\n\t\t}\n\n\t\tclearGroups() {\n\t\t\tthis.groups = [];\n\t\t}\n\n\t\tsetDrawRange(start, count) {\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tconst position = this.attributes.position;\n\n\t\t\tif (position !== undefined) {\n\t\t\t\tposition.applyMatrix4(matrix);\n\t\t\t\tposition.needsUpdate = true;\n\t\t\t}\n\n\t\t\tconst normal = this.attributes.normal;\n\n\t\t\tif (normal !== undefined) {\n\t\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix(matrix);\n\t\t\t\tnormal.applyNormalMatrix(normalMatrix);\n\t\t\t\tnormal.needsUpdate = true;\n\t\t\t}\n\n\t\t\tconst tangent = this.attributes.tangent;\n\n\t\t\tif (tangent !== undefined) {\n\t\t\t\ttangent.transformDirection(matrix);\n\t\t\t\ttangent.needsUpdate = true;\n\t\t\t}\n\n\t\t\tif (this.boundingBox !== null) {\n\t\t\t\tthis.computeBoundingBox();\n\t\t\t}\n\n\t\t\tif (this.boundingSphere !== null) {\n\t\t\t\tthis.computeBoundingSphere();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\t_m1.makeRotationFromQuaternion(q);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateX(angle) {\n\t\t\t// rotate geometry around world x-axis\n\t\t\t_m1.makeRotationX(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateY(angle) {\n\t\t\t// rotate geometry around world y-axis\n\t\t\t_m1.makeRotationY(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateZ(angle) {\n\t\t\t// rotate geometry around world z-axis\n\t\t\t_m1.makeRotationZ(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(x, y, z) {\n\t\t\t// translate geometry\n\t\t\t_m1.makeTranslation(x, y, z);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(x, y, z) {\n\t\t\t// scale geometry\n\t\t\t_m1.makeScale(x, y, z);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\tlookAt(vector) {\n\t\t\t_obj.lookAt(vector);\n\n\t\t\t_obj.updateMatrix();\n\n\t\t\tthis.applyMatrix4(_obj.matrix);\n\t\t\treturn this;\n\t\t}\n\n\t\tcenter() {\n\t\t\tthis.computeBoundingBox();\n\t\t\tthis.boundingBox.getCenter(_offset).negate();\n\t\t\tthis.translate(_offset.x, _offset.y, _offset.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tconst position = [];\n\n\t\t\tfor (let i = 0, l = points.length; i < l; i++) {\n\t\t\t\tconst point = points[i];\n\t\t\t\tposition.push(point.x, point.y, point.z || 0);\n\t\t\t}\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(position, 3));\n\t\t\treturn this;\n\t\t}\n\n\t\tcomputeBoundingBox() {\n\t\t\tif (this.boundingBox === null) {\n\t\t\t\tthis.boundingBox = new Box3();\n\t\t\t}\n\n\t\t\tconst position = this.attributes.position;\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif (position && position.isGLBufferAttribute) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n\t\t\t\tthis.boundingBox.set(new Vector3(-Infinity, -Infinity, -Infinity), new Vector3(+Infinity, +Infinity, +Infinity));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (position !== undefined) {\n\t\t\t\tthis.boundingBox.setFromBufferAttribute(position); // process morph attributes if present\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\n\t\t\t\t\t\t_box$1.setFromBufferAttribute(morphAttribute);\n\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\n\t\t\t\t\t\t\t_vector$8.addVectors(this.boundingBox.min, _box$1.min);\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$8);\n\n\t\t\t\t\t\t\t_vector$8.addVectors(this.boundingBox.max, _box$1.max);\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$8);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$1.min);\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$1.max);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.boundingBox.makeEmpty();\n\t\t\t}\n\n\t\t\tif (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n\t\t\t}\n\t\t}\n\n\t\tcomputeBoundingSphere() {\n\t\t\tif (this.boundingSphere === null) {\n\t\t\t\tthis.boundingSphere = new Sphere();\n\t\t\t}\n\n\t\t\tconst position = this.attributes.position;\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif (position && position.isGLBufferAttribute) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n\t\t\t\tthis.boundingSphere.set(new Vector3(), Infinity);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (position) {\n\t\t\t\t// first, find the center of the bounding sphere\n\t\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t\t_box$1.setFromBufferAttribute(position); // process morph attributes if present\n\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\n\t\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute(morphAttribute);\n\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\n\t\t\t\t\t\t\t_vector$8.addVectors(_box$1.min, _boxMorphTargets.min);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_vector$8);\n\n\t\t\t\t\t\t\t_vector$8.addVectors(_box$1.max, _boxMorphTargets.max);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_vector$8);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_box$1.expandByPoint(_boxMorphTargets.min);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_boxMorphTargets.max);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t_box$1.getCenter(center); // second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\n\t\t\t\tlet maxRadiusSq = 0;\n\n\t\t\t\tfor (let i = 0, il = position.count; i < il; i++) {\n\t\t\t\t\t_vector$8.fromBufferAttribute(position, i);\n\n\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n\t\t\t\t} // process morph attributes if present\n\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\t\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\t\tfor (let j = 0, jl = morphAttribute.count; j < jl; j++) {\n\t\t\t\t\t\t\t_vector$8.fromBufferAttribute(morphAttribute, j);\n\n\t\t\t\t\t\t\tif (morphTargetsRelative) {\n\t\t\t\t\t\t\t\t_offset.fromBufferAttribute(position, j);\n\n\t\t\t\t\t\t\t\t_vector$8.add(_offset);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n\t\t\t\tif (isNaN(this.boundingSphere.radius)) {\n\t\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcomputeTangents() {\n\t\t\tconst index = this.index;\n\t\t\tconst attributes = this.attributes; // based on http://www.terathon.com/code/tangent.html\n\t\t\t// (per vertex tangents)\n\n\t\t\tif (index === null || attributes.position === undefined || attributes.normal === undefined || attributes.uv === undefined) {\n\t\t\t\tconsole.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst indices = index.array;\n\t\t\tconst positions = attributes.position.array;\n\t\t\tconst normals = attributes.normal.array;\n\t\t\tconst uvs = attributes.uv.array;\n\t\t\tconst nVertices = positions.length / 3;\n\n\t\t\tif (attributes.tangent === undefined) {\n\t\t\t\tthis.setAttribute('tangent', new BufferAttribute(new Float32Array(4 * nVertices), 4));\n\t\t\t}\n\n\t\t\tconst tangents = attributes.tangent.array;\n\t\t\tconst tan1 = [],\n\t\t\t\t\t\ttan2 = [];\n\n\t\t\tfor (let i = 0; i < nVertices; i++) {\n\t\t\t\ttan1[i] = new Vector3();\n\t\t\t\ttan2[i] = new Vector3();\n\t\t\t}\n\n\t\t\tconst vA = new Vector3(),\n\t\t\t\t\t\tvB = new Vector3(),\n\t\t\t\t\t\tvC = new Vector3(),\n\t\t\t\t\t\tuvA = new Vector2(),\n\t\t\t\t\t\tuvB = new Vector2(),\n\t\t\t\t\t\tuvC = new Vector2(),\n\t\t\t\t\t\tsdir = new Vector3(),\n\t\t\t\t\t\ttdir = new Vector3();\n\n\t\t\tfunction handleTriangle(a, b, c) {\n\t\t\t\tvA.fromArray(positions, a * 3);\n\t\t\t\tvB.fromArray(positions, b * 3);\n\t\t\t\tvC.fromArray(positions, c * 3);\n\t\t\t\tuvA.fromArray(uvs, a * 2);\n\t\t\t\tuvB.fromArray(uvs, b * 2);\n\t\t\t\tuvC.fromArray(uvs, c * 2);\n\t\t\t\tvB.sub(vA);\n\t\t\t\tvC.sub(vA);\n\t\t\t\tuvB.sub(uvA);\n\t\t\t\tuvC.sub(uvA);\n\t\t\t\tconst r = 1.0 / (uvB.x * uvC.y - uvC.x * uvB.y); // silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\t\tif (!isFinite(r)) return;\n\t\t\t\tsdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC, -uvB.y).multiplyScalar(r);\n\t\t\t\ttdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB, -uvC.x).multiplyScalar(r);\n\t\t\t\ttan1[a].add(sdir);\n\t\t\t\ttan1[b].add(sdir);\n\t\t\t\ttan1[c].add(sdir);\n\t\t\t\ttan2[a].add(tdir);\n\t\t\t\ttan2[b].add(tdir);\n\t\t\t\ttan2[c].add(tdir);\n\t\t\t}\n\n\t\t\tlet groups = this.groups;\n\n\t\t\tif (groups.length === 0) {\n\t\t\t\tgroups = [{\n\t\t\t\t\tstart: 0,\n\t\t\t\t\tcount: indices.length\n\t\t\t\t}];\n\t\t\t}\n\n\t\t\tfor (let i = 0, il = groups.length; i < il; ++i) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor (let j = start, jl = start + count; j < jl; j += 3) {\n\t\t\t\t\thandleTriangle(indices[j + 0], indices[j + 1], indices[j + 2]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst tmp = new Vector3(),\n\t\t\t\t\t\ttmp2 = new Vector3();\n\t\t\tconst n = new Vector3(),\n\t\t\t\t\t\tn2 = new Vector3();\n\n\t\t\tfunction handleVertex(v) {\n\t\t\t\tn.fromArray(normals, v * 3);\n\t\t\t\tn2.copy(n);\n\t\t\t\tconst t = tan1[v]; // Gram-Schmidt orthogonalize\n\n\t\t\t\ttmp.copy(t);\n\t\t\t\ttmp.sub(n.multiplyScalar(n.dot(t))).normalize(); // Calculate handedness\n\n\t\t\t\ttmp2.crossVectors(n2, t);\n\t\t\t\tconst test = tmp2.dot(tan2[v]);\n\t\t\t\tconst w = test < 0.0 ? -1.0 : 1.0;\n\t\t\t\ttangents[v * 4] = tmp.x;\n\t\t\t\ttangents[v * 4 + 1] = tmp.y;\n\t\t\t\ttangents[v * 4 + 2] = tmp.z;\n\t\t\t\ttangents[v * 4 + 3] = w;\n\t\t\t}\n\n\t\t\tfor (let i = 0, il = groups.length; i < il; ++i) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor (let j = start, jl = start + count; j < jl; j += 3) {\n\t\t\t\t\thandleVertex(indices[j + 0]);\n\t\t\t\t\thandleVertex(indices[j + 1]);\n\t\t\t\t\thandleVertex(indices[j + 2]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcomputeVertexNormals() {\n\t\t\tconst index = this.index;\n\t\t\tconst positionAttribute = this.getAttribute('position');\n\n\t\t\tif (positionAttribute !== undefined) {\n\t\t\t\tlet normalAttribute = this.getAttribute('normal');\n\n\t\t\t\tif (normalAttribute === undefined) {\n\t\t\t\t\tnormalAttribute = new BufferAttribute(new Float32Array(positionAttribute.count * 3), 3);\n\t\t\t\t\tthis.setAttribute('normal', normalAttribute);\n\t\t\t\t} else {\n\t\t\t\t\t// reset existing normals to zero\n\t\t\t\t\tfor (let i = 0, il = normalAttribute.count; i < il; i++) {\n\t\t\t\t\t\tnormalAttribute.setXYZ(i, 0, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst pA = new Vector3(),\n\t\t\t\t\t\t\tpB = new Vector3(),\n\t\t\t\t\t\t\tpC = new Vector3();\n\t\t\t\tconst nA = new Vector3(),\n\t\t\t\t\t\t\tnB = new Vector3(),\n\t\t\t\t\t\t\tnC = new Vector3();\n\t\t\t\tconst cb = new Vector3(),\n\t\t\t\t\t\t\tab = new Vector3(); // indexed elements\n\n\t\t\t\tif (index) {\n\t\t\t\t\tfor (let i = 0, il = index.count; i < il; i += 3) {\n\t\t\t\t\t\tconst vA = index.getX(i + 0);\n\t\t\t\t\t\tconst vB = index.getX(i + 1);\n\t\t\t\t\t\tconst vC = index.getX(i + 2);\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, vA);\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, vB);\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, vC);\n\t\t\t\t\t\tcb.subVectors(pC, pB);\n\t\t\t\t\t\tab.subVectors(pA, pB);\n\t\t\t\t\t\tcb.cross(ab);\n\t\t\t\t\t\tnA.fromBufferAttribute(normalAttribute, vA);\n\t\t\t\t\t\tnB.fromBufferAttribute(normalAttribute, vB);\n\t\t\t\t\t\tnC.fromBufferAttribute(normalAttribute, vC);\n\t\t\t\t\t\tnA.add(cb);\n\t\t\t\t\t\tnB.add(cb);\n\t\t\t\t\t\tnC.add(cb);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vA, nA.x, nA.y, nA.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vB, nB.x, nB.y, nB.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vC, nC.x, nC.y, nC.z);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\t\t\t\t\tfor (let i = 0, il = positionAttribute.count; i < il; i += 3) {\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, i + 0);\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, i + 1);\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, i + 2);\n\t\t\t\t\t\tcb.subVectors(pC, pB);\n\t\t\t\t\t\tab.subVectors(pA, pB);\n\t\t\t\t\t\tcb.cross(ab);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 0, cb.x, cb.y, cb.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 1, cb.x, cb.y, cb.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 2, cb.x, cb.y, cb.z);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\t\t\t\tnormalAttribute.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t\tmerge(geometry, offset) {\n\t\t\tif (!(geometry && geometry.isBufferGeometry)) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (offset === undefined) {\n\t\t\t\toffset = 0;\n\t\t\t\tconsole.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');\n\t\t\t}\n\n\t\t\tconst attributes = this.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tif (geometry.attributes[key] === undefined) continue;\n\t\t\t\tconst attribute1 = attributes[key];\n\t\t\t\tconst attributeArray1 = attribute1.array;\n\t\t\t\tconst attribute2 = geometry.attributes[key];\n\t\t\t\tconst attributeArray2 = attribute2.array;\n\t\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\t\tconst length = Math.min(attributeArray2.length, attributeArray1.length - attributeOffset);\n\n\t\t\t\tfor (let i = 0, j = attributeOffset; i < length; i++, j++) {\n\t\t\t\t\tattributeArray1[j] = attributeArray2[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tnormalizeNormals() {\n\t\t\tconst normals = this.attributes.normal;\n\n\t\t\tfor (let i = 0, il = normals.count; i < il; i++) {\n\t\t\t\t_vector$8.fromBufferAttribute(normals, i);\n\n\t\t\t\t_vector$8.normalize();\n\n\t\t\t\tnormals.setXYZ(i, _vector$8.x, _vector$8.y, _vector$8.z);\n\t\t\t}\n\t\t}\n\n\t\ttoNonIndexed() {\n\t\t\tfunction convertBufferAttribute(attribute, indices) {\n\t\t\t\tconst array = attribute.array;\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst normalized = attribute.normalized;\n\t\t\t\tconst array2 = new array.constructor(indices.length * itemSize);\n\t\t\t\tlet index = 0,\n\t\t\t\t\t\tindex2 = 0;\n\n\t\t\t\tfor (let i = 0, l = indices.length; i < l; i++) {\n\t\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\tindex = indices[i] * attribute.data.stride + attribute.offset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindex = indices[i] * itemSize;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let j = 0; j < itemSize; j++) {\n\t\t\t\t\t\tarray2[index2++] = array[index++];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute(array2, itemSize, normalized);\n\t\t\t} //\n\n\n\t\t\tif (this.index === null) {\n\t\t\t\tconsole.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst geometry2 = new BufferGeometry();\n\t\t\tconst indices = this.index.array;\n\t\t\tconst attributes = this.attributes; // attributes\n\n\t\t\tfor (const name in attributes) {\n\t\t\t\tconst attribute = attributes[name];\n\t\t\t\tconst newAttribute = convertBufferAttribute(attribute, indices);\n\t\t\t\tgeometry2.setAttribute(name, newAttribute);\n\t\t\t} // morph attributes\n\n\n\t\t\tconst morphAttributes = this.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst morphArray = [];\n\t\t\t\tconst morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor (let i = 0, il = morphAttribute.length; i < il; i++) {\n\t\t\t\t\tconst attribute = morphAttribute[i];\n\t\t\t\t\tconst newAttribute = convertBufferAttribute(attribute, indices);\n\t\t\t\t\tmorphArray.push(newAttribute);\n\t\t\t\t}\n\n\t\t\t\tgeometry2.morphAttributes[name] = morphArray;\n\t\t\t}\n\n\t\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative; // groups\n\n\t\t\tconst groups = this.groups;\n\n\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tgeometry2.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t}\n\n\t\t\treturn geometry2;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t}; // standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n\t\t\tif (this.parameters !== undefined) {\n\t\t\t\tconst parameters = this.parameters;\n\n\t\t\t\tfor (const key in parameters) {\n\t\t\t\t\tif (parameters[key] !== undefined) data[key] = parameters[key];\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\t\t\t} // for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\n\t\t\tdata.data = {\n\t\t\t\tattributes: {}\n\t\t\t};\n\t\t\tconst index = this.index;\n\n\t\t\tif (index !== null) {\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: Array.prototype.slice.call(index.array)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst attributes = this.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tdata.data.attributes[key] = attribute.toJSON(data.data);\n\t\t\t}\n\n\t\t\tconst morphAttributes = {};\n\t\t\tlet hasMorphAttributes = false;\n\n\t\t\tfor (const key in this.morphAttributes) {\n\t\t\t\tconst attributeArray = this.morphAttributes[key];\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0, il = attributeArray.length; i < il; i++) {\n\t\t\t\t\tconst attribute = attributeArray[i];\n\t\t\t\t\tarray.push(attribute.toJSON(data.data));\n\t\t\t\t}\n\n\t\t\t\tif (array.length > 0) {\n\t\t\t\t\tmorphAttributes[key] = array;\n\t\t\t\t\thasMorphAttributes = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasMorphAttributes) {\n\t\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\t\t\t}\n\n\t\t\tconst groups = this.groups;\n\n\t\t\tif (groups.length > 0) {\n\t\t\t\tdata.data.groups = JSON.parse(JSON.stringify(groups));\n\t\t\t}\n\n\t\t\tconst boundingSphere = this.boundingSphere;\n\n\t\t\tif (boundingSphere !== null) {\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\t// reset\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null; // used for storing cloned, shared data\n\n\t\t\tconst data = {}; // name\n\n\t\t\tthis.name = source.name; // index\n\n\t\t\tconst index = source.index;\n\n\t\t\tif (index !== null) {\n\t\t\t\tthis.setIndex(index.clone(data));\n\t\t\t} // attributes\n\n\n\t\t\tconst attributes = source.attributes;\n\n\t\t\tfor (const name in attributes) {\n\t\t\t\tconst attribute = attributes[name];\n\t\t\t\tthis.setAttribute(name, attribute.clone(data));\n\t\t\t} // morph attributes\n\n\n\t\t\tconst morphAttributes = source.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst array = [];\n\t\t\t\tconst morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor (let i = 0, l = morphAttribute.length; i < l; i++) {\n\t\t\t\t\tarray.push(morphAttribute[i].clone(data));\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[name] = array;\n\t\t\t}\n\n\t\t\tthis.morphTargetsRelative = source.morphTargetsRelative; // groups\n\n\t\t\tconst groups = source.groups;\n\n\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tthis.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t} // bounding box\n\n\n\t\t\tconst boundingBox = source.boundingBox;\n\n\t\t\tif (boundingBox !== null) {\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\t\t\t} // bounding sphere\n\n\n\t\t\tconst boundingSphere = source.boundingSphere;\n\n\t\t\tif (boundingSphere !== null) {\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\t\t\t} // draw range\n\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count; // user data\n\n\t\t\tthis.userData = source.userData; // geometry generator parameters\n\n\t\t\tif (source.parameters !== undefined) this.parameters = Object.assign({}, source.parameters);\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tBufferGeometry.prototype.isBufferGeometry = true;\n\n\tconst _inverseMatrix$2 = /*@__PURE__*/new Matrix4();\n\n\tconst _ray$2 = /*@__PURE__*/new Ray();\n\n\tconst _sphere$3 = /*@__PURE__*/new Sphere();\n\n\tconst _vA$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vB$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vC$1 = /*@__PURE__*/new Vector3();\n\n\tconst _tempA = /*@__PURE__*/new Vector3();\n\n\tconst _tempB = /*@__PURE__*/new Vector3();\n\n\tconst _tempC = /*@__PURE__*/new Vector3();\n\n\tconst _morphA = /*@__PURE__*/new Vector3();\n\n\tconst _morphB = /*@__PURE__*/new Vector3();\n\n\tconst _morphC = /*@__PURE__*/new Vector3();\n\n\tconst _uvA$1 = /*@__PURE__*/new Vector2();\n\n\tconst _uvB$1 = /*@__PURE__*/new Vector2();\n\n\tconst _uvC$1 = /*@__PURE__*/new Vector2();\n\n\tconst _intersectionPoint = /*@__PURE__*/new Vector3();\n\n\tconst _intersectionPointWorld = /*@__PURE__*/new Vector3();\n\n\tclass Mesh extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new MeshBasicMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Mesh';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\n\t\t\tif (source.morphTargetInfluences !== undefined) {\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\t\t\t}\n\n\t\t\tif (source.morphTargetDictionary !== undefined) {\n\t\t\t\tthis.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n\t\t\t}\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst material = this.material;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tif (material === undefined) return; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy(geometry.boundingSphere);\n\n\t\t\t_sphere$3.applyMatrix4(matrixWorld);\n\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$3) === false) return; //\n\n\t\t\t_inverseMatrix$2.copy(matrixWorld).invert();\n\n\t\t\t_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2); // Check boundingBox before continuing\n\n\n\t\t\tif (geometry.boundingBox !== null) {\n\t\t\t\tif (_ray$2.intersectsBox(geometry.boundingBox) === false) return;\n\t\t\t}\n\n\t\t\tlet intersection;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\t\tconst uv = geometry.attributes.uv;\n\t\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\t\tconst groups = geometry.groups;\n\t\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\t// indexed buffer geometry\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0, il = groups.length; i < il; i++) {\n\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\t\t\t\t\t\t\tconst start = Math.max(group.start, drawRange.start);\n\t\t\t\t\t\t\tconst end = Math.min(index.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));\n\n\t\t\t\t\t\t\tfor (let j = start, jl = end; j < jl; j += 3) {\n\t\t\t\t\t\t\t\tconst a = index.getX(j);\n\t\t\t\t\t\t\t\tconst b = index.getX(j + 1);\n\t\t\t\t\t\t\t\tconst c = index.getX(j + 2);\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\tfor (let i = start, il = end; i < il; i += 3) {\n\t\t\t\t\t\t\tconst a = index.getX(i);\n\t\t\t\t\t\t\tconst b = index.getX(i + 1);\n\t\t\t\t\t\t\tconst c = index.getX(i + 2);\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\n\n\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (position !== undefined) {\n\t\t\t\t\t// non-indexed buffer geometry\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0, il = groups.length; i < il; i++) {\n\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\t\t\t\t\t\t\tconst start = Math.max(group.start, drawRange.start);\n\t\t\t\t\t\t\tconst end = Math.min(position.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));\n\n\t\t\t\t\t\t\tfor (let j = start, jl = end; j < jl; j += 3) {\n\t\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\t\tconst c = j + 2;\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in non-indexed buffer semantics\n\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\t\tconst end = Math.min(position.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\tfor (let i = start, il = end; i < il; i += 3) {\n\t\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\t\tconst c = i + 2;\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\n\n\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t}\n\n\tMesh.prototype.isMesh = true;\n\n\tfunction checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n\t\tlet intersect;\n\n\t\tif (material.side === BackSide) {\n\t\t\tintersect = ray.intersectTriangle(pC, pB, pA, true, point);\n\t\t} else {\n\t\t\tintersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n\t\t}\n\n\t\tif (intersect === null) return null;\n\n\t\t_intersectionPointWorld.copy(point);\n\n\t\t_intersectionPointWorld.applyMatrix4(object.matrixWorld);\n\n\t\tconst distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\n\t\tif (distance < raycaster.near || distance > raycaster.far) return null;\n\t\treturn {\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectionPointWorld.clone(),\n\t\t\tobject: object\n\t\t};\n\t}\n\n\tfunction checkBufferGeometryIntersection(object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c) {\n\t\t_vA$1.fromBufferAttribute(position, a);\n\n\t\t_vB$1.fromBufferAttribute(position, b);\n\n\t\t_vC$1.fromBufferAttribute(position, c);\n\n\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\tif (morphPosition && morphInfluences) {\n\t\t\t_morphA.set(0, 0, 0);\n\n\t\t\t_morphB.set(0, 0, 0);\n\n\t\t\t_morphC.set(0, 0, 0);\n\n\t\t\tfor (let i = 0, il = morphPosition.length; i < il; i++) {\n\t\t\t\tconst influence = morphInfluences[i];\n\t\t\t\tconst morphAttribute = morphPosition[i];\n\t\t\t\tif (influence === 0) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute(morphAttribute, a);\n\n\t\t\t\t_tempB.fromBufferAttribute(morphAttribute, b);\n\n\t\t\t\t_tempC.fromBufferAttribute(morphAttribute, c);\n\n\t\t\t\tif (morphTargetsRelative) {\n\t\t\t\t\t_morphA.addScaledVector(_tempA, influence);\n\n\t\t\t\t\t_morphB.addScaledVector(_tempB, influence);\n\n\t\t\t\t\t_morphC.addScaledVector(_tempC, influence);\n\t\t\t\t} else {\n\t\t\t\t\t_morphA.addScaledVector(_tempA.sub(_vA$1), influence);\n\n\t\t\t\t\t_morphB.addScaledVector(_tempB.sub(_vB$1), influence);\n\n\t\t\t\t\t_morphC.addScaledVector(_tempC.sub(_vC$1), influence);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_vA$1.add(_morphA);\n\n\t\t\t_vB$1.add(_morphB);\n\n\t\t\t_vC$1.add(_morphC);\n\t\t}\n\n\t\tif (object.isSkinnedMesh) {\n\t\t\tobject.boneTransform(a, _vA$1);\n\t\t\tobject.boneTransform(b, _vB$1);\n\t\t\tobject.boneTransform(c, _vC$1);\n\t\t}\n\n\t\tconst intersection = checkIntersection(object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint);\n\n\t\tif (intersection) {\n\t\t\tif (uv) {\n\t\t\t\t_uvA$1.fromBufferAttribute(uv, a);\n\n\t\t\t\t_uvB$1.fromBufferAttribute(uv, b);\n\n\t\t\t\t_uvC$1.fromBufferAttribute(uv, c);\n\n\t\t\t\tintersection.uv = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\n\t\t\t}\n\n\t\t\tif (uv2) {\n\t\t\t\t_uvA$1.fromBufferAttribute(uv2, a);\n\n\t\t\t\t_uvB$1.fromBufferAttribute(uv2, b);\n\n\t\t\t\t_uvC$1.fromBufferAttribute(uv2, c);\n\n\t\t\t\tintersection.uv2 = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\n\t\t\t}\n\n\t\t\tconst face = {\n\t\t\t\ta: a,\n\t\t\t\tb: b,\n\t\t\t\tc: c,\n\t\t\t\tnormal: new Vector3(),\n\t\t\t\tmaterialIndex: 0\n\t\t\t};\n\t\t\tTriangle.getNormal(_vA$1, _vB$1, _vC$1, face.normal);\n\t\t\tintersection.face = face;\n\t\t}\n\n\t\treturn intersection;\n\t}\n\n\tclass BoxGeometry extends BufferGeometry {\n\t\tconstructor(width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'BoxGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\t\t\tconst scope = this; // segments\n\n\t\t\twidthSegments = Math.floor(widthSegments);\n\t\t\theightSegments = Math.floor(heightSegments);\n\t\t\tdepthSegments = Math.floor(depthSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet numberOfVertices = 0;\n\t\t\tlet groupStart = 0; // build each side of the box geometry\n\n\t\t\tbuildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n\t\t\tbuildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n\t\t\tbuildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n\t\t\tbuildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n\t\t\tbuildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n\t\t\tbuildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\tfunction buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n\t\t\t\tconst segmentWidth = width / gridX;\n\t\t\t\tconst segmentHeight = height / gridY;\n\t\t\t\tconst widthHalf = width / 2;\n\t\t\t\tconst heightHalf = height / 2;\n\t\t\t\tconst depthHalf = depth / 2;\n\t\t\t\tconst gridX1 = gridX + 1;\n\t\t\t\tconst gridY1 = gridY + 1;\n\t\t\t\tlet vertexCounter = 0;\n\t\t\t\tlet groupCount = 0;\n\t\t\t\tconst vector = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\n\t\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\n\t\t\t\t\t\tconst x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n\t\t\t\t\t\tvector[u] = x * udir;\n\t\t\t\t\t\tvector[v] = y * vdir;\n\t\t\t\t\t\tvector[w] = depthHalf; // now apply vector to vertex buffer\n\n\t\t\t\t\t\tvertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n\t\t\t\t\t\tvector[u] = 0;\n\t\t\t\t\t\tvector[v] = 0;\n\t\t\t\t\t\tvector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n\t\t\t\t\t\tnormals.push(vector.x, vector.y, vector.z); // uvs\n\n\t\t\t\t\t\tuvs.push(ix / gridX);\n\t\t\t\t\t\tuvs.push(1 - iy / gridY); // counters\n\n\t\t\t\t\t\tvertexCounter += 1;\n\t\t\t\t\t}\n\t\t\t\t} // indices\n\t\t\t\t// 1. you need three indices to draw a single face\n\t\t\t\t// 2. a single segment consists of two faces\n\t\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\n\t\t\t\tfor (let iy = 0; iy < gridY; iy++) {\n\t\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\n\t\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * (iy + 1);\n\t\t\t\t\t\tconst c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n\t\t\t\t\t\tconst d = numberOfVertices + (ix + 1) + gridX1 * iy; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d); // increase counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\t\t\t\t\t}\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount; // update total number of vertices\n\n\t\t\t\tnumberOfVertices += vertexCounter;\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new BoxGeometry(data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n\t\t}\n\n\t}\n\n\t/**\n\t * Uniform Utilities\n\t */\n\tfunction cloneUniforms(src) {\n\t\tconst dst = {};\n\n\t\tfor (const u in src) {\n\t\t\tdst[u] = {};\n\n\t\t\tfor (const p in src[u]) {\n\t\t\t\tconst property = src[u][p];\n\n\t\t\t\tif (property && (property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture || property.isQuaternion)) {\n\t\t\t\t\tdst[u][p] = property.clone();\n\t\t\t\t} else if (Array.isArray(property)) {\n\t\t\t\t\tdst[u][p] = property.slice();\n\t\t\t\t} else {\n\t\t\t\t\tdst[u][p] = property;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\tfunction mergeUniforms(uniforms) {\n\t\tconst merged = {};\n\n\t\tfor (let u = 0; u < uniforms.length; u++) {\n\t\t\tconst tmp = cloneUniforms(uniforms[u]);\n\n\t\t\tfor (const p in tmp) {\n\t\t\t\tmerged[p] = tmp[p];\n\t\t\t}\n\t\t}\n\n\t\treturn merged;\n\t} // Legacy\n\n\tconst UniformsUtils = {\n\t\tclone: cloneUniforms,\n\t\tmerge: mergeUniforms\n\t};\n\n\tvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\n\tvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n\t/**\n\t * parameters = {\n\t *\tdefines: { \"label\" : \"value\" },\n\t *\tuniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *\tfragmentShader: <string>,\n\t *\tvertexShader: <string>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tlights: <bool>\n\t * }\n\t */\n\n\tclass ShaderMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShaderMaterial';\n\t\t\tthis.defines = {};\n\t\t\tthis.uniforms = {};\n\t\t\tthis.vertexShader = default_vertex;\n\t\t\tthis.fragmentShader = default_fragment;\n\t\t\tthis.linewidth = 1;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false; // set to use scene fog\n\n\t\t\tthis.lights = false; // set to use scene lights\n\n\t\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\t\tthis.extensions = {\n\t\t\t\tderivatives: false,\n\t\t\t\t// set to use derivatives\n\t\t\t\tfragDepth: false,\n\t\t\t\t// set to use fragment depth values\n\t\t\t\tdrawBuffers: false,\n\t\t\t\t// set to use draw buffers\n\t\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\n\t\t\t}; // When rendered geometry doesn't include these attributes but the material does,\n\t\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\n\t\t\tthis.defaultAttributeValues = {\n\t\t\t\t'color': [1, 1, 1],\n\t\t\t\t'uv': [0, 0],\n\t\t\t\t'uv2': [0, 0]\n\t\t\t};\n\t\t\tthis.index0AttributeName = undefined;\n\t\t\tthis.uniformsNeedUpdate = false;\n\t\t\tthis.glslVersion = null;\n\n\t\t\tif (parameters !== undefined) {\n\t\t\t\tif (parameters.attributes !== undefined) {\n\t\t\t\t\tconsole.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n\t\t\t\t}\n\n\t\t\t\tthis.setValues(parameters);\n\t\t\t}\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.fragmentShader = source.fragmentShader;\n\t\t\tthis.vertexShader = source.vertexShader;\n\t\t\tthis.uniforms = cloneUniforms(source.uniforms);\n\t\t\tthis.defines = Object.assign({}, source.defines);\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.lights = source.lights;\n\t\t\tthis.clipping = source.clipping;\n\t\t\tthis.extensions = Object.assign({}, source.extensions);\n\t\t\tthis.glslVersion = source.glslVersion;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.glslVersion = this.glslVersion;\n\t\t\tdata.uniforms = {};\n\n\t\t\tfor (const name in this.uniforms) {\n\t\t\t\tconst uniform = this.uniforms[name];\n\t\t\t\tconst value = uniform.value;\n\n\t\t\t\tif (value && value.isTexture) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 't',\n\t\t\t\t\t\tvalue: value.toJSON(meta).uuid\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isColor) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'c',\n\t\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector2) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v2',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector3) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v3',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector4) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v4',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isMatrix3) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'm3',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isMatrix4) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'm4',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t}; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Object.keys(this.defines).length > 0) data.defines = this.defines;\n\t\t\tdata.vertexShader = this.vertexShader;\n\t\t\tdata.fragmentShader = this.fragmentShader;\n\t\t\tconst extensions = {};\n\n\t\t\tfor (const key in this.extensions) {\n\t\t\t\tif (this.extensions[key] === true) extensions[key] = true;\n\t\t\t}\n\n\t\t\tif (Object.keys(extensions).length > 0) data.extensions = extensions;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tclass Camera extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Camera';\n\t\t\tthis.matrixWorldInverse = new Matrix4();\n\t\t\tthis.projectionMatrix = new Matrix4();\n\t\t\tthis.projectionMatrixInverse = new Matrix4();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.matrixWorldInverse.copy(source.matrixWorldInverse);\n\t\t\tthis.projectionMatrix.copy(source.projectionMatrix);\n\t\t\tthis.projectionMatrixInverse.copy(source.projectionMatrixInverse);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetWorldDirection(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tconst e = this.matrixWorld.elements;\n\t\t\treturn target.set(-e[8], -e[9], -e[10]).normalize();\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\n\t\t}\n\n\t\tupdateWorldMatrix(updateParents, updateChildren) {\n\t\t\tsuper.updateWorldMatrix(updateParents, updateChildren);\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tCamera.prototype.isCamera = true;\n\n\tclass PerspectiveCamera extends Camera {\n\t\tconstructor(fov = 50, aspect = 1, near = 0.1, far = 2000) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PerspectiveCamera';\n\t\t\tthis.fov = fov;\n\t\t\tthis.zoom = 1;\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.focus = 10;\n\t\t\tthis.aspect = aspect;\n\t\t\tthis.view = null;\n\t\t\tthis.filmGauge = 35; // width of the film (default in millimeters)\n\n\t\t\tthis.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\t\t\treturn this;\n\t\t}\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\n\n\t\tsetFocalLength(focalLength) {\n\t\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\t\t\tthis.fov = RAD2DEG * 2 * Math.atan(vExtentSlope);\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\n\n\t\tgetFocalLength() {\n\t\t\tconst vExtentSlope = Math.tan(DEG2RAD * 0.5 * this.fov);\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\t\t}\n\n\t\tgetEffectiveFOV() {\n\t\t\treturn RAD2DEG * 2 * Math.atan(Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom);\n\t\t}\n\n\t\tgetFilmWidth() {\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min(this.aspect, 1);\n\t\t}\n\n\t\tgetFilmHeight() {\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max(this.aspect, 1);\n\t\t}\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *\t +---+---+---+\n\t\t *\t | A | B | C |\n\t\t *\t +---+---+---+\n\t\t *\t | D | E | F |\n\t\t *\t +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *\t const w = 1920;\n\t\t *\t const h = 1080;\n\t\t *\t const fullWidth = w * 3;\n\t\t *\t const fullHeight = h * 2;\n\t\t *\n\t\t *\t --A--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *\t --B--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *\t --C--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *\t --D--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *\t --E--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *\t --F--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *\t Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\n\n\t\tsetViewOffset(fullWidth, fullHeight, x, y, width, height) {\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tif (this.view === null) {\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tclearViewOffset() {\n\t\t\tif (this.view !== null) {\n\t\t\t\tthis.view.enabled = false;\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tupdateProjectionMatrix() {\n\t\t\tconst near = this.near;\n\t\t\tlet top = near * Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom;\n\t\t\tlet height = 2 * top;\n\t\t\tlet width = this.aspect * height;\n\t\t\tlet left = -0.5 * width;\n\t\t\tconst view = this.view;\n\n\t\t\tif (this.view !== null && this.view.enabled) {\n\t\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\t\t\t\tfullHeight = view.fullHeight;\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\t\t\t}\n\n\t\t\tconst skew = this.filmOffset;\n\t\t\tif (skew !== 0) left += near * skew / this.getFilmWidth();\n\t\t\tthis.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\t\t\tdata.object.aspect = this.aspect;\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tPerspectiveCamera.prototype.isPerspectiveCamera = true;\n\n\tconst fov = 90,\n\t\t\t\taspect = 1;\n\n\tclass CubeCamera extends Object3D {\n\t\tconstructor(near, far, renderTarget) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubeCamera';\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget !== true) {\n\t\t\t\tconsole.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.renderTarget = renderTarget;\n\t\t\tconst cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPX.layers = this.layers;\n\t\t\tcameraPX.up.set(0, -1, 0);\n\t\t\tcameraPX.lookAt(new Vector3(1, 0, 0));\n\t\t\tthis.add(cameraPX);\n\t\t\tconst cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNX.layers = this.layers;\n\t\t\tcameraNX.up.set(0, -1, 0);\n\t\t\tcameraNX.lookAt(new Vector3(-1, 0, 0));\n\t\t\tthis.add(cameraNX);\n\t\t\tconst cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPY.layers = this.layers;\n\t\t\tcameraPY.up.set(0, 0, 1);\n\t\t\tcameraPY.lookAt(new Vector3(0, 1, 0));\n\t\t\tthis.add(cameraPY);\n\t\t\tconst cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNY.layers = this.layers;\n\t\t\tcameraNY.up.set(0, 0, -1);\n\t\t\tcameraNY.lookAt(new Vector3(0, -1, 0));\n\t\t\tthis.add(cameraNY);\n\t\t\tconst cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPZ.layers = this.layers;\n\t\t\tcameraPZ.up.set(0, -1, 0);\n\t\t\tcameraPZ.lookAt(new Vector3(0, 0, 1));\n\t\t\tthis.add(cameraPZ);\n\t\t\tconst cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNZ.layers = this.layers;\n\t\t\tcameraNZ.up.set(0, -1, 0);\n\t\t\tcameraNZ.lookAt(new Vector3(0, 0, -1));\n\t\t\tthis.add(cameraNZ);\n\t\t}\n\n\t\tupdate(renderer, scene) {\n\t\t\tif (this.parent === null) this.updateMatrixWorld();\n\t\t\tconst renderTarget = this.renderTarget;\n\t\t\tconst [cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ] = this.children;\n\t\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\trenderer.xr.enabled = false;\n\t\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\t\t\trenderer.setRenderTarget(renderTarget, 0);\n\t\t\trenderer.render(scene, cameraPX);\n\t\t\trenderer.setRenderTarget(renderTarget, 1);\n\t\t\trenderer.render(scene, cameraNX);\n\t\t\trenderer.setRenderTarget(renderTarget, 2);\n\t\t\trenderer.render(scene, cameraPY);\n\t\t\trenderer.setRenderTarget(renderTarget, 3);\n\t\t\trenderer.render(scene, cameraNY);\n\t\t\trenderer.setRenderTarget(renderTarget, 4);\n\t\t\trenderer.render(scene, cameraPZ);\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\t\t\trenderer.setRenderTarget(renderTarget, 5);\n\t\t\trenderer.render(scene, cameraNZ);\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t\trenderer.xr.enabled = currentXrEnabled;\n\t\t}\n\n\t}\n\n\tclass CubeTexture extends Texture {\n\t\tconstructor(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n\t\t\timages = images !== undefined ? images : [];\n\t\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\t\tsuper(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\t\tthis.flipY = false;\n\t\t}\n\n\t\tget images() {\n\t\t\treturn this.image;\n\t\t}\n\n\t\tset images(value) {\n\t\t\tthis.image = value;\n\t\t}\n\n\t}\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\t\tconstructor(size, options, dummy) {\n\t\t\tif (Number.isInteger(options)) {\n\t\t\t\tconsole.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');\n\t\t\t\toptions = dummy;\n\t\t\t}\n\n\t\t\tsuper(size, size, options);\n\t\t\toptions = options || {}; // By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\t\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\t\tthis.texture = new CubeTexture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n\t\t\tthis.texture.isRenderTargetTexture = true;\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\t\t\tthis.texture._needsFlipEnvMap = false;\n\t\t}\n\n\t\tfromEquirectangularTexture(renderer, texture) {\n\t\t\tthis.texture.type = texture.type;\n\t\t\tthis.texture.format = RGBAFormat; // see #18859\n\n\t\t\tthis.texture.encoding = texture.encoding;\n\t\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\t\tthis.texture.minFilter = texture.minFilter;\n\t\t\tthis.texture.magFilter = texture.magFilter;\n\t\t\tconst shader = {\n\t\t\t\tuniforms: {\n\t\t\t\t\ttEquirect: {\n\t\t\t\t\t\tvalue: null\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tvertexShader:\n\t\t\t\t/* glsl */\n\t\t\t\t`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\tfragmentShader:\n\t\t\t\t/* glsl */\n\t\t\t\t`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t\t};\n\t\t\tconst geometry = new BoxGeometry(5, 5, 5);\n\t\t\tconst material = new ShaderMaterial({\n\t\t\t\tname: 'CubemapFromEquirect',\n\t\t\t\tuniforms: cloneUniforms(shader.uniforms),\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\t\tside: BackSide,\n\t\t\t\tblending: NoBlending\n\t\t\t});\n\t\t\tmaterial.uniforms.tEquirect.value = texture;\n\t\t\tconst mesh = new Mesh(geometry, material);\n\t\t\tconst currentMinFilter = texture.minFilter; // Avoid blurred poles\n\n\t\t\tif (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;\n\t\t\tconst camera = new CubeCamera(1, 10, this);\n\t\t\tcamera.update(renderer, mesh);\n\t\t\ttexture.minFilter = currentMinFilter;\n\t\t\tmesh.geometry.dispose();\n\t\t\tmesh.material.dispose();\n\t\t\treturn this;\n\t\t}\n\n\t\tclear(renderer, color, depth, stencil) {\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\trenderer.setRenderTarget(this, i);\n\t\t\t\trenderer.clear(color, depth, stencil);\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t}\n\n\t}\n\n\tWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\n\tconst _vector1 = /*@__PURE__*/new Vector3();\n\n\tconst _vector2 = /*@__PURE__*/new Vector3();\n\n\tconst _normalMatrix = /*@__PURE__*/new Matrix3();\n\n\tclass Plane {\n\t\tconstructor(normal = new Vector3(1, 0, 0), constant = 0) {\n\t\t\t// normal is assumed to be normalized\n\t\t\tthis.normal = normal;\n\t\t\tthis.constant = constant;\n\t\t}\n\n\t\tset(normal, constant) {\n\t\t\tthis.normal.copy(normal);\n\t\t\tthis.constant = constant;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponents(x, y, z, w) {\n\t\t\tthis.normal.set(x, y, z);\n\t\t\tthis.constant = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromNormalAndCoplanarPoint(normal, point) {\n\t\t\tthis.normal.copy(normal);\n\t\t\tthis.constant = -point.dot(this.normal);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCoplanarPoints(a, b, c) {\n\t\t\tconst normal = _vector1.subVectors(c, b).cross(_vector2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\n\t\t\tthis.setFromNormalAndCoplanarPoint(normal, a);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(plane) {\n\t\t\tthis.normal.copy(plane.normal);\n\t\t\tthis.constant = plane.constant;\n\t\t\treturn this;\n\t\t}\n\n\t\tnormalize() {\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\t\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar(inverseNormalLength);\n\t\t\tthis.constant *= inverseNormalLength;\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.constant *= -1;\n\t\t\tthis.normal.negate();\n\t\t\treturn this;\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn this.normal.dot(point) + this.constant;\n\t\t}\n\n\t\tdistanceToSphere(sphere) {\n\t\t\treturn this.distanceToPoint(sphere.center) - sphere.radius;\n\t\t}\n\n\t\tprojectPoint(point, target) {\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\n\t\t}\n\n\t\tintersectLine(line, target) {\n\t\t\tconst direction = line.delta(_vector1);\n\t\t\tconst denominator = this.normal.dot(direction);\n\n\t\t\tif (denominator === 0) {\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif (this.distanceToPoint(line.start) === 0) {\n\t\t\t\t\treturn target.copy(line.start);\n\t\t\t\t} // Unsure if this is the correct method to handle this case.\n\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n\t\t\tif (t < 0 || t > 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn target.copy(direction).multiplyScalar(t).add(line.start);\n\t\t}\n\n\t\tintersectsLine(line) {\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\t\t\tconst startSign = this.distanceToPoint(line.start);\n\t\t\tconst endSign = this.distanceToPoint(line.end);\n\t\t\treturn startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsPlane(this);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\treturn sphere.intersectsPlane(this);\n\t\t}\n\n\t\tcoplanarPoint(target) {\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.constant);\n\t\t}\n\n\t\tapplyMatrix4(matrix, optionalNormalMatrix) {\n\t\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);\n\n\t\t\tconst referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);\n\t\t\tconst normal = this.normal.applyMatrix3(normalMatrix).normalize();\n\t\t\tthis.constant = -referencePoint.dot(normal);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.constant -= offset.dot(this.normal);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(plane) {\n\t\t\treturn plane.normal.equals(this.normal) && plane.constant === this.constant;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tPlane.prototype.isPlane = true;\n\n\tconst _sphere$2 = /*@__PURE__*/new Sphere();\n\n\tconst _vector$7 = /*@__PURE__*/new Vector3();\n\n\tclass Frustum {\n\t\tconstructor(p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane()) {\n\t\t\tthis.planes = [p0, p1, p2, p3, p4, p5];\n\t\t}\n\n\t\tset(p0, p1, p2, p3, p4, p5) {\n\t\t\tconst planes = this.planes;\n\t\t\tplanes[0].copy(p0);\n\t\t\tplanes[1].copy(p1);\n\t\t\tplanes[2].copy(p2);\n\t\t\tplanes[3].copy(p3);\n\t\t\tplanes[4].copy(p4);\n\t\t\tplanes[5].copy(p5);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(frustum) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tplanes[i].copy(frustum.planes[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromProjectionMatrix(m) {\n\t\t\tconst planes = this.planes;\n\t\t\tconst me = m.elements;\n\t\t\tconst me0 = me[0],\n\t\t\t\t\t\tme1 = me[1],\n\t\t\t\t\t\tme2 = me[2],\n\t\t\t\t\t\tme3 = me[3];\n\t\t\tconst me4 = me[4],\n\t\t\t\t\t\tme5 = me[5],\n\t\t\t\t\t\tme6 = me[6],\n\t\t\t\t\t\tme7 = me[7];\n\t\t\tconst me8 = me[8],\n\t\t\t\t\t\tme9 = me[9],\n\t\t\t\t\t\tme10 = me[10],\n\t\t\t\t\t\tme11 = me[11];\n\t\t\tconst me12 = me[12],\n\t\t\t\t\t\tme13 = me[13],\n\t\t\t\t\t\tme14 = me[14],\n\t\t\t\t\t\tme15 = me[15];\n\t\t\tplanes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n\t\t\tplanes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n\t\t\tplanes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n\t\t\tplanes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n\t\t\tplanes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n\t\t\tplanes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n\t\t\treturn this;\n\t\t}\n\n\t\tintersectsObject(object) {\n\t\t\tconst geometry = object.geometry;\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$2.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n\n\t\t\treturn this.intersectsSphere(_sphere$2);\n\t\t}\n\n\t\tintersectsSprite(sprite) {\n\t\t\t_sphere$2.center.set(0, 0, 0);\n\n\t\t\t_sphere$2.radius = 0.7071067811865476;\n\n\t\t\t_sphere$2.applyMatrix4(sprite.matrixWorld);\n\n\t\t\treturn this.intersectsSphere(_sphere$2);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\tconst planes = this.planes;\n\t\t\tconst center = sphere.center;\n\t\t\tconst negRadius = -sphere.radius;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst distance = planes[i].distanceToPoint(center);\n\n\t\t\t\tif (distance < negRadius) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst plane = planes[i]; // corner at max distance\n\n\t\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif (plane.distanceToPoint(_vector$7) < 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tif (planes[i].distanceToPoint(point) < 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tfunction WebGLAnimation() {\n\t\tlet context = null;\n\t\tlet isAnimating = false;\n\t\tlet animationLoop = null;\n\t\tlet requestId = null;\n\n\t\tfunction onAnimationFrame(time, frame) {\n\t\t\tanimationLoop(time, frame);\n\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\n\t\t}\n\n\t\treturn {\n\t\t\tstart: function () {\n\t\t\t\tif (isAnimating === true) return;\n\t\t\t\tif (animationLoop === null) return;\n\t\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\n\t\t\t\tisAnimating = true;\n\t\t\t},\n\t\t\tstop: function () {\n\t\t\t\tcontext.cancelAnimationFrame(requestId);\n\t\t\t\tisAnimating = false;\n\t\t\t},\n\t\t\tsetAnimationLoop: function (callback) {\n\t\t\t\tanimationLoop = callback;\n\t\t\t},\n\t\t\tsetContext: function (value) {\n\t\t\t\tcontext = value;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction WebGLAttributes(gl, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst buffers = new WeakMap();\n\n\t\tfunction createBuffer(attribute, bufferType) {\n\t\t\tconst array = attribute.array;\n\t\t\tconst usage = attribute.usage;\n\t\t\tconst buffer = gl.createBuffer();\n\t\t\tgl.bindBuffer(bufferType, buffer);\n\t\t\tgl.bufferData(bufferType, array, usage);\n\t\t\tattribute.onUploadCallback();\n\t\t\tlet type = gl.FLOAT;\n\n\t\t\tif (array instanceof Float32Array) {\n\t\t\t\ttype = gl.FLOAT;\n\t\t\t} else if (array instanceof Float64Array) {\n\t\t\t\tconsole.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\n\t\t\t} else if (array instanceof Uint16Array) {\n\t\t\t\tif (attribute.isFloat16BufferAttribute) {\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\ttype = gl.HALF_FLOAT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\t\t\t\t}\n\t\t\t} else if (array instanceof Int16Array) {\n\t\t\t\ttype = gl.SHORT;\n\t\t\t} else if (array instanceof Uint32Array) {\n\t\t\t\ttype = gl.UNSIGNED_INT;\n\t\t\t} else if (array instanceof Int32Array) {\n\t\t\t\ttype = gl.INT;\n\t\t\t} else if (array instanceof Int8Array) {\n\t\t\t\ttype = gl.BYTE;\n\t\t\t} else if (array instanceof Uint8Array) {\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\t\t\t} else if (array instanceof Uint8ClampedArray) {\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\t\t}\n\n\t\tfunction updateBuffer(buffer, attribute, bufferType) {\n\t\t\tconst array = attribute.array;\n\t\t\tconst updateRange = attribute.updateRange;\n\t\t\tgl.bindBuffer(bufferType, buffer);\n\n\t\t\tif (updateRange.count === -1) {\n\t\t\t\t// Not using update ranges\n\t\t\t\tgl.bufferSubData(bufferType, 0, array);\n\t\t\t} else {\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array, updateRange.offset, updateRange.count);\n\t\t\t\t} else {\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n\t\t\t\t}\n\n\t\t\t\tupdateRange.count = -1; // reset range\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction get(attribute) {\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\treturn buffers.get(attribute);\n\t\t}\n\n\t\tfunction remove(attribute) {\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\tconst data = buffers.get(attribute);\n\n\t\t\tif (data) {\n\t\t\t\tgl.deleteBuffer(data.buffer);\n\t\t\t\tbuffers.delete(attribute);\n\t\t\t}\n\t\t}\n\n\t\tfunction update(attribute, bufferType) {\n\t\t\tif (attribute.isGLBufferAttribute) {\n\t\t\t\tconst cached = buffers.get(attribute);\n\n\t\t\t\tif (!cached || cached.version < attribute.version) {\n\t\t\t\t\tbuffers.set(attribute, {\n\t\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\t\tversion: attribute.version\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\tconst data = buffers.get(attribute);\n\n\t\t\tif (data === undefined) {\n\t\t\t\tbuffers.set(attribute, createBuffer(attribute, bufferType));\n\t\t\t} else if (data.version < attribute.version) {\n\t\t\t\tupdateBuffer(data.buffer, attribute, bufferType);\n\t\t\t\tdata.version = attribute.version;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tclass PlaneGeometry extends BufferGeometry {\n\t\tconstructor(width = 1, height = 1, widthSegments = 1, heightSegments = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PlaneGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments\n\t\t\t};\n\t\t\tconst width_half = width / 2;\n\t\t\tconst height_half = height / 2;\n\t\t\tconst gridX = Math.floor(widthSegments);\n\t\t\tconst gridY = Math.floor(heightSegments);\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\t\t\tconst segment_width = width / gridX;\n\t\t\tconst segment_height = height / gridY; //\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\n\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\n\t\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\n\t\t\t\t\tconst x = ix * segment_width - width_half;\n\t\t\t\t\tvertices.push(x, -y, 0);\n\t\t\t\t\tnormals.push(0, 0, 1);\n\t\t\t\t\tuvs.push(ix / gridX);\n\t\t\t\t\tuvs.push(1 - iy / gridY);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let iy = 0; iy < gridY; iy++) {\n\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\n\t\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\t\tconst b = ix + gridX1 * (iy + 1);\n\t\t\t\t\tconst c = ix + 1 + gridX1 * (iy + 1);\n\t\t\t\t\tconst d = ix + 1 + gridX1 * iy;\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new PlaneGeometry(data.width, data.height, data.widthSegments, data.heightSegments);\n\t\t}\n\n\t}\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\n\tvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\n\tvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\n\tvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenTint, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenTint * ( D * V );\\n}\\n#endif\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\n\tvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\n\tvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\n\tvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tlightMapIrradiance *= PI;\\n\\t#endif\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\n\tvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec;\\n\\t\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\t\\treflectVec = reflect( - viewDir, normal );\\n\\t\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treflectVec = refract( - viewDir, normal, refractionRatio );\\n\\t\\t\\t#endif\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\n\tvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularTintFactor = specularTint;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARTINTMAP\\n\\t\\t\\tspecularTintFactor *= specularTintMapTexelToLinear( texture2D( specularTintMap, vUv ) ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularTintFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularTintFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenTint = sheenTint;\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n#endif\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenTint;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(\t\t0, 1,\t\t0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenTint, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\n\tvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\n\tvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform vec2 morphTargetsTextureSize;\\n\\t\\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\\n\\t\\t\\tfloat texelIndex = float( vertexIndex * stride + offset );\\n\\t\\t\\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\\n\\t\\t\\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\\n\\t\\t\\treturn texture( morphTargetsTexture, morphUV ).xyz;\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\\n\\t\\t\\t#else\\n\\t\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\n\tvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\n\tvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\n\tvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\n\tvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\n\tvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\n\tvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\n\tvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\n\tvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\n\tvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\n\tvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\n\tvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(\t1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,\t1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,\t1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\n\tvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationTint, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";\n\n\tvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationTint;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( float roughness, float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\\n\\t\\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\\n\\t\\tvec3 attenuationColor, float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\n\tvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\n\tvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\n\tconst vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\tconst fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\tconst fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\tconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\n\tconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\tconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\n\tconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\tconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$9 = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\tconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\tconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\n\tconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\tconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularTint;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARTINTMAP\\n\\t\\tuniform sampler2D specularTintMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenTint;\\n\\tuniform float sheenRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tconst ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\talphatest_pars_fragment: alphatest_pars_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars_begin: lights_pars_begin,\n\t\tlights_toon_fragment: lights_toon_fragment,\n\t\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_fragment_begin: lights_fragment_begin,\n\t\tlights_fragment_maps: lights_fragment_maps,\n\t\tlights_fragment_end: lights_fragment_end,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_fragment_begin: normal_fragment_begin,\n\t\tnormal_fragment_maps: normal_fragment_maps,\n\t\tnormal_pars_fragment: normal_pars_fragment,\n\t\tnormal_pars_vertex: normal_pars_vertex,\n\t\tnormal_vertex: normal_vertex,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\t\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\t\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\t\toutput_fragment: output_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\ttransmission_fragment: transmission_fragment,\n\t\ttransmission_pars_fragment: transmission_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\t\tbackground_vert: vertex$g,\n\t\tbackground_frag: fragment$g,\n\t\tcube_vert: vertex$f,\n\t\tcube_frag: fragment$f,\n\t\tdepth_vert: vertex$e,\n\t\tdepth_frag: fragment$e,\n\t\tdistanceRGBA_vert: vertex$d,\n\t\tdistanceRGBA_frag: fragment$d,\n\t\tequirect_vert: vertex$c,\n\t\tequirect_frag: fragment$c,\n\t\tlinedashed_vert: vertex$b,\n\t\tlinedashed_frag: fragment$b,\n\t\tmeshbasic_vert: vertex$a,\n\t\tmeshbasic_frag: fragment$a,\n\t\tmeshlambert_vert: vertex$9,\n\t\tmeshlambert_frag: fragment$9,\n\t\tmeshmatcap_vert: vertex$8,\n\t\tmeshmatcap_frag: fragment$8,\n\t\tmeshnormal_vert: vertex$7,\n\t\tmeshnormal_frag: fragment$7,\n\t\tmeshphong_vert: vertex$6,\n\t\tmeshphong_frag: fragment$6,\n\t\tmeshphysical_vert: vertex$5,\n\t\tmeshphysical_frag: fragment$5,\n\t\tmeshtoon_vert: vertex$4,\n\t\tmeshtoon_frag: fragment$4,\n\t\tpoints_vert: vertex$3,\n\t\tpoints_frag: fragment$3,\n\t\tshadow_vert: vertex$2,\n\t\tshadow_frag: fragment$2,\n\t\tsprite_vert: vertex$1,\n\t\tsprite_frag: fragment$1\n\t};\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tconst UniformsLib = {\n\t\tcommon: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t},\n\t\t\tuv2Transform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaTest: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\t\tspecularmap: {\n\t\t\tspecularMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tenvmap: {\n\t\t\tenvMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tflipEnvMap: {\n\t\t\t\tvalue: -1\n\t\t\t},\n\t\t\treflectivity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\t// basic, lambert, phong\n\t\t\tior: {\n\t\t\t\tvalue: 1.5\n\t\t\t},\n\t\t\t// standard, physical\n\t\t\trefractionRatio: {\n\t\t\t\tvalue: 0.98\n\t\t\t},\n\t\t\tmaxMipLevel: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\t\taomap: {\n\t\t\taoMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\taoMapIntensity: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\tlightmap: {\n\t\t\tlightMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tlightMapIntensity: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\temissivemap: {\n\t\t\temissiveMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tbumpmap: {\n\t\t\tbumpMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tbumpScale: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\tnormalmap: {\n\t\t\tnormalMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tnormalScale: {\n\t\t\t\tvalue: new Vector2(1, 1)\n\t\t\t}\n\t\t},\n\t\tdisplacementmap: {\n\t\t\tdisplacementMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tdisplacementScale: {\n\t\t\t\tvalue: 1\n\t\t\t},\n\t\t\tdisplacementBias: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\t\troughnessmap: {\n\t\t\troughnessMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tmetalnessmap: {\n\t\t\tmetalnessMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tgradientmap: {\n\t\t\tgradientMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tfog: {\n\t\t\tfogDensity: {\n\t\t\t\tvalue: 0.00025\n\t\t\t},\n\t\t\tfogNear: {\n\t\t\t\tvalue: 1\n\t\t\t},\n\t\t\tfogFar: {\n\t\t\t\tvalue: 2000\n\t\t\t},\n\t\t\tfogColor: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t}\n\t\t},\n\t\tlights: {\n\t\t\tambientLightColor: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tlightProbe: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tdirectionalLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tcolor: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdirectionalLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdirectionalShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tdirectionalShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tspotLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tdistance: {},\n\t\t\t\t\tconeCos: {},\n\t\t\t\t\tpenumbraCos: {},\n\t\t\t\t\tdecay: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tspotLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tspotShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tspotShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tpointLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\tdecay: {},\n\t\t\t\t\tdistance: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpointLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {},\n\t\t\t\t\tshadowCameraNear: {},\n\t\t\t\t\tshadowCameraFar: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpointShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tpointShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\themisphereLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tskyColor: {},\n\t\t\t\t\tgroundColor: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\twidth: {},\n\t\t\t\t\theight: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tltc_1: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tltc_2: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tpoints: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaTest: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t},\n\t\tsprite: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tcenter: {\n\t\t\t\tvalue: new Vector2(0.5, 0.5)\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tvalue: 0.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaTest: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t}\n\t};\n\n\tconst ShaderLib = {\n\t\tbasic: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\t\t},\n\t\tlambert: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\t\t},\n\t\tphong: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t},\n\t\t\t\tspecular: {\n\t\t\t\t\tvalue: new Color(0x111111)\n\t\t\t\t},\n\t\t\t\tshininess: {\n\t\t\t\t\tvalue: 30\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\t\t},\n\t\tstandard: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t},\n\t\t\t\troughness: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t},\n\t\t\t\tmetalness: {\n\t\t\t\t\tvalue: 0.0\n\t\t\t\t},\n\t\t\t\tenvMapIntensity: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t} // temporary\n\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\t\t},\n\t\ttoon: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\t\t},\n\t\tmatcap: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\n\t\t\t\tmatcap: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\t\t},\n\t\tpoints: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\t\t},\n\t\tdashed: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.fog, {\n\t\t\t\tscale: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\tdashSize: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\ttotalSize: {\n\t\t\t\t\tvalue: 2\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\t\t},\n\t\tdepth: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\t\t},\n\t\tnormal: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\t\t},\n\t\tsprite: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\n\t\t},\n\t\tbackground: {\n\t\t\tuniforms: {\n\t\t\t\tuvTransform: {\n\t\t\t\t\tvalue: new Matrix3()\n\t\t\t\t},\n\t\t\t\tt2D: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: ShaderChunk.background_vert,\n\t\t\tfragmentShader: ShaderChunk.background_frag\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\t\tcube: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.envmap, {\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\t\t},\n\t\tequirect: {\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\t\t},\n\t\tdistanceRGBA: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\n\t\t\t\treferencePosition: {\n\t\t\t\t\tvalue: new Vector3()\n\t\t\t\t},\n\t\t\t\tnearDistance: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\tfarDistance: {\n\t\t\t\t\tvalue: 1000\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\t\t},\n\t\tshadow: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\n\t\t\t\tcolor: {\n\t\t\t\t\tvalue: new Color(0x00000)\n\t\t\t\t},\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\t\t}\n\t};\n\tShaderLib.physical = {\n\t\tuniforms: mergeUniforms([ShaderLib.standard.uniforms, {\n\t\t\tclearcoat: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tclearcoatMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tclearcoatRoughness: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tclearcoatRoughnessMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tclearcoatNormalScale: {\n\t\t\t\tvalue: new Vector2(1, 1)\n\t\t\t},\n\t\t\tclearcoatNormalMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tsheen: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tsheenTint: {\n\t\t\t\tvalue: new Color(0x000000)\n\t\t\t},\n\t\t\tsheenRoughness: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\ttransmission: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\ttransmissionMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\ttransmissionSamplerSize: {\n\t\t\t\tvalue: new Vector2()\n\t\t\t},\n\t\t\ttransmissionSamplerMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tthickness: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tthicknessMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tattenuationDistance: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tattenuationTint: {\n\t\t\t\tvalue: new Color(0x000000)\n\t\t\t},\n\t\t\tspecularIntensity: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tspecularIntensityMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tspecularTint: {\n\t\t\t\tvalue: new Color(1, 1, 1)\n\t\t\t},\n\t\t\tspecularTintMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t}]),\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\t};\n\n\tfunction WebGLBackground(renderer, cubemaps, state, objects, premultipliedAlpha) {\n\t\tconst clearColor = new Color(0x000000);\n\t\tlet clearAlpha = 0;\n\t\tlet planeMesh;\n\t\tlet boxMesh;\n\t\tlet currentBackground = null;\n\t\tlet currentBackgroundVersion = 0;\n\t\tlet currentTonemapping = null;\n\n\t\tfunction render(renderList, scene) {\n\t\t\tlet forceClear = false;\n\t\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\t\tif (background && background.isTexture) {\n\t\t\t\tbackground = cubemaps.get(background);\n\t\t\t} // Ignore background in AR\n\t\t\t// TODO: Reconsider this.\n\n\n\t\t\tconst xr = renderer.xr;\n\t\t\tconst session = xr.getSession && xr.getSession();\n\n\t\t\tif (session && session.environmentBlendMode === 'additive') {\n\t\t\t\tbackground = null;\n\t\t\t}\n\n\t\t\tif (background === null) {\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t} else if (background && background.isColor) {\n\t\t\t\tsetClear(background, 1);\n\t\t\t\tforceClear = true;\n\t\t\t}\n\n\t\t\tif (renderer.autoClear || forceClear) {\n\t\t\t\trenderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n\t\t\t}\n\n\t\t\tif (background && (background.isCubeTexture || background.mapping === CubeUVReflectionMapping)) {\n\t\t\t\tif (boxMesh === undefined) {\n\t\t\t\t\tboxMesh = new Mesh(new BoxGeometry(1, 1, 1), new ShaderMaterial({\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.cube.uniforms),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t}));\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('normal');\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('uv');\n\n\t\t\t\t\tboxMesh.onBeforeRender = function (renderer, scene, camera) {\n\t\t\t\t\t\tthis.matrixWorld.copyPosition(camera.matrixWorld);\n\t\t\t\t\t}; // enable code injection for non-built-in material\n\n\n\t\t\t\t\tObject.defineProperty(boxMesh.material, 'envMap', {\n\t\t\t\t\t\tget: function () {\n\t\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tobjects.update(boxMesh);\n\t\t\t\t}\n\n\t\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\t\tboxMesh.material.uniforms.flipEnvMap.value = background.isCubeTexture && background.isRenderTargetTexture === false ? -1 : 1;\n\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n\t\t\t\t\tboxMesh.material.needsUpdate = true;\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\t\t\t\t} // push to the pre-sorted opaque render list\n\n\n\t\t\t\trenderList.unshift(boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null);\n\t\t\t} else if (background && background.isTexture) {\n\t\t\t\tif (planeMesh === undefined) {\n\t\t\t\t\tplaneMesh = new Mesh(new PlaneGeometry(2, 2), new ShaderMaterial({\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.background.uniforms),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t}));\n\t\t\t\t\tplaneMesh.geometry.deleteAttribute('normal'); // enable code injection for non-built-in material\n\n\t\t\t\t\tObject.defineProperty(planeMesh.material, 'map', {\n\t\t\t\t\t\tget: function () {\n\t\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tobjects.update(planeMesh);\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\t\tif (background.matrixAutoUpdate === true) {\n\t\t\t\t\tbackground.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy(background.matrix);\n\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n\t\t\t\t\tplaneMesh.material.needsUpdate = true;\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\t\t\t\t} // push to the pre-sorted opaque render list\n\n\n\t\t\t\trenderList.unshift(planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null);\n\t\t\t}\n\t\t}\n\n\t\tfunction setClear(color, alpha) {\n\t\t\tstate.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\n\t\t}\n\n\t\treturn {\n\t\t\tgetClearColor: function () {\n\t\t\t\treturn clearColor;\n\t\t\t},\n\t\t\tsetClearColor: function (color, alpha = 1) {\n\t\t\t\tclearColor.set(color);\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\t\t\t\treturn clearAlpha;\n\t\t\t},\n\t\t\tsetClearAlpha: function (alpha) {\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t},\n\t\t\trender: render\n\t\t};\n\t}\n\n\tfunction WebGLBindingStates(gl, extensions, attributes, capabilities) {\n\t\tconst maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\t\tconst extension = capabilities.isWebGL2 ? null : extensions.get('OES_vertex_array_object');\n\t\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\t\tconst bindingStates = {};\n\t\tconst defaultState = createBindingState(null);\n\t\tlet currentState = defaultState;\n\n\t\tfunction setup(object, material, program, geometry, index) {\n\t\t\tlet updateBuffers = false;\n\n\t\t\tif (vaoAvailable) {\n\t\t\t\tconst state = getBindingState(geometry, program, material);\n\n\t\t\t\tif (currentState !== state) {\n\t\t\t\t\tcurrentState = state;\n\t\t\t\t\tbindVertexArrayObject(currentState.object);\n\t\t\t\t}\n\n\t\t\t\tupdateBuffers = needsUpdate(geometry, index);\n\t\t\t\tif (updateBuffers) saveCache(geometry, index);\n\t\t\t} else {\n\t\t\t\tconst wireframe = material.wireframe === true;\n\n\t\t\t\tif (currentState.geometry !== geometry.id || currentState.program !== program.id || currentState.wireframe !== wireframe) {\n\t\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\t\tcurrentState.program = program.id;\n\t\t\t\t\tcurrentState.wireframe = wireframe;\n\t\t\t\t\tupdateBuffers = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh === true) {\n\t\t\t\tupdateBuffers = true;\n\t\t\t}\n\n\t\t\tif (index !== null) {\n\t\t\t\tattributes.update(index, gl.ELEMENT_ARRAY_BUFFER);\n\t\t\t}\n\n\t\t\tif (updateBuffers) {\n\t\t\t\tsetupVertexAttributes(object, material, program, geometry);\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, attributes.get(index).buffer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction createVertexArrayObject() {\n\t\t\tif (capabilities.isWebGL2) return gl.createVertexArray();\n\t\t\treturn extension.createVertexArrayOES();\n\t\t}\n\n\t\tfunction bindVertexArrayObject(vao) {\n\t\t\tif (capabilities.isWebGL2) return gl.bindVertexArray(vao);\n\t\t\treturn extension.bindVertexArrayOES(vao);\n\t\t}\n\n\t\tfunction deleteVertexArrayObject(vao) {\n\t\t\tif (capabilities.isWebGL2) return gl.deleteVertexArray(vao);\n\t\t\treturn extension.deleteVertexArrayOES(vao);\n\t\t}\n\n\t\tfunction getBindingState(geometry, program, material) {\n\t\t\tconst wireframe = material.wireframe === true;\n\t\t\tlet programMap = bindingStates[geometry.id];\n\n\t\t\tif (programMap === undefined) {\n\t\t\t\tprogramMap = {};\n\t\t\t\tbindingStates[geometry.id] = programMap;\n\t\t\t}\n\n\t\t\tlet stateMap = programMap[program.id];\n\n\t\t\tif (stateMap === undefined) {\n\t\t\t\tstateMap = {};\n\t\t\t\tprogramMap[program.id] = stateMap;\n\t\t\t}\n\n\t\t\tlet state = stateMap[wireframe];\n\n\t\t\tif (state === undefined) {\n\t\t\t\tstate = createBindingState(createVertexArrayObject());\n\t\t\t\tstateMap[wireframe] = state;\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tfunction createBindingState(vao) {\n\t\t\tconst newAttributes = [];\n\t\t\tconst enabledAttributes = [];\n\t\t\tconst attributeDivisors = [];\n\n\t\t\tfor (let i = 0; i < maxVertexAttributes; i++) {\n\t\t\t\tnewAttributes[i] = 0;\n\t\t\t\tenabledAttributes[i] = 0;\n\t\t\t\tattributeDivisors[i] = 0;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\t\tgeometry: null,\n\t\t\t\tprogram: null,\n\t\t\t\twireframe: false,\n\t\t\t\tnewAttributes: newAttributes,\n\t\t\t\tenabledAttributes: enabledAttributes,\n\t\t\t\tattributeDivisors: attributeDivisors,\n\t\t\t\tobject: vao,\n\t\t\t\tattributes: {},\n\t\t\t\tindex: null\n\t\t\t};\n\t\t}\n\n\t\tfunction needsUpdate(geometry, index) {\n\t\t\tconst cachedAttributes = currentState.attributes;\n\t\t\tconst geometryAttributes = geometry.attributes;\n\t\t\tlet attributesNum = 0;\n\n\t\t\tfor (const key in geometryAttributes) {\n\t\t\t\tconst cachedAttribute = cachedAttributes[key];\n\t\t\t\tconst geometryAttribute = geometryAttributes[key];\n\t\t\t\tif (cachedAttribute === undefined) return true;\n\t\t\t\tif (cachedAttribute.attribute !== geometryAttribute) return true;\n\t\t\t\tif (cachedAttribute.data !== geometryAttribute.data) return true;\n\t\t\t\tattributesNum++;\n\t\t\t}\n\n\t\t\tif (currentState.attributesNum !== attributesNum) return true;\n\t\t\tif (currentState.index !== index) return true;\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction saveCache(geometry, index) {\n\t\t\tconst cache = {};\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tlet attributesNum = 0;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif (attribute.data) {\n\t\t\t\t\tdata.data = attribute.data;\n\t\t\t\t}\n\n\t\t\t\tcache[key] = data;\n\t\t\t\tattributesNum++;\n\t\t\t}\n\n\t\t\tcurrentState.attributes = cache;\n\t\t\tcurrentState.attributesNum = attributesNum;\n\t\t\tcurrentState.index = index;\n\t\t}\n\n\t\tfunction initAttributes() {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\n\t\t\tfor (let i = 0, il = newAttributes.length; i < il; i++) {\n\t\t\t\tnewAttributes[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\tfunction enableAttribute(attribute) {\n\t\t\tenableAttributeAndDivisor(attribute, 0);\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor(attribute, meshPerAttribute) {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\t\tconst attributeDivisors = currentState.attributeDivisors;\n\t\t\tnewAttributes[attribute] = 1;\n\n\t\t\tif (enabledAttributes[attribute] === 0) {\n\t\t\t\tgl.enableVertexAttribArray(attribute);\n\t\t\t\tenabledAttributes[attribute] = 1;\n\t\t\t}\n\n\t\t\tif (attributeDivisors[attribute] !== meshPerAttribute) {\n\t\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\n\t\t\t\textension[capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](attribute, meshPerAttribute);\n\t\t\t\tattributeDivisors[attribute] = meshPerAttribute;\n\t\t\t}\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\t\tfor (let i = 0, il = enabledAttributes.length; i < il; i++) {\n\t\t\t\tif (enabledAttributes[i] !== newAttributes[i]) {\n\t\t\t\t\tgl.disableVertexAttribArray(i);\n\t\t\t\t\tenabledAttributes[i] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction vertexAttribPointer(index, size, type, normalized, stride, offset) {\n\t\t\tif (capabilities.isWebGL2 === true && (type === gl.INT || type === gl.UNSIGNED_INT)) {\n\t\t\t\tgl.vertexAttribIPointer(index, size, type, stride, offset);\n\t\t\t} else {\n\t\t\t\tgl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n\t\t\t}\n\t\t}\n\n\t\tfunction setupVertexAttributes(object, material, program, geometry) {\n\t\t\tif (capabilities.isWebGL2 === false && (object.isInstancedMesh || geometry.isInstancedBufferGeometry)) {\n\t\t\t\tif (extensions.get('ANGLE_instanced_arrays') === null) return;\n\t\t\t}\n\n\t\t\tinitAttributes();\n\t\t\tconst geometryAttributes = geometry.attributes;\n\t\t\tconst programAttributes = program.getAttributes();\n\t\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor (const name in programAttributes) {\n\t\t\t\tconst programAttribute = programAttributes[name];\n\n\t\t\t\tif (programAttribute.location >= 0) {\n\t\t\t\t\tlet geometryAttribute = geometryAttributes[name];\n\n\t\t\t\t\tif (geometryAttribute === undefined) {\n\t\t\t\t\t\tif (name === 'instanceMatrix' && object.instanceMatrix) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\t\tif (name === 'instanceColor' && object.instanceColor) geometryAttribute = object.instanceColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (geometryAttribute !== undefined) {\n\t\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\t\t\t\t\t\tconst attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif (attribute === undefined) continue;\n\t\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif (geometryAttribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif (data && data.isInstancedInterleavedBuffer) {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute.location + i, data.meshPerAttribute);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined) {\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\t\tenableAttribute(programAttribute.location + i);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\tvertexAttribPointer(programAttribute.location + i, size / programAttribute.locationSize, type, normalized, stride * bytesPerElement, (offset + size / programAttribute.locationSize * i) * bytesPerElement);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (geometryAttribute.isInstancedBufferAttribute) {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute.location + i, geometryAttribute.meshPerAttribute);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined) {\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\t\tenableAttribute(programAttribute.location + i);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\tvertexAttribPointer(programAttribute.location + i, size / programAttribute.locationSize, type, normalized, size * bytesPerElement, size / programAttribute.locationSize * i * bytesPerElement);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (materialDefaultAttributeValues !== undefined) {\n\t\t\t\t\t\tconst value = materialDefaultAttributeValues[name];\n\n\t\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\t\tswitch (value.length) {\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib2fv(programAttribute.location, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib3fv(programAttribute.location, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib4fv(programAttribute.location, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib1fv(programAttribute.location, value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdisableUnusedAttributes();\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\treset();\n\n\t\t\tfor (const geometryId in bindingStates) {\n\t\t\t\tconst programMap = bindingStates[geometryId];\n\n\t\t\t\tfor (const programId in programMap) {\n\t\t\t\t\tconst stateMap = programMap[programId];\n\n\t\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete programMap[programId];\n\t\t\t\t}\n\n\t\t\t\tdelete bindingStates[geometryId];\n\t\t\t}\n\t\t}\n\n\t\tfunction releaseStatesOfGeometry(geometry) {\n\t\t\tif (bindingStates[geometry.id] === undefined) return;\n\t\t\tconst programMap = bindingStates[geometry.id];\n\n\t\t\tfor (const programId in programMap) {\n\t\t\t\tconst stateMap = programMap[programId];\n\n\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[programId];\n\t\t\t}\n\n\t\t\tdelete bindingStates[geometry.id];\n\t\t}\n\n\t\tfunction releaseStatesOfProgram(program) {\n\t\t\tfor (const geometryId in bindingStates) {\n\t\t\t\tconst programMap = bindingStates[geometryId];\n\t\t\t\tif (programMap[program.id] === undefined) continue;\n\t\t\t\tconst stateMap = programMap[program.id];\n\n\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[program.id];\n\t\t\t}\n\t\t}\n\n\t\tfunction reset() {\n\t\t\tresetDefaultState();\n\t\t\tif (currentState === defaultState) return;\n\t\t\tcurrentState = defaultState;\n\t\t\tbindVertexArrayObject(currentState.object);\n\t\t} // for backward-compatilibity\n\n\n\t\tfunction resetDefaultState() {\n\t\t\tdefaultState.geometry = null;\n\t\t\tdefaultState.program = null;\n\t\t\tdefaultState.wireframe = false;\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\treset: reset,\n\t\t\tresetDefaultState: resetDefaultState,\n\t\t\tdispose: dispose,\n\t\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes\n\t\t};\n\t}\n\n\tfunction WebGLBufferRenderer(gl, extensions, info, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tlet mode;\n\n\t\tfunction setMode(value) {\n\t\t\tmode = value;\n\t\t}\n\n\t\tfunction render(start, count) {\n\t\t\tgl.drawArrays(mode, start, count);\n\t\t\tinfo.update(count, mode, 1);\n\t\t}\n\n\t\tfunction renderInstances(start, count, primcount) {\n\t\t\tif (primcount === 0) return;\n\t\t\tlet extension, methodName;\n\n\t\t\tif (isWebGL2) {\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawArraysInstanced';\n\t\t\t} else {\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\n\t\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\textension[methodName](mode, start, count, primcount);\n\t\t\tinfo.update(count, mode, primcount);\n\t\t} //\n\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\t}\n\n\tfunction WebGLCapabilities(gl, extensions, parameters) {\n\t\tlet maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\t\t\tif (maxAnisotropy !== undefined) return maxAnisotropy;\n\n\t\t\tif (extensions.has('EXT_texture_filter_anisotropic') === true) {\n\t\t\t\tconst extension = extensions.get('EXT_texture_filter_anisotropic');\n\t\t\t\tmaxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n\t\t\t} else {\n\t\t\t\tmaxAnisotropy = 0;\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\t\t}\n\n\t\tfunction getMaxPrecision(precision) {\n\t\t\tif (precision === 'highp') {\n\t\t\t\tif (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n\t\t\t\t\treturn 'highp';\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\t\t\t}\n\n\t\t\tif (precision === 'mediump') {\n\t\t\t\tif (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n\t\t\t\t\treturn 'mediump';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\t\t}\n\t\t/* eslint-disable no-undef */\n\n\n\t\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext;\n\t\t/* eslint-enable no-undef */\n\n\t\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tconst maxPrecision = getMaxPrecision(precision);\n\n\t\tif (maxPrecision !== precision) {\n\t\t\tconsole.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n\t\t\tprecision = maxPrecision;\n\t\t}\n\n\t\tconst drawBuffers = isWebGL2 || extensions.has('WEBGL_draw_buffers');\n\t\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\t\tconst maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\t\tconst maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n\t\tconst maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\t\tconst maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n\t\tconst maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\t\tconst maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n\t\tconst maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n\t\tconst maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n\t\tconst vertexTextures = maxVertexTextures > 0;\n\t\tconst floatFragmentTextures = isWebGL2 || extensions.has('OES_texture_float');\n\t\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\t\tconst maxSamples = isWebGL2 ? gl.getParameter(gl.MAX_SAMPLES) : 0;\n\t\treturn {\n\t\t\tisWebGL2: isWebGL2,\n\t\t\tdrawBuffers: drawBuffers,\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures,\n\t\t\tmaxSamples: maxSamples\n\t\t};\n\t}\n\n\tfunction WebGLClipping(properties) {\n\t\tconst scope = this;\n\t\tlet globalState = null,\n\t\t\t\tnumGlobalPlanes = 0,\n\t\t\t\tlocalClippingEnabled = false,\n\t\t\t\trenderingShadows = false;\n\t\tconst plane = new Plane(),\n\t\t\t\t\tviewNormalMatrix = new Matrix3(),\n\t\t\t\t\tuniform = {\n\t\t\tvalue: null,\n\t\t\tneedsUpdate: false\n\t\t};\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function (planes, enableLocalClipping, camera) {\n\t\t\tconst enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 || localClippingEnabled;\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\t\t\tglobalState = projectPlanes(planes, camera, 0);\n\t\t\tnumGlobalPlanes = planes.length;\n\t\t\treturn enabled;\n\t\t};\n\n\t\tthis.beginShadows = function () {\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes(null);\n\t\t};\n\n\t\tthis.endShadows = function () {\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\t\t};\n\n\t\tthis.setState = function (material, camera, useCache) {\n\t\t\tconst planes = material.clippingPlanes,\n\t\t\t\t\t\tclipIntersection = material.clipIntersection,\n\t\t\t\t\t\tclipShadows = material.clipShadows;\n\t\t\tconst materialProperties = properties.get(material);\n\n\t\t\tif (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n\t\t\t\t// there's no local clipping\n\t\t\t\tif (renderingShadows) {\n\t\t\t\t\t// there's no global clipping\n\t\t\t\t\tprojectPlanes(null);\n\t\t\t\t} else {\n\t\t\t\t\tresetGlobalState();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\t\t\tlGlobal = nGlobal * 4;\n\t\t\t\tlet dstArray = materialProperties.clippingState || null;\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes(planes, camera, lGlobal, useCache);\n\n\t\t\t\tfor (let i = 0; i !== lGlobal; ++i) {\n\t\t\t\t\tdstArray[i] = globalState[i];\n\t\t\t\t}\n\n\t\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\t\t\t}\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\t\t\tif (uniform.value !== globalState) {\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\t\t}\n\n\t\tfunction projectPlanes(planes, camera, dstOffset, skipTransform) {\n\t\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\t\tlet dstArray = null;\n\n\t\t\tif (nPlanes !== 0) {\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif (skipTransform !== true || dstArray === null) {\n\t\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix(viewMatrix);\n\n\t\t\t\t\tif (dstArray === null || dstArray.length < flatSize) {\n\t\t\t\t\t\tdstArray = new Float32Array(flatSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n\t\t\t\t\t\tplane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n\t\t\t\t\t\tplane.normal.toArray(dstArray, i4);\n\t\t\t\t\t\tdstArray[i4 + 3] = plane.constant;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\tscope.numIntersection = 0;\n\t\t\treturn dstArray;\n\t\t}\n\t}\n\n\tfunction WebGLCubeMaps(renderer) {\n\t\tlet cubemaps = new WeakMap();\n\n\t\tfunction mapTextureMapping(texture, mapping) {\n\t\t\tif (mapping === EquirectangularReflectionMapping) {\n\t\t\t\ttexture.mapping = CubeReflectionMapping;\n\t\t\t} else if (mapping === EquirectangularRefractionMapping) {\n\t\t\t\ttexture.mapping = CubeRefractionMapping;\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction get(texture) {\n\t\t\tif (texture && texture.isTexture && texture.isRenderTargetTexture === false) {\n\t\t\t\tconst mapping = texture.mapping;\n\n\t\t\t\tif (mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping) {\n\t\t\t\t\tif (cubemaps.has(texture)) {\n\t\t\t\t\t\tconst cubemap = cubemaps.get(texture).texture;\n\t\t\t\t\t\treturn mapTextureMapping(cubemap, texture.mapping);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif (image && image.height > 0) {\n\t\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget(image.height / 2);\n\t\t\t\t\t\t\trenderTarget.fromEquirectangularTexture(renderer, texture);\n\t\t\t\t\t\t\tcubemaps.set(texture, renderTarget);\n\t\t\t\t\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t\t\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\t\t\t\treturn mapTextureMapping(renderTarget.texture, texture.mapping);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tconst texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tconst cubemap = cubemaps.get(texture);\n\n\t\t\tif (cubemap !== undefined) {\n\t\t\t\tcubemaps.delete(texture);\n\t\t\t\tcubemap.dispose();\n\t\t\t}\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tcubemaps = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tclass OrthographicCamera extends Camera {\n\t\tconstructor(left = -1, right = 1, top = 1, bottom = -1, near = 0.1, far = 2000) {\n\t\t\tsuper();\n\t\t\tthis.type = 'OrthographicCamera';\n\t\t\tthis.zoom = 1;\n\t\t\tthis.view = null;\n\t\t\tthis.left = left;\n\t\t\tthis.right = right;\n\t\t\tthis.top = top;\n\t\t\tthis.bottom = bottom;\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetViewOffset(fullWidth, fullHeight, x, y, width, height) {\n\t\t\tif (this.view === null) {\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tclearViewOffset() {\n\t\t\tif (this.view !== null) {\n\t\t\t\tthis.view.enabled = false;\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tupdateProjectionMatrix() {\n\t\t\tconst dx = (this.right - this.left) / (2 * this.zoom);\n\t\t\tconst dy = (this.top - this.bottom) / (2 * this.zoom);\n\t\t\tconst cx = (this.right + this.left) / 2;\n\t\t\tconst cy = (this.top + this.bottom) / 2;\n\t\t\tlet left = cx - dx;\n\t\t\tlet right = cx + dx;\n\t\t\tlet top = cy + dy;\n\t\t\tlet bottom = cy - dy;\n\n\t\t\tif (this.view !== null && this.view.enabled) {\n\t\t\t\tconst scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\n\t\t\t\tconst scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n\t\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\t\tright = left + scaleW * this.view.width;\n\t\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\t\tbottom = top - scaleH * this.view.height;\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tOrthographicCamera.prototype.isOrthographicCamera = true;\n\n\tclass RawShaderMaterial extends ShaderMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper(parameters);\n\t\t\tthis.type = 'RawShaderMaterial';\n\t\t}\n\n\t}\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\tconst LOD_MIN = 4;\n\tconst LOD_MAX = 8;\n\tconst SIZE_MAX = Math.pow(2, LOD_MAX); // The standard deviations (radians) associated with the extra mips. These are\n\t// chosen to approximate a Trowbridge-Reitz distribution function times the\n\t// geometric shadowing function. These sigma values squared must match the\n\t// variance #defines in cube_uv_reflection_fragment.glsl.js.\n\n\tconst EXTRA_LOD_SIGMA = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582];\n\tconst TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length; // The maximum length of the blur for loop. Smaller sigmas will use fewer\n\t// samples and exit early, but not recompile the shader.\n\n\tconst MAX_SAMPLES = 20;\n\tconst ENCODINGS = {\n\t\t[LinearEncoding]: 0,\n\t\t[sRGBEncoding]: 1,\n\t\t[RGBEEncoding]: 2,\n\t\t[RGBM7Encoding]: 3,\n\t\t[RGBM16Encoding]: 4,\n\t\t[RGBDEncoding]: 5,\n\t\t[GammaEncoding]: 6\n\t};\n\n\tconst _flatCamera = /*@__PURE__*/new OrthographicCamera();\n\n\tconst {\n\t\t_lodPlanes,\n\t\t_sizeLods,\n\t\t_sigmas\n\t} = /*@__PURE__*/_createPlanes();\n\n\tconst _clearColor = /*@__PURE__*/new Color();\n\n\tlet _oldTarget = null; // Golden Ratio\n\n\tconst PHI = (1 + Math.sqrt(5)) / 2;\n\tconst INV_PHI = 1 / PHI; // Vertices of a dodecahedron (except the opposites, which represent the\n\t// same axis), used as axis directions evenly spread on a sphere.\n\n\tconst _axisDirections = [/*@__PURE__*/new Vector3(1, 1, 1), /*@__PURE__*/new Vector3(-1, 1, 1), /*@__PURE__*/new Vector3(1, 1, -1), /*@__PURE__*/new Vector3(-1, 1, -1), /*@__PURE__*/new Vector3(0, PHI, INV_PHI), /*@__PURE__*/new Vector3(0, PHI, -INV_PHI), /*@__PURE__*/new Vector3(INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(-INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(PHI, INV_PHI, 0), /*@__PURE__*/new Vector3(-PHI, INV_PHI, 0)];\n\t/**\n\t * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n\t * (PMREM) from a cubeMap environment texture. This allows different levels of\n\t * blur to be quickly accessed based on material roughness. It is packed into a\n\t * special CubeUV format that allows us to perform custom interpolation so that\n\t * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n\t * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n\t * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n\t * higher roughness levels. In this way we maintain resolution to smoothly\n\t * interpolate diffuse lighting while limiting sampling computation.\n\t *\n\t * Paper: Fast, Accurate Image-Based Lighting\n\t * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n\t*/\n\n\tclass PMREMGenerator {\n\t\tconstructor(renderer) {\n\t\t\tthis._renderer = renderer;\n\t\t\tthis._pingPongRenderTarget = null;\n\t\t\tthis._blurMaterial = _getBlurShader(MAX_SAMPLES);\n\t\t\tthis._equirectShader = null;\n\t\t\tthis._cubemapShader = null;\n\n\t\t\tthis._compileMaterial(this._blurMaterial);\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t\t * is placed at the origin).\n\t\t */\n\n\n\t\tfromScene(scene, sigma = 0, near = 0.1, far = 100) {\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\n\t\t\tthis._sceneToCubeUV(scene, near, far, cubeUVRenderTarget);\n\n\t\t\tif (sigma > 0) {\n\t\t\t\tthis._blur(cubeUVRenderTarget, 0, 0, sigma);\n\t\t\t}\n\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\n\n\t\t\tthis._cleanup(cubeUVRenderTarget);\n\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\n\n\t\tfromEquirectangular(equirectangular) {\n\t\t\treturn this._fromTexture(equirectangular);\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\n\n\t\tfromCubemap(cubemap) {\n\t\t\treturn this._fromTexture(cubemap);\n\t\t}\n\t\t/**\n\t\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\n\n\t\tcompileCubemapShader() {\n\t\t\tif (this._cubemapShader === null) {\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\n\t\t\t\tthis._compileMaterial(this._cubemapShader);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\n\n\t\tcompileEquirectangularShader() {\n\t\t\tif (this._equirectShader === null) {\n\t\t\t\tthis._equirectShader = _getEquirectShader();\n\n\t\t\t\tthis._compileMaterial(this._equirectShader);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t\t * one of them will cause any others to also become unusable.\n\t\t */\n\n\n\t\tdispose() {\n\t\t\tthis._blurMaterial.dispose();\n\n\t\t\tif (this._cubemapShader !== null) this._cubemapShader.dispose();\n\t\t\tif (this._equirectShader !== null) this._equirectShader.dispose();\n\n\t\t\tfor (let i = 0; i < _lodPlanes.length; i++) {\n\t\t\t\t_lodPlanes[i].dispose();\n\t\t\t}\n\t\t} // private interface\n\n\n\t\t_cleanup(outputTarget) {\n\t\t\tthis._pingPongRenderTarget.dispose();\n\n\t\t\tthis._renderer.setRenderTarget(_oldTarget);\n\n\t\t\toutputTarget.scissorTest = false;\n\n\t\t\t_setViewport(outputTarget, 0, 0, outputTarget.width, outputTarget.height);\n\t\t}\n\n\t\t_fromTexture(texture) {\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\t\tconst cubeUVRenderTarget = this._allocateTargets(texture);\n\n\t\t\tthis._textureToCubeUV(texture, cubeUVRenderTarget);\n\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\n\n\t\t\tthis._cleanup(cubeUVRenderTarget);\n\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\n\t\t_allocateTargets(texture) {\n\t\t\t// warning: null texture is valid\n\t\t\tconst params = {\n\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\tminFilter: NearestFilter,\n\t\t\t\tgenerateMipmaps: false,\n\t\t\t\ttype: UnsignedByteType,\n\t\t\t\tformat: RGBEFormat,\n\t\t\t\tencoding: _isLDR(texture) ? texture.encoding : RGBEEncoding,\n\t\t\t\tdepthBuffer: false\n\t\t\t};\n\n\t\t\tconst cubeUVRenderTarget = _createRenderTarget(params);\n\n\t\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget(params);\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\n\t\t_compileMaterial(material) {\n\t\t\tconst tmpMesh = new Mesh(_lodPlanes[0], material);\n\n\t\t\tthis._renderer.compile(tmpMesh, _flatCamera);\n\t\t}\n\n\t\t_sceneToCubeUV(scene, near, far, cubeUVRenderTarget) {\n\t\t\tconst fov = 90;\n\t\t\tconst aspect = 1;\n\t\t\tconst cubeCamera = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tconst upSign = [1, -1, 1, 1, 1, 1];\n\t\t\tconst forwardSign = [1, 1, 1, -1, -1, -1];\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst originalAutoClear = renderer.autoClear;\n\t\t\tconst outputEncoding = renderer.outputEncoding;\n\t\t\tconst toneMapping = renderer.toneMapping;\n\t\t\trenderer.getClearColor(_clearColor);\n\t\t\trenderer.toneMapping = NoToneMapping;\n\t\t\trenderer.outputEncoding = LinearEncoding;\n\t\t\trenderer.autoClear = false;\n\t\t\tconst backgroundMaterial = new MeshBasicMaterial({\n\t\t\t\tname: 'PMREM.Background',\n\t\t\t\tside: BackSide,\n\t\t\t\tdepthWrite: false,\n\t\t\t\tdepthTest: false\n\t\t\t});\n\t\t\tconst backgroundBox = new Mesh(new BoxGeometry(), backgroundMaterial);\n\t\t\tlet useSolidColor = false;\n\t\t\tconst background = scene.background;\n\n\t\t\tif (background) {\n\t\t\t\tif (background.isColor) {\n\t\t\t\t\tbackgroundMaterial.color.copy(background);\n\t\t\t\t\tscene.background = null;\n\t\t\t\t\tuseSolidColor = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbackgroundMaterial.color.copy(_clearColor);\n\t\t\t\tuseSolidColor = true;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst col = i % 3;\n\n\t\t\t\tif (col == 0) {\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\n\t\t\t\t\tcubeCamera.lookAt(forwardSign[i], 0, 0);\n\t\t\t\t} else if (col == 1) {\n\t\t\t\t\tcubeCamera.up.set(0, 0, upSign[i]);\n\t\t\t\t\tcubeCamera.lookAt(0, forwardSign[i], 0);\n\t\t\t\t} else {\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\n\t\t\t\t\tcubeCamera.lookAt(0, 0, forwardSign[i]);\n\t\t\t\t}\n\n\t\t\t\t_setViewport(cubeUVRenderTarget, col * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX);\n\n\t\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\n\n\t\t\t\tif (useSolidColor) {\n\t\t\t\t\trenderer.render(backgroundBox, cubeCamera);\n\t\t\t\t}\n\n\t\t\t\trenderer.render(scene, cubeCamera);\n\t\t\t}\n\n\t\t\tbackgroundBox.geometry.dispose();\n\t\t\tbackgroundBox.material.dispose();\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.outputEncoding = outputEncoding;\n\t\t\trenderer.autoClear = originalAutoClear;\n\t\t\tscene.background = background;\n\t\t}\n\n\t\t_setEncoding(uniform, texture) {\n\t\t\tif (this._renderer.capabilities.isWebGL2 === true && texture.format === RGBAFormat && texture.type === UnsignedByteType && texture.encoding === sRGBEncoding) {\n\t\t\t\tuniform.value = ENCODINGS[LinearEncoding];\n\t\t\t} else {\n\t\t\t\tuniform.value = ENCODINGS[texture.encoding];\n\t\t\t}\n\t\t}\n\n\t\t_textureToCubeUV(texture, cubeUVRenderTarget) {\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst isCubeTexture = texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping;\n\n\t\t\tif (isCubeTexture) {\n\t\t\t\tif (this._cubemapShader == null) {\n\t\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._equirectShader == null) {\n\t\t\t\t\tthis._equirectShader = _getEquirectShader();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst material = isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\t\tconst mesh = new Mesh(_lodPlanes[0], material);\n\t\t\tconst uniforms = material.uniforms;\n\t\t\tuniforms['envMap'].value = texture;\n\n\t\t\tif (!isCubeTexture) {\n\t\t\t\tuniforms['texelSize'].value.set(1.0 / texture.image.width, 1.0 / texture.image.height);\n\t\t\t}\n\n\t\t\tthis._setEncoding(uniforms['inputEncoding'], texture);\n\n\t\t\tthis._setEncoding(uniforms['outputEncoding'], cubeUVRenderTarget.texture);\n\n\t\t\t_setViewport(cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX);\n\n\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\n\t\t\trenderer.render(mesh, _flatCamera);\n\t\t}\n\n\t\t_applyPMREM(cubeUVRenderTarget) {\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst autoClear = renderer.autoClear;\n\t\t\trenderer.autoClear = false;\n\n\t\t\tfor (let i = 1; i < TOTAL_LODS; i++) {\n\t\t\t\tconst sigma = Math.sqrt(_sigmas[i] * _sigmas[i] - _sigmas[i - 1] * _sigmas[i - 1]);\n\t\t\t\tconst poleAxis = _axisDirections[(i - 1) % _axisDirections.length];\n\n\t\t\t\tthis._blur(cubeUVRenderTarget, i - 1, i, sigma, poleAxis);\n\t\t\t}\n\n\t\t\trenderer.autoClear = autoClear;\n\t\t}\n\t\t/**\n\t\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t\t * accurate at the poles, but still does a decent job.\n\t\t */\n\n\n\t\t_blur(cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis) {\n\t\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\t\tthis._halfBlur(cubeUVRenderTarget, pingPongRenderTarget, lodIn, lodOut, sigma, 'latitudinal', poleAxis);\n\n\t\t\tthis._halfBlur(pingPongRenderTarget, cubeUVRenderTarget, lodOut, lodOut, sigma, 'longitudinal', poleAxis);\n\t\t}\n\n\t\t_halfBlur(targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis) {\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst blurMaterial = this._blurMaterial;\n\n\t\t\tif (direction !== 'latitudinal' && direction !== 'longitudinal') {\n\t\t\t\tconsole.error('blur direction must be either latitudinal or longitudinal!');\n\t\t\t} // Number of standard deviations at which to cut off the discrete approximation.\n\n\n\t\t\tconst STANDARD_DEVIATIONS = 3;\n\t\t\tconst blurMesh = new Mesh(_lodPlanes[lodOut], blurMaterial);\n\t\t\tconst blurUniforms = blurMaterial.uniforms;\n\t\t\tconst pixels = _sizeLods[lodIn] - 1;\n\t\t\tconst radiansPerPixel = isFinite(sigmaRadians) ? Math.PI / (2 * pixels) : 2 * Math.PI / (2 * MAX_SAMPLES - 1);\n\t\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\t\tconst samples = isFinite(sigmaRadians) ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels) : MAX_SAMPLES;\n\n\t\t\tif (samples > MAX_SAMPLES) {\n\t\t\t\tconsole.warn(`sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}`);\n\t\t\t}\n\n\t\t\tconst weights = [];\n\t\t\tlet sum = 0;\n\n\t\t\tfor (let i = 0; i < MAX_SAMPLES; ++i) {\n\t\t\t\tconst x = i / sigmaPixels;\n\t\t\t\tconst weight = Math.exp(-x * x / 2);\n\t\t\t\tweights.push(weight);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tsum += weight;\n\t\t\t\t} else if (i < samples) {\n\t\t\t\t\tsum += 2 * weight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < weights.length; i++) {\n\t\t\t\tweights[i] = weights[i] / sum;\n\t\t\t}\n\n\t\t\tblurUniforms['envMap'].value = targetIn.texture;\n\t\t\tblurUniforms['samples'].value = samples;\n\t\t\tblurUniforms['weights'].value = weights;\n\t\t\tblurUniforms['latitudinal'].value = direction === 'latitudinal';\n\n\t\t\tif (poleAxis) {\n\t\t\t\tblurUniforms['poleAxis'].value = poleAxis;\n\t\t\t}\n\n\t\t\tblurUniforms['dTheta'].value = radiansPerPixel;\n\t\t\tblurUniforms['mipInt'].value = LOD_MAX - lodIn;\n\n\t\t\tthis._setEncoding(blurUniforms['inputEncoding'], targetIn.texture);\n\n\t\t\tthis._setEncoding(blurUniforms['outputEncoding'], targetIn.texture);\n\n\t\t\tconst outputSize = _sizeLods[lodOut];\n\t\t\tconst x = 3 * Math.max(0, SIZE_MAX - 2 * outputSize);\n\t\t\tconst y = (lodOut === 0 ? 0 : 2 * SIZE_MAX) + 2 * outputSize * (lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0);\n\n\t\t\t_setViewport(targetOut, x, y, 3 * outputSize, 2 * outputSize);\n\n\t\t\trenderer.setRenderTarget(targetOut);\n\t\t\trenderer.render(blurMesh, _flatCamera);\n\t\t}\n\n\t}\n\n\tfunction _isLDR(texture) {\n\t\tif (texture === undefined || texture.type !== UnsignedByteType) return false;\n\t\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n\t}\n\n\tfunction _createPlanes() {\n\t\tconst _lodPlanes = [];\n\t\tconst _sizeLods = [];\n\t\tconst _sigmas = [];\n\t\tlet lod = LOD_MAX;\n\n\t\tfor (let i = 0; i < TOTAL_LODS; i++) {\n\t\t\tconst sizeLod = Math.pow(2, lod);\n\n\t\t\t_sizeLods.push(sizeLod);\n\n\t\t\tlet sigma = 1.0 / sizeLod;\n\n\t\t\tif (i > LOD_MAX - LOD_MIN) {\n\t\t\t\tsigma = EXTRA_LOD_SIGMA[i - LOD_MAX + LOD_MIN - 1];\n\t\t\t} else if (i == 0) {\n\t\t\t\tsigma = 0;\n\t\t\t}\n\n\t\t\t_sigmas.push(sigma);\n\n\t\t\tconst texelSize = 1.0 / (sizeLod - 1);\n\t\t\tconst min = -texelSize / 2;\n\t\t\tconst max = 1 + texelSize / 2;\n\t\t\tconst uv1 = [min, min, max, min, max, max, min, min, max, max, min, max];\n\t\t\tconst cubeFaces = 6;\n\t\t\tconst vertices = 6;\n\t\t\tconst positionSize = 3;\n\t\t\tconst uvSize = 2;\n\t\t\tconst faceIndexSize = 1;\n\t\t\tconst position = new Float32Array(positionSize * vertices * cubeFaces);\n\t\t\tconst uv = new Float32Array(uvSize * vertices * cubeFaces);\n\t\t\tconst faceIndex = new Float32Array(faceIndexSize * vertices * cubeFaces);\n\n\t\t\tfor (let face = 0; face < cubeFaces; face++) {\n\t\t\t\tconst x = face % 3 * 2 / 3 - 1;\n\t\t\t\tconst y = face > 2 ? 0 : -1;\n\t\t\t\tconst coordinates = [x, y, 0, x + 2 / 3, y, 0, x + 2 / 3, y + 1, 0, x, y, 0, x + 2 / 3, y + 1, 0, x, y + 1, 0];\n\t\t\t\tposition.set(coordinates, positionSize * vertices * face);\n\t\t\t\tuv.set(uv1, uvSize * vertices * face);\n\t\t\t\tconst fill = [face, face, face, face, face, face];\n\t\t\t\tfaceIndex.set(fill, faceIndexSize * vertices * face);\n\t\t\t}\n\n\t\t\tconst planes = new BufferGeometry();\n\t\t\tplanes.setAttribute('position', new BufferAttribute(position, positionSize));\n\t\t\tplanes.setAttribute('uv', new BufferAttribute(uv, uvSize));\n\t\t\tplanes.setAttribute('faceIndex', new BufferAttribute(faceIndex, faceIndexSize));\n\n\t\t\t_lodPlanes.push(planes);\n\n\t\t\tif (lod > LOD_MIN) {\n\t\t\t\tlod--;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t_lodPlanes,\n\t\t\t_sizeLods,\n\t\t\t_sigmas\n\t\t};\n\t}\n\n\tfunction _createRenderTarget(params) {\n\t\tconst cubeUVRenderTarget = new WebGLRenderTarget(3 * SIZE_MAX, 3 * SIZE_MAX, params);\n\t\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\t\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\t\tcubeUVRenderTarget.scissorTest = true;\n\t\treturn cubeUVRenderTarget;\n\t}\n\n\tfunction _setViewport(target, x, y, width, height) {\n\t\ttarget.viewport.set(x, y, width, height);\n\t\ttarget.scissor.set(x, y, width, height);\n\t}\n\n\tfunction _getBlurShader(maxSamples) {\n\t\tconst weights = new Float32Array(maxSamples);\n\t\tconst poleAxis = new Vector3(0, 1, 0);\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'SphericalGaussianBlur',\n\t\t\tdefines: {\n\t\t\t\t'n': maxSamples\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'samples': {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\t'weights': {\n\t\t\t\t\tvalue: weights\n\t\t\t\t},\n\t\t\t\t'latitudinal': {\n\t\t\t\t\tvalue: false\n\t\t\t\t},\n\t\t\t\t'dTheta': {\n\t\t\t\t\tvalue: 0\n\t\t\t\t},\n\t\t\t\t'mipInt': {\n\t\t\t\t\tvalue: 0\n\t\t\t\t},\n\t\t\t\t'poleAxis': {\n\t\t\t\t\tvalue: poleAxis\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getEquirectShader() {\n\t\tconst texelSize = new Vector2(1, 1);\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'EquirectangularToCubeUV',\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'texelSize': {\n\t\t\t\t\tvalue: texelSize\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getCubemapShader() {\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'CubemapToCubeUV',\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${_getEncodings()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getCommonVertexShader() {\n\t\treturn (\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`\n\t\t);\n\t}\n\n\tfunction _getEncodings() {\n\t\treturn (\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t`\n\t\t);\n\t}\n\n\tfunction WebGLCubeUVMaps(renderer) {\n\t\tlet cubeUVmaps = new WeakMap();\n\t\tlet pmremGenerator = null;\n\n\t\tfunction get(texture) {\n\t\t\tif (texture && texture.isTexture && texture.isRenderTargetTexture === false) {\n\t\t\t\tconst mapping = texture.mapping;\n\t\t\t\tconst isEquirectMap = mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping;\n\t\t\t\tconst isCubeMap = mapping === CubeReflectionMapping || mapping === CubeRefractionMapping;\n\n\t\t\t\tif (isEquirectMap || isCubeMap) {\n\t\t\t\t\t// equirect/cube map to cubeUV conversion\n\t\t\t\t\tif (cubeUVmaps.has(texture)) {\n\t\t\t\t\t\treturn cubeUVmaps.get(texture).texture;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif (isEquirectMap && image && image.height > 0 || isCubeMap && image && isCubeTextureComplete(image)) {\n\t\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\t\t\t\t\tif (pmremGenerator === null) pmremGenerator = new PMREMGenerator(renderer);\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular(texture) : pmremGenerator.fromCubemap(texture);\n\t\t\t\t\t\t\tcubeUVmaps.set(texture, renderTarget);\n\t\t\t\t\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t\t\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction isCubeTextureComplete(image) {\n\t\t\tlet count = 0;\n\t\t\tconst length = 6;\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tif (image[i] !== undefined) count++;\n\t\t\t}\n\n\t\t\treturn count === length;\n\t\t}\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tconst texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tconst cubemapUV = cubeUVmaps.get(texture);\n\n\t\t\tif (cubemapUV !== undefined) {\n\t\t\t\tcubeUVmaps.delete(texture);\n\t\t\t\tcubemapUV.dispose();\n\t\t\t}\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tcubeUVmaps = new WeakMap();\n\n\t\t\tif (pmremGenerator !== null) {\n\t\t\t\tpmremGenerator.dispose();\n\t\t\t\tpmremGenerator = null;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction WebGLExtensions(gl) {\n\t\tconst extensions = {};\n\n\t\tfunction getExtension(name) {\n\t\t\tif (extensions[name] !== undefined) {\n\t\t\t\treturn extensions[name];\n\t\t\t}\n\n\t\t\tlet extension;\n\n\t\t\tswitch (name) {\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension(name);\n\t\t\t}\n\n\t\t\textensions[name] = extension;\n\t\t\treturn extension;\n\t\t}\n\n\t\treturn {\n\t\t\thas: function (name) {\n\t\t\t\treturn getExtension(name) !== null;\n\t\t\t},\n\t\t\tinit: function (capabilities) {\n\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\tgetExtension('EXT_color_buffer_float');\n\t\t\t\t} else {\n\t\t\t\t\tgetExtension('WEBGL_depth_texture');\n\t\t\t\t\tgetExtension('OES_texture_float');\n\t\t\t\t\tgetExtension('OES_texture_half_float');\n\t\t\t\t\tgetExtension('OES_texture_half_float_linear');\n\t\t\t\t\tgetExtension('OES_standard_derivatives');\n\t\t\t\t\tgetExtension('OES_element_index_uint');\n\t\t\t\t\tgetExtension('OES_vertex_array_object');\n\t\t\t\t\tgetExtension('ANGLE_instanced_arrays');\n\t\t\t\t}\n\n\t\t\t\tgetExtension('OES_texture_float_linear');\n\t\t\t\tgetExtension('EXT_color_buffer_half_float');\n\t\t\t},\n\t\t\tget: function (name) {\n\t\t\t\tconst extension = getExtension(name);\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n\t\t\t\t}\n\n\t\t\t\treturn extension;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction WebGLGeometries(gl, attributes, info, bindingStates) {\n\t\tconst geometries = {};\n\t\tconst wireframeAttributes = new WeakMap();\n\n\t\tfunction onGeometryDispose(event) {\n\t\t\tconst geometry = event.target;\n\n\t\t\tif (geometry.index !== null) {\n\t\t\t\tattributes.remove(geometry.index);\n\t\t\t}\n\n\t\t\tfor (const name in geometry.attributes) {\n\t\t\t\tattributes.remove(geometry.attributes[name]);\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener('dispose', onGeometryDispose);\n\t\t\tdelete geometries[geometry.id];\n\t\t\tconst attribute = wireframeAttributes.get(geometry);\n\n\t\t\tif (attribute) {\n\t\t\t\tattributes.remove(attribute);\n\t\t\t\twireframeAttributes.delete(geometry);\n\t\t\t}\n\n\t\t\tbindingStates.releaseStatesOfGeometry(geometry);\n\n\t\t\tif (geometry.isInstancedBufferGeometry === true) {\n\t\t\t\tdelete geometry._maxInstanceCount;\n\t\t\t} //\n\n\n\t\t\tinfo.memory.geometries--;\n\t\t}\n\n\t\tfunction get(object, geometry) {\n\t\t\tif (geometries[geometry.id] === true) return geometry;\n\t\t\tgeometry.addEventListener('dispose', onGeometryDispose);\n\t\t\tgeometries[geometry.id] = true;\n\t\t\tinfo.memory.geometries++;\n\t\t\treturn geometry;\n\t\t}\n\n\t\tfunction update(geometry) {\n\t\t\tconst geometryAttributes = geometry.attributes; // Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\t\tfor (const name in geometryAttributes) {\n\t\t\t\tattributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\n\t\t\t} // morph targets\n\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst array = morphAttributes[name];\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\n\t\t\t\t\tattributes.update(array[i], gl.ARRAY_BUFFER);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction updateWireframeAttribute(geometry) {\n\t\t\tconst indices = [];\n\t\t\tconst geometryIndex = geometry.index;\n\t\t\tconst geometryPosition = geometry.attributes.position;\n\t\t\tlet version = 0;\n\n\t\t\tif (geometryIndex !== null) {\n\t\t\t\tconst array = geometryIndex.array;\n\t\t\t\tversion = geometryIndex.version;\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i += 3) {\n\t\t\t\t\tconst a = array[i + 0];\n\t\t\t\t\tconst b = array[i + 1];\n\t\t\t\t\tconst c = array[i + 2];\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst array = geometryPosition.array;\n\t\t\t\tversion = geometryPosition.version;\n\n\t\t\t\tfor (let i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n\t\t\t\t\tconst a = i + 0;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n\t\t\tattribute.version = version; // Updating index buffer in VAO now. See WebGLBindingStates\n\t\t\t//\n\n\t\t\tconst previousAttribute = wireframeAttributes.get(geometry);\n\t\t\tif (previousAttribute) attributes.remove(previousAttribute); //\n\n\t\t\twireframeAttributes.set(geometry, attribute);\n\t\t}\n\n\t\tfunction getWireframeAttribute(geometry) {\n\t\t\tconst currentAttribute = wireframeAttributes.get(geometry);\n\n\t\t\tif (currentAttribute) {\n\t\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\t\tif (geometryIndex !== null) {\n\t\t\t\t\t// if the attribute is obsolete, create a new one\n\t\t\t\t\tif (currentAttribute.version < geometryIndex.version) {\n\t\t\t\t\t\tupdateWireframeAttribute(geometry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdateWireframeAttribute(geometry);\n\t\t\t}\n\n\t\t\treturn wireframeAttributes.get(geometry);\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tupdate: update,\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\t\t};\n\t}\n\n\tfunction WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tlet mode;\n\n\t\tfunction setMode(value) {\n\t\t\tmode = value;\n\t\t}\n\n\t\tlet type, bytesPerElement;\n\n\t\tfunction setIndex(value) {\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\t\t}\n\n\t\tfunction render(start, count) {\n\t\t\tgl.drawElements(mode, count, type, start * bytesPerElement);\n\t\t\tinfo.update(count, mode, 1);\n\t\t}\n\n\t\tfunction renderInstances(start, count, primcount) {\n\t\t\tif (primcount === 0) return;\n\t\t\tlet extension, methodName;\n\n\t\t\tif (isWebGL2) {\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawElementsInstanced';\n\t\t\t} else {\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\n\t\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\textension[methodName](mode, count, type, start * bytesPerElement, primcount);\n\t\t\tinfo.update(count, mode, primcount);\n\t\t} //\n\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\t}\n\n\tfunction WebGLInfo(gl) {\n\t\tconst memory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t};\n\t\tconst render = {\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\ttriangles: 0,\n\t\t\tpoints: 0,\n\t\t\tlines: 0\n\t\t};\n\n\t\tfunction update(count, mode, instanceCount) {\n\t\t\trender.calls++;\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase gl.TRIANGLES:\n\t\t\t\t\trender.triangles += instanceCount * (count / 3);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINES:\n\t\t\t\t\trender.lines += instanceCount * (count / 2);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINE_STRIP:\n\t\t\t\t\trender.lines += instanceCount * (count - 1);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINE_LOOP:\n\t\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.POINTS:\n\t\t\t\t\trender.points += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error('THREE.WebGLInfo: Unknown draw mode:', mode);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfunction reset() {\n\t\t\trender.frame++;\n\t\t\trender.calls = 0;\n\t\t\trender.triangles = 0;\n\t\t\trender.points = 0;\n\t\t\trender.lines = 0;\n\t\t}\n\n\t\treturn {\n\t\t\tmemory: memory,\n\t\t\trender: render,\n\t\t\tprograms: null,\n\t\t\tautoReset: true,\n\t\t\treset: reset,\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tclass DataTexture2DArray extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, depth = 1) {\n\t\t\tsuper(null);\n\t\t\tthis.image = {\n\t\t\t\tdata,\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tdepth\n\t\t\t};\n\t\t\tthis.magFilter = NearestFilter;\n\t\t\tthis.minFilter = NearestFilter;\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n\tfunction numericalSort(a, b) {\n\t\treturn a[0] - b[0];\n\t}\n\n\tfunction absNumericalSort(a, b) {\n\t\treturn Math.abs(b[1]) - Math.abs(a[1]);\n\t}\n\n\tfunction denormalize(morph, attribute) {\n\t\tlet denominator = 1;\n\t\tconst array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\n\t\tif (array instanceof Int8Array) denominator = 127;else if (array instanceof Int16Array) denominator = 32767;else if (array instanceof Int32Array) denominator = 2147483647;else console.error('THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array);\n\t\tmorph.divideScalar(denominator);\n\t}\n\n\tfunction WebGLMorphtargets(gl, capabilities, textures) {\n\t\tconst influencesList = {};\n\t\tconst morphInfluences = new Float32Array(8);\n\t\tconst morphTextures = new WeakMap();\n\t\tconst morph = new Vector3();\n\t\tconst workInfluences = [];\n\n\t\tfor (let i = 0; i < 8; i++) {\n\t\t\tworkInfluences[i] = [i, 0];\n\t\t}\n\n\t\tfunction update(object, geometry, material, program) {\n\t\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t\tif (capabilities.isWebGL2 === true) {\n\t\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\t\t\t\tconst numberOfMorphTargets = geometry.morphAttributes.position.length;\n\t\t\t\tlet entry = morphTextures.get(geometry);\n\n\t\t\t\tif (entry === undefined || entry.count !== numberOfMorphTargets) {\n\t\t\t\t\tif (entry !== undefined) entry.texture.dispose();\n\t\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\t\tconst numberOfVertices = geometry.attributes.position.count;\n\t\t\t\t\tconst numberOfVertexData = hasMorphNormals === true ? 2 : 1; // (v,n) vs. (v)\n\n\t\t\t\t\tlet width = numberOfVertices * numberOfVertexData;\n\t\t\t\t\tlet height = 1;\n\n\t\t\t\t\tif (width > capabilities.maxTextureSize) {\n\t\t\t\t\t\theight = Math.ceil(width / capabilities.maxTextureSize);\n\t\t\t\t\t\twidth = capabilities.maxTextureSize;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst buffer = new Float32Array(width * height * 4 * numberOfMorphTargets);\n\t\t\t\t\tconst texture = new DataTexture2DArray(buffer, width, height, numberOfMorphTargets);\n\t\t\t\t\ttexture.format = RGBAFormat; // using RGBA since RGB might be emulated (and is thus slower)\n\n\t\t\t\t\ttexture.type = FloatType; // fill buffer\n\n\t\t\t\t\tconst vertexDataStride = numberOfVertexData * 4;\n\n\t\t\t\t\tfor (let i = 0; i < numberOfMorphTargets; i++) {\n\t\t\t\t\t\tconst morphTarget = morphTargets[i];\n\t\t\t\t\t\tconst morphNormal = morphNormals[i];\n\t\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\t\tfor (let j = 0; j < morphTarget.count; j++) {\n\t\t\t\t\t\t\tmorph.fromBufferAttribute(morphTarget, j);\n\t\t\t\t\t\t\tif (morphTarget.normalized === true) denormalize(morph, morphTarget);\n\t\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\t\t\t\t\t\t\tbuffer[offset + stride + 0] = morph.x;\n\t\t\t\t\t\t\tbuffer[offset + stride + 1] = morph.y;\n\t\t\t\t\t\t\tbuffer[offset + stride + 2] = morph.z;\n\t\t\t\t\t\t\tbuffer[offset + stride + 3] = 0;\n\n\t\t\t\t\t\t\tif (hasMorphNormals === true) {\n\t\t\t\t\t\t\t\tmorph.fromBufferAttribute(morphNormal, j);\n\t\t\t\t\t\t\t\tif (morphNormal.normalized === true) denormalize(morph, morphNormal);\n\t\t\t\t\t\t\t\tbuffer[offset + stride + 4] = morph.x;\n\t\t\t\t\t\t\t\tbuffer[offset + stride + 5] = morph.y;\n\t\t\t\t\t\t\t\tbuffer[offset + stride + 6] = morph.z;\n\t\t\t\t\t\t\t\tbuffer[offset + stride + 7] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tentry = {\n\t\t\t\t\t\tcount: numberOfMorphTargets,\n\t\t\t\t\t\ttexture: texture,\n\t\t\t\t\t\tsize: new Vector2(width, height)\n\t\t\t\t\t};\n\t\t\t\t\tmorphTextures.set(geometry, entry);\n\t\t\t\t} //\n\n\n\t\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\t\tfor (let i = 0; i < objectInfluences.length; i++) {\n\t\t\t\t\tmorphInfluencesSum += objectInfluences[i];\n\t\t\t\t}\n\n\t\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetInfluences', objectInfluences);\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetsTexture', entry.texture, textures);\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetsTextureSize', entry.size);\n\t\t\t} else {\n\t\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\t\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\t\t\t\tlet influences = influencesList[geometry.id];\n\n\t\t\t\tif (influences === undefined || influences.length !== length) {\n\t\t\t\t\t// initialise list\n\t\t\t\t\tinfluences = [];\n\n\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\tinfluences[i] = [i, 0];\n\t\t\t\t\t}\n\n\t\t\t\t\tinfluencesList[geometry.id] = influences;\n\t\t\t\t} // Collect influences\n\n\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tconst influence = influences[i];\n\t\t\t\t\tinfluence[0] = i;\n\t\t\t\t\tinfluence[1] = objectInfluences[i];\n\t\t\t\t}\n\n\t\t\t\tinfluences.sort(absNumericalSort);\n\n\t\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\t\tif (i < length && influences[i][1]) {\n\t\t\t\t\t\tworkInfluences[i][0] = influences[i][0];\n\t\t\t\t\t\tworkInfluences[i][1] = influences[i][1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tworkInfluences[i][0] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\t\tworkInfluences[i][1] = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tworkInfluences.sort(numericalSort);\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\t\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\t\tconst influence = workInfluences[i];\n\t\t\t\t\tconst index = influence[0];\n\t\t\t\t\tconst value = influence[1];\n\n\t\t\t\t\tif (index !== Number.MAX_SAFE_INTEGER && value) {\n\t\t\t\t\t\tif (morphTargets && geometry.getAttribute('morphTarget' + i) !== morphTargets[index]) {\n\t\t\t\t\t\t\tgeometry.setAttribute('morphTarget' + i, morphTargets[index]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (morphNormals && geometry.getAttribute('morphNormal' + i) !== morphNormals[index]) {\n\t\t\t\t\t\t\tgeometry.setAttribute('morphNormal' + i, morphNormals[index]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmorphInfluences[i] = value;\n\t\t\t\t\t\tmorphInfluencesSum += value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (morphTargets && geometry.hasAttribute('morphTarget' + i) === true) {\n\t\t\t\t\t\t\tgeometry.deleteAttribute('morphTarget' + i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (morphNormals && geometry.hasAttribute('morphNormal' + i) === true) {\n\t\t\t\t\t\t\tgeometry.deleteAttribute('morphNormal' + i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmorphInfluences[i] = 0;\n\t\t\t\t\t}\n\t\t\t\t} // GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\n\n\t\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tfunction WebGLObjects(gl, geometries, attributes, info) {\n\t\tlet updateMap = new WeakMap();\n\n\t\tfunction update(object) {\n\t\t\tconst frame = info.render.frame;\n\t\t\tconst geometry = object.geometry;\n\t\t\tconst buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n\t\t\tif (updateMap.get(buffergeometry) !== frame) {\n\t\t\t\tgeometries.update(buffergeometry);\n\t\t\t\tupdateMap.set(buffergeometry, frame);\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh) {\n\t\t\t\tif (object.hasEventListener('dispose', onInstancedMeshDispose) === false) {\n\t\t\t\t\tobject.addEventListener('dispose', onInstancedMeshDispose);\n\t\t\t\t}\n\n\t\t\t\tattributes.update(object.instanceMatrix, gl.ARRAY_BUFFER);\n\n\t\t\t\tif (object.instanceColor !== null) {\n\t\t\t\t\tattributes.update(object.instanceColor, gl.ARRAY_BUFFER);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tupdateMap = new WeakMap();\n\t\t}\n\n\t\tfunction onInstancedMeshDispose(event) {\n\t\t\tconst instancedMesh = event.target;\n\t\t\tinstancedMesh.removeEventListener('dispose', onInstancedMeshDispose);\n\t\t\tattributes.remove(instancedMesh.instanceMatrix);\n\t\t\tif (instancedMesh.instanceColor !== null) attributes.remove(instancedMesh.instanceColor);\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tclass DataTexture3D extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, depth = 1) {\n\t\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t\t// Users can still set in DataTexture3D directly.\n\t\t\t//\n\t\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t\t// \ttexture.anisotropy = 16;\n\t\t\t//\n\t\t\t// See #14839\n\t\t\tsuper(null);\n\t\t\tthis.image = {\n\t\t\t\tdata,\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tdepth\n\t\t\t};\n\t\t\tthis.magFilter = NearestFilter;\n\t\t\tthis.minFilter = NearestFilter;\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tDataTexture3D.prototype.isDataTexture3D = true;\n\n\t/**\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [textures] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *\t\tthe 'textures' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (textures factorizations):\n\t *\n\t * .upload( gl, seq, values, textures )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (textures factorizations):\n\t *\n\t * .setValue( gl, name, value, textures )\n\t *\n\t * \t\tsets uniform with\tname 'name' to 'value'\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\tconst emptyTexture = new Texture();\n\tconst emptyTexture2dArray = new DataTexture2DArray();\n\tconst emptyTexture3d = new DataTexture3D();\n\tconst emptyCubeTexture = new CubeTexture(); // --- Utilities ---\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tconst arrayCacheF32 = [];\n\tconst arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\n\tconst mat4array = new Float32Array(16);\n\tconst mat3array = new Float32Array(9);\n\tconst mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\n\n\tfunction flatten(array, nBlocks, blockSize) {\n\t\tconst firstElem = array[0];\n\t\tif (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tconst n = nBlocks * blockSize;\n\t\tlet r = arrayCacheF32[n];\n\n\t\tif (r === undefined) {\n\t\t\tr = new Float32Array(n);\n\t\t\tarrayCacheF32[n] = r;\n\t\t}\n\n\t\tif (nBlocks !== 0) {\n\t\t\tfirstElem.toArray(r, 0);\n\n\t\t\tfor (let i = 1, offset = 0; i !== nBlocks; ++i) {\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[i].toArray(r, offset);\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tfunction arraysEqual(a, b) {\n\t\tif (a.length !== b.length) return false;\n\n\t\tfor (let i = 0, l = a.length; i < l; i++) {\n\t\t\tif (a[i] !== b[i]) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction copyArray(a, b) {\n\t\tfor (let i = 0, l = b.length; i < l; i++) {\n\t\t\ta[i] = b[i];\n\t\t}\n\t} // Texture unit allocation\n\n\n\tfunction allocTexUnits(textures, n) {\n\t\tlet r = arrayCacheI32[n];\n\n\t\tif (r === undefined) {\n\t\t\tr = new Int32Array(n);\n\t\t\tarrayCacheI32[n] = r;\n\t\t}\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\tr[i] = textures.allocateTextureUnit();\n\t\t}\n\n\t\treturn r;\n\t} // --- Setters ---\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\t// Single scalar\n\n\n\tfunction setValueV1f(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1f(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single float vector (from flat array or THREE.VectorN)\n\n\n\tfunction setValueV2f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y) {\n\t\t\t\tgl.uniform2f(this.addr, v.x, v.y);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform2fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t}\n\n\tfunction setValueV3f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n\t\t\t\tgl.uniform3f(this.addr, v.x, v.y, v.z);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t\tcache[2] = v.z;\n\t\t\t}\n\t\t} else if (v.r !== undefined) {\n\t\t\tif (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n\t\t\t\tgl.uniform3f(this.addr, v.r, v.g, v.b);\n\t\t\t\tcache[0] = v.r;\n\t\t\t\tcache[1] = v.g;\n\t\t\t\tcache[2] = v.b;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform3fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t}\n\n\tfunction setValueV4f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n\t\t\t\tgl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t\tcache[2] = v.z;\n\t\t\t\tcache[3] = v.w;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform4fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t} // Single matrix (from flat array or THREE.MatrixN)\n\n\n\tfunction setValueM2(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix2fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat2array.set(elements);\n\t\t\tgl.uniformMatrix2fv(this.addr, false, mat2array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t}\n\n\tfunction setValueM3(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix3fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat3array.set(elements);\n\t\t\tgl.uniformMatrix3fv(this.addr, false, mat3array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t}\n\n\tfunction setValueM4(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix4fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat4array.set(elements);\n\t\t\tgl.uniformMatrix4fv(this.addr, false, mat4array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t} // Single integer / boolean\n\n\n\tfunction setValueV1i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1i(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single integer / boolean vector (from flat array)\n\n\n\tfunction setValueV2i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform2iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV3i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform3iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV4i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform4iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t} // Single unsigned integer\n\n\n\tfunction setValueV1ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1ui(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single unsigned integer vector (from flat array)\n\n\n\tfunction setValueV2ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform2uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV3ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform3uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV4ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform4uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t} // Single texture (2D / Cube)\n\n\n\tfunction setValueT1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.safeSetTexture2D(v || emptyTexture, unit);\n\t}\n\n\tfunction setValueT3D1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.setTexture3D(v || emptyTexture3d, unit);\n\t}\n\n\tfunction setValueT6(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.safeSetTextureCube(v || emptyCubeTexture, unit);\n\t}\n\n\tfunction setValueT2DArray1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.setTexture2DArray(v || emptyTexture2dArray, unit);\n\t} // Helper to pick the right setter for the singular case\n\n\n\tfunction getSingularSetter(type) {\n\t\tswitch (type) {\n\t\t\tcase 0x1406:\n\t\t\t\treturn setValueV1f;\n\t\t\t// FLOAT\n\n\t\t\tcase 0x8b50:\n\t\t\t\treturn setValueV2f;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b51:\n\t\t\t\treturn setValueV3f;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b52:\n\t\t\t\treturn setValueV4f;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5a:\n\t\t\t\treturn setValueM2;\n\t\t\t// _MAT2\n\n\t\t\tcase 0x8b5b:\n\t\t\t\treturn setValueM3;\n\t\t\t// _MAT3\n\n\t\t\tcase 0x8b5c:\n\t\t\t\treturn setValueM4;\n\t\t\t// _MAT4\n\n\t\t\tcase 0x1404:\n\t\t\tcase 0x8b56:\n\t\t\t\treturn setValueV1i;\n\t\t\t// INT, BOOL\n\n\t\t\tcase 0x8b53:\n\t\t\tcase 0x8b57:\n\t\t\t\treturn setValueV2i;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b54:\n\t\t\tcase 0x8b58:\n\t\t\t\treturn setValueV3i;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b55:\n\t\t\tcase 0x8b59:\n\t\t\t\treturn setValueV4i;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x1405:\n\t\t\t\treturn setValueV1ui;\n\t\t\t// UINT\n\n\t\t\tcase 0x8dc6:\n\t\t\t\treturn setValueV2ui;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8dc7:\n\t\t\t\treturn setValueV3ui;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8dc8:\n\t\t\t\treturn setValueV4ui;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n\t\t\tcase 0x8b62:\n\t\t\t\t// SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1;\n\n\t\t\tcase 0x8b5f: // SAMPLER_3D\n\n\t\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\n\t\t\tcase 0x8dd3:\n\t\t\t\t// UNSIGNED_INT_SAMPLER_3D\n\t\t\t\treturn setValueT3D1;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dc5:\n\t\t\t\t// SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6;\n\n\t\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dc4:\n\t\t\t\t// SAMPLER_2D_ARRAY_SHADOW\n\t\t\t\treturn setValueT2DArray1;\n\t\t}\n\t} // Array of scalars\n\n\n\tfunction setValueV1fArray(gl, v) {\n\t\tgl.uniform1fv(this.addr, v);\n\t} // Array of vectors (from flat array or array of THREE.VectorN)\n\n\n\tfunction setValueV2fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 2);\n\t\tgl.uniform2fv(this.addr, data);\n\t}\n\n\tfunction setValueV3fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 3);\n\t\tgl.uniform3fv(this.addr, data);\n\t}\n\n\tfunction setValueV4fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 4);\n\t\tgl.uniform4fv(this.addr, data);\n\t} // Array of matrices (from flat array or array of THREE.MatrixN)\n\n\n\tfunction setValueM2Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 4);\n\t\tgl.uniformMatrix2fv(this.addr, false, data);\n\t}\n\n\tfunction setValueM3Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 9);\n\t\tgl.uniformMatrix3fv(this.addr, false, data);\n\t}\n\n\tfunction setValueM4Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 16);\n\t\tgl.uniformMatrix4fv(this.addr, false, data);\n\t} // Array of integer / boolean\n\n\n\tfunction setValueV1iArray(gl, v) {\n\t\tgl.uniform1iv(this.addr, v);\n\t} // Array of integer / boolean vectors (from flat array)\n\n\n\tfunction setValueV2iArray(gl, v) {\n\t\tgl.uniform2iv(this.addr, v);\n\t}\n\n\tfunction setValueV3iArray(gl, v) {\n\t\tgl.uniform3iv(this.addr, v);\n\t}\n\n\tfunction setValueV4iArray(gl, v) {\n\t\tgl.uniform4iv(this.addr, v);\n\t} // Array of unsigned integer\n\n\n\tfunction setValueV1uiArray(gl, v) {\n\t\tgl.uniform1uiv(this.addr, v);\n\t} // Array of unsigned integer vectors (from flat array)\n\n\n\tfunction setValueV2uiArray(gl, v) {\n\t\tgl.uniform2uiv(this.addr, v);\n\t}\n\n\tfunction setValueV3uiArray(gl, v) {\n\t\tgl.uniform3uiv(this.addr, v);\n\t}\n\n\tfunction setValueV4uiArray(gl, v) {\n\t\tgl.uniform4uiv(this.addr, v);\n\t} // Array of textures (2D / Cube)\n\n\n\tfunction setValueT1Array(gl, v, textures) {\n\t\tconst n = v.length;\n\t\tconst units = allocTexUnits(textures, n);\n\t\tgl.uniform1iv(this.addr, units);\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\ttextures.safeSetTexture2D(v[i] || emptyTexture, units[i]);\n\t\t}\n\t}\n\n\tfunction setValueT6Array(gl, v, textures) {\n\t\tconst n = v.length;\n\t\tconst units = allocTexUnits(textures, n);\n\t\tgl.uniform1iv(this.addr, units);\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\ttextures.safeSetTextureCube(v[i] || emptyCubeTexture, units[i]);\n\t\t}\n\t} // Helper to pick the right setter for a pure (bottom-level) array\n\n\n\tfunction getPureArraySetter(type) {\n\t\tswitch (type) {\n\t\t\tcase 0x1406:\n\t\t\t\treturn setValueV1fArray;\n\t\t\t// FLOAT\n\n\t\t\tcase 0x8b50:\n\t\t\t\treturn setValueV2fArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b51:\n\t\t\t\treturn setValueV3fArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b52:\n\t\t\t\treturn setValueV4fArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5a:\n\t\t\t\treturn setValueM2Array;\n\t\t\t// _MAT2\n\n\t\t\tcase 0x8b5b:\n\t\t\t\treturn setValueM3Array;\n\t\t\t// _MAT3\n\n\t\t\tcase 0x8b5c:\n\t\t\t\treturn setValueM4Array;\n\t\t\t// _MAT4\n\n\t\t\tcase 0x1404:\n\t\t\tcase 0x8b56:\n\t\t\t\treturn setValueV1iArray;\n\t\t\t// INT, BOOL\n\n\t\t\tcase 0x8b53:\n\t\t\tcase 0x8b57:\n\t\t\t\treturn setValueV2iArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b54:\n\t\t\tcase 0x8b58:\n\t\t\t\treturn setValueV3iArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b55:\n\t\t\tcase 0x8b59:\n\t\t\t\treturn setValueV4iArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x1405:\n\t\t\t\treturn setValueV1uiArray;\n\t\t\t// UINT\n\n\t\t\tcase 0x8dc6:\n\t\t\t\treturn setValueV2uiArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8dc7:\n\t\t\t\treturn setValueV3uiArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8dc8:\n\t\t\t\treturn setValueV4uiArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n\t\t\tcase 0x8b62:\n\t\t\t\t// SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1Array;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dc5:\n\t\t\t\t// SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6Array;\n\t\t}\n\t} // --- Uniform Classes ---\n\n\n\tfunction SingleUniform(id, activeInfo, addr) {\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n\t}\n\n\tfunction PureArrayUniform(id, activeInfo, addr) {\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n\t}\n\n\tPureArrayUniform.prototype.updateCache = function (data) {\n\t\tconst cache = this.cache;\n\n\t\tif (data instanceof Float32Array && cache.length !== data.length) {\n\t\t\tthis.cache = new Float32Array(data.length);\n\t\t}\n\n\t\tcopyArray(cache, data);\n\t};\n\n\tfunction StructuredUniform(id) {\n\t\tthis.id = id;\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\t}\n\n\tStructuredUniform.prototype.setValue = function (gl, value, textures) {\n\t\tconst seq = this.seq;\n\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i];\n\t\t\tu.setValue(gl, value[u.id], textures);\n\t\t}\n\t}; // --- Top-level ---\n\t// Parser - builds up the property tree from the path strings\n\n\n\tconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g; // extracts\n\t// \t- the identifier (member name or array index)\n\t//\t- followed by an optional right bracket (found when array index)\n\t//\t- followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform(container, uniformObject) {\n\t\tcontainer.seq.push(uniformObject);\n\t\tcontainer.map[uniformObject.id] = uniformObject;\n\t}\n\n\tfunction parseUniform(activeInfo, addr, container) {\n\t\tconst path = activeInfo.name,\n\t\t\t\t\tpathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n\t\tRePathPart.lastIndex = 0;\n\n\t\twhile (true) {\n\t\t\tconst match = RePathPart.exec(path),\n\t\t\t\t\t\tmatchEnd = RePathPart.lastIndex;\n\t\t\tlet id = match[1];\n\t\t\tconst idIsIndex = match[2] === ']',\n\t\t\t\t\t\tsubscript = match[3];\n\t\t\tif (idIsIndex) id = id | 0; // convert to integer\n\n\t\t\tif (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\t\t\t\taddUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\t\t\t\tconst map = container.map;\n\t\t\t\tlet next = map[id];\n\n\t\t\t\tif (next === undefined) {\n\t\t\t\t\tnext = new StructuredUniform(id);\n\t\t\t\t\taddUniform(container, next);\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\t\t\t}\n\t\t}\n\t} // Root Container\n\n\n\tfunction WebGLUniforms(gl, program) {\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\t\tconst n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n\t\tfor (let i = 0; i < n; ++i) {\n\t\t\tconst info = gl.getActiveUniform(program, i),\n\t\t\t\t\t\taddr = gl.getUniformLocation(program, info.name);\n\t\t\tparseUniform(info, addr, this);\n\t\t}\n\t}\n\n\tWebGLUniforms.prototype.setValue = function (gl, name, value, textures) {\n\t\tconst u = this.map[name];\n\t\tif (u !== undefined) u.setValue(gl, value, textures);\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function (gl, object, name) {\n\t\tconst v = object[name];\n\t\tif (v !== undefined) this.setValue(gl, name, v);\n\t}; // Static interface\n\n\n\tWebGLUniforms.upload = function (gl, seq, values, textures) {\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i],\n\t\t\t\t\t\tv = values[u.id];\n\n\t\t\tif (v.needsUpdate !== false) {\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue(gl, v.value, textures);\n\t\t\t}\n\t\t}\n\t};\n\n\tWebGLUniforms.seqWithValue = function (seq, values) {\n\t\tconst r = [];\n\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i];\n\t\t\tif (u.id in values) r.push(u);\n\t\t}\n\n\t\treturn r;\n\t};\n\n\tfunction WebGLShader(gl, type, string) {\n\t\tconst shader = gl.createShader(type);\n\t\tgl.shaderSource(shader, string);\n\t\tgl.compileShader(shader);\n\t\treturn shader;\n\t}\n\n\tlet programIdCount = 0;\n\n\tfunction addLineNumbers(string) {\n\t\tconst lines = string.split('\\n');\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tlines[i] = i + 1 + ': ' + lines[i];\n\t\t}\n\n\t\treturn lines.join('\\n');\n\t}\n\n\tfunction getEncodingComponents(encoding) {\n\t\tswitch (encoding) {\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn ['Linear', '( value )'];\n\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn ['sRGB', '( value )'];\n\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn ['RGBE', '( value )'];\n\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn ['RGBM', '( value, 7.0 )'];\n\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn ['RGBM', '( value, 16.0 )'];\n\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn ['RGBD', '( value, 256.0 )'];\n\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n\t\t\tcase LogLuvEncoding:\n\t\t\t\treturn ['LogLuv', '( value )'];\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported encoding:', encoding);\n\t\t\t\treturn ['Linear', '( value )'];\n\t\t}\n\t}\n\n\tfunction getShaderErrors(gl, shader, type) {\n\t\tconst status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\t\tconst errors = gl.getShaderInfoLog(shader).trim();\n\t\tif (status && errors === '') return ''; // --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + addLineNumbers(gl.getShaderSource(shader));\n\t}\n\n\tfunction getTexelDecodingFunction(functionName, encoding) {\n\t\tconst components = getEncodingComponents(encoding);\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[0] + 'ToLinear' + components[1] + '; }';\n\t}\n\n\tfunction getTexelEncodingFunction(functionName, encoding) {\n\t\tconst components = getEncodingComponents(encoding);\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n\t}\n\n\tfunction getToneMappingFunction(functionName, toneMapping) {\n\t\tlet toneMappingName;\n\n\t\tswitch (toneMapping) {\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = 'Reinhard';\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\t\tbreak;\n\n\t\t\tcase ACESFilmicToneMapping:\n\t\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\t\tbreak;\n\n\t\t\tcase CustomToneMapping:\n\t\t\t\ttoneMappingName = 'Custom';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported toneMapping:', toneMapping);\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t}\n\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\t}\n\n\tfunction generateExtensions(parameters) {\n\t\tconst chunks = [parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ? '#extension GL_OES_standard_derivatives : enable' : '', (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '', parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ? '#extension GL_EXT_draw_buffers : require' : '', (parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n\t\treturn chunks.filter(filterEmptyLine).join('\\n');\n\t}\n\n\tfunction generateDefines(defines) {\n\t\tconst chunks = [];\n\n\t\tfor (const name in defines) {\n\t\t\tconst value = defines[name];\n\t\t\tif (value === false) continue;\n\t\t\tchunks.push('#define ' + name + ' ' + value);\n\t\t}\n\n\t\treturn chunks.join('\\n');\n\t}\n\n\tfunction fetchAttributeLocations(gl, program) {\n\t\tconst attributes = {};\n\t\tconst n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\tconst info = gl.getActiveAttrib(program, i);\n\t\t\tconst name = info.name;\n\t\t\tlet locationSize = 1;\n\t\t\tif (info.type === gl.FLOAT_MAT2) locationSize = 2;\n\t\t\tif (info.type === gl.FLOAT_MAT3) locationSize = 3;\n\t\t\tif (info.type === gl.FLOAT_MAT4) locationSize = 4; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\t\tattributes[name] = {\n\t\t\t\ttype: info.type,\n\t\t\t\tlocation: gl.getAttribLocation(program, name),\n\t\t\t\tlocationSize: locationSize\n\t\t\t};\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tfunction filterEmptyLine(string) {\n\t\treturn string !== '';\n\t}\n\n\tfunction replaceLightNums(string, parameters) {\n\t\treturn string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\n\t}\n\n\tfunction replaceClippingPlaneNums(string, parameters) {\n\t\treturn string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n\t} // Resolve Includes\n\n\n\tconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction resolveIncludes(string) {\n\t\treturn string.replace(includePattern, includeReplacer);\n\t}\n\n\tfunction includeReplacer(match, include) {\n\t\tconst string = ShaderChunk[include];\n\n\t\tif (string === undefined) {\n\t\t\tthrow new Error('Can not resolve #include <' + include + '>');\n\t\t}\n\n\t\treturn resolveIncludes(string);\n\t} // Unroll Loops\n\n\n\tconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\tconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\n\tfunction unrollLoops(string) {\n\t\treturn string.replace(unrollLoopPattern, loopReplacer).replace(deprecatedUnrollLoopPattern, deprecatedLoopReplacer);\n\t}\n\n\tfunction deprecatedLoopReplacer(match, start, end, snippet) {\n\t\tconsole.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');\n\t\treturn loopReplacer(match, start, end, snippet);\n\t}\n\n\tfunction loopReplacer(match, start, end, snippet) {\n\t\tlet string = '';\n\n\t\tfor (let i = parseInt(start); i < parseInt(end); i++) {\n\t\t\tstring += snippet.replace(/\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]').replace(/UNROLLED_LOOP_INDEX/g, i);\n\t\t}\n\n\t\treturn string;\n\t} //\n\n\n\tfunction generatePrecision(parameters) {\n\t\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\t\tif (parameters.precision === 'highp') {\n\t\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\t\t} else if (parameters.precision === 'mediump') {\n\t\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\t\t} else if (parameters.precision === 'lowp') {\n\t\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\t\t}\n\n\t\treturn precisionstring;\n\t}\n\n\tfunction generateShadowMapTypeDefine(parameters) {\n\t\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif (parameters.shadowMapType === PCFShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\t\t} else if (parameters.shadowMapType === PCFSoftShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\t\t} else if (parameters.shadowMapType === VSMShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\t\t}\n\n\t\treturn shadowMapTypeDefine;\n\t}\n\n\tfunction generateEnvMapTypeDefine(parameters) {\n\t\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.envMapMode) {\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapTypeDefine;\n\t}\n\n\tfunction generateEnvMapModeDefine(parameters) {\n\t\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.envMapMode) {\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapModeDefine;\n\t}\n\n\tfunction generateEnvMapBlendingDefine(parameters) {\n\t\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.combine) {\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapBlendingDefine;\n\t}\n\n\tfunction WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\n\t\t// TODO Send this event to Three.js DevTools\n\t\t// console.log( 'WebGLProgram', cacheKey );\n\t\tconst gl = renderer.getContext();\n\t\tconst defines = parameters.defines;\n\t\tlet vertexShader = parameters.vertexShader;\n\t\tlet fragmentShader = parameters.fragmentShader;\n\t\tconst shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\n\t\tconst envMapTypeDefine = generateEnvMapTypeDefine(parameters);\n\t\tconst envMapModeDefine = generateEnvMapModeDefine(parameters);\n\t\tconst envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\n\t\tconst gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0;\n\t\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions(parameters);\n\t\tconst customDefines = generateDefines(defines);\n\t\tconst program = gl.createProgram();\n\t\tlet prefixVertex, prefixFragment;\n\t\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\t\tif (parameters.isRawShaderMaterial) {\n\t\t\tprefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n\n\t\t\tif (prefixVertex.length > 0) {\n\t\t\t\tprefixVertex += '\\n';\n\t\t\t}\n\n\t\t\tprefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n\n\t\t\tif (prefixFragment.length > 0) {\n\t\t\t\tprefixFragment += '\\n';\n\t\t\t}\n\t\t} else {\n\t\t\tprefixVertex = [generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.instancing ? '#define USE_INSTANCING' : '', parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '', parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularTintMap ? '#define USE_SPECULARTINTMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.morphTargets && parameters.isWebGL2 ? '#define MORPHTARGETS_TEXTURE' : '', parameters.morphTargets && parameters.isWebGL2 ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', '#ifdef USE_INSTANCING', '\tattribute mat4 instanceMatrix;', '#endif', '#ifdef USE_INSTANCING_COLOR', '\tattribute vec3 instanceColor;', '#endif', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', '\tattribute vec4 tangent;', '#endif', '#if defined( USE_COLOR_ALPHA )', '\tattribute vec4 color;', '#elif defined( USE_COLOR )', '\tattribute vec3 color;', '#endif', '#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n\t\t\tprefixFragment = [customExtensions, generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoat ? '#define USE_CLEARCOAT' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularTintMap ? '#define USE_SPECULARTINTMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.alphaTest ? '#define USE_ALPHATEST' : '', parameters.sheen ? '#define USE_SHEEN' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', (parameters.extensionShaderTextureLOD || parameters.envMap) && parameters.rendererExtensionShaderTextureLod ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\tparameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', parameters.format === RGBFormat ? '#define OPAQUE' : '', ShaderChunk['encodings_pars_fragment'], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.matcap ? getTexelDecodingFunction('matcapTexelToLinear', parameters.matcapEncoding) : '', parameters.envMap ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMap ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.specularTintMap ? getTexelDecodingFunction('specularTintMapTexelToLinear', parameters.specularTintMapEncoding) : '', parameters.lightMap ? getTexelDecodingFunction('lightMapTexelToLinear', parameters.lightMapEncoding) : '', getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding), parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n\t\t}\n\n\t\tvertexShader = resolveIncludes(vertexShader);\n\t\tvertexShader = replaceLightNums(vertexShader, parameters);\n\t\tvertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n\t\tfragmentShader = resolveIncludes(fragmentShader);\n\t\tfragmentShader = replaceLightNums(fragmentShader, parameters);\n\t\tfragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n\t\tvertexShader = unrollLoops(vertexShader);\n\t\tfragmentShader = unrollLoops(fragmentShader);\n\n\t\tif (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\n\t\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\t\t\tversionString = '#version 300 es\\n';\n\t\t\tprefixVertex = ['precision mediump sampler2DArray;', '#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\n\t\t\tprefixFragment = ['#define varying in', parameters.glslVersion === GLSL3 ? '' : 'out highp vec4 pc_fragColor;', parameters.glslVersion === GLSL3 ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\n\t\t}\n\n\t\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\t\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tconst glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n\t\tconst glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n\t\tgl.attachShader(program, glVertexShader);\n\t\tgl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n\t\tif (parameters.index0AttributeName !== undefined) {\n\t\t\tgl.bindAttribLocation(program, 0, parameters.index0AttributeName);\n\t\t} else if (parameters.morphTargets === true) {\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation(program, 0, 'position');\n\t\t}\n\n\t\tgl.linkProgram(program); // check for link errors\n\n\t\tif (renderer.debug.checkShaderErrors) {\n\t\t\tconst programLog = gl.getProgramInfoLog(program).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n\t\t\t\trunnable = false;\n\t\t\t\tconst vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\n\t\t\t\tconst fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\n\t\t\t\tconsole.error('THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' + 'VALIDATE_STATUS ' + gl.getProgramParameter(program, gl.VALIDATE_STATUS) + '\\n\\n' + 'Program Info Log: ' + programLog + '\\n' + vertexErrors + '\\n' + fragmentErrors);\n\t\t\t} else if (programLog !== '') {\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Program Info Log:', programLog);\n\t\t\t} else if (vertexLog === '' || fragmentLog === '') {\n\t\t\t\thaveDiagnostics = false;\n\t\t\t}\n\n\t\t\tif (haveDiagnostics) {\n\t\t\t\tthis.diagnostics = {\n\t\t\t\t\trunnable: runnable,\n\t\t\t\t\tprogramLog: programLog,\n\t\t\t\t\tvertexShader: {\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\t\t\t\t\t},\n\t\t\t\t\tfragmentShader: {\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t} // Clean up\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\n\t\tgl.deleteShader(glVertexShader);\n\t\tgl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n\t\tlet cachedUniforms;\n\n\t\tthis.getUniforms = function () {\n\t\t\tif (cachedUniforms === undefined) {\n\t\t\t\tcachedUniforms = new WebGLUniforms(gl, program);\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\t\t}; // set up caching for attribute locations\n\n\n\t\tlet cachedAttributes;\n\n\t\tthis.getAttributes = function () {\n\t\t\tif (cachedAttributes === undefined) {\n\t\t\t\tcachedAttributes = fetchAttributeLocations(gl, program);\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\t\t}; // free resource\n\n\n\t\tthis.destroy = function () {\n\t\t\tbindingStates.releaseStatesOfProgram(this);\n\t\t\tgl.deleteProgram(program);\n\t\t\tthis.program = undefined;\n\t\t}; //\n\n\n\t\tthis.name = parameters.shaderName;\n\t\tthis.id = programIdCount++;\n\t\tthis.cacheKey = cacheKey;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\t\treturn this;\n\t}\n\n\tfunction WebGLPrograms(renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping) {\n\t\tconst programs = [];\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\t\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\t\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\t\tconst vertexTextures = capabilities.vertexTextures;\n\t\tlet precision = capabilities.precision;\n\t\tconst shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'toon',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tMeshMatcapMaterial: 'matcap',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points',\n\t\t\tShadowMaterial: 'shadow',\n\t\t\tSpriteMaterial: 'sprite'\n\t\t};\n\t\tconst parameterNames = ['precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor', 'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV', 'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoat', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap', 'specularIntensityMap', 'specularTintMap', 'specularTintMapEncoding', 'roughnessMap', 'metalnessMap', 'gradientMap', 'alphaMap', 'alphaTest', 'combine', 'vertexColors', 'vertexAlphas', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2', 'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning', 'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'morphTargetsCount', 'premultipliedAlpha', 'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights', 'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows', 'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering', 'format', 'sheen', 'transmission', 'transmissionMap', 'thicknessMap'];\n\n\t\tfunction getMaxBones(object) {\n\t\t\tconst skeleton = object.skeleton;\n\t\t\tconst bones = skeleton.bones;\n\n\t\t\tif (floatVertexTextures) {\n\t\t\t\treturn 1024;\n\t\t\t} else {\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//\t- leave some extra space for other uniforms\n\t\t\t\t//\t- limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//\t\t(up to 54 should be safe)\n\t\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\t\tconst nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n\t\t\t\tconst maxBones = Math.min(nVertexMatrices, bones.length);\n\n\t\t\t\tif (maxBones < bones.length) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\t\t\t}\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap(map) {\n\t\t\tlet encoding;\n\n\t\t\tif (map && map.isTexture) {\n\t\t\t\tencoding = map.encoding;\n\t\t\t} else if (map && map.isWebGLRenderTarget) {\n\t\t\t\tconsole.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.');\n\t\t\t\tencoding = map.texture.encoding;\n\t\t\t} else {\n\t\t\t\tencoding = LinearEncoding;\n\t\t\t}\n\n\t\t\tif (isWebGL2 && map && map.isTexture && map.format === RGBAFormat && map.type === UnsignedByteType && map.encoding === sRGBEncoding) {\n\t\t\t\tencoding = LinearEncoding; // disable inline decode for sRGB textures in WebGL 2\n\t\t\t}\n\n\t\t\treturn encoding;\n\t\t}\n\n\t\tfunction getParameters(material, lights, shadows, scene, object) {\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\n\t\t\tconst shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones(object) : 0;\n\n\t\t\tif (material.precision !== null) {\n\t\t\t\tprecision = capabilities.getMaxPrecision(material.precision);\n\n\t\t\t\tif (precision !== material.precision) {\n\t\t\t\t\tconsole.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet vertexShader, fragmentShader;\n\n\t\t\tif (shaderID) {\n\t\t\t\tconst shader = ShaderLib[shaderID];\n\t\t\t\tvertexShader = shader.vertexShader;\n\t\t\t\tfragmentShader = shader.fragmentShader;\n\t\t\t} else {\n\t\t\t\tvertexShader = material.vertexShader;\n\t\t\t\tfragmentShader = material.fragmentShader;\n\t\t\t}\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\t\tconst useClearcoat = material.clearcoat > 0;\n\t\t\tconst parameters = {\n\t\t\t\tisWebGL2: isWebGL2,\n\t\t\t\tshaderID: shaderID,\n\t\t\t\tshaderName: material.type,\n\t\t\t\tvertexShader: vertexShader,\n\t\t\t\tfragmentShader: fragmentShader,\n\t\t\t\tdefines: material.defines,\n\t\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\t\tglslVersion: material.glslVersion,\n\t\t\t\tprecision: precision,\n\t\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\t\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\t\toutputEncoding: currentRenderTarget !== null ? getTextureEncodingFromMap(currentRenderTarget.texture) : renderer.outputEncoding,\n\t\t\t\tmap: !!material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap(material.map),\n\t\t\t\tmatcap: !!material.matcap,\n\t\t\t\tmatcapEncoding: getTextureEncodingFromMap(material.matcap),\n\t\t\t\tenvMap: !!envMap,\n\t\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap(envMap),\n\t\t\t\tenvMapCubeUV: !!envMap && (envMap.mapping === CubeUVReflectionMapping || envMap.mapping === CubeUVRefractionMapping),\n\t\t\t\tlightMap: !!material.lightMap,\n\t\t\t\tlightMapEncoding: getTextureEncodingFromMap(material.lightMap),\n\t\t\t\taoMap: !!material.aoMap,\n\t\t\t\temissiveMap: !!material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap),\n\t\t\t\tbumpMap: !!material.bumpMap,\n\t\t\t\tnormalMap: !!material.normalMap,\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\t\tclearcoat: useClearcoat,\n\t\t\t\tclearcoatMap: useClearcoat && !!material.clearcoatMap,\n\t\t\t\tclearcoatRoughnessMap: useClearcoat && !!material.clearcoatRoughnessMap,\n\t\t\t\tclearcoatNormalMap: useClearcoat && !!material.clearcoatNormalMap,\n\t\t\t\tdisplacementMap: !!material.displacementMap,\n\t\t\t\troughnessMap: !!material.roughnessMap,\n\t\t\t\tmetalnessMap: !!material.metalnessMap,\n\t\t\t\tspecularMap: !!material.specularMap,\n\t\t\t\tspecularIntensityMap: !!material.specularIntensityMap,\n\t\t\t\tspecularTintMap: !!material.specularTintMap,\n\t\t\t\tspecularTintMapEncoding: getTextureEncodingFromMap(material.specularTintMap),\n\t\t\t\talphaMap: !!material.alphaMap,\n\t\t\t\talphaTest: useAlphaTest,\n\t\t\t\tgradientMap: !!material.gradientMap,\n\t\t\t\tsheen: material.sheen > 0,\n\t\t\t\ttransmission: material.transmission > 0,\n\t\t\t\ttransmissionMap: !!material.transmissionMap,\n\t\t\t\tthicknessMap: !!material.thicknessMap,\n\t\t\t\tcombine: material.combine,\n\t\t\t\tvertexTangents: !!material.normalMap && !!object.geometry && !!object.geometry.attributes.tangent,\n\t\t\t\tvertexColors: material.vertexColors,\n\t\t\t\tvertexAlphas: material.vertexColors === true && !!object.geometry && !!object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4,\n\t\t\t\tvertexUvs: !!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatMap || !!material.clearcoatRoughnessMap || !!material.clearcoatNormalMap || !!material.displacementMap || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularTintMap,\n\t\t\t\tuvsVertexOnly: !(!!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatNormalMap || material.transmission > 0 || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularTintMap) && !!material.displacementMap,\n\t\t\t\tfog: !!fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp2: fog && fog.isFogExp2,\n\t\t\t\tflatShading: !!material.flatShading,\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\t\tskinning: object.isSkinnedMesh === true && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: floatVertexTextures,\n\t\t\t\tmorphTargets: !!object.geometry && !!object.geometry.morphAttributes.position,\n\t\t\t\tmorphNormals: !!object.geometry && !!object.geometry.morphAttributes.normal,\n\t\t\t\tmorphTargetsCount: !!object.geometry && !!object.geometry.morphAttributes.position ? object.geometry.morphAttributes.position.length : 0,\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\t\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\t\tnumClipIntersection: clipping.numIntersection,\n\t\t\t\tformat: material.format,\n\t\t\t\tdithering: material.dithering,\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\t\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\t\t\t\tdepthPacking: material.depthPacking !== undefined ? material.depthPacking : false,\n\t\t\t\tindex0AttributeName: material.index0AttributeName,\n\t\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\t\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has('EXT_frag_depth'),\n\t\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has('WEBGL_draw_buffers'),\n\t\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has('EXT_shader_texture_lod'),\n\t\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\t\t\t};\n\t\t\treturn parameters;\n\t\t}\n\n\t\tfunction getProgramCacheKey(parameters) {\n\t\t\tconst array = [];\n\n\t\t\tif (parameters.shaderID) {\n\t\t\t\tarray.push(parameters.shaderID);\n\t\t\t} else {\n\t\t\t\tarray.push(hashString(parameters.fragmentShader));\n\t\t\t\tarray.push(hashString(parameters.vertexShader));\n\t\t\t}\n\n\t\t\tif (parameters.defines !== undefined) {\n\t\t\t\tfor (const name in parameters.defines) {\n\t\t\t\t\tarray.push(name);\n\t\t\t\t\tarray.push(parameters.defines[name]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (parameters.isRawShaderMaterial === false) {\n\t\t\t\tfor (let i = 0; i < parameterNames.length; i++) {\n\t\t\t\t\tarray.push(parameters[parameterNames[i]]);\n\t\t\t\t}\n\n\t\t\t\tarray.push(renderer.outputEncoding);\n\t\t\t\tarray.push(renderer.gammaFactor);\n\t\t\t}\n\n\t\t\tarray.push(parameters.customProgramCacheKey);\n\t\t\treturn array.join();\n\t\t}\n\n\t\tfunction getUniforms(material) {\n\t\t\tconst shaderID = shaderIDs[material.type];\n\t\t\tlet uniforms;\n\n\t\t\tif (shaderID) {\n\t\t\t\tconst shader = ShaderLib[shaderID];\n\t\t\t\tuniforms = UniformsUtils.clone(shader.uniforms);\n\t\t\t} else {\n\t\t\t\tuniforms = material.uniforms;\n\t\t\t}\n\n\t\t\treturn uniforms;\n\t\t}\n\n\t\tfunction acquireProgram(parameters, cacheKey) {\n\t\t\tlet program; // Check if code has been already compiled\n\n\t\t\tfor (let p = 0, pl = programs.length; p < pl; p++) {\n\t\t\t\tconst preexistingProgram = programs[p];\n\n\t\t\t\tif (preexistingProgram.cacheKey === cacheKey) {\n\t\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t\t++program.usedTimes;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (program === undefined) {\n\t\t\t\tprogram = new WebGLProgram(renderer, cacheKey, parameters, bindingStates);\n\t\t\t\tprograms.push(program);\n\t\t\t}\n\n\t\t\treturn program;\n\t\t}\n\n\t\tfunction releaseProgram(program) {\n\t\t\tif (--program.usedTimes === 0) {\n\t\t\t\t// Remove from unordered set\n\t\t\t\tconst i = programs.indexOf(program);\n\t\t\t\tprograms[i] = programs[programs.length - 1];\n\t\t\t\tprograms.pop(); // Free WebGL resources\n\n\t\t\t\tprogram.destroy();\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tgetParameters: getParameters,\n\t\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\t\tgetUniforms: getUniforms,\n\t\t\tacquireProgram: acquireProgram,\n\t\t\treleaseProgram: releaseProgram,\n\t\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\t\tprograms: programs\n\t\t};\n\t}\n\n\tfunction WebGLProperties() {\n\t\tlet properties = new WeakMap();\n\n\t\tfunction get(object) {\n\t\t\tlet map = properties.get(object);\n\n\t\t\tif (map === undefined) {\n\t\t\t\tmap = {};\n\t\t\t\tproperties.set(object, map);\n\t\t\t}\n\n\t\t\treturn map;\n\t\t}\n\n\t\tfunction remove(object) {\n\t\t\tproperties.delete(object);\n\t\t}\n\n\t\tfunction update(object, key, value) {\n\t\t\tproperties.get(object)[key] = value;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tproperties = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction painterSortStable(a, b) {\n\t\tif (a.groupOrder !== b.groupOrder) {\n\t\t\treturn a.groupOrder - b.groupOrder;\n\t\t} else if (a.renderOrder !== b.renderOrder) {\n\t\t\treturn a.renderOrder - b.renderOrder;\n\t\t} else if (a.program !== b.program) {\n\t\t\treturn a.program.id - b.program.id;\n\t\t} else if (a.material.id !== b.material.id) {\n\t\t\treturn a.material.id - b.material.id;\n\t\t} else if (a.z !== b.z) {\n\t\t\treturn a.z - b.z;\n\t\t} else {\n\t\t\treturn a.id - b.id;\n\t\t}\n\t}\n\n\tfunction reversePainterSortStable(a, b) {\n\t\tif (a.groupOrder !== b.groupOrder) {\n\t\t\treturn a.groupOrder - b.groupOrder;\n\t\t} else if (a.renderOrder !== b.renderOrder) {\n\t\t\treturn a.renderOrder - b.renderOrder;\n\t\t} else if (a.z !== b.z) {\n\t\t\treturn b.z - a.z;\n\t\t} else {\n\t\t\treturn a.id - b.id;\n\t\t}\n\t}\n\n\tfunction WebGLRenderList(properties) {\n\t\tconst renderItems = [];\n\t\tlet renderItemsIndex = 0;\n\t\tconst opaque = [];\n\t\tconst transmissive = [];\n\t\tconst transparent = [];\n\t\tconst defaultProgram = {\n\t\t\tid: -1\n\t\t};\n\n\t\tfunction init() {\n\t\t\trenderItemsIndex = 0;\n\t\t\topaque.length = 0;\n\t\t\ttransmissive.length = 0;\n\t\t\ttransparent.length = 0;\n\t\t}\n\n\t\tfunction getNextRenderItem(object, geometry, material, groupOrder, z, group) {\n\t\t\tlet renderItem = renderItems[renderItemsIndex];\n\t\t\tconst materialProperties = properties.get(material);\n\n\t\t\tif (renderItem === undefined) {\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tprogram: materialProperties.program || defaultProgram,\n\t\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\t\t\t\trenderItems[renderItemsIndex] = renderItem;\n\t\t\t} else {\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.program = materialProperties.program || defaultProgram;\n\t\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\t\t\t}\n\n\t\t\trenderItemsIndex++;\n\t\t\treturn renderItem;\n\t\t}\n\n\t\tfunction push(object, geometry, material, groupOrder, z, group) {\n\t\t\tconst renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\n\t\t\tif (material.transmission > 0.0) {\n\t\t\t\ttransmissive.push(renderItem);\n\t\t\t} else if (material.transparent === true) {\n\t\t\t\ttransparent.push(renderItem);\n\t\t\t} else {\n\t\t\t\topaque.push(renderItem);\n\t\t\t}\n\t\t}\n\n\t\tfunction unshift(object, geometry, material, groupOrder, z, group) {\n\t\t\tconst renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\n\t\t\tif (material.transmission > 0.0) {\n\t\t\t\ttransmissive.unshift(renderItem);\n\t\t\t} else if (material.transparent === true) {\n\t\t\t\ttransparent.unshift(renderItem);\n\t\t\t} else {\n\t\t\t\topaque.unshift(renderItem);\n\t\t\t}\n\t\t}\n\n\t\tfunction sort(customOpaqueSort, customTransparentSort) {\n\t\t\tif (opaque.length > 1) opaque.sort(customOpaqueSort || painterSortStable);\n\t\t\tif (transmissive.length > 1) transmissive.sort(customTransparentSort || reversePainterSortStable);\n\t\t\tif (transparent.length > 1) transparent.sort(customTransparentSort || reversePainterSortStable);\n\t\t}\n\n\t\tfunction finish() {\n\t\t\t// Clear references from inactive renderItems in the list\n\t\t\tfor (let i = renderItemsIndex, il = renderItems.length; i < il; i++) {\n\t\t\t\tconst renderItem = renderItems[i];\n\t\t\t\tif (renderItem.id === null) break;\n\t\t\t\trenderItem.id = null;\n\t\t\t\trenderItem.object = null;\n\t\t\t\trenderItem.geometry = null;\n\t\t\t\trenderItem.material = null;\n\t\t\t\trenderItem.program = null;\n\t\t\t\trenderItem.group = null;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransmissive: transmissive,\n\t\t\ttransparent: transparent,\n\t\t\tinit: init,\n\t\t\tpush: push,\n\t\t\tunshift: unshift,\n\t\t\tfinish: finish,\n\t\t\tsort: sort\n\t\t};\n\t}\n\n\tfunction WebGLRenderLists(properties) {\n\t\tlet lists = new WeakMap();\n\n\t\tfunction get(scene, renderCallDepth) {\n\t\t\tlet list;\n\n\t\t\tif (lists.has(scene) === false) {\n\t\t\t\tlist = new WebGLRenderList(properties);\n\t\t\t\tlists.set(scene, [list]);\n\t\t\t} else {\n\t\t\t\tif (renderCallDepth >= lists.get(scene).length) {\n\t\t\t\t\tlist = new WebGLRenderList(properties);\n\t\t\t\t\tlists.get(scene).push(list);\n\t\t\t\t} else {\n\t\t\t\t\tlist = lists.get(scene)[renderCallDepth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tlists = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction UniformsCache() {\n\t\tconst lights = {};\n\t\treturn {\n\t\t\tget: function (light) {\n\t\t\t\tif (lights[light.id] !== undefined) {\n\t\t\t\t\treturn lights[light.id];\n\t\t\t\t}\n\n\t\t\t\tlet uniforms;\n\n\t\t\t\tswitch (light.type) {\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlights[light.id] = uniforms;\n\t\t\t\treturn uniforms;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction ShadowUniformsCache() {\n\t\tconst lights = {};\n\t\treturn {\n\t\t\tget: function (light) {\n\t\t\t\tif (lights[light.id] !== undefined) {\n\t\t\t\t\treturn lights[light.id];\n\t\t\t\t}\n\n\t\t\t\tlet uniforms;\n\n\t\t\t\tswitch (light.type) {\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t}\n\n\t\t\t\tlights[light.id] = uniforms;\n\t\t\t\treturn uniforms;\n\t\t\t}\n\t\t};\n\t}\n\n\tlet nextVersion = 0;\n\n\tfunction shadowCastingLightsFirst(lightA, lightB) {\n\t\treturn (lightB.castShadow ? 1 : 0) - (lightA.castShadow ? 1 : 0);\n\t}\n\n\tfunction WebGLLights(extensions, capabilities) {\n\t\tconst cache = new UniformsCache();\n\t\tconst shadowCache = ShadowUniformsCache();\n\t\tconst state = {\n\t\t\tversion: 0,\n\t\t\thash: {\n\t\t\t\tdirectionalLength: -1,\n\t\t\t\tpointLength: -1,\n\t\t\t\tspotLength: -1,\n\t\t\t\trectAreaLength: -1,\n\t\t\t\themiLength: -1,\n\t\t\t\tnumDirectionalShadows: -1,\n\t\t\t\tnumPointShadows: -1,\n\t\t\t\tnumSpotShadows: -1\n\t\t\t},\n\t\t\tambient: [0, 0, 0],\n\t\t\tprobe: [],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadow: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadow: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\trectArea: [],\n\t\t\trectAreaLTC1: null,\n\t\t\trectAreaLTC2: null,\n\t\t\tpoint: [],\n\t\t\tpointShadow: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: []\n\t\t};\n\n\t\tfor (let i = 0; i < 9; i++) state.probe.push(new Vector3());\n\n\t\tconst vector3 = new Vector3();\n\t\tconst matrix4 = new Matrix4();\n\t\tconst matrix42 = new Matrix4();\n\n\t\tfunction setup(lights, physicallyCorrectLights) {\n\t\t\tlet r = 0,\n\t\t\t\t\tg = 0,\n\t\t\t\t\tb = 0;\n\n\t\t\tfor (let i = 0; i < 9; i++) state.probe[i].set(0, 0, 0);\n\n\t\t\tlet directionalLength = 0;\n\t\t\tlet pointLength = 0;\n\t\t\tlet spotLength = 0;\n\t\t\tlet rectAreaLength = 0;\n\t\t\tlet hemiLength = 0;\n\t\t\tlet numDirectionalShadows = 0;\n\t\t\tlet numPointShadows = 0;\n\t\t\tlet numSpotShadows = 0;\n\t\t\tlights.sort(shadowCastingLightsFirst); // artist-friendly light intensity scaling factor\n\n\t\t\tconst scaleFactor = physicallyCorrectLights !== true ? Math.PI : 1;\n\n\t\t\tfor (let i = 0, l = lights.length; i < l; i++) {\n\t\t\t\tconst light = lights[i];\n\t\t\t\tconst color = light.color;\n\t\t\t\tconst intensity = light.intensity;\n\t\t\t\tconst distance = light.distance;\n\t\t\t\tconst shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n\t\t\t\tif (light.isAmbientLight) {\n\t\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\t\tb += color.b * intensity * scaleFactor;\n\t\t\t\t} else if (light.isLightProbe) {\n\t\t\t\t\tfor (let j = 0; j < 9; j++) {\n\t\t\t\t\t\tstate.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\n\t\t\t\t\t}\n\t\t\t\t} else if (light.isDirectionalLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tstate.directionalShadow[directionalLength] = shadowUniforms;\n\t\t\t\t\t\tstate.directionalShadowMap[directionalLength] = shadowMap;\n\t\t\t\t\t\tstate.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumDirectionalShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.directional[directionalLength] = uniforms;\n\t\t\t\t\tdirectionalLength++;\n\t\t\t\t} else if (light.isSpotLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.color.copy(color).multiplyScalar(intensity * scaleFactor);\n\t\t\t\t\tuniforms.distance = distance;\n\t\t\t\t\tuniforms.coneCos = Math.cos(light.angle);\n\t\t\t\t\tuniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tstate.spotShadow[spotLength] = shadowUniforms;\n\t\t\t\t\t\tstate.spotShadowMap[spotLength] = shadowMap;\n\t\t\t\t\t\tstate.spotShadowMatrix[spotLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumSpotShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.spot[spotLength] = uniforms;\n\t\t\t\t\tspotLength++;\n\t\t\t\t} else if (light.isRectAreaLight) {\n\t\t\t\t\tconst uniforms = cache.get(light); // (a) intensity is the total visible light emitted\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\t\t\t\t\t// (b) intensity is the brightness of the light\n\n\t\t\t\t\tuniforms.color.copy(color).multiplyScalar(intensity);\n\t\t\t\t\tuniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\t\t\t\t\tuniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\t\t\t\t\tstate.rectArea[rectAreaLength] = uniforms;\n\t\t\t\t\trectAreaLength++;\n\t\t\t\t} else if (light.isPointLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\t\t\t\t\t\tstate.pointShadow[pointLength] = shadowUniforms;\n\t\t\t\t\t\tstate.pointShadowMap[pointLength] = shadowMap;\n\t\t\t\t\t\tstate.pointShadowMatrix[pointLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumPointShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.point[pointLength] = uniforms;\n\t\t\t\t\tpointLength++;\n\t\t\t\t} else if (light.isHemisphereLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.skyColor.copy(light.color).multiplyScalar(intensity * scaleFactor);\n\t\t\t\t\tuniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity * scaleFactor);\n\t\t\t\t\tstate.hemi[hemiLength] = uniforms;\n\t\t\t\t\themiLength++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (rectAreaLength > 0) {\n\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\t// WebGL 2\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\t\t\t\t} else {\n\t\t\t\t\t// WebGL 1\n\t\t\t\t\tif (extensions.has('OES_texture_float_linear') === true) {\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\t\t\t\t\t} else if (extensions.has('OES_texture_half_float_linear') === true) {\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.ambient[0] = r;\n\t\t\tstate.ambient[1] = g;\n\t\t\tstate.ambient[2] = b;\n\t\t\tconst hash = state.hash;\n\n\t\t\tif (hash.directionalLength !== directionalLength || hash.pointLength !== pointLength || hash.spotLength !== spotLength || hash.rectAreaLength !== rectAreaLength || hash.hemiLength !== hemiLength || hash.numDirectionalShadows !== numDirectionalShadows || hash.numPointShadows !== numPointShadows || hash.numSpotShadows !== numSpotShadows) {\n\t\t\t\tstate.directional.length = directionalLength;\n\t\t\t\tstate.spot.length = spotLength;\n\t\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\t\tstate.point.length = pointLength;\n\t\t\t\tstate.hemi.length = hemiLength;\n\t\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\t\t\t\thash.directionalLength = directionalLength;\n\t\t\t\thash.pointLength = pointLength;\n\t\t\t\thash.spotLength = spotLength;\n\t\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\t\thash.hemiLength = hemiLength;\n\t\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\t\thash.numPointShadows = numPointShadows;\n\t\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\t\tstate.version = nextVersion++;\n\t\t\t}\n\t\t}\n\n\t\tfunction setupView(lights, camera) {\n\t\t\tlet directionalLength = 0;\n\t\t\tlet pointLength = 0;\n\t\t\tlet spotLength = 0;\n\t\t\tlet rectAreaLength = 0;\n\t\t\tlet hemiLength = 0;\n\t\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\t\tfor (let i = 0, l = lights.length; i < l; i++) {\n\t\t\t\tconst light = lights[i];\n\n\t\t\t\tif (light.isDirectionalLight) {\n\t\t\t\t\tconst uniforms = state.directional[directionalLength];\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\n\t\t\t\t\tuniforms.direction.sub(vector3);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tdirectionalLength++;\n\t\t\t\t} else if (light.isSpotLight) {\n\t\t\t\t\tconst uniforms = state.spot[spotLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix);\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\n\t\t\t\t\tuniforms.direction.sub(vector3);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tspotLength++;\n\t\t\t\t} else if (light.isRectAreaLight) {\n\t\t\t\t\tconst uniforms = state.rectArea[rectAreaLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\tmatrix4.copy(light.matrixWorld);\n\t\t\t\t\tmatrix4.premultiply(viewMatrix);\n\t\t\t\t\tmatrix42.extractRotation(matrix4);\n\t\t\t\t\tuniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\t\t\t\t\tuniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4(matrix42);\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4(matrix42);\n\t\t\t\t\trectAreaLength++;\n\t\t\t\t} else if (light.isPointLight) {\n\t\t\t\t\tconst uniforms = state.point[pointLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix);\n\t\t\t\t\tpointLength++;\n\t\t\t\t} else if (light.isHemisphereLight) {\n\t\t\t\t\tconst uniforms = state.hemi[hemiLength];\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tuniforms.direction.normalize();\n\t\t\t\t\themiLength++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\tsetupView: setupView,\n\t\t\tstate: state\n\t\t};\n\t}\n\n\tfunction WebGLRenderState(extensions, capabilities) {\n\t\tconst lights = new WebGLLights(extensions, capabilities);\n\t\tconst lightsArray = [];\n\t\tconst shadowsArray = [];\n\n\t\tfunction init() {\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\t\t}\n\n\t\tfunction pushLight(light) {\n\t\t\tlightsArray.push(light);\n\t\t}\n\n\t\tfunction pushShadow(shadowLight) {\n\t\t\tshadowsArray.push(shadowLight);\n\t\t}\n\n\t\tfunction setupLights(physicallyCorrectLights) {\n\t\t\tlights.setup(lightsArray, physicallyCorrectLights);\n\t\t}\n\n\t\tfunction setupLightsView(camera) {\n\t\t\tlights.setupView(lightsArray, camera);\n\t\t}\n\n\t\tconst state = {\n\t\t\tlightsArray: lightsArray,\n\t\t\tshadowsArray: shadowsArray,\n\t\t\tlights: lights\n\t\t};\n\t\treturn {\n\t\t\tinit: init,\n\t\t\tstate: state,\n\t\t\tsetupLights: setupLights,\n\t\t\tsetupLightsView: setupLightsView,\n\t\t\tpushLight: pushLight,\n\t\t\tpushShadow: pushShadow\n\t\t};\n\t}\n\n\tfunction WebGLRenderStates(extensions, capabilities) {\n\t\tlet renderStates = new WeakMap();\n\n\t\tfunction get(scene, renderCallDepth = 0) {\n\t\t\tlet renderState;\n\n\t\t\tif (renderStates.has(scene) === false) {\n\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\n\t\t\t\trenderStates.set(scene, [renderState]);\n\t\t\t} else {\n\t\t\t\tif (renderCallDepth >= renderStates.get(scene).length) {\n\t\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\n\t\t\t\t\trenderStates.get(scene).push(renderState);\n\t\t\t\t} else {\n\t\t\t\t\trenderState = renderStates.get(scene)[renderCallDepth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn renderState;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\trenderStates = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\t/**\n\t * parameters = {\n\t *\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>\n\t * }\n\t */\n\n\tclass MeshDepthMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshDepthMaterial';\n\t\t\tthis.depthPacking = BasicDepthPacking;\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.depthPacking = source.depthPacking;\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\n\t *\treferencePosition: <float>,\n\t *\tnearDistance: <float>,\n\t *\tfarDistance: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>\n\t *\n\t * }\n\t */\n\n\tclass MeshDistanceMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshDistanceMaterial';\n\t\t\tthis.referencePosition = new Vector3();\n\t\t\tthis.nearDistance = 1;\n\t\t\tthis.farDistance = 1000;\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.fog = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.referencePosition.copy(source.referencePosition);\n\t\t\tthis.nearDistance = source.nearDistance;\n\t\t\tthis.farDistance = source.farDistance;\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n\tconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\tconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\n\tfunction WebGLShadowMap(_renderer, _objects, _capabilities) {\n\t\tlet _frustum = new Frustum();\n\n\t\tconst _shadowMapSize = new Vector2(),\n\t\t\t\t\t_viewportSize = new Vector2(),\n\t\t\t\t\t_viewport = new Vector4(),\n\t\t\t\t\t_depthMaterial = new MeshDepthMaterial({\n\t\t\tdepthPacking: RGBADepthPacking\n\t\t}),\n\t\t\t\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\t\t\t\t\t_materialCache = {},\n\t\t\t\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\t\tconst shadowSide = {\n\t\t\t0: BackSide,\n\t\t\t1: FrontSide,\n\t\t\t2: DoubleSide\n\t\t};\n\t\tconst shadowMaterialVertical = new ShaderMaterial({\n\t\t\tdefines: {\n\t\t\t\tVSM_SAMPLES: 8\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\tshadow_pass: {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\tresolution: {\n\t\t\t\t\tvalue: new Vector2()\n\t\t\t\t},\n\t\t\t\tradius: {\n\t\t\t\t\tvalue: 4.0\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: vertex,\n\t\t\tfragmentShader: fragment\n\t\t});\n\t\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\t\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\t\tconst fullScreenTri = new BufferGeometry();\n\t\tfullScreenTri.setAttribute('position', new BufferAttribute(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));\n\t\tconst fullScreenMesh = new Mesh(fullScreenTri, shadowMaterialVertical);\n\t\tconst scope = this;\n\t\tthis.enabled = false;\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.render = function (lights, scene, camera) {\n\t\t\tif (scope.enabled === false) return;\n\t\t\tif (scope.autoUpdate === false && scope.needsUpdate === false) return;\n\t\t\tif (lights.length === 0) return;\n\n\t\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\n\t\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\n\t\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\t\tconst _state = _renderer.state; // Set GL state for depth map.\n\n\t\t\t_state.setBlending(NoBlending);\n\n\t\t\t_state.buffers.color.setClear(1, 1, 1, 1);\n\n\t\t\t_state.buffers.depth.setTest(true);\n\n\t\t\t_state.setScissorTest(false); // render depth map\n\n\n\t\t\tfor (let i = 0, il = lights.length; i < il; i++) {\n\t\t\t\tconst light = lights[i];\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif (shadow === undefined) {\n\t\t\t\t\tconsole.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (shadow.autoUpdate === false && shadow.needsUpdate === false) continue;\n\n\t\t\t\t_shadowMapSize.copy(shadow.mapSize);\n\n\t\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t\t_shadowMapSize.multiply(shadowFrameExtents);\n\n\t\t\t\t_viewportSize.copy(shadow.mapSize);\n\n\t\t\t\tif (_shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize) {\n\t\t\t\t\tif (_shadowMapSize.x > _maxTextureSize) {\n\t\t\t\t\t\t_viewportSize.x = Math.floor(_maxTextureSize / shadowFrameExtents.x);\n\t\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_shadowMapSize.y > _maxTextureSize) {\n\t\t\t\t\t\t_viewportSize.y = Math.floor(_maxTextureSize / shadowFrameExtents.y);\n\t\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (shadow.map === null && !shadow.isPointLightShadow && this.type === VSMShadowMap) {\n\t\t\t\t\tconst pars = {\n\t\t\t\t\t\tminFilter: LinearFilter,\n\t\t\t\t\t\tmagFilter: LinearFilter,\n\t\t\t\t\t\tformat: RGBAFormat\n\t\t\t\t\t};\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\t\t\t\t\tshadow.mapPass = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\t\t\t\t}\n\n\t\t\t\tif (shadow.map === null) {\n\t\t\t\t\tconst pars = {\n\t\t\t\t\t\tminFilter: NearestFilter,\n\t\t\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\t\t\tformat: RGBAFormat\n\t\t\t\t\t};\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget(shadow.map);\n\n\t\t\t\t_renderer.clear();\n\n\t\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\t\tfor (let vp = 0; vp < viewportCount; vp++) {\n\t\t\t\t\tconst viewport = shadow.getViewport(vp);\n\n\t\t\t\t\t_viewport.set(_viewportSize.x * viewport.x, _viewportSize.y * viewport.y, _viewportSize.x * viewport.z, _viewportSize.y * viewport.w);\n\n\t\t\t\t\t_state.viewport(_viewport);\n\n\t\t\t\t\tshadow.updateMatrices(light, vp);\n\t\t\t\t\t_frustum = shadow.getFrustum();\n\t\t\t\t\trenderObject(scene, camera, shadow.camera, light, this.type);\n\t\t\t\t} // do blur pass for VSM\n\n\n\t\t\t\tif (!shadow.isPointLightShadow && this.type === VSMShadowMap) {\n\t\t\t\t\tVSMPass(shadow, camera);\n\t\t\t\t}\n\n\t\t\t\tshadow.needsUpdate = false;\n\t\t\t}\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t\t_renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\n\t\t};\n\n\t\tfunction VSMPass(shadow, camera) {\n\t\t\tconst geometry = _objects.update(fullScreenMesh);\n\n\t\t\tif (shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples) {\n\t\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\t\t\t} // vertical pass\n\n\n\t\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\n\t\t\t_renderer.setRenderTarget(shadow.mapPass);\n\n\t\t\t_renderer.clear();\n\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null); // horizontal pass\n\n\n\t\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\n\t\t\t_renderer.setRenderTarget(shadow.map);\n\n\t\t\t_renderer.clear();\n\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null);\n\t\t}\n\n\t\tfunction getDepthMaterial(object, geometry, material, light, shadowCameraNear, shadowCameraFar, type) {\n\t\t\tlet result = null;\n\t\t\tconst customMaterial = light.isPointLight === true ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\t\tif (customMaterial !== undefined) {\n\t\t\t\tresult = customMaterial;\n\t\t\t} else {\n\t\t\t\tresult = light.isPointLight === true ? _distanceMaterial : _depthMaterial;\n\t\t\t}\n\n\t\t\tif (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 || material.displacementMap && material.displacementScale !== 0 || material.alphaMap && material.alphaTest > 0) {\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\t\t\t\tconst keyA = result.uuid,\n\t\t\t\t\t\t\tkeyB = material.uuid;\n\t\t\t\tlet materialsForVariant = _materialCache[keyA];\n\n\t\t\t\tif (materialsForVariant === undefined) {\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[keyA] = materialsForVariant;\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[keyB];\n\n\t\t\t\tif (cachedMaterial === undefined) {\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[keyB] = cachedMaterial;\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tif (type === VSMShadowMap) {\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : material.side;\n\t\t\t} else {\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : shadowSide[material.side];\n\t\t\t}\n\n\t\t\tresult.alphaMap = material.alphaMap;\n\t\t\tresult.alphaTest = material.alphaTest;\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\tresult.clipIntersection = material.clipIntersection;\n\t\t\tresult.displacementMap = material.displacementMap;\n\t\t\tresult.displacementScale = material.displacementScale;\n\t\t\tresult.displacementBias = material.displacementBias;\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif (light.isPointLight === true && result.isMeshDistanceMaterial === true) {\n\t\t\t\tresult.referencePosition.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\t\tresult.farDistance = shadowCameraFar;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction renderObject(object, camera, shadowCamera, light, type) {\n\t\t\tif (object.visible === false) return;\n\t\t\tconst visible = object.layers.test(camera.layers);\n\n\t\t\tif (visible && (object.isMesh || object.isLine || object.isPoints)) {\n\t\t\t\tif ((object.castShadow || object.receiveShadow && type === VSMShadowMap) && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n\t\t\t\t\tconst geometry = _objects.update(object);\n\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor (let k = 0, kl = groups.length; k < kl; k++) {\n\t\t\t\t\t\t\tconst group = groups[k];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\n\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\n\t\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial(object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type);\n\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (material.visible) {\n\t\t\t\t\t\tconst depthMaterial = getDepthMaterial(object, geometry, material, light, shadowCamera.near, shadowCamera.far, type);\n\n\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\trenderObject(children[i], camera, shadowCamera, light, type);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction WebGLState(gl, extensions, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction ColorBuffer() {\n\t\t\tlet locked = false;\n\t\t\tconst color = new Vector4();\n\t\t\tlet currentColorMask = null;\n\t\t\tconst currentColorClear = new Vector4(0, 0, 0, 0);\n\t\t\treturn {\n\t\t\t\tsetMask: function (colorMask) {\n\t\t\t\t\tif (currentColorMask !== colorMask && !locked) {\n\t\t\t\t\t\tgl.colorMask(colorMask, colorMask, colorMask, colorMask);\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (r, g, b, a, premultipliedAlpha) {\n\t\t\t\t\tif (premultipliedAlpha === true) {\n\t\t\t\t\t\tr *= a;\n\t\t\t\t\t\tg *= a;\n\t\t\t\t\t\tb *= a;\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set(r, g, b, a);\n\n\t\t\t\t\tif (currentColorClear.equals(color) === false) {\n\t\t\t\t\t\tgl.clearColor(r, g, b, a);\n\t\t\t\t\t\tcurrentColorClear.copy(color);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set(-1, 0, 0, 0); // set to invalid state\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\t\t\tlet locked = false;\n\t\t\tlet currentDepthMask = null;\n\t\t\tlet currentDepthFunc = null;\n\t\t\tlet currentDepthClear = null;\n\t\t\treturn {\n\t\t\t\tsetTest: function (depthTest) {\n\t\t\t\t\tif (depthTest) {\n\t\t\t\t\t\tenable(gl.DEPTH_TEST);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdisable(gl.DEPTH_TEST);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetMask: function (depthMask) {\n\t\t\t\t\tif (currentDepthMask !== depthMask && !locked) {\n\t\t\t\t\t\tgl.depthMask(depthMask);\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetFunc: function (depthFunc) {\n\t\t\t\t\tif (currentDepthFunc !== depthFunc) {\n\t\t\t\t\t\tif (depthFunc) {\n\t\t\t\t\t\t\tswitch (depthFunc) {\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.NEVER);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.ALWAYS);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LESS);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.EQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.GEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.GREATER);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.NOTEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (depth) {\n\t\t\t\t\tif (currentDepthClear !== depth) {\n\t\t\t\t\t\tgl.clearDepth(depth);\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\t\t\tlet locked = false;\n\t\t\tlet currentStencilMask = null;\n\t\t\tlet currentStencilFunc = null;\n\t\t\tlet currentStencilRef = null;\n\t\t\tlet currentStencilFuncMask = null;\n\t\t\tlet currentStencilFail = null;\n\t\t\tlet currentStencilZFail = null;\n\t\t\tlet currentStencilZPass = null;\n\t\t\tlet currentStencilClear = null;\n\t\t\treturn {\n\t\t\t\tsetTest: function (stencilTest) {\n\t\t\t\t\tif (!locked) {\n\t\t\t\t\t\tif (stencilTest) {\n\t\t\t\t\t\t\tenable(gl.STENCIL_TEST);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdisable(gl.STENCIL_TEST);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetMask: function (stencilMask) {\n\t\t\t\t\tif (currentStencilMask !== stencilMask && !locked) {\n\t\t\t\t\t\tgl.stencilMask(stencilMask);\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetFunc: function (stencilFunc, stencilRef, stencilMask) {\n\t\t\t\t\tif (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n\t\t\t\t\t\tgl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetOp: function (stencilFail, stencilZFail, stencilZPass) {\n\t\t\t\t\tif (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n\t\t\t\t\t\tgl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (stencil) {\n\t\t\t\t\tif (currentStencilClear !== stencil) {\n\t\t\t\t\t\tgl.clearStencil(stencil);\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\t\t\t\t}\n\t\t\t};\n\t\t} //\n\n\n\t\tconst colorBuffer = new ColorBuffer();\n\t\tconst depthBuffer = new DepthBuffer();\n\t\tconst stencilBuffer = new StencilBuffer();\n\t\tlet enabledCapabilities = {};\n\t\tlet xrFramebuffer = null;\n\t\tlet currentBoundFramebuffers = {};\n\t\tlet currentProgram = null;\n\t\tlet currentBlendingEnabled = false;\n\t\tlet currentBlending = null;\n\t\tlet currentBlendEquation = null;\n\t\tlet currentBlendSrc = null;\n\t\tlet currentBlendDst = null;\n\t\tlet currentBlendEquationAlpha = null;\n\t\tlet currentBlendSrcAlpha = null;\n\t\tlet currentBlendDstAlpha = null;\n\t\tlet currentPremultipledAlpha = false;\n\t\tlet currentFlipSided = null;\n\t\tlet currentCullFace = null;\n\t\tlet currentLineWidth = null;\n\t\tlet currentPolygonOffsetFactor = null;\n\t\tlet currentPolygonOffsetUnits = null;\n\t\tconst maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n\t\tlet lineWidthAvailable = false;\n\t\tlet version = 0;\n\t\tconst glVersion = gl.getParameter(gl.VERSION);\n\n\t\tif (glVersion.indexOf('WebGL') !== -1) {\n\t\t\tversion = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\n\t\t\tlineWidthAvailable = version >= 1.0;\n\t\t} else if (glVersion.indexOf('OpenGL ES') !== -1) {\n\t\t\tversion = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\n\t\t\tlineWidthAvailable = version >= 2.0;\n\t\t}\n\n\t\tlet currentTextureSlot = null;\n\t\tlet currentBoundTextures = {};\n\t\tconst scissorParam = gl.getParameter(gl.SCISSOR_BOX);\n\t\tconst viewportParam = gl.getParameter(gl.VIEWPORT);\n\t\tconst currentScissor = new Vector4().fromArray(scissorParam);\n\t\tconst currentViewport = new Vector4().fromArray(viewportParam);\n\n\t\tfunction createTexture(type, target, count) {\n\t\t\tconst data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n\t\t\tconst texture = gl.createTexture();\n\t\t\tgl.bindTexture(type, texture);\n\t\t\tgl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tgl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tconst emptyTextures = {};\n\t\temptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n\t\temptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); // init\n\n\t\tcolorBuffer.setClear(0, 0, 0, 1);\n\t\tdepthBuffer.setClear(1);\n\t\tstencilBuffer.setClear(0);\n\t\tenable(gl.DEPTH_TEST);\n\t\tdepthBuffer.setFunc(LessEqualDepth);\n\t\tsetFlipSided(false);\n\t\tsetCullFace(CullFaceBack);\n\t\tenable(gl.CULL_FACE);\n\t\tsetBlending(NoBlending); //\n\n\t\tfunction enable(id) {\n\t\t\tif (enabledCapabilities[id] !== true) {\n\t\t\t\tgl.enable(id);\n\t\t\t\tenabledCapabilities[id] = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction disable(id) {\n\t\t\tif (enabledCapabilities[id] !== false) {\n\t\t\t\tgl.disable(id);\n\t\t\t\tenabledCapabilities[id] = false;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindXRFramebuffer(framebuffer) {\n\t\t\tif (framebuffer !== xrFramebuffer) {\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t\t\t\txrFramebuffer = framebuffer;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindFramebuffer(target, framebuffer) {\n\t\t\tif (framebuffer === null && xrFramebuffer !== null) framebuffer = xrFramebuffer; // use active XR framebuffer if available\n\n\t\t\tif (currentBoundFramebuffers[target] !== framebuffer) {\n\t\t\t\tgl.bindFramebuffer(target, framebuffer);\n\t\t\t\tcurrentBoundFramebuffers[target] = framebuffer;\n\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\t\t\t\t\tif (target === gl.DRAW_FRAMEBUFFER) {\n\t\t\t\t\t\tcurrentBoundFramebuffers[gl.FRAMEBUFFER] = framebuffer;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target === gl.FRAMEBUFFER) {\n\t\t\t\t\t\tcurrentBoundFramebuffers[gl.DRAW_FRAMEBUFFER] = framebuffer;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction useProgram(program) {\n\t\t\tif (currentProgram !== program) {\n\t\t\t\tgl.useProgram(program);\n\t\t\t\tcurrentProgram = program;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tconst equationToGL = {\n\t\t\t[AddEquation]: gl.FUNC_ADD,\n\t\t\t[SubtractEquation]: gl.FUNC_SUBTRACT,\n\t\t\t[ReverseSubtractEquation]: gl.FUNC_REVERSE_SUBTRACT\n\t\t};\n\n\t\tif (isWebGL2) {\n\t\t\tequationToGL[MinEquation] = gl.MIN;\n\t\t\tequationToGL[MaxEquation] = gl.MAX;\n\t\t} else {\n\t\t\tconst extension = extensions.get('EXT_blend_minmax');\n\n\t\t\tif (extension !== null) {\n\t\t\t\tequationToGL[MinEquation] = extension.MIN_EXT;\n\t\t\t\tequationToGL[MaxEquation] = extension.MAX_EXT;\n\t\t\t}\n\t\t}\n\n\t\tconst factorToGL = {\n\t\t\t[ZeroFactor]: gl.ZERO,\n\t\t\t[OneFactor]: gl.ONE,\n\t\t\t[SrcColorFactor]: gl.SRC_COLOR,\n\t\t\t[SrcAlphaFactor]: gl.SRC_ALPHA,\n\t\t\t[SrcAlphaSaturateFactor]: gl.SRC_ALPHA_SATURATE,\n\t\t\t[DstColorFactor]: gl.DST_COLOR,\n\t\t\t[DstAlphaFactor]: gl.DST_ALPHA,\n\t\t\t[OneMinusSrcColorFactor]: gl.ONE_MINUS_SRC_COLOR,\n\t\t\t[OneMinusSrcAlphaFactor]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t\t[OneMinusDstColorFactor]: gl.ONE_MINUS_DST_COLOR,\n\t\t\t[OneMinusDstAlphaFactor]: gl.ONE_MINUS_DST_ALPHA\n\t\t};\n\n\t\tfunction setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n\t\t\tif (blending === NoBlending) {\n\t\t\t\tif (currentBlendingEnabled === true) {\n\t\t\t\t\tdisable(gl.BLEND);\n\t\t\t\t\tcurrentBlendingEnabled = false;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (currentBlendingEnabled === false) {\n\t\t\t\tenable(gl.BLEND);\n\t\t\t\tcurrentBlendingEnabled = true;\n\t\t\t}\n\n\t\t\tif (blending !== CustomBlending) {\n\t\t\t\tif (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n\t\t\t\t\tif (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\n\t\t\t\t\t\tgl.blendEquation(gl.FUNC_ADD);\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (premultipliedAlpha) {\n\t\t\t\t\t\tswitch (blending) {\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ONE, gl.ONE);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tswitch (blending) {\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\t\tcurrentBlendDst = null;\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\t\tcurrentBlending = blending;\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} // custom blending\n\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n\t\t\t\tgl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\t\t\t}\n\n\t\t\tif (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n\t\t\t\tgl.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = null;\n\t\t}\n\n\t\tfunction setMaterial(material, frontFaceCW) {\n\t\t\tmaterial.side === DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\n\t\t\tlet flipSided = material.side === BackSide;\n\t\t\tif (frontFaceCW) flipSided = !flipSided;\n\t\t\tsetFlipSided(flipSided);\n\t\t\tmaterial.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n\t\t\tdepthBuffer.setFunc(material.depthFunc);\n\t\t\tdepthBuffer.setTest(material.depthTest);\n\t\t\tdepthBuffer.setMask(material.depthWrite);\n\t\t\tcolorBuffer.setMask(material.colorWrite);\n\t\t\tconst stencilWrite = material.stencilWrite;\n\t\t\tstencilBuffer.setTest(stencilWrite);\n\n\t\t\tif (stencilWrite) {\n\t\t\t\tstencilBuffer.setMask(material.stencilWriteMask);\n\t\t\t\tstencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\n\t\t\t\tstencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\n\t\t\t}\n\n\t\t\tsetPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n\t\t\tmaterial.alphaToCoverage === true ? enable(gl.SAMPLE_ALPHA_TO_COVERAGE) : disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t} //\n\n\n\t\tfunction setFlipSided(flipSided) {\n\t\t\tif (currentFlipSided !== flipSided) {\n\t\t\t\tif (flipSided) {\n\t\t\t\t\tgl.frontFace(gl.CW);\n\t\t\t\t} else {\n\t\t\t\t\tgl.frontFace(gl.CCW);\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\t\t\t}\n\t\t}\n\n\t\tfunction setCullFace(cullFace) {\n\t\t\tif (cullFace !== CullFaceNone) {\n\t\t\t\tenable(gl.CULL_FACE);\n\n\t\t\t\tif (cullFace !== currentCullFace) {\n\t\t\t\t\tif (cullFace === CullFaceBack) {\n\t\t\t\t\t\tgl.cullFace(gl.BACK);\n\t\t\t\t\t} else if (cullFace === CullFaceFront) {\n\t\t\t\t\t\tgl.cullFace(gl.FRONT);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgl.cullFace(gl.FRONT_AND_BACK);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdisable(gl.CULL_FACE);\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\t\t}\n\n\t\tfunction setLineWidth(width) {\n\t\t\tif (width !== currentLineWidth) {\n\t\t\t\tif (lineWidthAvailable) gl.lineWidth(width);\n\t\t\t\tcurrentLineWidth = width;\n\t\t\t}\n\t\t}\n\n\t\tfunction setPolygonOffset(polygonOffset, factor, units) {\n\t\t\tif (polygonOffset) {\n\t\t\t\tenable(gl.POLYGON_OFFSET_FILL);\n\n\t\t\t\tif (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n\t\t\t\t\tgl.polygonOffset(factor, units);\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdisable(gl.POLYGON_OFFSET_FILL);\n\t\t\t}\n\t\t}\n\n\t\tfunction setScissorTest(scissorTest) {\n\t\t\tif (scissorTest) {\n\t\t\t\tenable(gl.SCISSOR_TEST);\n\t\t\t} else {\n\t\t\t\tdisable(gl.SCISSOR_TEST);\n\t\t\t}\n\t\t} // texture\n\n\n\t\tfunction activeTexture(webglSlot) {\n\t\t\tif (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif (currentTextureSlot !== webglSlot) {\n\t\t\t\tgl.activeTexture(webglSlot);\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindTexture(webglType, webglTexture) {\n\t\t\tif (currentTextureSlot === null) {\n\t\t\t\tactiveTexture();\n\t\t\t}\n\n\t\t\tlet boundTexture = currentBoundTextures[currentTextureSlot];\n\n\t\t\tif (boundTexture === undefined) {\n\t\t\t\tboundTexture = {\n\t\t\t\t\ttype: undefined,\n\t\t\t\t\ttexture: undefined\n\t\t\t\t};\n\t\t\t\tcurrentBoundTextures[currentTextureSlot] = boundTexture;\n\t\t\t}\n\n\t\t\tif (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n\t\t\t\tgl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\t\t\t}\n\t\t}\n\n\t\tfunction unbindTexture() {\n\t\t\tconst boundTexture = currentBoundTextures[currentTextureSlot];\n\n\t\t\tif (boundTexture !== undefined && boundTexture.type !== undefined) {\n\t\t\t\tgl.bindTexture(boundTexture.type, null);\n\t\t\t\tboundTexture.type = undefined;\n\t\t\t\tboundTexture.texture = undefined;\n\t\t\t}\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\t\t\ttry {\n\t\t\t\tgl.compressedTexImage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texImage2D() {\n\t\t\ttry {\n\t\t\t\tgl.texImage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texImage3D() {\n\t\t\ttry {\n\t\t\t\tgl.texImage3D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction scissor(scissor) {\n\t\t\tif (currentScissor.equals(scissor) === false) {\n\t\t\t\tgl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n\t\t\t\tcurrentScissor.copy(scissor);\n\t\t\t}\n\t\t}\n\n\t\tfunction viewport(viewport) {\n\t\t\tif (currentViewport.equals(viewport) === false) {\n\t\t\t\tgl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n\t\t\t\tcurrentViewport.copy(viewport);\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction reset() {\n\t\t\t// reset state\n\t\t\tgl.disable(gl.BLEND);\n\t\t\tgl.disable(gl.CULL_FACE);\n\t\t\tgl.disable(gl.DEPTH_TEST);\n\t\t\tgl.disable(gl.POLYGON_OFFSET_FILL);\n\t\t\tgl.disable(gl.SCISSOR_TEST);\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\tgl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t\tgl.blendEquation(gl.FUNC_ADD);\n\t\t\tgl.blendFunc(gl.ONE, gl.ZERO);\n\t\t\tgl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\n\t\t\tgl.colorMask(true, true, true, true);\n\t\t\tgl.clearColor(0, 0, 0, 0);\n\t\t\tgl.depthMask(true);\n\t\t\tgl.depthFunc(gl.LESS);\n\t\t\tgl.clearDepth(1);\n\t\t\tgl.stencilMask(0xffffffff);\n\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xffffffff);\n\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\tgl.clearStencil(0);\n\t\t\tgl.cullFace(gl.BACK);\n\t\t\tgl.frontFace(gl.CCW);\n\t\t\tgl.polygonOffset(0, 0);\n\t\t\tgl.activeTexture(gl.TEXTURE0);\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t\t\tif (isWebGL2 === true) {\n\t\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n\t\t\t\tgl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n\t\t\t}\n\n\t\t\tgl.useProgram(null);\n\t\t\tgl.lineWidth(1);\n\t\t\tgl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height); // reset internals\n\n\t\t\tenabledCapabilities = {};\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\t\t\txrFramebuffer = null;\n\t\t\tcurrentBoundFramebuffers = {};\n\t\t\tcurrentProgram = null;\n\t\t\tcurrentBlendingEnabled = false;\n\t\t\tcurrentBlending = null;\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\t\t\tcurrentPremultipledAlpha = false;\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\t\t\tcurrentLineWidth = null;\n\t\t\tcurrentPolygonOffsetFactor = null;\n\t\t\tcurrentPolygonOffsetUnits = null;\n\t\t\tcurrentScissor.set(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tcurrentViewport.set(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\t\t}\n\n\t\treturn {\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\t\t\tbindFramebuffer: bindFramebuffer,\n\t\t\tbindXRFramebuffer: bindXRFramebuffer,\n\t\t\tuseProgram: useProgram,\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\t\t\tsetScissorTest: setScissorTest,\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tunbindTexture: unbindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\t\t\ttexImage3D: texImage3D,\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\t\t\treset: reset\n\t\t};\n\t}\n\n\tfunction WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst maxTextures = capabilities.maxTextures;\n\t\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\t\tconst maxTextureSize = capabilities.maxTextureSize;\n\t\tconst maxSamples = capabilities.maxSamples;\n\n\t\tconst _videoTextures = new WeakMap();\n\n\t\tlet _canvas; // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\n\t\tlet useOffscreenCanvas = false;\n\n\t\ttry {\n\t\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined' && new OffscreenCanvas(1, 1).getContext('2d') !== null;\n\t\t} catch (err) {// Ignore any errors\n\t\t}\n\n\t\tfunction createCanvas(width, height) {\n\t\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\t\t\treturn useOffscreenCanvas ? new OffscreenCanvas(width, height) : createElementNS('canvas');\n\t\t}\n\n\t\tfunction resizeImage(image, needsPowerOfTwo, needsNewCanvas, maxSize) {\n\t\t\tlet scale = 1; // handle case if texture exceeds max size\n\n\t\t\tif (image.width > maxSize || image.height > maxSize) {\n\t\t\t\tscale = maxSize / Math.max(image.width, image.height);\n\t\t\t} // only perform resize if necessary\n\n\n\t\t\tif (scale < 1 || needsPowerOfTwo === true) {\n\t\t\t\t// only perform resize for certain image types\n\t\t\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n\t\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\t\t\t\t\tconst width = floor(scale * image.width);\n\t\t\t\t\tconst height = floor(scale * image.height);\n\t\t\t\t\tif (_canvas === undefined) _canvas = createCanvas(width, height); // cube textures can't reuse the same canvas\n\n\t\t\t\t\tconst canvas = needsNewCanvas ? createCanvas(width, height) : _canvas;\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\t\t\t\t\tconst context = canvas.getContext('2d');\n\t\t\t\t\tcontext.drawImage(image, 0, 0, width, height);\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').');\n\t\t\t\t\treturn canvas;\n\t\t\t\t} else {\n\t\t\t\t\tif ('data' in image) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn image;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn image;\n\t\t}\n\n\t\tfunction isPowerOfTwo$1(image) {\n\t\t\treturn isPowerOfTwo(image.width) && isPowerOfTwo(image.height);\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo(texture) {\n\t\t\tif (isWebGL2) return false;\n\t\t\treturn texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps(texture, supportsMips) {\n\t\t\treturn texture.generateMipmaps && supportsMips && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\t\t}\n\n\t\tfunction generateMipmap(target, texture, width, height, depth = 1) {\n\t\t\t_gl.generateMipmap(target);\n\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\ttextureProperties.__maxMipLevel = Math.log2(Math.max(width, height, depth));\n\t\t}\n\n\t\tfunction getInternalFormat(internalFormatName, glFormat, glType, encoding) {\n\t\t\tif (isWebGL2 === false) return glFormat;\n\n\t\t\tif (internalFormatName !== null) {\n\t\t\t\tif (_gl[internalFormatName] !== undefined) return _gl[internalFormatName];\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'');\n\t\t\t}\n\n\t\t\tlet internalFormat = glFormat;\n\n\t\t\tif (glFormat === _gl.RED) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.R32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.R16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.R8;\n\t\t\t}\n\n\t\t\tif (glFormat === _gl.RGB) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.RGB32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGB16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.RGB8;\n\t\t\t}\n\n\t\t\tif (glFormat === _gl.RGBA) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.RGBA32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGBA16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = encoding === sRGBEncoding ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\t}\n\n\t\t\tif (internalFormat === _gl.R16F || internalFormat === _gl.R32F || internalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F) {\n\t\t\t\textensions.get('EXT_color_buffer_float');\n\t\t\t}\n\n\t\t\treturn internalFormat;\n\t\t} // Fallback filters for non-power-of-2 textures\n\n\n\t\tfunction filterFallback(f) {\n\t\t\tif (f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter) {\n\t\t\t\treturn _gl.NEAREST;\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\t\t} //\n\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tconst texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tdeallocateTexture(texture);\n\n\t\t\tif (texture.isVideoTexture) {\n\t\t\t\t_videoTextures.delete(texture);\n\t\t\t}\n\n\t\t\tinfo.memory.textures--;\n\t\t}\n\n\t\tfunction onRenderTargetDispose(event) {\n\t\t\tconst renderTarget = event.target;\n\t\t\trenderTarget.removeEventListener('dispose', onRenderTargetDispose);\n\t\t\tdeallocateRenderTarget(renderTarget);\n\t\t} //\n\n\n\t\tfunction deallocateTexture(texture) {\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (textureProperties.__webglInit === undefined) return;\n\n\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\n\n\t\t\tproperties.remove(texture);\n\t\t}\n\n\t\tfunction deallocateRenderTarget(renderTarget) {\n\t\t\tconst texture = renderTarget.texture;\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (!renderTarget) return;\n\n\t\t\tif (textureProperties.__webglTexture !== undefined) {\n\t\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\n\n\t\t\t\tinfo.memory.textures--;\n\t\t\t}\n\n\t\t\tif (renderTarget.depthTexture) {\n\t\t\t\trenderTarget.depthTexture.dispose();\n\t\t\t}\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n\t\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n\t\t\t\tif (renderTargetProperties.__webglMultisampledFramebuffer) _gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\tif (renderTargetProperties.__webglColorRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);\n\t\t\t\tif (renderTargetProperties.__webglDepthRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);\n\t\t\t}\n\n\t\t\tif (renderTarget.isWebGLMultipleRenderTargets) {\n\t\t\t\tfor (let i = 0, il = texture.length; i < il; i++) {\n\t\t\t\t\tconst attachmentProperties = properties.get(texture[i]);\n\n\t\t\t\t\tif (attachmentProperties.__webglTexture) {\n\t\t\t\t\t\t_gl.deleteTexture(attachmentProperties.__webglTexture);\n\n\t\t\t\t\t\tinfo.memory.textures--;\n\t\t\t\t\t}\n\n\t\t\t\t\tproperties.remove(texture[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.remove(texture);\n\t\t\tproperties.remove(renderTarget);\n\t\t} //\n\n\n\t\tlet textureUnits = 0;\n\n\t\tfunction resetTextureUnits() {\n\t\t\ttextureUnits = 0;\n\t\t}\n\n\t\tfunction allocateTextureUnit() {\n\t\t\tconst textureUnit = textureUnits;\n\n\t\t\tif (textureUnit >= maxTextures) {\n\t\t\t\tconsole.warn('THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures);\n\t\t\t}\n\n\t\t\ttextureUnits += 1;\n\t\t\treturn textureUnit;\n\t\t} //\n\n\n\t\tfunction setTexture2D(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (texture.isVideoTexture) updateVideoTexture(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tconst image = texture.image;\n\n\t\t\t\tif (image === undefined) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');\n\t\t\t\t} else if (image.complete === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');\n\t\t\t\t} else {\n\t\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTexture2DArray(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTexture3D(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_3D, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTextureCube(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadCubeTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\t\t}\n\n\t\tconst wrappingToGL = {\n\t\t\t[RepeatWrapping]: _gl.REPEAT,\n\t\t\t[ClampToEdgeWrapping]: _gl.CLAMP_TO_EDGE,\n\t\t\t[MirroredRepeatWrapping]: _gl.MIRRORED_REPEAT\n\t\t};\n\t\tconst filterToGL = {\n\t\t\t[NearestFilter]: _gl.NEAREST,\n\t\t\t[NearestMipmapNearestFilter]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t\t[NearestMipmapLinearFilter]: _gl.NEAREST_MIPMAP_LINEAR,\n\t\t\t[LinearFilter]: _gl.LINEAR,\n\t\t\t[LinearMipmapNearestFilter]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t\t[LinearMipmapLinearFilter]: _gl.LINEAR_MIPMAP_LINEAR\n\t\t};\n\n\t\tfunction setTextureParameters(textureType, texture, supportsMips) {\n\t\t\tif (supportsMips) {\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[texture.wrapS]);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[texture.wrapT]);\n\n\t\t\t\tif (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[texture.wrapR]);\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[texture.magFilter]);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[texture.minFilter]);\n\t\t\t} else {\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n\t\t\t\tif (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE);\n\t\t\t\t}\n\n\t\t\t\tif (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n\t\t\t\tif (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (extensions.has('EXT_texture_filter_anisotropic') === true) {\n\t\t\t\tconst extension = extensions.get('EXT_texture_filter_anisotropic');\n\t\t\t\tif (texture.type === FloatType && extensions.has('OES_texture_float_linear') === false) return; // verify extension for WebGL 1 and WebGL 2\n\n\t\t\t\tif (isWebGL2 === false && texture.type === HalfFloatType && extensions.has('OES_texture_half_float_linear') === false) return; // verify extension for WebGL 1 only\n\n\t\t\t\tif (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n\t\t\t\t\t_gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n\t\t\t\t\tproperties.get(texture).__currentAnisotropy = texture.anisotropy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction initTexture(textureProperties, texture) {\n\t\t\tif (textureProperties.__webglInit === undefined) {\n\t\t\t\ttextureProperties.__webglInit = true;\n\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\t\tinfo.memory.textures++;\n\t\t\t}\n\t\t}\n\n\t\tfunction uploadTexture(textureProperties, texture, slot) {\n\t\t\tlet textureType = _gl.TEXTURE_2D;\n\t\t\tif (texture.isDataTexture2DArray) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\t\tif (texture.isDataTexture3D) textureType = _gl.TEXTURE_3D;\n\t\t\tinitTexture(textureProperties, texture);\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(textureType, textureProperties.__webglTexture);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo(texture) && isPowerOfTwo$1(texture.image) === false;\n\t\t\tconst image = resizeImage(texture.image, needsPowerOfTwo, false, maxTextureSize);\n\t\t\tconst supportsMips = isPowerOfTwo$1(image) || isWebGL2,\n\t\t\t\t\t\tglFormat = utils.convert(texture.format);\n\t\t\tlet glType = utils.convert(texture.type),\n\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\t\t\tsetTextureParameters(textureType, texture, supportsMips);\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tif (texture.isDepthTexture) {\n\t\t\t\t// populate depth texture with dummy data\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tif (texture.type === FloatType) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\t\t\t\t\t} else if (texture.type === UnsignedIntType) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\t\t\t\t\t} else if (texture.type === UnsignedInt248Type) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (texture.type === FloatType) {\n\t\t\t\t\t\tconsole.error('WebGLRenderer: Floating point depth texture requires WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t} // validation checks for WebGL 1\n\n\n\t\t\t\tif (texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert(texture.type);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n\t\t\t\t\tif (texture.type !== UnsignedInt248Type) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert(texture.type);\n\t\t\t\t\t}\n\t\t\t\t} //\n\n\n\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);\n\t\t\t} else if (texture.isDataTexture) {\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\n\t\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\t\tmipmap = mipmaps[i];\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data);\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t\t}\n\t\t\t} else if (texture.isCompressedTexture) {\n\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\tmipmap = mipmaps[i];\n\n\t\t\t\t\tif (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n\t\t\t\t\t\tif (glFormat !== null) {\n\t\t\t\t\t\t\tstate.compressedTexImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t} else if (texture.isDataTexture2DArray) {\n\t\t\t\tstate.texImage3D(_gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t} else if (texture.isDataTexture3D) {\n\t\t\t\tstate.texImage3D(_gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t} else {\n\t\t\t\t// regular Texture (image, video, canvas)\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\n\t\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\t\tmipmap = mipmaps[i];\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap);\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image);\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\tgenerateMipmap(textureType, texture, image.width, image.height);\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\n\t\t}\n\n\t\tfunction uploadCubeTexture(textureProperties, texture, slot) {\n\t\t\tif (texture.image.length !== 6) return;\n\t\t\tinitTexture(textureProperties, texture);\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\n\n\t\t\tconst isCompressed = texture && (texture.isCompressedTexture || texture.image[0].isCompressedTexture);\n\t\t\tconst isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tif (!isCompressed && !isDataTexture) {\n\t\t\t\t\tcubeImage[i] = resizeImage(texture.image[i], false, true, maxCubemapSize);\n\t\t\t\t} else {\n\t\t\t\t\tcubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst image = cubeImage[0],\n\t\t\t\t\t\tsupportsMips = isPowerOfTwo$1(image) || isWebGL2,\n\t\t\t\t\t\tglFormat = utils.convert(texture.format),\n\t\t\t\t\t\tglType = utils.convert(texture.type),\n\t\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\t\t\tsetTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\n\t\t\tlet mipmaps;\n\n\t\t\tif (isCompressed) {\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tmipmaps = cubeImage[i].mipmaps;\n\n\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\n\t\t\t\t\t\tif (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n\t\t\t\t\t\t\tif (glFormat !== null) {\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t} else {\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tif (isDataTexture) {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n\n\t\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[i].image;\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[i]);\n\n\t\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\t\t\t}\n\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap(_gl.TEXTURE_CUBE_MAP, texture, image.width, image.height);\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\n\t\t} // Render targets\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\n\n\t\tfunction setupFrameBufferTexture(framebuffer, renderTarget, texture, attachment, textureTarget) {\n\t\t\tconst glFormat = utils.convert(texture.format);\n\t\t\tconst glType = utils.convert(texture.type);\n\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\n\t\t\tif (textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\tstate.texImage3D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null);\n\t\t\t} else {\n\t\t\t\tstate.texImage2D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(texture).__webglTexture, 0);\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t} // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n\t\tfunction setupRenderBufferStorage(renderbuffer, renderTarget, isMultisample) {\n\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n\t\t\tif (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n\t\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\t\tif (depthTexture && depthTexture.isDepthTexture) {\n\t\t\t\t\t\tif (depthTexture.type === FloatType) {\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\t\t\t\t\t\t} else if (depthTexture.type === UnsignedIntType) {\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n\t\t\t} else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n\t\t\t} else {\n\t\t\t\t// Use the first texture for MRT so far\n\t\t\t\tconst texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[0] : renderTarget.texture;\n\t\t\t\tconst glFormat = utils.convert(texture.format);\n\t\t\t\tconst glType = utils.convert(texture.type);\n\t\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n\t\t} // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n\t\tfunction setupDepthTexture(framebuffer, renderTarget) {\n\t\t\tconst isCube = renderTarget && renderTarget.isWebGLCubeRenderTarget;\n\t\t\tif (isCube) throw new Error('Depth Texture with cube render targets is not supported');\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\tif (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\n\t\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\t\t\t} // upload an empty depth texture with framebuffer size\n\n\n\t\t\tif (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t}\n\n\t\t\tsetTexture2D(renderTarget.depthTexture, 0);\n\n\t\t\tconst webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n\t\t\tif (renderTarget.depthTexture.format === DepthFormat) {\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n\t\t\t} else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown depthTexture format');\n\t\t\t}\n\t\t} // Setup GL resources for a non-texture depth buffer\n\n\n\t\tfunction setupDepthRenderbuffer(renderTarget) {\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\n\t\t\tif (renderTarget.depthTexture) {\n\t\t\t\tif (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n\t\t\t\tsetupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n\t\t\t} else {\n\t\t\t\tif (isCube) {\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget, false);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t} // Set up GL resources for the render target\n\n\n\t\tfunction setupRenderTarget(renderTarget) {\n\t\t\tconst texture = renderTarget.texture;\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\trenderTarget.addEventListener('dispose', onRenderTargetDispose);\n\n\t\t\tif (renderTarget.isWebGLMultipleRenderTargets !== true) {\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\t\ttextureProperties.__version = texture.version;\n\t\t\t\tinfo.memory.textures++;\n\t\t\t}\n\n\t\t\tconst isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\t\t\tconst isMultipleRenderTargets = renderTarget.isWebGLMultipleRenderTargets === true;\n\t\t\tconst isMultisample = renderTarget.isWebGLMultisampleRenderTarget === true;\n\t\t\tconst isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\n\t\t\tconst supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2; // Handles WebGL2 RGBFormat fallback - #18858\n\n\t\t\tif (isWebGL2 && texture.format === RGBFormat && (texture.type === FloatType || texture.type === HalfFloatType)) {\n\t\t\t\ttexture.format = RGBAFormat;\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.');\n\t\t\t} // Setup framebuffer\n\n\n\t\t\tif (isCube) {\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t\tif (isMultipleRenderTargets) {\n\t\t\t\t\tif (capabilities.drawBuffers) {\n\t\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\t\t\tconst attachmentProperties = properties.get(textures[i]);\n\n\t\t\t\t\t\t\tif (attachmentProperties.__webglTexture === undefined) {\n\t\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\t\t\t\t\t\t\t\tinfo.memory.textures++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.');\n\t\t\t\t\t}\n\t\t\t\t} else if (isMultisample) {\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\n\n\t\t\t\t\t\tconst glFormat = utils.convert(texture.format);\n\t\t\t\t\t\tconst glType = utils.convert(texture.type);\n\t\t\t\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\t\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\n\n\t\t\t\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n\n\t\t\t\t\t\tif (renderTarget.depthBuffer) {\n\t\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // Setup color buffer\n\n\n\t\t\tif (isCube) {\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\t\t\t\tsetTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n\t\t\t\t}\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_CUBE_MAP, texture, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\tstate.unbindTexture();\n\t\t\t} else if (isMultipleRenderTargets) {\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\tconst attachment = textures[i];\n\t\t\t\t\tconst attachmentProperties = properties.get(attachment);\n\t\t\t\t\tstate.bindTexture(_gl.TEXTURE_2D, attachmentProperties.__webglTexture);\n\t\t\t\t\tsetTextureParameters(_gl.TEXTURE_2D, attachment, supportsMips);\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D);\n\n\t\t\t\t\tif (textureNeedsGenerateMipmaps(attachment, supportsMips)) {\n\t\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_2D, attachment, renderTarget.width, renderTarget.height);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstate.unbindTexture();\n\t\t\t} else {\n\t\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\t\tif (isRenderTarget3D) {\n\t\t\t\t\t// Render targets containing layers, i.e: Texture 3D and 2d arrays\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\tconst isTexture3D = texture.isDataTexture3D;\n\t\t\t\t\t\tglTextureType = isTexture3D ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(glTextureType, textureProperties.__webglTexture);\n\t\t\t\tsetTextureParameters(glTextureType, texture, supportsMips);\n\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType);\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tgenerateMipmap(glTextureType, texture, renderTarget.width, renderTarget.height, renderTarget.depth);\n\t\t\t\t}\n\n\t\t\t\tstate.unbindTexture();\n\t\t\t} // Setup depth and stencil buffers\n\n\n\t\t\tif (renderTarget.depthBuffer) {\n\t\t\t\tsetupDepthRenderbuffer(renderTarget);\n\t\t\t}\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap(renderTarget) {\n\t\t\tconst supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2;\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [renderTarget.texture];\n\n\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\tconst texture = textures[i];\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\n\t\t\t\t\tconst webglTexture = properties.get(texture).__webglTexture;\n\n\t\t\t\t\tstate.bindTexture(target, webglTexture);\n\t\t\t\t\tgenerateMipmap(target, texture, renderTarget.width, renderTarget.height);\n\t\t\t\t\tstate.unbindTexture();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction updateMultisampleRenderTarget(renderTarget) {\n\t\t\tif (renderTarget.isWebGLMultisampleRenderTarget) {\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tconst width = renderTarget.width;\n\t\t\t\t\tconst height = renderTarget.height;\n\t\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\t\tif (renderTarget.depthBuffer) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif (renderTarget.stencilBuffer) mask |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\t\t\tstate.bindFramebuffer(_gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\t\tstate.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\n\t\t\t\t\t_gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST);\n\n\t\t\t\t\tstate.bindFramebuffer(_gl.READ_FRAMEBUFFER, null);\n\t\t\t\t\tstate.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction getRenderTargetSamples(renderTarget) {\n\t\t\treturn isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ? Math.min(maxSamples, renderTarget.samples) : 0;\n\t\t}\n\n\t\tfunction updateVideoTexture(texture) {\n\t\t\tconst frame = info.render.frame; // Check the last frame we updated the VideoTexture\n\n\t\t\tif (_videoTextures.get(texture) !== frame) {\n\t\t\t\t_videoTextures.set(texture, frame);\n\n\t\t\t\ttexture.update();\n\t\t\t}\n\t\t} // backwards compatibility\n\n\n\t\tlet warnedTexture2D = false;\n\t\tlet warnedTextureCube = false;\n\n\t\tfunction safeSetTexture2D(texture, slot) {\n\t\t\tif (texture && texture.isWebGLRenderTarget) {\n\t\t\t\tif (warnedTexture2D === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.');\n\t\t\t\t\twarnedTexture2D = true;\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\t\t\t}\n\n\t\t\tsetTexture2D(texture, slot);\n\t\t}\n\n\t\tfunction safeSetTextureCube(texture, slot) {\n\t\t\tif (texture && texture.isWebGLCubeRenderTarget) {\n\t\t\t\tif (warnedTextureCube === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.');\n\t\t\t\t\twarnedTextureCube = true;\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\t\t\t}\n\n\t\t\tsetTextureCube(texture, slot);\n\t\t} //\n\n\n\t\tthis.allocateTextureUnit = allocateTextureUnit;\n\t\tthis.resetTextureUnits = resetTextureUnits;\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTexture2DArray = setTexture2DArray;\n\t\tthis.setTexture3D = setTexture3D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\t\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\t\tthis.safeSetTexture2D = safeSetTexture2D;\n\t\tthis.safeSetTextureCube = safeSetTextureCube;\n\t}\n\n\tfunction WebGLUtils(gl, extensions, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction convert(p) {\n\t\t\tlet extension;\n\t\t\tif (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\n\t\t\tif (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\tif (p === UnsignedShort565Type) return gl.UNSIGNED_SHORT_5_6_5;\n\t\t\tif (p === ByteType) return gl.BYTE;\n\t\t\tif (p === ShortType) return gl.SHORT;\n\t\t\tif (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\n\t\t\tif (p === IntType) return gl.INT;\n\t\t\tif (p === UnsignedIntType) return gl.UNSIGNED_INT;\n\t\t\tif (p === FloatType) return gl.FLOAT;\n\n\t\t\tif (p === HalfFloatType) {\n\t\t\t\tif (isWebGL2) return gl.HALF_FLOAT;\n\t\t\t\textension = extensions.get('OES_texture_half_float');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.HALF_FLOAT_OES;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === AlphaFormat) return gl.ALPHA;\n\t\t\tif (p === RGBFormat) return gl.RGB;\n\t\t\tif (p === RGBAFormat) return gl.RGBA;\n\t\t\tif (p === LuminanceFormat) return gl.LUMINANCE;\n\t\t\tif (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\n\t\t\tif (p === DepthFormat) return gl.DEPTH_COMPONENT;\n\t\t\tif (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\n\t\t\tif (p === RedFormat) return gl.RED; // WebGL2 formats.\n\n\t\t\tif (p === RedIntegerFormat) return gl.RED_INTEGER;\n\t\t\tif (p === RGFormat) return gl.RG;\n\t\t\tif (p === RGIntegerFormat) return gl.RG_INTEGER;\n\t\t\tif (p === RGBIntegerFormat) return gl.RGB_INTEGER;\n\t\t\tif (p === RGBAIntegerFormat) return gl.RGBA_INTEGER;\n\n\t\t\tif (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_ETC1_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc1');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_ETC2_Format) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\t\tif (p === RGBA_ETC2_EAC_Format) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format || p === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format || p === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format || p === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format || p === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format || p === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_astc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\t// TODO Complete?\n\t\t\t\t\treturn p;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGBA_BPTC_Format) {\n\t\t\t\textension = extensions.get('EXT_texture_compression_bptc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\t// TODO Complete?\n\t\t\t\t\treturn p;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === UnsignedInt248Type) {\n\t\t\t\tif (isWebGL2) return gl.UNSIGNED_INT_24_8;\n\t\t\t\textension = extensions.get('WEBGL_depth_texture');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tconvert: convert\n\t\t};\n\t}\n\n\tclass ArrayCamera extends PerspectiveCamera {\n\t\tconstructor(array = []) {\n\t\t\tsuper();\n\t\t\tthis.cameras = array;\n\t\t}\n\n\t}\n\n\tArrayCamera.prototype.isArrayCamera = true;\n\n\tclass Group extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Group';\n\t\t}\n\n\t}\n\n\tGroup.prototype.isGroup = true;\n\n\tconst _moveEvent = {\n\t\ttype: 'move'\n\t};\n\n\tclass WebXRController {\n\t\tconstructor() {\n\t\t\tthis._targetRay = null;\n\t\t\tthis._grip = null;\n\t\t\tthis._hand = null;\n\t\t}\n\n\t\tgetHandSpace() {\n\t\t\tif (this._hand === null) {\n\t\t\t\tthis._hand = new Group();\n\t\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\t\tthis._hand.visible = false;\n\t\t\t\tthis._hand.joints = {};\n\t\t\t\tthis._hand.inputState = {\n\t\t\t\t\tpinching: false\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn this._hand;\n\t\t}\n\n\t\tgetTargetRaySpace() {\n\t\t\tif (this._targetRay === null) {\n\t\t\t\tthis._targetRay = new Group();\n\t\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\t\tthis._targetRay.visible = false;\n\t\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\t\t\t}\n\n\t\t\treturn this._targetRay;\n\t\t}\n\n\t\tgetGripSpace() {\n\t\t\tif (this._grip === null) {\n\t\t\t\tthis._grip = new Group();\n\t\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\t\tthis._grip.visible = false;\n\t\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\t\tthis._grip.angularVelocity = new Vector3();\n\t\t\t}\n\n\t\t\treturn this._grip;\n\t\t}\n\n\t\tdispatchEvent(event) {\n\t\t\tif (this._targetRay !== null) {\n\t\t\t\tthis._targetRay.dispatchEvent(event);\n\t\t\t}\n\n\t\t\tif (this._grip !== null) {\n\t\t\t\tthis._grip.dispatchEvent(event);\n\t\t\t}\n\n\t\t\tif (this._hand !== null) {\n\t\t\t\tthis._hand.dispatchEvent(event);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tdisconnect(inputSource) {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'disconnected',\n\t\t\t\tdata: inputSource\n\t\t\t});\n\n\t\t\tif (this._targetRay !== null) {\n\t\t\t\tthis._targetRay.visible = false;\n\t\t\t}\n\n\t\t\tif (this._grip !== null) {\n\t\t\t\tthis._grip.visible = false;\n\t\t\t}\n\n\t\t\tif (this._hand !== null) {\n\t\t\t\tthis._hand.visible = false;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tupdate(inputSource, frame, referenceSpace) {\n\t\t\tlet inputPose = null;\n\t\t\tlet gripPose = null;\n\t\t\tlet handPose = null;\n\t\t\tconst targetRay = this._targetRay;\n\t\t\tconst grip = this._grip;\n\t\t\tconst hand = this._hand;\n\n\t\t\tif (inputSource && frame.session.visibilityState !== 'visible-blurred') {\n\t\t\t\tif (targetRay !== null) {\n\t\t\t\t\tinputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\n\n\t\t\t\t\tif (inputPose !== null) {\n\t\t\t\t\t\ttargetRay.matrix.fromArray(inputPose.transform.matrix);\n\t\t\t\t\t\ttargetRay.matrix.decompose(targetRay.position, targetRay.rotation, targetRay.scale);\n\n\t\t\t\t\t\tif (inputPose.linearVelocity) {\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\t\ttargetRay.linearVelocity.copy(inputPose.linearVelocity);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (inputPose.angularVelocity) {\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\t\ttargetRay.angularVelocity.copy(inputPose.angularVelocity);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.dispatchEvent(_moveEvent);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hand && inputSource.hand) {\n\t\t\t\t\thandPose = true;\n\n\t\t\t\t\tfor (const inputjoint of inputSource.hand.values()) {\n\t\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\t\tconst jointPose = frame.getJointPose(inputjoint, referenceSpace);\n\n\t\t\t\t\t\tif (hand.joints[inputjoint.jointName] === undefined) {\n\t\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\t\thand.joints[inputjoint.jointName] = joint; // ??\n\n\t\t\t\t\t\t\thand.add(joint);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst joint = hand.joints[inputjoint.jointName];\n\n\t\t\t\t\t\tif (jointPose !== null) {\n\t\t\t\t\t\t\tjoint.matrix.fromArray(jointPose.transform.matrix);\n\t\t\t\t\t\t\tjoint.matrix.decompose(joint.position, joint.rotation, joint.scale);\n\t\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjoint.visible = jointPose !== null;\n\t\t\t\t\t} // Custom events\n\t\t\t\t\t// Check pinchz\n\n\n\t\t\t\t\tconst indexTip = hand.joints['index-finger-tip'];\n\t\t\t\t\tconst thumbTip = hand.joints['thumb-tip'];\n\t\t\t\t\tconst distance = indexTip.position.distanceTo(thumbTip.position);\n\t\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\t\tif (hand.inputState.pinching && distance > distanceToPinch + threshold) {\n\t\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (!hand.inputState.pinching && distance <= distanceToPinch - threshold) {\n\t\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (grip !== null && inputSource.gripSpace) {\n\t\t\t\t\t\tgripPose = frame.getPose(inputSource.gripSpace, referenceSpace);\n\n\t\t\t\t\t\tif (gripPose !== null) {\n\t\t\t\t\t\t\tgrip.matrix.fromArray(gripPose.transform.matrix);\n\t\t\t\t\t\t\tgrip.matrix.decompose(grip.position, grip.rotation, grip.scale);\n\n\t\t\t\t\t\t\tif (gripPose.linearVelocity) {\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\t\tgrip.linearVelocity.copy(gripPose.linearVelocity);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (gripPose.angularVelocity) {\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\t\tgrip.angularVelocity.copy(gripPose.angularVelocity);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (targetRay !== null) {\n\t\t\t\ttargetRay.visible = inputPose !== null;\n\t\t\t}\n\n\t\t\tif (grip !== null) {\n\t\t\t\tgrip.visible = gripPose !== null;\n\t\t\t}\n\n\t\t\tif (hand !== null) {\n\t\t\t\thand.visible = handPose !== null;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass WebXRManager extends EventDispatcher {\n\t\tconstructor(renderer, gl) {\n\t\t\tsuper();\n\t\t\tconst scope = this;\n\t\t\tconst state = renderer.state;\n\t\t\tlet session = null;\n\t\t\tlet framebufferScaleFactor = 1.0;\n\t\t\tlet referenceSpace = null;\n\t\t\tlet referenceSpaceType = 'local-floor';\n\t\t\tlet pose = null;\n\t\t\tlet glBinding = null;\n\t\t\tlet glFramebuffer = null;\n\t\t\tlet glProjLayer = null;\n\t\t\tlet glBaseLayer = null;\n\t\t\tlet isMultisample = false;\n\t\t\tlet glMultisampledFramebuffer = null;\n\t\t\tlet glColorRenderbuffer = null;\n\t\t\tlet glDepthRenderbuffer = null;\n\t\t\tlet xrFrame = null;\n\t\t\tlet depthStyle = null;\n\t\t\tlet clearStyle = null;\n\t\t\tconst controllers = [];\n\t\t\tconst inputSourcesMap = new Map(); //\n\n\t\t\tconst cameraL = new PerspectiveCamera();\n\t\t\tcameraL.layers.enable(1);\n\t\t\tcameraL.viewport = new Vector4();\n\t\t\tconst cameraR = new PerspectiveCamera();\n\t\t\tcameraR.layers.enable(2);\n\t\t\tcameraR.viewport = new Vector4();\n\t\t\tconst cameras = [cameraL, cameraR];\n\t\t\tconst cameraVR = new ArrayCamera();\n\t\t\tcameraVR.layers.enable(1);\n\t\t\tcameraVR.layers.enable(2);\n\t\t\tlet _currentDepthNear = null;\n\t\t\tlet _currentDepthFar = null; //\n\n\t\t\tthis.cameraAutoUpdate = true;\n\t\t\tthis.enabled = false;\n\t\t\tthis.isPresenting = false;\n\n\t\t\tthis.getController = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getTargetRaySpace();\n\t\t\t};\n\n\t\t\tthis.getControllerGrip = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getGripSpace();\n\t\t\t};\n\n\t\t\tthis.getHand = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getHandSpace();\n\t\t\t}; //\n\n\n\t\t\tfunction onSessionEvent(event) {\n\t\t\t\tconst controller = inputSourcesMap.get(event.inputSource);\n\n\t\t\t\tif (controller) {\n\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\ttype: event.type,\n\t\t\t\t\t\tdata: event.inputSource\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction onSessionEnd() {\n\t\t\t\tinputSourcesMap.forEach(function (controller, inputSource) {\n\t\t\t\t\tcontroller.disconnect(inputSource);\n\t\t\t\t});\n\t\t\t\tinputSourcesMap.clear();\n\t\t\t\t_currentDepthNear = null;\n\t\t\t\t_currentDepthFar = null; // restore framebuffer/rendering state\n\n\t\t\t\tstate.bindXRFramebuffer(null);\n\t\t\t\trenderer.setRenderTarget(renderer.getRenderTarget());\n\t\t\t\tif (glFramebuffer) gl.deleteFramebuffer(glFramebuffer);\n\t\t\t\tif (glMultisampledFramebuffer) gl.deleteFramebuffer(glMultisampledFramebuffer);\n\t\t\t\tif (glColorRenderbuffer) gl.deleteRenderbuffer(glColorRenderbuffer);\n\t\t\t\tif (glDepthRenderbuffer) gl.deleteRenderbuffer(glDepthRenderbuffer);\n\t\t\t\tglFramebuffer = null;\n\t\t\t\tglMultisampledFramebuffer = null;\n\t\t\t\tglColorRenderbuffer = null;\n\t\t\t\tglDepthRenderbuffer = null;\n\t\t\t\tglBaseLayer = null;\n\t\t\t\tglProjLayer = null;\n\t\t\t\tglBinding = null;\n\t\t\t\tsession = null; //\n\n\t\t\t\tanimation.stop();\n\t\t\t\tscope.isPresenting = false;\n\t\t\t\tscope.dispatchEvent({\n\t\t\t\t\ttype: 'sessionend'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.setFramebufferScaleFactor = function (value) {\n\t\t\t\tframebufferScaleFactor = value;\n\n\t\t\t\tif (scope.isPresenting === true) {\n\t\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.setReferenceSpaceType = function (value) {\n\t\t\t\treferenceSpaceType = value;\n\n\t\t\t\tif (scope.isPresenting === true) {\n\t\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.getReferenceSpace = function () {\n\t\t\t\treturn referenceSpace;\n\t\t\t};\n\n\t\t\tthis.getBaseLayer = function () {\n\t\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\t\t\t};\n\n\t\t\tthis.getBinding = function () {\n\t\t\t\treturn glBinding;\n\t\t\t};\n\n\t\t\tthis.getFrame = function () {\n\t\t\t\treturn xrFrame;\n\t\t\t};\n\n\t\t\tthis.getSession = function () {\n\t\t\t\treturn session;\n\t\t\t};\n\n\t\t\tthis.setSession = async function (value) {\n\t\t\t\tsession = value;\n\n\t\t\t\tif (session !== null) {\n\t\t\t\t\tsession.addEventListener('select', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('selectstart', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('selectend', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeeze', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeezestart', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeezeend', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('end', onSessionEnd);\n\t\t\t\t\tsession.addEventListener('inputsourceschange', onInputSourcesChange);\n\t\t\t\t\tconst attributes = gl.getContextAttributes();\n\n\t\t\t\t\tif (attributes.xrCompatible !== true) {\n\t\t\t\t\t\tawait gl.makeXRCompatible();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (session.renderState.layers === undefined) {\n\t\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t\t};\n\t\t\t\t\t\tglBaseLayer = new XRWebGLLayer(session, gl, layerInit);\n\t\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\t\tbaseLayer: glBaseLayer\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (gl instanceof WebGLRenderingContext) {\n\t\t\t\t\t\t// Use old style webgl layer because we can't use MSAA\n\t\t\t\t\t\t// WebGL2 support.\n\t\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\t\tantialias: true,\n\t\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t\t};\n\t\t\t\t\t\tglBaseLayer = new XRWebGLLayer(session, gl, layerInit);\n\t\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\t\tlayers: [glBaseLayer]\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisMultisample = attributes.antialias;\n\t\t\t\t\t\tlet depthFormat = null;\n\n\t\t\t\t\t\tif (attributes.depth) {\n\t\t\t\t\t\t\tclearStyle = gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\t\t\tif (attributes.stencil) clearStyle |= gl.STENCIL_BUFFER_BIT;\n\t\t\t\t\t\t\tdepthStyle = attributes.stencil ? gl.DEPTH_STENCIL_ATTACHMENT : gl.DEPTH_ATTACHMENT;\n\t\t\t\t\t\t\tdepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\t\tcolorFormat: attributes.alpha ? gl.RGBA8 : gl.RGB8,\n\t\t\t\t\t\t\tdepthFormat: depthFormat,\n\t\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t\t};\n\t\t\t\t\t\tglBinding = new XRWebGLBinding(session, gl);\n\t\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer(projectionlayerInit);\n\t\t\t\t\t\tglFramebuffer = gl.createFramebuffer();\n\t\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\t\tlayers: [glProjLayer]\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (isMultisample) {\n\t\t\t\t\t\t\tglMultisampledFramebuffer = gl.createFramebuffer();\n\t\t\t\t\t\t\tglColorRenderbuffer = gl.createRenderbuffer();\n\t\t\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, glColorRenderbuffer);\n\t\t\t\t\t\t\tgl.renderbufferStorageMultisample(gl.RENDERBUFFER, 4, gl.RGBA8, glProjLayer.textureWidth, glProjLayer.textureHeight);\n\t\t\t\t\t\t\tstate.bindFramebuffer(gl.FRAMEBUFFER, glMultisampledFramebuffer);\n\t\t\t\t\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, glColorRenderbuffer);\n\t\t\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\n\t\t\t\t\t\t\tif (depthFormat !== null) {\n\t\t\t\t\t\t\t\tglDepthRenderbuffer = gl.createRenderbuffer();\n\t\t\t\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, glDepthRenderbuffer);\n\t\t\t\t\t\t\t\tgl.renderbufferStorageMultisample(gl.RENDERBUFFER, 4, depthFormat, glProjLayer.textureWidth, glProjLayer.textureHeight);\n\t\t\t\t\t\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthStyle, gl.RENDERBUFFER, glDepthRenderbuffer);\n\t\t\t\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tstate.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treferenceSpace = await session.requestReferenceSpace(referenceSpaceType);\n\t\t\t\t\tanimation.setContext(session);\n\t\t\t\t\tanimation.start();\n\t\t\t\t\tscope.isPresenting = true;\n\t\t\t\t\tscope.dispatchEvent({\n\t\t\t\t\t\ttype: 'sessionstart'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfunction onInputSourcesChange(event) {\n\t\t\t\tconst inputSources = session.inputSources; // Assign inputSources to available controllers\n\n\t\t\t\tfor (let i = 0; i < controllers.length; i++) {\n\t\t\t\t\tinputSourcesMap.set(inputSources[i], controllers[i]);\n\t\t\t\t} // Notify disconnected\n\n\n\t\t\t\tfor (let i = 0; i < event.removed.length; i++) {\n\t\t\t\t\tconst inputSource = event.removed[i];\n\t\t\t\t\tconst controller = inputSourcesMap.get(inputSource);\n\n\t\t\t\t\tif (controller) {\n\t\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'disconnected',\n\t\t\t\t\t\t\tdata: inputSource\n\t\t\t\t\t\t});\n\t\t\t\t\t\tinputSourcesMap.delete(inputSource);\n\t\t\t\t\t}\n\t\t\t\t} // Notify connected\n\n\n\t\t\t\tfor (let i = 0; i < event.added.length; i++) {\n\t\t\t\t\tconst inputSource = event.added[i];\n\t\t\t\t\tconst controller = inputSourcesMap.get(inputSource);\n\n\t\t\t\t\tif (controller) {\n\t\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'connected',\n\t\t\t\t\t\t\tdata: inputSource\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tconst cameraLPos = new Vector3();\n\t\t\tconst cameraRPos = new Vector3();\n\t\t\t/**\n\t\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t\t * the cameras' projection and world matrices have already been set.\n\t\t\t * And that near and far planes are identical for both cameras.\n\t\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t\t */\n\n\t\t\tfunction setProjectionFromUnion(camera, cameraL, cameraR) {\n\t\t\t\tcameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\n\t\t\t\tcameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\n\t\t\t\tconst ipd = cameraLPos.distanceTo(cameraRPos);\n\t\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\t\tconst projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\n\t\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t\t// Use the left camera for these values.\n\n\t\t\t\tconst near = projL[14] / (projL[10] - 1);\n\t\t\t\tconst far = projL[14] / (projL[10] + 1);\n\t\t\t\tconst topFov = (projL[9] + 1) / projL[5];\n\t\t\t\tconst bottomFov = (projL[9] - 1) / projL[5];\n\t\t\t\tconst leftFov = (projL[8] - 1) / projL[0];\n\t\t\t\tconst rightFov = (projR[8] + 1) / projR[0];\n\t\t\t\tconst left = near * leftFov;\n\t\t\t\tconst right = near * rightFov; // Calculate the new camera's position offset from the\n\t\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\n\t\t\t\tconst zOffset = ipd / (-leftFov + rightFov);\n\t\t\t\tconst xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\n\n\t\t\t\tcameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\n\t\t\t\tcamera.translateX(xOffset);\n\t\t\t\tcamera.translateZ(zOffset);\n\t\t\t\tcamera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\n\t\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert(); // Find the union of the frustum values of the cameras and scale\n\t\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t\t// although must now be relative to the new union camera.\n\n\t\t\t\tconst near2 = near + zOffset;\n\t\t\t\tconst far2 = far + zOffset;\n\t\t\t\tconst left2 = left - xOffset;\n\t\t\t\tconst right2 = right + (ipd - xOffset);\n\t\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\t\t\t\tcamera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\n\t\t\t}\n\n\t\t\tfunction updateCamera(camera, parent) {\n\t\t\t\tif (parent === null) {\n\t\t\t\t\tcamera.matrixWorld.copy(camera.matrix);\n\t\t\t\t} else {\n\t\t\t\t\tcamera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n\t\t\t\t}\n\n\t\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n\t\t\t}\n\n\t\t\tthis.updateCamera = function (camera) {\n\t\t\t\tif (session === null) return;\n\t\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\t\tif (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {\n\t\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t\t});\n\t\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t\t_currentDepthFar = cameraVR.far;\n\t\t\t\t}\n\n\t\t\t\tconst parent = camera.parent;\n\t\t\t\tconst cameras = cameraVR.cameras;\n\t\t\t\tupdateCamera(cameraVR, parent);\n\n\t\t\t\tfor (let i = 0; i < cameras.length; i++) {\n\t\t\t\t\tupdateCamera(cameras[i], parent);\n\t\t\t\t}\n\n\t\t\t\tcameraVR.matrixWorld.decompose(cameraVR.position, cameraVR.quaternion, cameraVR.scale); // update user camera and its children\n\n\t\t\t\tcamera.position.copy(cameraVR.position);\n\t\t\t\tcamera.quaternion.copy(cameraVR.quaternion);\n\t\t\t\tcamera.scale.copy(cameraVR.scale);\n\t\t\t\tcamera.matrix.copy(cameraVR.matrix);\n\t\t\t\tcamera.matrixWorld.copy(cameraVR.matrixWorld);\n\t\t\t\tconst children = camera.children;\n\n\t\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tchildren[i].updateMatrixWorld(true);\n\t\t\t\t} // update projection matrix for proper view frustum culling\n\n\n\t\t\t\tif (cameras.length === 2) {\n\t\t\t\t\tsetProjectionFromUnion(cameraVR, cameraL, cameraR);\n\t\t\t\t} else {\n\t\t\t\t\t// assume single camera setup (AR)\n\t\t\t\t\tcameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.getCamera = function () {\n\t\t\t\treturn cameraVR;\n\t\t\t};\n\n\t\t\tthis.getFoveation = function () {\n\t\t\t\tif (glProjLayer !== null) {\n\t\t\t\t\treturn glProjLayer.fixedFoveation;\n\t\t\t\t}\n\n\t\t\t\tif (glBaseLayer !== null) {\n\t\t\t\t\treturn glBaseLayer.fixedFoveation;\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t};\n\n\t\t\tthis.setFoveation = function (foveation) {\n\t\t\t\t// 0 = no foveation = full resolution\n\t\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\t\t\t\tif (glProjLayer !== null) {\n\t\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\t\t\t\t}\n\n\t\t\t\tif (glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined) {\n\t\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\t\t\t\t}\n\t\t\t}; // Animation Loop\n\n\n\t\t\tlet onAnimationFrameCallback = null;\n\n\t\t\tfunction onAnimationFrame(time, frame) {\n\t\t\t\tpose = frame.getViewerPose(referenceSpace);\n\t\t\t\txrFrame = frame;\n\n\t\t\t\tif (pose !== null) {\n\t\t\t\t\tconst views = pose.views;\n\n\t\t\t\t\tif (glBaseLayer !== null) {\n\t\t\t\t\t\tstate.bindXRFramebuffer(glBaseLayer.framebuffer);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet cameraVRNeedsUpdate = false; // check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\t\tif (views.length !== cameraVR.cameras.length) {\n\t\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\t\tcameraVRNeedsUpdate = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < views.length; i++) {\n\t\t\t\t\t\tconst view = views[i];\n\t\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\t\tif (glBaseLayer !== null) {\n\t\t\t\t\t\t\tviewport = glBaseLayer.getViewport(view);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage(glProjLayer, view);\n\t\t\t\t\t\t\tstate.bindXRFramebuffer(glFramebuffer);\n\n\t\t\t\t\t\t\tif (glSubImage.depthStencilTexture !== undefined) {\n\t\t\t\t\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, depthStyle, gl.TEXTURE_2D, glSubImage.depthStencilTexture, 0);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glSubImage.colorTexture, 0);\n\t\t\t\t\t\t\tviewport = glSubImage.viewport;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst camera = cameras[i];\n\t\t\t\t\t\tcamera.matrix.fromArray(view.transform.matrix);\n\t\t\t\t\t\tcamera.projectionMatrix.fromArray(view.projectionMatrix);\n\t\t\t\t\t\tcamera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\tcameraVR.matrix.copy(camera.matrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (cameraVRNeedsUpdate === true) {\n\t\t\t\t\t\t\tcameraVR.cameras.push(camera);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isMultisample) {\n\t\t\t\t\t\tstate.bindXRFramebuffer(glMultisampledFramebuffer);\n\t\t\t\t\t\tif (clearStyle !== null) gl.clear(clearStyle);\n\t\t\t\t\t}\n\t\t\t\t} //\n\n\n\t\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t\tfor (let i = 0; i < controllers.length; i++) {\n\t\t\t\t\tconst controller = controllers[i];\n\t\t\t\t\tconst inputSource = inputSources[i];\n\t\t\t\t\tcontroller.update(inputSource, frame, referenceSpace);\n\t\t\t\t}\n\n\t\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\n\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst width = glProjLayer.textureWidth;\n\t\t\t\t\tconst height = glProjLayer.textureHeight;\n\t\t\t\t\tstate.bindFramebuffer(gl.READ_FRAMEBUFFER, glMultisampledFramebuffer);\n\t\t\t\t\tstate.bindFramebuffer(gl.DRAW_FRAMEBUFFER, glFramebuffer); // Invalidate the depth here to avoid flush of the depth data to main memory.\n\n\t\t\t\t\tgl.invalidateFramebuffer(gl.READ_FRAMEBUFFER, [depthStyle]);\n\t\t\t\t\tgl.invalidateFramebuffer(gl.DRAW_FRAMEBUFFER, [depthStyle]);\n\t\t\t\t\tgl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, gl.COLOR_BUFFER_BIT, gl.NEAREST); // Invalidate the MSAA buffer because it's not needed anymore.\n\n\t\t\t\t\tgl.invalidateFramebuffer(gl.READ_FRAMEBUFFER, [gl.COLOR_ATTACHMENT0]);\n\t\t\t\t\tstate.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n\t\t\t\t\tstate.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n\t\t\t\t\tstate.bindFramebuffer(gl.FRAMEBUFFER, glMultisampledFramebuffer);\n\t\t\t\t}\n\n\t\t\t\txrFrame = null;\n\t\t\t}\n\n\t\t\tconst animation = new WebGLAnimation();\n\t\t\tanimation.setAnimationLoop(onAnimationFrame);\n\n\t\t\tthis.setAnimationLoop = function (callback) {\n\t\t\t\tonAnimationFrameCallback = callback;\n\t\t\t};\n\n\t\t\tthis.dispose = function () {};\n\t\t}\n\n\t}\n\n\tfunction WebGLMaterials(properties) {\n\t\tfunction refreshFogUniforms(uniforms, fog) {\n\t\t\tuniforms.fogColor.value.copy(fog.color);\n\n\t\t\tif (fog.isFog) {\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\t\t\t} else if (fog.isFogExp2) {\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshMaterialUniforms(uniforms, material, pixelRatio, height, transmissionRenderTarget) {\n\t\t\tif (material.isMeshBasicMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t} else if (material.isMeshLambertMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsLambert(uniforms, material);\n\t\t\t} else if (material.isMeshToonMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsToon(uniforms, material);\n\t\t\t} else if (material.isMeshPhongMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsPhong(uniforms, material);\n\t\t\t} else if (material.isMeshStandardMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\n\t\t\t\tif (material.isMeshPhysicalMaterial) {\n\t\t\t\t\trefreshUniformsPhysical(uniforms, material, transmissionRenderTarget);\n\t\t\t\t} else {\n\t\t\t\t\trefreshUniformsStandard(uniforms, material);\n\t\t\t\t}\n\t\t\t} else if (material.isMeshMatcapMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsMatcap(uniforms, material);\n\t\t\t} else if (material.isMeshDepthMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsDepth(uniforms, material);\n\t\t\t} else if (material.isMeshDistanceMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsDistance(uniforms, material);\n\t\t\t} else if (material.isMeshNormalMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsNormal(uniforms, material);\n\t\t\t} else if (material.isLineBasicMaterial) {\n\t\t\t\trefreshUniformsLine(uniforms, material);\n\n\t\t\t\tif (material.isLineDashedMaterial) {\n\t\t\t\t\trefreshUniformsDash(uniforms, material);\n\t\t\t\t}\n\t\t\t} else if (material.isPointsMaterial) {\n\t\t\t\trefreshUniformsPoints(uniforms, material, pixelRatio, height);\n\t\t\t} else if (material.isSpriteMaterial) {\n\t\t\t\trefreshUniformsSprites(uniforms, material);\n\t\t\t} else if (material.isShadowMaterial) {\n\t\t\t\tuniforms.color.value.copy(material.color);\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\t} else if (material.isShaderMaterial) {\n\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsCommon(uniforms, material) {\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif (material.color) {\n\t\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\t}\n\n\t\t\tif (material.emissive) {\n\t\t\t\tuniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n\t\t\t}\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (material.specularMap) {\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t}\n\n\t\t\tif (material.alphaTest > 0) {\n\t\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\t\t\t}\n\n\t\t\tconst envMap = properties.get(material).envMap;\n\n\t\t\tif (envMap) {\n\t\t\t\tuniforms.envMap.value = envMap;\n\t\t\t\tuniforms.flipEnvMap.value = envMap.isCubeTexture && envMap.isRenderTargetTexture === false ? -1 : 1;\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\tuniforms.ior.value = material.ior;\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\tconst maxMipLevel = properties.get(envMap).__maxMipLevel;\n\n\t\t\t\tif (maxMipLevel !== undefined) {\n\t\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (material.lightMap) {\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\t\t\t}\n\n\t\t\tif (material.aoMap) {\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. displacementMap map\n\t\t\t// 4. normal map\n\t\t\t// 5. bump map\n\t\t\t// 6. roughnessMap map\n\t\t\t// 7. metalnessMap map\n\t\t\t// 8. alphaMap map\n\t\t\t// 9. emissiveMap map\n\t\t\t// 10. clearcoat map\n\t\t\t// 11. clearcoat normal map\n\t\t\t// 12. clearcoat roughnessMap map\n\t\t\t// 13. specular intensity map\n\t\t\t// 14. specular tint map\n\t\t\t// 15. transmission map\n\t\t\t// 16. thickness map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.specularMap) {\n\t\t\t\tuvScaleMap = material.specularMap;\n\t\t\t} else if (material.displacementMap) {\n\t\t\t\tuvScaleMap = material.displacementMap;\n\t\t\t} else if (material.normalMap) {\n\t\t\t\tuvScaleMap = material.normalMap;\n\t\t\t} else if (material.bumpMap) {\n\t\t\t\tuvScaleMap = material.bumpMap;\n\t\t\t} else if (material.roughnessMap) {\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\t\t\t} else if (material.metalnessMap) {\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t} else if (material.emissiveMap) {\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\t\t\t} else if (material.clearcoatMap) {\n\t\t\t\tuvScaleMap = material.clearcoatMap;\n\t\t\t} else if (material.clearcoatNormalMap) {\n\t\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\t\t\t} else if (material.clearcoatRoughnessMap) {\n\t\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\t\t\t} else if (material.specularIntensityMap) {\n\t\t\t\tuvScaleMap = material.specularIntensityMap;\n\t\t\t} else if (material.specularTintMap) {\n\t\t\t\tuvScaleMap = material.specularTintMap;\n\t\t\t} else if (material.transmissionMap) {\n\t\t\t\tuvScaleMap = material.transmissionMap;\n\t\t\t} else if (material.thicknessMap) {\n\t\t\t\tuvScaleMap = material.thicknessMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\t// backwards compatibility\n\t\t\t\tif (uvScaleMap.isWebGLRenderTarget) {\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\t\t\t\t}\n\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t} // uv repeat and offset setting priorities for uv2\n\t\t\t// 1. ao map\n\t\t\t// 2. light map\n\n\n\t\t\tlet uv2ScaleMap;\n\n\t\t\tif (material.aoMap) {\n\t\t\t\tuv2ScaleMap = material.aoMap;\n\t\t\t} else if (material.lightMap) {\n\t\t\t\tuv2ScaleMap = material.lightMap;\n\t\t\t}\n\n\t\t\tif (uv2ScaleMap !== undefined) {\n\t\t\t\t// backwards compatibility\n\t\t\t\tif (uv2ScaleMap.isWebGLRenderTarget) {\n\t\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\t\t\t\t}\n\n\t\t\t\tif (uv2ScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuv2ScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsLine(uniforms, material) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t}\n\n\t\tfunction refreshUniformsDash(uniforms, material) {\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\t\t}\n\n\t\tfunction refreshUniformsPoints(uniforms, material, pixelRatio, height) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * pixelRatio;\n\t\t\tuniforms.scale.value = height * 0.5;\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (material.alphaTest > 0) {\n\t\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsSprites(uniforms, material) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.rotation.value = material.rotation;\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (material.alphaTest > 0) {\n\t\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsLambert(uniforms, material) {\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsPhong(uniforms, material) {\n\t\t\tuniforms.specular.value.copy(material.specular);\n\t\t\tuniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsToon(uniforms, material) {\n\t\t\tif (material.gradientMap) {\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\t\t\t}\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsStandard(uniforms, material) {\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif (material.roughnessMap) {\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\t\t\t}\n\n\t\t\tif (material.metalnessMap) {\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\t\t\t}\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\n\t\t\tconst envMap = properties.get(material).envMap;\n\n\t\t\tif (envMap) {\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsPhysical(uniforms, material, transmissionRenderTarget) {\n\t\t\trefreshUniformsStandard(uniforms, material);\n\t\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\t\tif (material.sheen > 0) {\n\t\t\t\tuniforms.sheenTint.value.copy(material.sheenTint).multiplyScalar(material.sheen);\n\t\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\t\t\t}\n\n\t\t\tif (material.clearcoat > 0) {\n\t\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\t\tif (material.clearcoatMap) {\n\t\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\t\t\t\t}\n\n\t\t\t\tif (material.clearcoatRoughnessMap) {\n\t\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\t\t\t\t}\n\n\t\t\t\tif (material.clearcoatNormalMap) {\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);\n\t\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\t\tif (material.side === BackSide) {\n\t\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (material.transmission > 0) {\n\t\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\t\tuniforms.transmissionSamplerSize.value.set(transmissionRenderTarget.width, transmissionRenderTarget.height);\n\n\t\t\t\tif (material.transmissionMap) {\n\t\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\t\t\t\t}\n\n\t\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\t\tif (material.thicknessMap) {\n\t\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\t\t\t\t}\n\n\t\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\t\tuniforms.attenuationTint.value.copy(material.attenuationTint);\n\t\t\t}\n\n\t\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\t\tuniforms.specularTint.value.copy(material.specularTint);\n\n\t\t\tif (material.specularIntensityMap) {\n\t\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\t\t\t}\n\n\t\t\tif (material.specularTintMap) {\n\t\t\t\tuniforms.specularTintMap.value = material.specularTintMap;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsMatcap(uniforms, material) {\n\t\t\tif (material.matcap) {\n\t\t\t\tuniforms.matcap.value = material.matcap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsDepth(uniforms, material) {\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsDistance(uniforms, material) {\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\n\t\t\tuniforms.referencePosition.value.copy(material.referencePosition);\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\t\tuniforms.farDistance.value = material.farDistance;\n\t\t}\n\n\t\tfunction refreshUniformsNormal(uniforms, material) {\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trefreshFogUniforms: refreshFogUniforms,\n\t\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t\t};\n\t}\n\n\tfunction createCanvasElement() {\n\t\tconst canvas = createElementNS('canvas');\n\t\tcanvas.style.display = 'block';\n\t\treturn canvas;\n\t}\n\n\tfunction WebGLRenderer(parameters = {}) {\n\t\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\t\t\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t\t\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null; // render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = []; // public properties\n\n\t\tthis.domElement = _canvas; // Debug configuration container\n\n\t\tthis.debug = {\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true\n\t\t}; // clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true; // scene graph\n\n\t\tthis.sortObjects = true; // user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false; // physically based shading\n\n\t\tthis.gammaFactor = 2.0; // for backwards compatibility\n\n\t\tthis.outputEncoding = LinearEncoding; // physical lights\n\n\t\tthis.physicallyCorrectLights = false; // tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0; // internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false; // internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\n\t\tlet _currentMaterialId = -1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\n\t\tconst _currentScissor = new Vector4();\n\n\t\tlet _currentScissorTest = null; //\n\n\t\tlet _width = _canvas.width;\n\t\tlet _height = _canvas.height;\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4(0, 0, _width, _height);\n\n\t\tconst _scissor = new Vector4(0, 0, _width, _height);\n\n\t\tlet _scissorTest = false; //\n\n\t\tconst _currentDrawBuffers = []; // frustum\n\n\t\tconst _frustum = new Frustum(); // clipping\n\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false; // transmission\n\n\t\tlet _transmissionRenderTarget = null; // camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = {\n\t\t\tbackground: null,\n\t\t\tfog: null,\n\t\t\tenvironment: null,\n\t\t\toverrideMaterial: null,\n\t\t\tisScene: true\n\t\t};\n\n\t\tfunction getTargetPixelRatio() {\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\t\t} // initialize\n\n\n\t\tlet _gl = _context;\n\n\t\tfunction getContext(contextNames, contextAttributes) {\n\t\t\tfor (let i = 0; i < contextNames.length; i++) {\n\t\t\t\tconst contextName = contextNames[i];\n\n\t\t\t\tconst context = _canvas.getContext(contextName, contextAttributes);\n\n\t\t\t\tif (context !== null) return context;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\ttry {\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\t\tpowerPreference: _powerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t\t}; // event listeners must be registered before WebGL context is created, see #12753\n\n\t\t\t_canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n\t\t\t_canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n\n\t\t\tif (_gl === null) {\n\t\t\t\tconst contextNames = ['webgl2', 'webgl', 'experimental-webgl'];\n\n\t\t\t\tif (_this.isWebGL1Renderer === true) {\n\t\t\t\t\tcontextNames.shift();\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext(contextNames, contextAttributes);\n\n\t\t\t\tif (_gl === null) {\n\t\t\t\t\tif (getContext(contextNames)) {\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context with your selected attributes.');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n\t\t\tif (_gl.getShaderPrecisionFormat === undefined) {\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'rangeMin': 1,\n\t\t\t\t\t\t'rangeMax': 1,\n\t\t\t\t\t\t'precision': 1\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('THREE.WebGLRenderer: ' + error.message);\n\t\t\tthrow error;\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\t\tlet utils, bindingStates;\n\n\t\tfunction initGLContext() {\n\t\t\textensions = new WebGLExtensions(_gl);\n\t\t\tcapabilities = new WebGLCapabilities(_gl, extensions, parameters);\n\t\t\textensions.init(capabilities);\n\t\t\tutils = new WebGLUtils(_gl, extensions, capabilities);\n\t\t\tstate = new WebGLState(_gl, extensions, capabilities);\n\t\t\t_currentDrawBuffers[0] = _gl.BACK;\n\t\t\tinfo = new WebGLInfo(_gl);\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\n\t\t\tcubemaps = new WebGLCubeMaps(_this);\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps(_this);\n\t\t\tattributes = new WebGLAttributes(_gl, capabilities);\n\t\t\tbindingStates = new WebGLBindingStates(_gl, extensions, attributes, capabilities);\n\t\t\tgeometries = new WebGLGeometries(_gl, attributes, info, bindingStates);\n\t\t\tobjects = new WebGLObjects(_gl, geometries, attributes, info);\n\t\t\tmorphtargets = new WebGLMorphtargets(_gl, capabilities, textures);\n\t\t\tclipping = new WebGLClipping(properties);\n\t\t\tprogramCache = new WebGLPrograms(_this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping);\n\t\t\tmaterials = new WebGLMaterials(properties);\n\t\t\trenderLists = new WebGLRenderLists(properties);\n\t\t\trenderStates = new WebGLRenderStates(extensions, capabilities);\n\t\t\tbackground = new WebGLBackground(_this, cubemaps, state, objects, _premultipliedAlpha);\n\t\t\tshadowMap = new WebGLShadowMap(_this, objects, capabilities);\n\t\t\tbufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\n\t\t\tinfo.programs = programCache.programs;\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\t\t}\n\n\t\tinitGLContext(); // xr\n\n\t\tconst xr = new WebXRManager(_this, _gl);\n\t\tthis.xr = xr; // API\n\n\t\tthis.getContext = function () {\n\t\t\treturn _gl;\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\t\t\treturn _gl.getContextAttributes();\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\t\t\tconst extension = extensions.get('WEBGL_lose_context');\n\t\t\tif (extension) extension.loseContext();\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\t\t\tconst extension = extensions.get('WEBGL_lose_context');\n\t\t\tif (extension) extension.restoreContext();\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\t\t\treturn _pixelRatio;\n\t\t};\n\n\t\tthis.setPixelRatio = function (value) {\n\t\t\tif (value === undefined) return;\n\t\t\t_pixelRatio = value;\n\t\t\tthis.setSize(_width, _height, false);\n\t\t};\n\n\t\tthis.getSize = function (target) {\n\t\t\treturn target.set(_width, _height);\n\t\t};\n\n\t\tthis.setSize = function (width, height, updateStyle) {\n\t\t\tif (xr.isPresenting) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_canvas.width = Math.floor(width * _pixelRatio);\n\t\t\t_canvas.height = Math.floor(height * _pixelRatio);\n\n\t\t\tif (updateStyle !== false) {\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\t\t\t}\n\n\t\t\tthis.setViewport(0, 0, width, height);\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function (target) {\n\t\t\treturn target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function (width, height, pixelRatio) {\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_pixelRatio = pixelRatio;\n\t\t\t_canvas.width = Math.floor(width * pixelRatio);\n\t\t\t_canvas.height = Math.floor(height * pixelRatio);\n\t\t\tthis.setViewport(0, 0, width, height);\n\t\t};\n\n\t\tthis.getCurrentViewport = function (target) {\n\t\t\treturn target.copy(_currentViewport);\n\t\t};\n\n\t\tthis.getViewport = function (target) {\n\t\t\treturn target.copy(_viewport);\n\t\t};\n\n\t\tthis.setViewport = function (x, y, width, height) {\n\t\t\tif (x.isVector4) {\n\t\t\t\t_viewport.set(x.x, x.y, x.z, x.w);\n\t\t\t} else {\n\t\t\t\t_viewport.set(x, y, width, height);\n\t\t\t}\n\n\t\t\tstate.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\n\t\t};\n\n\t\tthis.getScissor = function (target) {\n\t\t\treturn target.copy(_scissor);\n\t\t};\n\n\t\tthis.setScissor = function (x, y, width, height) {\n\t\t\tif (x.isVector4) {\n\t\t\t\t_scissor.set(x.x, x.y, x.z, x.w);\n\t\t\t} else {\n\t\t\t\t_scissor.set(x, y, width, height);\n\t\t\t}\n\n\t\t\tstate.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\t\t\treturn _scissorTest;\n\t\t};\n\n\t\tthis.setScissorTest = function (boolean) {\n\t\t\tstate.setScissorTest(_scissorTest = boolean);\n\t\t};\n\n\t\tthis.setOpaqueSort = function (method) {\n\t\t\t_opaqueSort = method;\n\t\t};\n\n\t\tthis.setTransparentSort = function (method) {\n\t\t\t_transparentSort = method;\n\t\t}; // Clearing\n\n\n\t\tthis.getClearColor = function (target) {\n\t\t\treturn target.copy(background.getClearColor());\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\t\t\tbackground.setClearColor.apply(background, arguments);\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\t\t\treturn background.getClearAlpha();\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\t\t\tbackground.setClearAlpha.apply(background, arguments);\n\t\t};\n\n\t\tthis.clear = function (color, depth, stencil) {\n\t\t\tlet bits = 0;\n\t\t\tif (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\tif (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear(bits);\n\t\t};\n\n\t\tthis.clearColor = function () {\n\t\t\tthis.clear(true, false, false);\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\t\t\tthis.clear(false, true, false);\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\t\t\tthis.clear(false, false, true);\n\t\t};\n\n\t\tthis.getTransmissionRenderTarget = function () {\n\t\t\tif (_transmissionRenderTarget === null) {\n\t\t\t\tconst needsAntialias = _antialias === true && capabilities.isWebGL2 === true;\n\t\t\t\tconst renderTargetType = needsAntialias ? WebGLMultisampleRenderTarget : WebGLRenderTarget;\n\t\t\t\t_transmissionRenderTarget = new renderTargetType(1024, 1024, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: utils.convert(HalfFloatType) !== null ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tmagFilter: LinearFilter,\n\t\t\t\t\twrapS: ClampToEdgeWrapping,\n\t\t\t\t\twrapT: ClampToEdgeWrapping\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn _transmissionRenderTarget;\n\t\t}; //\n\n\n\t\tthis.dispose = function () {\n\t\t\t_canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n\t\t\t_canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\txr.dispose();\n\t\t\txr.removeEventListener('sessionstart', onXRSessionStart);\n\t\t\txr.removeEventListener('sessionend', onXRSessionEnd);\n\n\t\t\tif (_transmissionRenderTarget) {\n\t\t\t\t_transmissionRenderTarget.dispose();\n\n\t\t\t\t_transmissionRenderTarget = null;\n\t\t\t}\n\n\t\t\tanimation.stop();\n\t\t}; // Events\n\n\n\t\tfunction onContextLost(event) {\n\t\t\tevent.preventDefault();\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Lost.');\n\t\t\t_isContextLost = true;\n\t\t}\n\n\t\tfunction onContextRestore() {\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Restored.');\n\t\t\t_isContextLost = false;\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\t\t\tinitGLContext();\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\t\t}\n\n\t\tfunction onMaterialDispose(event) {\n\t\t\tconst material = event.target;\n\t\t\tmaterial.removeEventListener('dispose', onMaterialDispose);\n\t\t\tdeallocateMaterial(material);\n\t\t} // Buffer deallocation\n\n\n\t\tfunction deallocateMaterial(material) {\n\t\t\treleaseMaterialProgramReferences(material);\n\t\t\tproperties.remove(material);\n\t\t}\n\n\t\tfunction releaseMaterialProgramReferences(material) {\n\t\t\tconst programs = properties.get(material).programs;\n\n\t\t\tif (programs !== undefined) {\n\t\t\t\tprograms.forEach(function (program) {\n\t\t\t\t\tprogramCache.releaseProgram(program);\n\t\t\t\t});\n\t\t\t}\n\t\t} // Buffer rendering\n\n\n\t\tthis.renderBufferDirect = function (camera, scene, geometry, material, object, group) {\n\t\t\tif (scene === null) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\n\t\t\tconst program = setProgram(camera, scene, geometry, material, object);\n\t\t\tstate.setMaterial(material, frontFaceCW); //\n\n\t\t\tlet index = geometry.index;\n\t\t\tconst position = geometry.attributes.position; //\n\n\t\t\tif (index === null) {\n\t\t\t\tif (position === undefined || position.count === 0) return;\n\t\t\t} else if (index.count === 0) {\n\t\t\t\treturn;\n\t\t\t} //\n\n\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif (material.wireframe === true) {\n\t\t\t\tindex = geometries.getWireframeAttribute(geometry);\n\t\t\t\trangeFactor = 2;\n\t\t\t}\n\n\t\t\tbindingStates.setup(object, material, program, geometry, index);\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif (index !== null) {\n\t\t\t\tattribute = attributes.get(index);\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex(attribute);\n\t\t\t} //\n\n\n\t\t\tconst dataCount = index !== null ? index.count : position.count;\n\t\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\t\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\t\t\tconst drawStart = Math.max(rangeStart, groupStart);\n\t\t\tconst drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n\t\t\tconst drawCount = Math.max(0, drawEnd - drawStart + 1);\n\t\t\tif (drawCount === 0) return; //\n\n\t\t\tif (object.isMesh) {\n\t\t\t\tif (material.wireframe === true) {\n\t\t\t\t\tstate.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n\t\t\t\t\trenderer.setMode(_gl.LINES);\n\t\t\t\t} else {\n\t\t\t\t\trenderer.setMode(_gl.TRIANGLES);\n\t\t\t\t}\n\t\t\t} else if (object.isLine) {\n\t\t\t\tlet lineWidth = material.linewidth;\n\t\t\t\tif (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth(lineWidth * getTargetPixelRatio());\n\n\t\t\t\tif (object.isLineSegments) {\n\t\t\t\t\trenderer.setMode(_gl.LINES);\n\t\t\t\t} else if (object.isLineLoop) {\n\t\t\t\t\trenderer.setMode(_gl.LINE_LOOP);\n\t\t\t\t} else {\n\t\t\t\t\trenderer.setMode(_gl.LINE_STRIP);\n\t\t\t\t}\n\t\t\t} else if (object.isPoints) {\n\t\t\t\trenderer.setMode(_gl.POINTS);\n\t\t\t} else if (object.isSprite) {\n\t\t\t\trenderer.setMode(_gl.TRIANGLES);\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh) {\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, object.count);\n\t\t\t} else if (geometry.isInstancedBufferGeometry) {\n\t\t\t\tconst instanceCount = Math.min(geometry.instanceCount, geometry._maxInstanceCount);\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, instanceCount);\n\t\t\t} else {\n\t\t\t\trenderer.render(drawStart, drawCount);\n\t\t\t}\n\t\t}; // Compile\n\n\n\t\tthis.compile = function (scene, camera) {\n\t\t\tcurrentRenderState = renderStates.get(scene);\n\t\t\tcurrentRenderState.init();\n\t\t\trenderStateStack.push(currentRenderState);\n\t\t\tscene.traverseVisible(function (object) {\n\t\t\t\tif (object.isLight && object.layers.test(camera.layers)) {\n\t\t\t\t\tcurrentRenderState.pushLight(object);\n\n\t\t\t\t\tif (object.castShadow) {\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tcurrentRenderState.setupLights(_this.physicallyCorrectLights);\n\t\t\tscene.traverse(function (object) {\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif (material) {\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0; i < material.length; i++) {\n\t\t\t\t\t\t\tconst material2 = material[i];\n\t\t\t\t\t\t\tgetProgram(material2, scene, object);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgetProgram(material, scene, object);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\t\t}; // Animation Loop\n\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame(time) {\n\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time);\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\t\t\tanimation.stop();\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\t\t\tanimation.start();\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop(onAnimationFrame);\n\t\tif (typeof window !== 'undefined') animation.setContext(window);\n\n\t\tthis.setAnimationLoop = function (callback) {\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop(callback);\n\t\t\tcallback === null ? animation.stop() : animation.start();\n\t\t};\n\n\t\txr.addEventListener('sessionstart', onXRSessionStart);\n\t\txr.addEventListener('sessionend', onXRSessionEnd); // Rendering\n\n\t\tthis.render = function (scene, camera) {\n\t\t\tif (camera !== undefined && camera.isCamera !== true) {\n\t\t\t\tconsole.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_isContextLost === true) return; // update scene graph\n\n\t\t\tif (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n\t\t\tif (camera.parent === null) camera.updateMatrixWorld();\n\n\t\t\tif (xr.enabled === true && xr.isPresenting === true) {\n\t\t\t\tif (xr.cameraAutoUpdate === true) xr.updateCamera(camera);\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\t\t\t} //\n\n\n\t\t\tif (scene.isScene === true) scene.onBeforeRender(_this, scene, camera, _currentRenderTarget);\n\t\t\tcurrentRenderState = renderStates.get(scene, renderStateStack.length);\n\t\t\tcurrentRenderState.init();\n\t\t\trenderStateStack.push(currentRenderState);\n\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n\t\t\t_frustum.setFromProjectionMatrix(_projScreenMatrix);\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n\t\t\tcurrentRenderList = renderLists.get(scene, renderListStack.length);\n\t\t\tcurrentRenderList.init();\n\t\t\trenderListStack.push(currentRenderList);\n\t\t\tprojectObject(scene, camera, 0, _this.sortObjects);\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif (_this.sortObjects === true) {\n\t\t\t\tcurrentRenderList.sort(_opaqueSort, _transparentSort);\n\t\t\t} //\n\n\n\t\t\tif (_clippingEnabled === true) clipping.beginShadows();\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\t\t\tshadowMap.render(shadowsArray, scene, camera);\n\t\t\tif (_clippingEnabled === true) clipping.endShadows(); //\n\n\t\t\tif (this.info.autoReset === true) this.info.reset(); //\n\n\t\t\tbackground.render(currentRenderList, scene); // render scene\n\n\t\t\tcurrentRenderState.setupLights(_this.physicallyCorrectLights);\n\n\t\t\tif (camera.isArrayCamera) {\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor (let i = 0, l = cameras.length; i < l; i++) {\n\t\t\t\t\tconst camera2 = cameras[i];\n\t\t\t\t\trenderScene(currentRenderList, scene, camera2, camera2.viewport);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trenderScene(currentRenderList, scene, camera);\n\t\t\t} //\n\n\n\t\t\tif (_currentRenderTarget !== null) {\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\t\t\t\ttextures.updateMultisampleRenderTarget(_currentRenderTarget); // Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap(_currentRenderTarget);\n\t\t\t} //\n\n\n\t\t\tif (scene.isScene === true) scene.onAfterRender(_this, scene, camera); // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest(true);\n\t\t\tstate.buffers.depth.setMask(true);\n\t\t\tstate.buffers.color.setMask(true);\n\t\t\tstate.setPolygonOffset(false); // _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = -1;\n\t\t\t_currentCamera = null;\n\t\t\trenderStateStack.pop();\n\n\t\t\tif (renderStateStack.length > 0) {\n\t\t\t\tcurrentRenderState = renderStateStack[renderStateStack.length - 1];\n\t\t\t} else {\n\t\t\t\tcurrentRenderState = null;\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif (renderListStack.length > 0) {\n\t\t\t\tcurrentRenderList = renderListStack[renderListStack.length - 1];\n\t\t\t} else {\n\t\t\t\tcurrentRenderList = null;\n\t\t\t}\n\t\t};\n\n\t\tfunction projectObject(object, camera, groupOrder, sortObjects) {\n\t\t\tif (object.visible === false) return;\n\t\t\tconst visible = object.layers.test(camera.layers);\n\n\t\t\tif (visible) {\n\t\t\t\tif (object.isGroup) {\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\t\t\t\t} else if (object.isLOD) {\n\t\t\t\t\tif (object.autoUpdate === true) object.update(camera);\n\t\t\t\t} else if (object.isLight) {\n\t\t\t\t\tcurrentRenderState.pushLight(object);\n\n\t\t\t\t\tif (object.castShadow) {\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\n\t\t\t\t\t}\n\t\t\t\t} else if (object.isSprite) {\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n\t\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update(object);\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif (material.visible) {\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (object.isMesh || object.isLine || object.isPoints) {\n\t\t\t\t\tif (object.isSkinnedMesh) {\n\t\t\t\t\t\t// update skeleton only once in a frame\n\t\t\t\t\t\tif (object.skeleton.frame !== info.render.frame) {\n\t\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsObject(object)) {\n\t\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update(object);\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\n\t\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, groupMaterial, groupOrder, _vector3.z, group);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (material.visible) {\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tprojectObject(children[i], camera, groupOrder, sortObjects);\n\t\t\t}\n\t\t}\n\n\t\tfunction renderScene(currentRenderList, scene, camera, viewport) {\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\t\t\tcurrentRenderState.setupLightsView(camera);\n\t\t\tif (transmissiveObjects.length > 0) renderTransmissionPass(opaqueObjects, scene, camera);\n\t\t\tif (viewport) state.viewport(_currentViewport.copy(viewport));\n\t\t\tif (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);\n\t\t\tif (transmissiveObjects.length > 0) renderObjects(transmissiveObjects, scene, camera);\n\t\t\tif (transparentObjects.length > 0) renderObjects(transparentObjects, scene, camera);\n\t\t}\n\n\t\tfunction renderTransmissionPass(opaqueObjects, scene, camera) {\n\t\t\tconst transmissionRenderTarget = _this.getTransmissionRenderTarget();\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\n\t\t\t_this.setRenderTarget(transmissionRenderTarget);\n\n\t\t\t_this.clear(); // Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\n\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\t\t\trenderObjects(opaqueObjects, scene, camera);\n\t\t\t_this.toneMapping = currentToneMapping;\n\t\t\ttextures.updateMultisampleRenderTarget(transmissionRenderTarget);\n\t\t\ttextures.updateRenderTargetMipmap(transmissionRenderTarget);\n\n\t\t\t_this.setRenderTarget(currentRenderTarget);\n\t\t}\n\n\t\tfunction renderObjects(renderList, scene, camera) {\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor (let i = 0, l = renderList.length; i < l; i++) {\n\t\t\t\tconst renderItem = renderList[i];\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif (object.layers.test(camera.layers)) {\n\t\t\t\t\trenderObject(object, scene, camera, geometry, material, group);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction renderObject(object, scene, camera, geometry, material, group) {\n\t\t\tobject.onBeforeRender(_this, scene, camera, geometry, material, group);\n\t\t\tobject.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n\t\t\tobject.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\t\t\tmaterial.onBeforeRender(_this, scene, camera, geometry, object, group);\n\n\t\t\tif (material.transparent === true && material.side === DoubleSide) {\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n\t\t\t\tmaterial.side = DoubleSide;\n\t\t\t} else {\n\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\t\t\t}\n\n\t\t\tobject.onAfterRender(_this, scene, camera, geometry, material, group);\n\t\t}\n\n\t\tfunction getProgram(material, scene, object) {\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\t\t\tconst lightsStateVersion = lights.state.version;\n\t\t\tconst parameters = programCache.getParameters(material, lights.state, shadowsArray, scene, object);\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey(parameters);\n\t\t\tlet programs = materialProperties.programs; // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || materialProperties.environment);\n\n\t\t\tif (programs === undefined) {\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener('dispose', onMaterialDispose);\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\t\t\t}\n\n\t\t\tlet program = programs.get(programCacheKey);\n\n\t\t\tif (program !== undefined) {\n\t\t\t\t// early out if program and light state is identical\n\t\t\t\tif (materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion) {\n\t\t\t\t\tupdateCommonMaterialProperties(material, parameters);\n\t\t\t\t\treturn program;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tparameters.uniforms = programCache.getUniforms(material);\n\t\t\t\tmaterial.onBuild(object, parameters, _this);\n\t\t\t\tmaterial.onBeforeCompile(parameters, _this);\n\t\t\t\tprogram = programCache.acquireProgram(parameters, programCacheKey);\n\t\t\t\tprograms.set(programCacheKey, program);\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties(material, parameters); // store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights(material);\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif (materialProperties.needsLights) {\n\t\t\t\t// wire up the material to this renderer's lighting state\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n\t\t\t}\n\n\t\t\tconst progUniforms = program.getUniforms();\n\t\t\tconst uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\t\t\treturn program;\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties(material, parameters) {\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t}\n\n\t\tfunction setProgram(camera, scene, geometry, material, object) {\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst encoding = _currentRenderTarget === null ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\t\t\tconst envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\n\t\t\tconst vertexAlphas = material.vertexColors === true && !!geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !!material.normalMap && !!geometry.attributes.tangent;\n\t\t\tconst morphTargets = !!geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !!geometry.morphAttributes.normal;\n\t\t\tconst morphTargetsCount = !!geometry.morphAttributes.position ? geometry.morphAttributes.position.length : 0;\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif (_clippingEnabled === true) {\n\t\t\t\tif (_localClippingEnabled === true || camera !== _currentCamera) {\n\t\t\t\t\tconst useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\n\t\t\t\t\tclipping.setState(material, camera, useCache);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif (material.version === materialProperties.__version) {\n\t\t\t\tif (materialProperties.needsLights && materialProperties.lightsStateVersion !== lights.state.version) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.outputEncoding !== encoding) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (object.isInstancedMesh && materialProperties.instancing === false) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (!object.isInstancedMesh && materialProperties.instancing === true) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (object.isSkinnedMesh && materialProperties.skinning === false) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (!object.isSkinnedMesh && materialProperties.skinning === true) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.envMap !== envMap) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (material.fog && materialProperties.fog !== fog) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== clipping.numPlanes || materialProperties.numIntersection !== clipping.numIntersection)) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.vertexAlphas !== vertexAlphas) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.vertexTangents !== vertexTangents) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.morphTargets !== morphTargets) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.morphNormals !== morphNormals) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\t\t\t} //\n\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif (needsProgramChange === true) {\n\t\t\t\tprogram = getProgram(material, scene, object);\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif (state.useProgram(program.program)) {\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\t\t\t}\n\n\t\t\tif (material.id !== _currentMaterialId) {\n\t\t\t\t_currentMaterialId = material.id;\n\t\t\t\trefreshMaterial = true;\n\t\t\t}\n\n\t\t\tif (refreshProgram || _currentCamera !== camera) {\n\t\t\t\tp_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n\t\t\t\tif (capabilities.logarithmicDepthBuffer) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n\t\t\t\t}\n\n\t\t\t\tif (_currentCamera !== camera) {\n\t\t\t\t\t_currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true; // set to true on material change\n\n\t\t\t\t\trefreshLights = true; // remains set until update done\n\t\t\t\t} // load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\n\t\t\t\tif (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshStandardMaterial || material.envMap) {\n\t\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif (uCamPos !== undefined) {\n\t\t\t\t\t\tuCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'isOrthographic', camera.isOrthographicCamera === true);\n\t\t\t\t}\n\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.isShadowMaterial || object.isSkinnedMesh) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n\t\t\t\t}\n\t\t\t} // skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\n\t\t\tif (object.isSkinnedMesh) {\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrix');\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif (skeleton) {\n\t\t\t\t\tif (capabilities.floatVertexTextures) {\n\t\t\t\t\t\tif (skeleton.boneTexture === null) skeleton.computeBoneTexture();\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture, textures);\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!!geometry && (geometry.morphAttributes.position !== undefined || geometry.morphAttributes.normal !== undefined)) {\n\t\t\t\tmorphtargets.update(object, geometry, material, program);\n\t\t\t}\n\n\t\t\tif (refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow) {\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue(_gl, 'receiveShadow', object.receiveShadow);\n\t\t\t}\n\n\t\t\tif (refreshMaterial) {\n\t\t\t\tp_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n\n\t\t\t\tif (materialProperties.needsLights) {\n\t\t\t\t\t// the current material requires lighting info\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n\t\t\t\t} // refresh uniforms common to several materials\n\n\n\t\t\t\tif (fog && material.fog) {\n\t\t\t\t\tmaterials.refreshFogUniforms(m_uniforms, fog);\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms(m_uniforms, material, _pixelRatio, _height, _this.getTransmissionRenderTarget());\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\t\t\t}\n\n\t\t\tif (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\t\t\t}\n\n\t\t\tif (material.isSpriteMaterial) {\n\t\t\t\tp_uniforms.setValue(_gl, 'center', object.center);\n\t\t\t} // common matrices\n\n\n\t\t\tp_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n\t\t\tp_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n\t\t\tp_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n\t\t\treturn program;\n\t\t} // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n\t\tfunction markUniformsLightsNeedsUpdate(uniforms, value) {\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\t\t}\n\n\t\tfunction materialNeedsLights(material) {\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isShadowMaterial || material.isShaderMaterial && material.lights === true;\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\t\t\treturn _currentActiveCubeFace;\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\t\t\treturn _currentActiveMipmapLevel;\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\t\t\treturn _currentRenderTarget;\n\t\t};\n\n\t\tthis.setRenderTarget = function (renderTarget, activeCubeFace = 0, activeMipmapLevel = 0) {\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tif (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n\t\t\t\ttextures.setupRenderTarget(renderTarget);\n\t\t\t}\n\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif (renderTarget) {\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif (texture.isDataTexture3D || texture.isDataTexture2DArray) {\n\t\t\t\t\tisRenderTarget3D = true;\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n\t\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\n\t\t\t\t\tframebuffer = __webglFramebuffer[activeCubeFace];\n\t\t\t\t\tisCube = true;\n\t\t\t\t} else if (renderTarget.isWebGLMultisampleRenderTarget) {\n\t\t\t\t\tframebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;\n\t\t\t\t} else {\n\t\t\t\t\tframebuffer = __webglFramebuffer;\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy(renderTarget.viewport);\n\n\t\t\t\t_currentScissor.copy(renderTarget.scissor);\n\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\t\t\t} else {\n\t\t\t\t_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\n\n\t\t\t\t_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\n\n\t\t\t\t_currentScissorTest = _scissorTest;\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\tif (framebufferBound && capabilities.drawBuffers) {\n\t\t\t\tlet needsUpdate = false;\n\n\t\t\t\tif (renderTarget) {\n\t\t\t\t\tif (renderTarget.isWebGLMultipleRenderTargets) {\n\t\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\t\tif (_currentDrawBuffers.length !== textures.length || _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0) {\n\t\t\t\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\t\t\t\t_currentDrawBuffers[i] = _gl.COLOR_ATTACHMENT0 + i;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_currentDrawBuffers.length = textures.length;\n\t\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0) {\n\t\t\t\t\t\t\t_currentDrawBuffers[0] = _gl.COLOR_ATTACHMENT0;\n\t\t\t\t\t\t\t_currentDrawBuffers.length = 1;\n\t\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.BACK) {\n\t\t\t\t\t\t_currentDrawBuffers[0] = _gl.BACK;\n\t\t\t\t\t\t_currentDrawBuffers.length = 1;\n\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (needsUpdate) {\n\t\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\t\t_gl.drawBuffers(_currentDrawBuffers);\n\t\t\t\t\t} else {\n\t\t\t\t\t\textensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(_currentDrawBuffers);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.viewport(_currentViewport);\n\t\t\tstate.scissor(_currentScissor);\n\t\t\tstate.setScissorTest(_currentScissorTest);\n\n\t\t\tif (isCube) {\n\t\t\t\tconst textureProperties = properties.get(renderTarget.texture);\n\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel);\n\t\t\t} else if (isRenderTarget3D) {\n\t\t\t\tconst textureProperties = properties.get(renderTarget.texture);\n\t\t\t\tconst layer = activeCubeFace || 0;\n\n\t\t\t\t_gl.framebufferTextureLayer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer);\n\t\t\t}\n\n\t\t\t_currentMaterialId = -1; // reset current material to ensure correct uniform bindings\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer, activeCubeFaceIndex) {\n\t\t\tif (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined) {\n\t\t\t\tframebuffer = framebuffer[activeCubeFaceIndex];\n\t\t\t}\n\n\t\t\tif (framebuffer) {\n\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = textureType === HalfFloatType && (extensions.has('EXT_color_buffer_half_float') || capabilities.isWebGL2 && extensions.has('EXT_color_buffer_float'));\n\n\t\t\t\t\tif (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t!(textureType === FloatType && (capabilities.isWebGL2 || extensions.has('OES_texture_float') || extensions.has('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t!halfFloatSupportedByExt) {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\t\t\tif (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n\t\t\t\t\t\t\t_gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\t\t\t\t\tconst framebuffer = _currentRenderTarget !== null ? properties.get(_currentRenderTarget).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function (position, texture, level = 0) {\n\t\t\tconst levelScale = Math.pow(2, -level);\n\t\t\tconst width = Math.floor(texture.image.width * levelScale);\n\t\t\tconst height = Math.floor(texture.image.height * levelScale);\n\t\t\tlet glFormat = utils.convert(texture.format);\n\n\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\n\t\t\t\t// Not needed in Chrome 93+\n\t\t\t\tif (glFormat === _gl.RGB) glFormat = _gl.RGB8;\n\t\t\t\tif (glFormat === _gl.RGBA) glFormat = _gl.RGBA8;\n\t\t\t}\n\n\t\t\ttextures.setTexture2D(texture, 0);\n\n\t\t\t_gl.copyTexImage2D(_gl.TEXTURE_2D, level, glFormat, position.x, position.y, width, height, 0);\n\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.copyTextureToTexture = function (position, srcTexture, dstTexture, level = 0) {\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert(dstTexture.format);\n\t\t\tconst glType = utils.convert(dstTexture.type);\n\t\t\ttextures.setTexture2D(dstTexture, 0); // As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n\t\t\tif (srcTexture.isDataTexture) {\n\t\t\t\t_gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\n\t\t\t} else {\n\t\t\t\tif (srcTexture.isCompressedTexture) {\n\t\t\t\t\t_gl.compressedTexSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[0].width, srcTexture.mipmaps[0].height, glFormat, srcTexture.mipmaps[0].data);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image);\n\t\t\t\t}\n\t\t\t} // Generate mipmaps only when copying level 0\n\n\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(_gl.TEXTURE_2D);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function (sourceBox, position, srcTexture, dstTexture, level = 0) {\n\t\t\tif (_this.isWebGL1Renderer) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert(dstTexture.format);\n\t\t\tconst glType = utils.convert(dstTexture.type);\n\t\t\tlet glTarget;\n\n\t\t\tif (dstTexture.isDataTexture3D) {\n\t\t\t\ttextures.setTexture3D(dstTexture, 0);\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\t\t\t} else if (dstTexture.isDataTexture2DArray) {\n\t\t\t\ttextures.setTexture2DArray(dstTexture, 0);\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n\t\t\tconst unpackRowLen = _gl.getParameter(_gl.UNPACK_ROW_LENGTH);\n\n\t\t\tconst unpackImageHeight = _gl.getParameter(_gl.UNPACK_IMAGE_HEIGHT);\n\n\t\t\tconst unpackSkipPixels = _gl.getParameter(_gl.UNPACK_SKIP_PIXELS);\n\n\t\t\tconst unpackSkipRows = _gl.getParameter(_gl.UNPACK_SKIP_ROWS);\n\n\t\t\tconst unpackSkipImages = _gl.getParameter(_gl.UNPACK_SKIP_IMAGES);\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[0] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, image.width);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, image.height);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, sourceBox.min.x);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, sourceBox.min.y);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, sourceBox.min.z);\n\n\t\t\tif (srcTexture.isDataTexture || srcTexture.isDataTexture3D) {\n\t\t\t\t_gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data);\n\t\t\t} else {\n\t\t\t\tif (srcTexture.isCompressedTexture) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.');\n\n\t\t\t\t\t_gl.compressedTexSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, unpackRowLen);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, unpackSkipPixels);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, unpackSkipRows);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, unpackSkipImages); // Generate mipmaps only when copying level 0\n\n\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(glTarget);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.initTexture = function (texture) {\n\t\t\ttextures.setTexture2D(texture, 0);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.resetState = function () {\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\t\t};\n\n\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n\t\t\t\tdetail: this\n\t\t\t})); // eslint-disable-line no-undef\n\n\t\t}\n\t}\n\n\tWebGLRenderer.prototype.isWebGLRenderer = true;\n\n\tclass WebGL1Renderer extends WebGLRenderer {}\n\n\tWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\n\tclass FogExp2 {\n\t\tconstructor(color, density = 0.00025) {\n\t\t\tthis.name = '';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.density = density;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new FogExp2(this.color, this.density);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn {\n\t\t\t\ttype: 'FogExp2',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tdensity: this.density\n\t\t\t};\n\t\t}\n\n\t}\n\n\tFogExp2.prototype.isFogExp2 = true;\n\n\tclass Fog {\n\t\tconstructor(color, near = 1, far = 1000) {\n\t\t\tthis.name = '';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Fog(this.color, this.near, this.far);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn {\n\t\t\t\ttype: 'Fog',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tnear: this.near,\n\t\t\t\tfar: this.far\n\t\t\t};\n\t\t}\n\n\t}\n\n\tFog.prototype.isFog = true;\n\n\tclass Scene extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Scene';\n\t\t\tthis.background = null;\n\t\t\tthis.environment = null;\n\t\t\tthis.fog = null;\n\t\t\tthis.overrideMaterial = null;\n\t\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n\t\t\t\t\tdetail: this\n\t\t\t\t})); // eslint-disable-line no-undef\n\n\t\t\t}\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tif (source.background !== null) this.background = source.background.clone();\n\t\t\tif (source.environment !== null) this.environment = source.environment.clone();\n\t\t\tif (source.fog !== null) this.fog = source.fog.clone();\n\t\t\tif (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tif (this.fog !== null) data.object.fog = this.fog.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tScene.prototype.isScene = true;\n\n\tclass InterleavedBuffer {\n\t\tconstructor(array, stride) {\n\t\t\tthis.array = array;\n\t\t\tthis.stride = stride;\n\t\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\t\t\tthis.usage = StaticDrawUsage;\n\t\t\tthis.updateRange = {\n\t\t\t\toffset: 0,\n\t\t\t\tcount: -1\n\t\t\t};\n\t\t\tthis.version = 0;\n\t\t\tthis.uuid = generateUUID();\n\t\t}\n\n\t\tonUploadCallback() {}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetUsage(value) {\n\t\t\tthis.usage = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.array = new source.array.constructor(source.array);\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.usage = source.usage;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyAt(index1, attribute, index2) {\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor (let i = 0, l = this.stride; i < l; i++) {\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(value, offset = 0) {\n\t\t\tthis.array.set(value, offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tif (data.arrayBuffers === undefined) {\n\t\t\t\tdata.arrayBuffers = {};\n\t\t\t}\n\n\t\t\tif (this.array.buffer._uuid === undefined) {\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\n\t\t\t}\n\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer;\n\t\t\t}\n\n\t\t\tconst array = new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);\n\t\t\tconst ib = new this.constructor(array, this.stride);\n\t\t\tib.setUsage(this.usage);\n\t\t\treturn ib;\n\t\t}\n\n\t\tonUpload(callback) {\n\t\t\tthis.onUploadCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tif (data.arrayBuffers === undefined) {\n\t\t\t\tdata.arrayBuffers = {};\n\t\t\t} // generate UUID for array buffer if necessary\n\n\n\t\t\tif (this.array.buffer._uuid === undefined) {\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\n\t\t\t}\n\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer));\n\t\t\t} //\n\n\n\t\t\treturn {\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tstride: this.stride\n\t\t\t};\n\t\t}\n\n\t}\n\n\tInterleavedBuffer.prototype.isInterleavedBuffer = true;\n\n\tconst _vector$6 = /*@__PURE__*/new Vector3();\n\n\tclass InterleavedBufferAttribute {\n\t\tconstructor(interleavedBuffer, itemSize, offset, normalized = false) {\n\t\t\tthis.name = '';\n\t\t\tthis.data = interleavedBuffer;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.offset = offset;\n\t\t\tthis.normalized = normalized === true;\n\t\t}\n\n\t\tget count() {\n\t\t\treturn this.data.count;\n\t\t}\n\n\t\tget array() {\n\t\t\treturn this.data.array;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tthis.data.needsUpdate = value;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tfor (let i = 0, l = this.data.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.applyMatrix4(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.applyNormalMatrix(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.transformDirection(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(index, x) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset] = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(index, y) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(index, z) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetW(index, w) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetX(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset];\n\t\t}\n\n\t\tgetY(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 1];\n\t\t}\n\n\t\tgetZ(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 2];\n\t\t}\n\n\t\tgetW(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 3];\n\t\t}\n\n\t\tsetXY(index, x, y) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZ(index, x, y, z) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\tthis.data.array[index + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZW(index, x, y, z, w) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\tthis.data.array[index + 2] = z;\n\t\t\tthis.data.array[index + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tif (data === undefined) {\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0; i < this.count; i++) {\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor (let j = 0; j < this.itemSize; j++) {\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute(new this.array.constructor(array), this.itemSize, this.normalized);\n\t\t\t} else {\n\t\t\t\tif (data.interleavedBuffers === undefined) {\n\t\t\t\t\tdata.interleavedBuffers = {};\n\t\t\t\t}\n\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.clone(data);\n\t\t\t\t}\n\n\t\t\t\treturn new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tif (data === undefined) {\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0; i < this.count; i++) {\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor (let j = 0; j < this.itemSize; j++) {\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\n\t\t\t\t\t}\n\t\t\t\t} // deinterleave data and save it as an ordinary buffer attribute for now\n\n\n\t\t\t\treturn {\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// save as true interlaved attribtue\n\t\t\t\tif (data.interleavedBuffers === undefined) {\n\t\t\t\t\tdata.interleavedBuffers = {};\n\t\t\t\t}\n\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.toJSON(data);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\tdata: this.data.uuid,\n\t\t\t\t\toffset: this.offset,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t}\n\n\tInterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\trotation: <float>,\n\t *\tsizeAttenuation: <bool>\n\t * }\n\t */\n\n\tclass SpriteMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SpriteMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.rotation = 0;\n\t\t\tthis.sizeAttenuation = true;\n\t\t\tthis.transparent = true;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.rotation = source.rotation;\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tlet _geometry;\n\n\tconst _intersectPoint = /*@__PURE__*/new Vector3();\n\n\tconst _worldScale = /*@__PURE__*/new Vector3();\n\n\tconst _mvPosition = /*@__PURE__*/new Vector3();\n\n\tconst _alignedPosition = /*@__PURE__*/new Vector2();\n\n\tconst _rotatedPosition = /*@__PURE__*/new Vector2();\n\n\tconst _viewWorldMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _vA = /*@__PURE__*/new Vector3();\n\n\tconst _vB = /*@__PURE__*/new Vector3();\n\n\tconst _vC = /*@__PURE__*/new Vector3();\n\n\tconst _uvA = /*@__PURE__*/new Vector2();\n\n\tconst _uvB = /*@__PURE__*/new Vector2();\n\n\tconst _uvC = /*@__PURE__*/new Vector2();\n\n\tclass Sprite extends Object3D {\n\t\tconstructor(material) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Sprite';\n\n\t\t\tif (_geometry === undefined) {\n\t\t\t\t_geometry = new BufferGeometry();\n\t\t\t\tconst float32Array = new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\n\t\t\t\tconst interleavedBuffer = new InterleavedBuffer(float32Array, 5);\n\n\t\t\t\t_geometry.setIndex([0, 1, 2, 0, 2, 3]);\n\n\t\t\t\t_geometry.setAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\n\n\t\t\t\t_geometry.setAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\n\t\t\t}\n\n\t\t\tthis.geometry = _geometry;\n\t\t\tthis.material = material !== undefined ? material : new SpriteMaterial();\n\t\t\tthis.center = new Vector2(0.5, 0.5);\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tif (raycaster.camera === null) {\n\t\t\t\tconsole.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');\n\t\t\t}\n\n\t\t\t_worldScale.setFromMatrixScale(this.matrixWorld);\n\n\t\t\t_viewWorldMatrix.copy(raycaster.camera.matrixWorld);\n\n\t\t\tthis.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse, this.matrixWorld);\n\n\t\t\t_mvPosition.setFromMatrixPosition(this.modelViewMatrix);\n\n\t\t\tif (raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false) {\n\t\t\t\t_worldScale.multiplyScalar(-_mvPosition.z);\n\t\t\t}\n\n\t\t\tconst rotation = this.material.rotation;\n\t\t\tlet sin, cos;\n\n\t\t\tif (rotation !== 0) {\n\t\t\t\tcos = Math.cos(rotation);\n\t\t\t\tsin = Math.sin(rotation);\n\t\t\t}\n\n\t\t\tconst center = this.center;\n\t\t\ttransformVertex(_vA.set(-0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\t\t\ttransformVertex(_vB.set(0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\t\t\ttransformVertex(_vC.set(0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n\t\t\t_uvA.set(0, 0);\n\n\t\t\t_uvB.set(1, 0);\n\n\t\t\t_uvC.set(1, 1); // check first triangle\n\n\n\t\t\tlet intersect = raycaster.ray.intersectTriangle(_vA, _vB, _vC, false, _intersectPoint);\n\n\t\t\tif (intersect === null) {\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex(_vB.set(-0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n\t\t\t\t_uvB.set(0, 1);\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle(_vA, _vC, _vB, false, _intersectPoint);\n\n\t\t\t\tif (intersect === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo(_intersectPoint);\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\n\t\t\tintersects.push({\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: _intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV(_intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2()),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\t\t\t});\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tif (source.center !== undefined) this.center.copy(source.center);\n\t\t\tthis.material = source.material;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSprite.prototype.isSprite = true;\n\n\tfunction transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\n\t\t// compute position in camera space\n\t\t_alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\n\n\n\t\tif (sin !== undefined) {\n\t\t\t_rotatedPosition.x = cos * _alignedPosition.x - sin * _alignedPosition.y;\n\t\t\t_rotatedPosition.y = sin * _alignedPosition.x + cos * _alignedPosition.y;\n\t\t} else {\n\t\t\t_rotatedPosition.copy(_alignedPosition);\n\t\t}\n\n\t\tvertexPosition.copy(mvPosition);\n\t\tvertexPosition.x += _rotatedPosition.x;\n\t\tvertexPosition.y += _rotatedPosition.y; // transform to world space\n\n\t\tvertexPosition.applyMatrix4(_viewWorldMatrix);\n\t}\n\n\tconst _v1$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$1 = /*@__PURE__*/new Vector3();\n\n\tclass LOD extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis._currentLevel = 0;\n\t\t\tthis.type = 'LOD';\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tlevels: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: []\n\t\t\t\t},\n\t\t\t\tisLOD: {\n\t\t\t\t\tvalue: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.autoUpdate = true;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source, false);\n\t\t\tconst levels = source.levels;\n\n\t\t\tfor (let i = 0, l = levels.length; i < l; i++) {\n\t\t\t\tconst level = levels[i];\n\t\t\t\tthis.addLevel(level.object.clone(), level.distance);\n\t\t\t}\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\treturn this;\n\t\t}\n\n\t\taddLevel(object, distance = 0) {\n\t\t\tdistance = Math.abs(distance);\n\t\t\tconst levels = this.levels;\n\t\t\tlet l;\n\n\t\t\tfor (l = 0; l < levels.length; l++) {\n\t\t\t\tif (distance < levels[l].distance) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels.splice(l, 0, {\n\t\t\t\tdistance: distance,\n\t\t\t\tobject: object\n\t\t\t});\n\t\t\tthis.add(object);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetCurrentLevel() {\n\t\t\treturn this._currentLevel;\n\t\t}\n\n\t\tgetObjectForDistance(distance) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 0) {\n\t\t\t\tlet i, l;\n\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\n\t\t\t\t\tif (distance < levels[i].distance) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn levels[i - 1].object;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 0) {\n\t\t\t\t_v1$2.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(_v1$2);\n\t\t\t\tthis.getObjectForDistance(distance).raycast(raycaster, intersects);\n\t\t\t}\n\t\t}\n\n\t\tupdate(camera) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 1) {\n\t\t\t\t_v1$2.setFromMatrixPosition(camera.matrixWorld);\n\n\t\t\t\t_v2$1.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\t\tconst distance = _v1$2.distanceTo(_v2$1) / camera.zoom;\n\t\t\t\tlevels[0].object.visible = true;\n\t\t\t\tlet i, l;\n\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\n\t\t\t\t\tif (distance >= levels[i].distance) {\n\t\t\t\t\t\tlevels[i - 1].object.visible = false;\n\t\t\t\t\t\tlevels[i].object.visible = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._currentLevel = i - 1;\n\n\t\t\t\tfor (; i < l; i++) {\n\t\t\t\t\tlevels[i].object.visible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tif (this.autoUpdate === false) data.object.autoUpdate = false;\n\t\t\tdata.object.levels = [];\n\t\t\tconst levels = this.levels;\n\n\t\t\tfor (let i = 0, l = levels.length; i < l; i++) {\n\t\t\t\tconst level = levels[i];\n\t\t\t\tdata.object.levels.push({\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tconst _basePosition = /*@__PURE__*/new Vector3();\n\n\tconst _skinIndex = /*@__PURE__*/new Vector4();\n\n\tconst _skinWeight = /*@__PURE__*/new Vector4();\n\n\tconst _vector$5 = /*@__PURE__*/new Vector3();\n\n\tconst _matrix = /*@__PURE__*/new Matrix4();\n\n\tclass SkinnedMesh extends Mesh {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'SkinnedMesh';\n\t\t\tthis.bindMode = 'attached';\n\t\t\tthis.bindMatrix = new Matrix4();\n\t\t\tthis.bindMatrixInverse = new Matrix4();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.bindMode = source.bindMode;\n\t\t\tthis.bindMatrix.copy(source.bindMatrix);\n\t\t\tthis.bindMatrixInverse.copy(source.bindMatrixInverse);\n\t\t\tthis.skeleton = source.skeleton;\n\t\t\treturn this;\n\t\t}\n\n\t\tbind(skeleton, bindMatrix) {\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif (bindMatrix === undefined) {\n\t\t\t\tthis.updateMatrixWorld(true);\n\t\t\t\tthis.skeleton.calculateInverses();\n\t\t\t\tbindMatrix = this.matrixWorld;\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy(bindMatrix);\n\t\t\tthis.bindMatrixInverse.copy(bindMatrix).invert();\n\t\t}\n\n\t\tpose() {\n\t\t\tthis.skeleton.pose();\n\t\t}\n\n\t\tnormalizeSkinWeights() {\n\t\t\tconst vector = new Vector4();\n\t\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor (let i = 0, l = skinWeight.count; i < l; i++) {\n\t\t\t\tvector.x = skinWeight.getX(i);\n\t\t\t\tvector.y = skinWeight.getY(i);\n\t\t\t\tvector.z = skinWeight.getZ(i);\n\t\t\t\tvector.w = skinWeight.getW(i);\n\t\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\t\tif (scale !== Infinity) {\n\t\t\t\t\tvector.multiplyScalar(scale);\n\t\t\t\t} else {\n\t\t\t\t\tvector.set(1, 0, 0, 0); // do something reasonable\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW(i, vector.x, vector.y, vector.z, vector.w);\n\t\t\t}\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\n\t\t\tif (this.bindMode === 'attached') {\n\t\t\t\tthis.bindMatrixInverse.copy(this.matrixWorld).invert();\n\t\t\t} else if (this.bindMode === 'detached') {\n\t\t\t\tthis.bindMatrixInverse.copy(this.bindMatrix).invert();\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n\t\t\t}\n\t\t}\n\n\t\tboneTransform(index, target) {\n\t\t\tconst skeleton = this.skeleton;\n\t\t\tconst geometry = this.geometry;\n\n\t\t\t_skinIndex.fromBufferAttribute(geometry.attributes.skinIndex, index);\n\n\t\t\t_skinWeight.fromBufferAttribute(geometry.attributes.skinWeight, index);\n\n\t\t\t_basePosition.copy(target).applyMatrix4(this.bindMatrix);\n\n\t\t\ttarget.set(0, 0, 0);\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tconst weight = _skinWeight.getComponent(i);\n\n\t\t\t\tif (weight !== 0) {\n\t\t\t\t\tconst boneIndex = _skinIndex.getComponent(i);\n\n\t\t\t\t\t_matrix.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld, skeleton.boneInverses[boneIndex]);\n\n\t\t\t\t\ttarget.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix), weight);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn target.applyMatrix4(this.bindMatrixInverse);\n\t\t}\n\n\t}\n\n\tSkinnedMesh.prototype.isSkinnedMesh = true;\n\n\tclass Bone extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Bone';\n\t\t}\n\n\t}\n\n\tBone.prototype.isBone = true;\n\n\tclass DataTexture extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding) {\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\t\tthis.image = {\n\t\t\t\tdata: data,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.magFilter = magFilter;\n\t\t\tthis.minFilter = minFilter;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\tconst _offsetMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _identityMatrix = /*@__PURE__*/new Matrix4();\n\n\tclass Skeleton {\n\t\tconstructor(bones = [], boneInverses = []) {\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.bones = bones.slice(0);\n\t\t\tthis.boneInverses = boneInverses;\n\t\t\tthis.boneMatrices = null;\n\t\t\tthis.boneTexture = null;\n\t\t\tthis.boneTextureSize = 0;\n\t\t\tthis.frame = -1;\n\t\t\tthis.init();\n\t\t}\n\n\t\tinit() {\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\t\t\tthis.boneMatrices = new Float32Array(bones.length * 16); // calculate inverse bone matrices if necessary\n\n\t\t\tif (boneInverses.length === 0) {\n\t\t\t\tthis.calculateInverses();\n\t\t\t} else {\n\t\t\t\t// handle special case\n\t\t\t\tif (bones.length !== boneInverses.length) {\n\t\t\t\t\tconsole.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');\n\t\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\t\t\tthis.boneInverses.push(new Matrix4());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcalculateInverses() {\n\t\t\tthis.boneInverses.length = 0;\n\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst inverse = new Matrix4();\n\n\t\t\t\tif (this.bones[i]) {\n\t\t\t\t\tinverse.copy(this.bones[i].matrixWorld).invert();\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push(inverse);\n\t\t\t}\n\t\t}\n\n\t\tpose() {\n\t\t\t// recover the bind-time world matrices\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone) {\n\t\t\t\t\tbone.matrixWorld.copy(this.boneInverses[i]).invert();\n\t\t\t\t}\n\t\t\t} // compute the local matrices, positions, rotations and scales\n\n\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone) {\n\t\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\t\tbone.matrix.copy(bone.parent.matrixWorld).invert();\n\t\t\t\t\t\tbone.matrix.multiply(bone.matrixWorld);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbone.matrix.copy(bone.matrixWorld);\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\t\t\tconst boneMatrices = this.boneMatrices;\n\t\t\tconst boneTexture = this.boneTexture; // flatten bone matrices to array\n\n\t\t\tfor (let i = 0, il = bones.length; i < il; i++) {\n\t\t\t\t// compute the offset between the current and the original transform\n\t\t\t\tconst matrix = bones[i] ? bones[i].matrixWorld : _identityMatrix;\n\n\t\t\t\t_offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n\n\t\t\t\t_offsetMatrix.toArray(boneMatrices, i * 16);\n\t\t\t}\n\n\t\t\tif (boneTexture !== null) {\n\t\t\t\tboneTexture.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Skeleton(this.bones, this.boneInverses);\n\t\t}\n\n\t\tcomputeBoneTexture() {\n\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t//\t\t\tRGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t//\twith\t8x8\tpixel texture max\t 16 bones * 4 pixels =\t(8 * 8)\n\t\t\t//\t\t\t 16x16 pixel texture max\t 64 bones * 4 pixels = (16 * 16)\n\t\t\t//\t\t\t 32x32 pixel texture max\t256 bones * 4 pixels = (32 * 32)\n\t\t\t//\t\t\t 64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\t\t\tlet size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\n\n\t\t\tsize = ceilPowerOfTwo(size);\n\t\t\tsize = Math.max(size, 4);\n\t\t\tconst boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n\n\t\t\tboneMatrices.set(this.boneMatrices); // copy current values\n\n\t\t\tconst boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n\t\t\tthis.boneMatrices = boneMatrices;\n\t\t\tthis.boneTexture = boneTexture;\n\t\t\tthis.boneTextureSize = size;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetBoneByName(name) {\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone.name === name) {\n\t\t\t\t\treturn bone;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tdispose() {\n\t\t\tif (this.boneTexture !== null) {\n\t\t\t\tthis.boneTexture.dispose();\n\t\t\t\tthis.boneTexture = null;\n\t\t\t}\n\t\t}\n\n\t\tfromJSON(json, bones) {\n\t\t\tthis.uuid = json.uuid;\n\n\t\t\tfor (let i = 0, l = json.bones.length; i < l; i++) {\n\t\t\t\tconst uuid = json.bones[i];\n\t\t\t\tlet bone = bones[uuid];\n\n\t\t\t\tif (bone === undefined) {\n\t\t\t\t\tconsole.warn('THREE.Skeleton: No bone found with UUID:', uuid);\n\t\t\t\t\tbone = new Bone();\n\t\t\t\t}\n\n\t\t\t\tthis.bones.push(bone);\n\t\t\t\tthis.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));\n\t\t\t}\n\n\t\t\tthis.init();\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Skeleton',\n\t\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t\t},\n\t\t\t\tbones: [],\n\t\t\t\tboneInverses: []\n\t\t\t};\n\t\t\tdata.uuid = this.uuid;\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\n\t\t\tfor (let i = 0, l = bones.length; i < l; i++) {\n\t\t\t\tconst bone = bones[i];\n\t\t\t\tdata.bones.push(bone.uuid);\n\t\t\t\tconst boneInverse = boneInverses[i];\n\t\t\t\tdata.boneInverses.push(boneInverse.toArray());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tclass InstancedBufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized, meshPerAttribute = 1) {\n\t\t\tif (typeof normalized === 'number') {\n\t\t\t\tmeshPerAttribute = normalized;\n\t\t\t\tnormalized = false;\n\t\t\t\tconsole.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');\n\t\t\t}\n\n\t\t\tsuper(array, itemSize, normalized);\n\t\t\tthis.meshPerAttribute = meshPerAttribute;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\t\t\tdata.isInstancedBufferAttribute = true;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\n\tconst _instanceLocalMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _instanceWorldMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _instanceIntersects = [];\n\n\tconst _mesh = /*@__PURE__*/new Mesh();\n\n\tclass InstancedMesh extends Mesh {\n\t\tconstructor(geometry, material, count) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.instanceMatrix = new InstancedBufferAttribute(new Float32Array(count * 16), 16);\n\t\t\tthis.instanceColor = null;\n\t\t\tthis.count = count;\n\t\t\tthis.frustumCulled = false;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.instanceMatrix.copy(source.instanceMatrix);\n\t\t\tif (source.instanceColor !== null) this.instanceColor = source.instanceColor.clone();\n\t\t\tthis.count = source.count;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetColorAt(index, color) {\n\t\t\tcolor.fromArray(this.instanceColor.array, index * 3);\n\t\t}\n\n\t\tgetMatrixAt(index, matrix) {\n\t\t\tmatrix.fromArray(this.instanceMatrix.array, index * 16);\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst raycastTimes = this.count;\n\t\t\t_mesh.geometry = this.geometry;\n\t\t\t_mesh.material = this.material;\n\t\t\tif (_mesh.material === undefined) return;\n\n\t\t\tfor (let instanceId = 0; instanceId < raycastTimes; instanceId++) {\n\t\t\t\t// calculate the world matrix for each instance\n\t\t\t\tthis.getMatrixAt(instanceId, _instanceLocalMatrix);\n\n\t\t\t\t_instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\n\n\n\t\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t\t_mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\n\n\n\t\t\t\tfor (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n\t\t\t\t\tconst intersect = _instanceIntersects[i];\n\t\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\t\tintersect.object = this;\n\t\t\t\t\tintersects.push(intersect);\n\t\t\t\t}\n\n\t\t\t\t_instanceIntersects.length = 0;\n\t\t\t}\n\t\t}\n\n\t\tsetColorAt(index, color) {\n\t\t\tif (this.instanceColor === null) {\n\t\t\t\tthis.instanceColor = new InstancedBufferAttribute(new Float32Array(this.instanceMatrix.count * 3), 3);\n\t\t\t}\n\n\t\t\tcolor.toArray(this.instanceColor.array, index * 3);\n\t\t}\n\n\t\tsetMatrixAt(index, matrix) {\n\t\t\tmatrix.toArray(this.instanceMatrix.array, index * 16);\n\t\t}\n\n\t\tupdateMorphTargets() {}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tInstancedMesh.prototype.isInstancedMesh = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tlinewidth: <float>,\n\t *\tlinecap: \"round\",\n\t *\tlinejoin: \"round\"\n\t * }\n\t */\n\n\tclass LineBasicMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineBasicMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.linewidth = 1;\n\t\t\tthis.linecap = 'round';\n\t\t\tthis.linejoin = 'round';\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.linewidth = source.linewidth;\n\t\t\tthis.linecap = source.linecap;\n\t\t\tthis.linejoin = source.linejoin;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tconst _start$1 = /*@__PURE__*/new Vector3();\n\n\tconst _end$1 = /*@__PURE__*/new Vector3();\n\n\tconst _inverseMatrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _ray$1 = /*@__PURE__*/new Ray();\n\n\tconst _sphere$1 = /*@__PURE__*/new Sphere();\n\n\tclass Line extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new LineBasicMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Line';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\tcomputeLineDistances() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\t// we assume non-indexed geometry\n\t\t\t\tif (geometry.index === null) {\n\t\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\t\tconst lineDistances = [0];\n\n\t\t\t\t\tfor (let i = 1, l = positionAttribute.count; i < l; i++) {\n\t\t\t\t\t\t_start$1.fromBufferAttribute(positionAttribute, i - 1);\n\n\t\t\t\t\t\t_end$1.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\tlineDistances[i] = lineDistances[i - 1];\n\t\t\t\t\t\tlineDistances[i] += _start$1.distanceTo(_end$1);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst threshold = raycaster.params.Line.threshold;\n\t\t\tconst drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$1.copy(geometry.boundingSphere);\n\n\t\t\t_sphere$1.applyMatrix4(matrixWorld);\n\n\t\t\t_sphere$1.radius += threshold;\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$1) === false) return; //\n\n\t\t\t_inverseMatrix$1.copy(matrixWorld).invert();\n\n\t\t\t_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);\n\n\t\t\tconst localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\n\t\t\tconst vStart = new Vector3();\n\t\t\tconst vEnd = new Vector3();\n\t\t\tconst interSegment = new Vector3();\n\t\t\tconst interRay = new Vector3();\n\t\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end - 1; i < l; i += step) {\n\t\t\t\t\t\tconst a = index.getX(i);\n\t\t\t\t\t\tconst b = index.getX(i + 1);\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, a);\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, b);\n\n\t\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(interRay);\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\n\t\t\t\t\t\tintersects.push({\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end - 1; i < l; i += step) {\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, i);\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, i + 1);\n\n\t\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(interRay);\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\n\t\t\t\t\t\tintersects.push({\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tLine.prototype.isLine = true;\n\n\tconst _start = /*@__PURE__*/new Vector3();\n\n\tconst _end = /*@__PURE__*/new Vector3();\n\n\tclass LineSegments extends Line {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'LineSegments';\n\t\t}\n\n\t\tcomputeLineDistances() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\t// we assume non-indexed geometry\n\t\t\t\tif (geometry.index === null) {\n\t\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\t\tconst lineDistances = [];\n\n\t\t\t\t\tfor (let i = 0, l = positionAttribute.count; i < l; i += 2) {\n\t\t\t\t\t\t_start.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\t_end.fromBufferAttribute(positionAttribute, i + 1);\n\n\t\t\t\t\t\tlineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n\t\t\t\t\t\tlineDistances[i + 1] = lineDistances[i] + _start.distanceTo(_end);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineSegments.prototype.isLineSegments = true;\n\n\tclass LineLoop extends Line {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'LineLoop';\n\t\t}\n\n\t}\n\n\tLineLoop.prototype.isLineLoop = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tsize: <float>,\n\t *\tsizeAttenuation: <bool>\n\t *\n\t * }\n\t */\n\n\tclass PointsMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PointsMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.size = 1;\n\t\t\tthis.sizeAttenuation = true;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.size = source.size;\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tconst _inverseMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _ray = /*@__PURE__*/new Ray();\n\n\tconst _sphere = /*@__PURE__*/new Sphere();\n\n\tconst _position$2 = /*@__PURE__*/new Vector3();\n\n\tclass Points extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new PointsMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Points';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst threshold = raycaster.params.Points.threshold;\n\t\t\tconst drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy(geometry.boundingSphere);\n\n\t\t\t_sphere.applyMatrix4(matrixWorld);\n\n\t\t\t_sphere.radius += threshold;\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere) === false) return; //\n\n\t\t\t_inverseMatrix.copy(matrixWorld).invert();\n\n\t\t\t_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n\n\t\t\tconst localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, il = end; i < il; i++) {\n\t\t\t\t\t\tconst a = index.getX(i);\n\n\t\t\t\t\t\t_position$2.fromBufferAttribute(positionAttribute, a);\n\n\t\t\t\t\t\ttestPoint(_position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end; i < l; i++) {\n\t\t\t\t\t\t_position$2.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\ttestPoint(_position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tPoints.prototype.isPoints = true;\n\n\tfunction testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\n\t\tconst rayPointDistanceSq = _ray.distanceSqToPoint(point);\n\n\t\tif (rayPointDistanceSq < localThresholdSq) {\n\t\t\tconst intersectPoint = new Vector3();\n\n\t\t\t_ray.closestPointToPoint(point, intersectPoint);\n\n\t\t\tintersectPoint.applyMatrix4(matrixWorld);\n\t\t\tconst distance = raycaster.ray.origin.distanceTo(intersectPoint);\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\n\t\t\tintersects.push({\n\t\t\t\tdistance: distance,\n\t\t\t\tdistanceToRay: Math.sqrt(rayPointDistanceSq),\n\t\t\t\tpoint: intersectPoint,\n\t\t\t\tindex: index,\n\t\t\t\tface: null,\n\t\t\t\tobject: object\n\t\t\t});\n\t\t}\n\t}\n\n\tclass VideoTexture extends Texture {\n\t\tconstructor(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n\t\t\tsuper(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.format = format !== undefined ? format : RGBFormat;\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tconst scope = this;\n\n\t\t\tfunction updateVideo() {\n\t\t\t\tscope.needsUpdate = true;\n\t\t\t\tvideo.requestVideoFrameCallback(updateVideo);\n\t\t\t}\n\n\t\t\tif ('requestVideoFrameCallback' in video) {\n\t\t\t\tvideo.requestVideoFrameCallback(updateVideo);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.image).copy(this);\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst video = this.image;\n\t\t\tconst hasVideoFrameCallback = ('requestVideoFrameCallback' in video);\n\n\t\t\tif (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\n\t\t\t\tthis.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tVideoTexture.prototype.isVideoTexture = true;\n\n\tclass CompressedTexture extends Texture {\n\t\tconstructor(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\t\tthis.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.mipmaps = mipmaps; // no flipping for cube textures\n\t\t\t// (also flipping doesn't work for compressed textures )\n\n\t\t\tthis.flipY = false; // can't generate mipmaps for compressed textures\n\t\t\t// mips must be embedded in DDS files\n\n\t\t\tthis.generateMipmaps = false;\n\t\t}\n\n\t}\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\tclass CanvasTexture extends Texture {\n\t\tconstructor(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n\t\t\tsuper(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tCanvasTexture.prototype.isCanvasTexture = true;\n\n\tclass DepthTexture extends Texture {\n\t\tconstructor(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\n\t\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\t\tif (format !== DepthFormat && format !== DepthStencilFormat) {\n\t\t\t\tthrow new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n\t\t\t}\n\n\t\t\tif (type === undefined && format === DepthFormat) type = UnsignedShortType;\n\t\t\tif (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\t\t\tthis.flipY = false;\n\t\t\tthis.generateMipmaps = false;\n\t\t}\n\n\t}\n\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\tclass CircleGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CircleGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tsegments: segments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tsegments = Math.max(3, segments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // center point\n\n\t\t\tvertices.push(0, 0, 0);\n\t\t\tnormals.push(0, 0, 1);\n\t\t\tuvs.push(0.5, 0.5);\n\n\t\t\tfor (let s = 0, i = 3; s <= segments; s++, i += 3) {\n\t\t\t\tconst segment = thetaStart + s / segments * thetaLength; // vertex\n\n\t\t\t\tvertex.x = radius * Math.cos(segment);\n\t\t\t\tvertex.y = radius * Math.sin(segment);\n\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\tnormals.push(0, 0, 1); // uvs\n\n\t\t\t\tuv.x = (vertices[i] / radius + 1) / 2;\n\t\t\t\tuv.y = (vertices[i + 1] / radius + 1) / 2;\n\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t} // indices\n\n\n\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\tindices.push(i, i + 1, 0);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new CircleGeometry(data.radius, data.segments, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass CylinderGeometry extends BufferGeometry {\n\t\tconstructor(radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CylinderGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradiusTop: radiusTop,\n\t\t\t\tradiusBottom: radiusBottom,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tconst scope = this;\n\t\t\tradialSegments = Math.floor(radialSegments);\n\t\t\theightSegments = Math.floor(heightSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet index = 0;\n\t\t\tconst indexArray = [];\n\t\t\tconst halfHeight = height / 2;\n\t\t\tlet groupStart = 0; // generate geometry\n\n\t\t\tgenerateTorso();\n\n\t\t\tif (openEnded === false) {\n\t\t\t\tif (radiusTop > 0) generateCap(true);\n\t\t\t\tif (radiusBottom > 0) generateCap(false);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\tfunction generateTorso() {\n\t\t\t\tconst normal = new Vector3();\n\t\t\t\tconst vertex = new Vector3();\n\t\t\t\tlet groupCount = 0; // this will be used to calculate the normal\n\n\t\t\t\tconst slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n\t\t\t\tfor (let y = 0; y <= heightSegments; y++) {\n\t\t\t\t\tconst indexRow = [];\n\t\t\t\t\tconst v = y / heightSegments; // calculate the radius of the current row\n\n\t\t\t\t\tconst radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n\t\t\t\t\tfor (let x = 0; x <= radialSegments; x++) {\n\t\t\t\t\t\tconst u = x / radialSegments;\n\t\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\t\t\t\t\t\tconst sinTheta = Math.sin(theta);\n\t\t\t\t\t\tconst cosTheta = Math.cos(theta); // vertex\n\n\t\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\t\tvertex.y = -v * height + halfHeight;\n\t\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\t\tnormal.set(sinTheta, slope, cosTheta).normalize();\n\t\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\t\tuvs.push(u, 1 - v); // save index of vertex in respective row\n\n\t\t\t\t\t\tindexRow.push(index++);\n\t\t\t\t\t} // now save vertices of the row in our index array\n\n\n\t\t\t\t\tindexArray.push(indexRow);\n\t\t\t\t} // generate indices\n\n\n\t\t\t\tfor (let x = 0; x < radialSegments; x++) {\n\t\t\t\t\tfor (let y = 0; y < heightSegments; y++) {\n\t\t\t\t\t\t// we use the index array to access the correct indices\n\t\t\t\t\t\tconst a = indexArray[y][x];\n\t\t\t\t\t\tconst b = indexArray[y + 1][x];\n\t\t\t\t\t\tconst c = indexArray[y + 1][x + 1];\n\t\t\t\t\t\tconst d = indexArray[y][x + 1]; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d); // update group counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\t\t\t\t\t}\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t}\n\n\t\t\tfunction generateCap(top) {\n\t\t\t\t// save the index of the first center vertex\n\t\t\t\tconst centerIndexStart = index;\n\t\t\t\tconst uv = new Vector2();\n\t\t\t\tconst vertex = new Vector3();\n\t\t\t\tlet groupCount = 0;\n\t\t\t\tconst radius = top === true ? radiusTop : radiusBottom;\n\t\t\t\tconst sign = top === true ? 1 : -1; // first we generate the center vertex data of the cap.\n\t\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\t\tfor (let x = 1; x <= radialSegments; x++) {\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertices.push(0, halfHeight * sign, 0); // normal\n\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\n\n\t\t\t\t\tuvs.push(0.5, 0.5); // increase index\n\n\t\t\t\t\tindex++;\n\t\t\t\t} // save the index of the last center vertex\n\n\n\t\t\t\tconst centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n\t\t\t\tfor (let x = 0; x <= radialSegments; x++) {\n\t\t\t\t\tconst u = x / radialSegments;\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\t\t\t\t\tconst cosTheta = Math.cos(theta);\n\t\t\t\t\tconst sinTheta = Math.sin(theta); // vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\n\n\t\t\t\t\tuv.x = cosTheta * 0.5 + 0.5;\n\t\t\t\t\tuv.y = sinTheta * 0.5 * sign + 0.5;\n\t\t\t\t\tuvs.push(uv.x, uv.y); // increase index\n\n\t\t\t\t\tindex++;\n\t\t\t\t} // generate indices\n\n\n\t\t\t\tfor (let x = 0; x < radialSegments; x++) {\n\t\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\t\tif (top === true) {\n\t\t\t\t\t\t// face top\n\t\t\t\t\t\tindices.push(i, i + 1, c);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// face bottom\n\t\t\t\t\t\tindices.push(i + 1, i, c);\n\t\t\t\t\t}\n\n\t\t\t\t\tgroupCount += 3;\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new CylinderGeometry(data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass ConeGeometry extends CylinderGeometry {\n\t\tconstructor(radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper(0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n\t\t\tthis.type = 'ConeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new ConeGeometry(data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass PolyhedronGeometry extends BufferGeometry {\n\t\tconstructor(vertices = [], indices = [], radius = 1, detail = 0) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PolyhedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tvertices: vertices,\n\t\t\t\tindices: indices,\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t}; // default buffer data\n\n\t\t\tconst vertexBuffer = [];\n\t\t\tconst uvBuffer = []; // the subdivision creates the vertex buffer data\n\n\t\t\tsubdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\n\n\t\t\tapplyRadius(radius); // finally, create the uv data\n\n\t\t\tgenerateUVs(); // build non-indexed geometry\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n\n\t\t\tif (detail === 0) {\n\t\t\t\tthis.computeVertexNormals(); // flat normals\n\t\t\t} else {\n\t\t\t\tthis.normalizeNormals(); // smooth normals\n\t\t\t} // helper functions\n\n\n\t\t\tfunction subdivide(detail) {\n\t\t\t\tconst a = new Vector3();\n\t\t\t\tconst b = new Vector3();\n\t\t\t\tconst c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\t\tfor (let i = 0; i < indices.length; i += 3) {\n\t\t\t\t\t// get the vertices of the face\n\t\t\t\t\tgetVertexByIndex(indices[i + 0], a);\n\t\t\t\t\tgetVertexByIndex(indices[i + 1], b);\n\t\t\t\t\tgetVertexByIndex(indices[i + 2], c); // perform subdivision\n\n\t\t\t\t\tsubdivideFace(a, b, c, detail);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction subdivideFace(a, b, c, detail) {\n\t\t\t\tconst cols = detail + 1; // we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\t\tconst v = []; // construct all of the vertices for this subdivision\n\n\t\t\t\tfor (let i = 0; i <= cols; i++) {\n\t\t\t\t\tv[i] = [];\n\t\t\t\t\tconst aj = a.clone().lerp(c, i / cols);\n\t\t\t\t\tconst bj = b.clone().lerp(c, i / cols);\n\t\t\t\t\tconst rows = cols - i;\n\n\t\t\t\t\tfor (let j = 0; j <= rows; j++) {\n\t\t\t\t\t\tif (j === 0 && i === cols) {\n\t\t\t\t\t\t\tv[i][j] = aj;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tv[i][j] = aj.clone().lerp(bj, j / rows);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // construct all of the faces\n\n\n\t\t\t\tfor (let i = 0; i < cols; i++) {\n\t\t\t\t\tfor (let j = 0; j < 2 * (cols - i) - 1; j++) {\n\t\t\t\t\t\tconst k = Math.floor(j / 2);\n\n\t\t\t\t\t\tif (j % 2 === 0) {\n\t\t\t\t\t\t\tpushVertex(v[i][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k]);\n\t\t\t\t\t\t\tpushVertex(v[i][k]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpushVertex(v[i][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction applyRadius(radius) {\n\t\t\t\tconst vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\t\tfor (let i = 0; i < vertexBuffer.length; i += 3) {\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\n\t\t\t\t\tvertex.normalize().multiplyScalar(radius);\n\t\t\t\t\tvertexBuffer[i + 0] = vertex.x;\n\t\t\t\t\tvertexBuffer[i + 1] = vertex.y;\n\t\t\t\t\tvertexBuffer[i + 2] = vertex.z;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateUVs() {\n\t\t\t\tconst vertex = new Vector3();\n\n\t\t\t\tfor (let i = 0; i < vertexBuffer.length; i += 3) {\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\n\t\t\t\t\tconst u = azimuth(vertex) / 2 / Math.PI + 0.5;\n\t\t\t\t\tconst v = inclination(vertex) / Math.PI + 0.5;\n\t\t\t\t\tuvBuffer.push(u, 1 - v);\n\t\t\t\t}\n\n\t\t\t\tcorrectUVs();\n\t\t\t\tcorrectSeam();\n\t\t\t}\n\n\t\t\tfunction correctSeam() {\n\t\t\t\t// handle case when face straddles the seam, see #3269\n\t\t\t\tfor (let i = 0; i < uvBuffer.length; i += 6) {\n\t\t\t\t\t// uv data of a single face\n\t\t\t\t\tconst x0 = uvBuffer[i + 0];\n\t\t\t\t\tconst x1 = uvBuffer[i + 2];\n\t\t\t\t\tconst x2 = uvBuffer[i + 4];\n\t\t\t\t\tconst max = Math.max(x0, x1, x2);\n\t\t\t\t\tconst min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\n\n\t\t\t\t\tif (max > 0.9 && min < 0.1) {\n\t\t\t\t\t\tif (x0 < 0.2) uvBuffer[i + 0] += 1;\n\t\t\t\t\t\tif (x1 < 0.2) uvBuffer[i + 2] += 1;\n\t\t\t\t\t\tif (x2 < 0.2) uvBuffer[i + 4] += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction pushVertex(vertex) {\n\t\t\t\tvertexBuffer.push(vertex.x, vertex.y, vertex.z);\n\t\t\t}\n\n\t\t\tfunction getVertexByIndex(index, vertex) {\n\t\t\t\tconst stride = index * 3;\n\t\t\t\tvertex.x = vertices[stride + 0];\n\t\t\t\tvertex.y = vertices[stride + 1];\n\t\t\t\tvertex.z = vertices[stride + 2];\n\t\t\t}\n\n\t\t\tfunction correctUVs() {\n\t\t\t\tconst a = new Vector3();\n\t\t\t\tconst b = new Vector3();\n\t\t\t\tconst c = new Vector3();\n\t\t\t\tconst centroid = new Vector3();\n\t\t\t\tconst uvA = new Vector2();\n\t\t\t\tconst uvB = new Vector2();\n\t\t\t\tconst uvC = new Vector2();\n\n\t\t\t\tfor (let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n\t\t\t\t\ta.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n\t\t\t\t\tb.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n\t\t\t\t\tc.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n\t\t\t\t\tuvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n\t\t\t\t\tuvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n\t\t\t\t\tuvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n\t\t\t\t\tcentroid.copy(a).add(b).add(c).divideScalar(3);\n\t\t\t\t\tconst azi = azimuth(centroid);\n\t\t\t\t\tcorrectUV(uvA, j + 0, a, azi);\n\t\t\t\t\tcorrectUV(uvB, j + 2, b, azi);\n\t\t\t\t\tcorrectUV(uvC, j + 4, c, azi);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction correctUV(uv, stride, vector, azimuth) {\n\t\t\t\tif (azimuth < 0 && uv.x === 1) {\n\t\t\t\t\tuvBuffer[stride] = uv.x - 1;\n\t\t\t\t}\n\n\t\t\t\tif (vector.x === 0 && vector.z === 0) {\n\t\t\t\t\tuvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n\t\t\t\t}\n\t\t\t} // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n\t\t\tfunction azimuth(vector) {\n\t\t\t\treturn Math.atan2(vector.z, -vector.x);\n\t\t\t} // Angle above the XZ plane.\n\n\n\t\t\tfunction inclination(vector) {\n\t\t\t\treturn Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new PolyhedronGeometry(data.vertices, data.indices, data.radius, data.details);\n\t\t}\n\n\t}\n\n\tclass DodecahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst t = (1 + Math.sqrt(5)) / 2;\n\t\t\tconst r = 1 / t;\n\t\t\tconst vertices = [// (\u00B11, \u00B11, \u00B11)\n\t\t\t-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, \u00B11/\u03C6, \u00B1\u03C6)\n\t\t\t0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (\u00B11/\u03C6, \u00B1\u03C6, 0)\n\t\t\t-r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (\u00B1\u03C6, 0, \u00B11/\u03C6)\n\t\t\t-t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n\t\t\tconst indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'DodecahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new DodecahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\tconst _v0 = new Vector3();\n\n\tconst _v1$1 = new Vector3();\n\n\tconst _normal = new Vector3();\n\n\tconst _triangle = new Triangle();\n\n\tclass EdgesGeometry extends BufferGeometry {\n\t\tconstructor(geometry = null, thresholdAngle = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'EdgesGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tgeometry: geometry,\n\t\t\t\tthresholdAngle: thresholdAngle\n\t\t\t};\n\n\t\t\tif (geometry !== null) {\n\t\t\t\tconst precisionPoints = 4;\n\t\t\t\tconst precision = Math.pow(10, precisionPoints);\n\t\t\t\tconst thresholdDot = Math.cos(DEG2RAD * thresholdAngle);\n\t\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\t\tconst positionAttr = geometry.getAttribute('position');\n\t\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\t\t\t\tconst indexArr = [0, 0, 0];\n\t\t\t\tconst vertKeys = ['a', 'b', 'c'];\n\t\t\t\tconst hashes = new Array(3);\n\t\t\t\tconst edgeData = {};\n\t\t\t\tconst vertices = [];\n\n\t\t\t\tfor (let i = 0; i < indexCount; i += 3) {\n\t\t\t\t\tif (indexAttr) {\n\t\t\t\t\t\tindexArr[0] = indexAttr.getX(i);\n\t\t\t\t\t\tindexArr[1] = indexAttr.getX(i + 1);\n\t\t\t\t\t\tindexArr[2] = indexAttr.getX(i + 2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindexArr[0] = i;\n\t\t\t\t\t\tindexArr[1] = i + 1;\n\t\t\t\t\t\tindexArr[2] = i + 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tb,\n\t\t\t\t\t\tc\n\t\t\t\t\t} = _triangle;\n\t\t\t\t\ta.fromBufferAttribute(positionAttr, indexArr[0]);\n\t\t\t\t\tb.fromBufferAttribute(positionAttr, indexArr[1]);\n\t\t\t\t\tc.fromBufferAttribute(positionAttr, indexArr[2]);\n\n\t\t\t\t\t_triangle.getNormal(_normal); // create hashes for the edge from the vertices\n\n\n\t\t\t\t\thashes[0] = `${Math.round(a.x * precision)},${Math.round(a.y * precision)},${Math.round(a.z * precision)}`;\n\t\t\t\t\thashes[1] = `${Math.round(b.x * precision)},${Math.round(b.y * precision)},${Math.round(b.z * precision)}`;\n\t\t\t\t\thashes[2] = `${Math.round(c.x * precision)},${Math.round(c.y * precision)},${Math.round(c.z * precision)}`; // skip degenerate triangles\n\n\t\t\t\t\tif (hashes[0] === hashes[1] || hashes[1] === hashes[2] || hashes[2] === hashes[0]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} // iterate over every edge\n\n\n\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\t\tconst jNext = (j + 1) % 3;\n\t\t\t\t\t\tconst vecHash0 = hashes[j];\n\t\t\t\t\t\tconst vecHash1 = hashes[jNext];\n\t\t\t\t\t\tconst v0 = _triangle[vertKeys[j]];\n\t\t\t\t\t\tconst v1 = _triangle[vertKeys[jNext]];\n\t\t\t\t\t\tconst hash = `${vecHash0}_${vecHash1}`;\n\t\t\t\t\t\tconst reverseHash = `${vecHash1}_${vecHash0}`;\n\n\t\t\t\t\t\tif (reverseHash in edgeData && edgeData[reverseHash]) {\n\t\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\t\tif (_normal.dot(edgeData[reverseHash].normal) <= thresholdDot) {\n\t\t\t\t\t\t\t\tvertices.push(v0.x, v0.y, v0.z);\n\t\t\t\t\t\t\t\tvertices.push(v1.x, v1.y, v1.z);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tedgeData[reverseHash] = null;\n\t\t\t\t\t\t} else if (!(hash in edgeData)) {\n\t\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\t\tedgeData[hash] = {\n\t\t\t\t\t\t\t\tindex0: indexArr[j],\n\t\t\t\t\t\t\t\tindex1: indexArr[jNext],\n\t\t\t\t\t\t\t\tnormal: _normal.clone()\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // iterate over all remaining, unmatched edges and add them to the vertex array\n\n\n\t\t\t\tfor (const key in edgeData) {\n\t\t\t\t\tif (edgeData[key]) {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tindex0,\n\t\t\t\t\t\t\tindex1\n\t\t\t\t\t\t} = edgeData[key];\n\n\t\t\t\t\t\t_v0.fromBufferAttribute(positionAttr, index0);\n\n\t\t\t\t\t\t_v1$1.fromBufferAttribute(positionAttr, index1);\n\n\t\t\t\t\t\tvertices.push(_v0.x, _v0.y, _v0.z);\n\t\t\t\t\t\tvertices.push(_v1$1.x, _v1$1.y, _v1$1.z);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Extensible curve object.\n\t *\n\t * Some common of curve methods:\n\t * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\tclass Curve {\n\t\tconstructor() {\n\t\t\tthis.type = 'Curve';\n\t\t\tthis.arcLengthDivisions = 200;\n\t\t} // Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\n\t\tgetPoint() {\n\t\t\tconsole.warn('THREE.Curve: .getPoint() not implemented.');\n\t\t\treturn null;\n\t\t} // Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\tconst t = this.getUtoTmapping(u);\n\t\t\treturn this.getPoint(t, optionalTarget);\n\t\t} // Get sequence of points using getPoint( t )\n\n\n\t\tgetPoints(divisions = 5) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let d = 0; d <= divisions; d++) {\n\t\t\t\tpoints.push(this.getPoint(d / divisions));\n\t\t\t}\n\n\t\t\treturn points;\n\t\t} // Get sequence of points using getPointAt( u )\n\n\n\t\tgetSpacedPoints(divisions = 5) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let d = 0; d <= divisions; d++) {\n\t\t\t\tpoints.push(this.getPointAt(d / divisions));\n\t\t\t}\n\n\t\t\treturn points;\n\t\t} // Get total curve arc length\n\n\n\t\tgetLength() {\n\t\t\tconst lengths = this.getLengths();\n\t\t\treturn lengths[lengths.length - 1];\n\t\t} // Get list of cumulative segment lengths\n\n\n\t\tgetLengths(divisions = this.arcLengthDivisions) {\n\t\t\tif (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n\t\t\t\treturn this.cacheArcLengths;\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\t\t\tconst cache = [];\n\t\t\tlet current,\n\t\t\t\t\tlast = this.getPoint(0);\n\t\t\tlet sum = 0;\n\t\t\tcache.push(0);\n\n\t\t\tfor (let p = 1; p <= divisions; p++) {\n\t\t\t\tcurrent = this.getPoint(p / divisions);\n\t\t\t\tsum += current.distanceTo(last);\n\t\t\t\tcache.push(sum);\n\t\t\t\tlast = current;\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\t\t}\n\n\t\tupdateArcLengths() {\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\t\t} // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\n\t\tgetUtoTmapping(u, distance) {\n\t\t\tconst arcLengths = this.getLengths();\n\t\t\tlet i = 0;\n\t\t\tconst il = arcLengths.length;\n\t\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\t\tif (distance) {\n\t\t\t\ttargetArcLength = distance;\n\t\t\t} else {\n\t\t\t\ttargetArcLength = u * arcLengths[il - 1];\n\t\t\t} // binary search for the index with largest value smaller than target u distance\n\n\n\t\t\tlet low = 0,\n\t\t\t\t\thigh = il - 1,\n\t\t\t\t\tcomparison;\n\n\t\t\twhile (low <= high) {\n\t\t\t\ti = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[i] - targetArcLength;\n\n\t\t\t\tif (comparison < 0) {\n\t\t\t\t\tlow = i + 1;\n\t\t\t\t} else if (comparison > 0) {\n\t\t\t\t\thigh = i - 1;\n\t\t\t\t} else {\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak; // DONE\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif (arcLengths[i] === targetArcLength) {\n\t\t\t\treturn i / (il - 1);\n\t\t\t} // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n\t\t\tconst lengthBefore = arcLengths[i];\n\t\t\tconst lengthAfter = arcLengths[i + 1];\n\t\t\tconst segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n\t\t\tconst segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n\t\t\tconst t = (i + segmentFraction) / (il - 1);\n\t\t\treturn t;\n\t\t} // Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\n\t\tgetTangent(t, optionalTarget) {\n\t\t\tconst delta = 0.0001;\n\t\t\tlet t1 = t - delta;\n\t\t\tlet t2 = t + delta; // Capping in case of danger\n\n\t\t\tif (t1 < 0) t1 = 0;\n\t\t\tif (t2 > 1) t2 = 1;\n\t\t\tconst pt1 = this.getPoint(t1);\n\t\t\tconst pt2 = this.getPoint(t2);\n\t\t\tconst tangent = optionalTarget || (pt1.isVector2 ? new Vector2() : new Vector3());\n\t\t\ttangent.copy(pt2).sub(pt1).normalize();\n\t\t\treturn tangent;\n\t\t}\n\n\t\tgetTangentAt(u, optionalTarget) {\n\t\t\tconst t = this.getUtoTmapping(u);\n\t\t\treturn this.getTangent(t, optionalTarget);\n\t\t}\n\n\t\tcomputeFrenetFrames(segments, closed) {\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\t\t\tconst normal = new Vector3();\n\t\t\tconst tangents = [];\n\t\t\tconst normals = [];\n\t\t\tconst binormals = [];\n\t\t\tconst vec = new Vector3();\n\t\t\tconst mat = new Matrix4(); // compute the tangent vectors for each segment on the curve\n\n\t\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\t\tconst u = i / segments;\n\t\t\t\ttangents[i] = this.getTangentAt(u, new Vector3());\n\t\t\t} // select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\n\t\t\tnormals[0] = new Vector3();\n\t\t\tbinormals[0] = new Vector3();\n\t\t\tlet min = Number.MAX_VALUE;\n\t\t\tconst tx = Math.abs(tangents[0].x);\n\t\t\tconst ty = Math.abs(tangents[0].y);\n\t\t\tconst tz = Math.abs(tangents[0].z);\n\n\t\t\tif (tx <= min) {\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set(1, 0, 0);\n\t\t\t}\n\n\t\t\tif (ty <= min) {\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set(0, 1, 0);\n\t\t\t}\n\n\t\t\tif (tz <= min) {\n\t\t\t\tnormal.set(0, 0, 1);\n\t\t\t}\n\n\t\t\tvec.crossVectors(tangents[0], normal).normalize();\n\t\t\tnormals[0].crossVectors(tangents[0], vec);\n\t\t\tbinormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\tnormals[i] = normals[i - 1].clone();\n\t\t\t\tbinormals[i] = binormals[i - 1].clone();\n\t\t\t\tvec.crossVectors(tangents[i - 1], tangents[i]);\n\n\t\t\t\tif (vec.length() > Number.EPSILON) {\n\t\t\t\t\tvec.normalize();\n\t\t\t\t\tconst theta = Math.acos(clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n\t\t\t\t}\n\n\t\t\t\tbinormals[i].crossVectors(tangents[i], normals[i]);\n\t\t\t} // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n\t\t\tif (closed === true) {\n\t\t\t\tlet theta = Math.acos(clamp(normals[0].dot(normals[segments]), -1, 1));\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n\t\t\t\t\ttheta = -theta;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n\t\t\t\t\tbinormals[i].crossVectors(tangents[i], normals[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Curve',\n\t\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t\t}\n\t\t\t};\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\t\tdata.type = this.type;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass EllipseCurve extends Curve {\n\t\tconstructor(aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0) {\n\t\t\tsuper();\n\t\t\tthis.type = 'EllipseCurve';\n\t\t\tthis.aX = aX;\n\t\t\tthis.aY = aY;\n\t\t\tthis.xRadius = xRadius;\n\t\t\tthis.yRadius = yRadius;\n\t\t\tthis.aStartAngle = aStartAngle;\n\t\t\tthis.aEndAngle = aEndAngle;\n\t\t\tthis.aClockwise = aClockwise;\n\t\t\tthis.aRotation = aRotation;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget) {\n\t\t\tconst point = optionalTarget || new Vector2();\n\t\t\tconst twoPi = Math.PI * 2;\n\t\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\t\tconst samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n\t\t\twhile (deltaAngle < 0) deltaAngle += twoPi;\n\n\t\t\twhile (deltaAngle > twoPi) deltaAngle -= twoPi;\n\n\t\t\tif (deltaAngle < Number.EPSILON) {\n\t\t\t\tif (samePoints) {\n\t\t\t\t\tdeltaAngle = 0;\n\t\t\t\t} else {\n\t\t\t\t\tdeltaAngle = twoPi;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.aClockwise === true && !samePoints) {\n\t\t\t\tif (deltaAngle === twoPi) {\n\t\t\t\t\tdeltaAngle = -twoPi;\n\t\t\t\t} else {\n\t\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\t\tlet x = this.aX + this.xRadius * Math.cos(angle);\n\t\t\tlet y = this.aY + this.yRadius * Math.sin(angle);\n\n\t\t\tif (this.aRotation !== 0) {\n\t\t\t\tconst cos = Math.cos(this.aRotation);\n\t\t\t\tconst sin = Math.sin(this.aRotation);\n\t\t\t\tconst tx = x - this.aX;\n\t\t\t\tconst ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n\t\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\t\ty = tx * sin + ty * cos + this.aY;\n\t\t\t}\n\n\t\t\treturn point.set(x, y);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.aX = source.aX;\n\t\t\tthis.aY = source.aY;\n\t\t\tthis.xRadius = source.xRadius;\n\t\t\tthis.yRadius = source.yRadius;\n\t\t\tthis.aStartAngle = source.aStartAngle;\n\t\t\tthis.aEndAngle = source.aEndAngle;\n\t\t\tthis.aClockwise = source.aClockwise;\n\t\t\tthis.aRotation = source.aRotation;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.aX = this.aX;\n\t\t\tdata.aY = this.aY;\n\t\t\tdata.xRadius = this.xRadius;\n\t\t\tdata.yRadius = this.yRadius;\n\t\t\tdata.aStartAngle = this.aStartAngle;\n\t\t\tdata.aEndAngle = this.aEndAngle;\n\t\t\tdata.aClockwise = this.aClockwise;\n\t\t\tdata.aRotation = this.aRotation;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.aX = json.aX;\n\t\t\tthis.aY = json.aY;\n\t\t\tthis.xRadius = json.xRadius;\n\t\t\tthis.yRadius = json.yRadius;\n\t\t\tthis.aStartAngle = json.aStartAngle;\n\t\t\tthis.aEndAngle = json.aEndAngle;\n\t\t\tthis.aClockwise = json.aClockwise;\n\t\t\tthis.aRotation = json.aRotation;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tclass ArcCurve extends EllipseCurve {\n\t\tconstructor(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tsuper(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\tthis.type = 'ArcCurve';\n\t\t}\n\n\t}\n\n\tArcCurve.prototype.isArcCurve = true;\n\n\t/**\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\t\tlet c0 = 0,\n\t\t\t\tc1 = 0,\n\t\t\t\tc2 = 0,\n\t\t\t\tc3 = 0;\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *\t p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *\t p(0) = x0, p(1) = x1\n\t\t *\tand\n\t\t *\t p'(0) = t0, p'(1) = t1.\n\t\t */\n\n\t\tfunction init(x0, x1, t0, t1) {\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\t\t}\n\n\t\treturn {\n\t\t\tinitCatmullRom: function (x0, x1, x2, x3, tension) {\n\t\t\t\tinit(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n\t\t\t},\n\t\t\tinitNonuniformCatmullRom: function (x0, x1, x2, x3, dt0, dt1, dt2) {\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tlet t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n\t\t\t\tlet t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\t\t\t\tinit(x1, x2, t1, t2);\n\t\t\t},\n\t\t\tcalc: function (t) {\n\t\t\t\tconst t2 = t * t;\n\t\t\t\tconst t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\t\t\t}\n\t\t};\n\t} //\n\n\n\tconst tmp = new Vector3();\n\tconst px = new CubicPoly(),\n\t\t\t\tpy = new CubicPoly(),\n\t\t\t\tpz = new CubicPoly();\n\n\tclass CatmullRomCurve3 extends Curve {\n\t\tconstructor(points = [], closed = false, curveType = 'centripetal', tension = 0.5) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CatmullRomCurve3';\n\t\t\tthis.points = points;\n\t\t\tthis.closed = closed;\n\t\t\tthis.curveType = curveType;\n\t\t\tthis.tension = tension;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst points = this.points;\n\t\t\tconst l = points.length;\n\t\t\tconst p = (l - (this.closed ? 0 : 1)) * t;\n\t\t\tlet intPoint = Math.floor(p);\n\t\t\tlet weight = p - intPoint;\n\n\t\t\tif (this.closed) {\n\t\t\t\tintPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\n\t\t\t} else if (weight === 0 && intPoint === l - 1) {\n\t\t\t\tintPoint = l - 2;\n\t\t\t\tweight = 1;\n\t\t\t}\n\n\t\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\t\tif (this.closed || intPoint > 0) {\n\t\t\t\tp0 = points[(intPoint - 1) % l];\n\t\t\t} else {\n\t\t\t\t// extrapolate first point\n\t\t\t\ttmp.subVectors(points[0], points[1]).add(points[0]);\n\t\t\t\tp0 = tmp;\n\t\t\t}\n\n\t\t\tconst p1 = points[intPoint % l];\n\t\t\tconst p2 = points[(intPoint + 1) % l];\n\n\t\t\tif (this.closed || intPoint + 2 < l) {\n\t\t\t\tp3 = points[(intPoint + 2) % l];\n\t\t\t} else {\n\t\t\t\t// extrapolate last point\n\t\t\t\ttmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n\t\t\t\tp3 = tmp;\n\t\t\t}\n\n\t\t\tif (this.curveType === 'centripetal' || this.curveType === 'chordal') {\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\t\tlet dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n\t\t\t\tlet dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n\t\t\t\tlet dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n\t\t\t\tif (dt1 < 1e-4) dt1 = 1.0;\n\t\t\t\tif (dt0 < 1e-4) dt0 = dt1;\n\t\t\t\tif (dt2 < 1e-4) dt2 = dt1;\n\t\t\t\tpx.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n\t\t\t\tpy.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n\t\t\t\tpz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n\t\t\t} else if (this.curveType === 'catmullrom') {\n\t\t\t\tpx.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\n\t\t\t\tpy.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\n\t\t\t\tpz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\n\t\t\t}\n\n\t\t\tpoint.set(px.calc(weight), py.calc(weight), pz.calc(weight));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = source.points.length; i < l; i++) {\n\t\t\t\tconst point = source.points[i];\n\t\t\t\tthis.points.push(point.clone());\n\t\t\t}\n\n\t\t\tthis.closed = source.closed;\n\t\t\tthis.curveType = source.curveType;\n\t\t\tthis.tension = source.tension;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.points = [];\n\n\t\t\tfor (let i = 0, l = this.points.length; i < l; i++) {\n\t\t\t\tconst point = this.points[i];\n\t\t\t\tdata.points.push(point.toArray());\n\t\t\t}\n\n\t\t\tdata.closed = this.closed;\n\t\t\tdata.curveType = this.curveType;\n\t\t\tdata.tension = this.tension;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = json.points.length; i < l; i++) {\n\t\t\t\tconst point = json.points[i];\n\t\t\t\tthis.points.push(new Vector3().fromArray(point));\n\t\t\t}\n\n\t\t\tthis.closed = json.closed;\n\t\t\tthis.curveType = json.curveType;\n\t\t\tthis.tension = json.tension;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n\t/**\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/B\u00E9zier_curve\n\t */\n\tfunction CatmullRom(t, p0, p1, p2, p3) {\n\t\tconst v0 = (p2 - p0) * 0.5;\n\t\tconst v1 = (p3 - p1) * 0.5;\n\t\tconst t2 = t * t;\n\t\tconst t3 = t * t2;\n\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\t} //\n\n\n\tfunction QuadraticBezierP0(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn k * k * p;\n\t}\n\n\tfunction QuadraticBezierP1(t, p) {\n\t\treturn 2 * (1 - t) * t * p;\n\t}\n\n\tfunction QuadraticBezierP2(t, p) {\n\t\treturn t * t * p;\n\t}\n\n\tfunction QuadraticBezier(t, p0, p1, p2) {\n\t\treturn QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n\t} //\n\n\n\tfunction CubicBezierP0(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn k * k * k * p;\n\t}\n\n\tfunction CubicBezierP1(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\t}\n\n\tfunction CubicBezierP2(t, p) {\n\t\treturn 3 * (1 - t) * t * t * p;\n\t}\n\n\tfunction CubicBezierP3(t, p) {\n\t\treturn t * t * t * p;\n\t}\n\n\tfunction CubicBezier(t, p0, p1, p2, p3) {\n\t\treturn CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n\t}\n\n\tclass CubicBezierCurve extends Curve {\n\t\tconstructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubicBezierCurve';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2,\n\t\t\t\t\t\tv3 = this.v3;\n\t\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\tthis.v3.copy(source.v3);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\tdata.v3 = this.v3.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\tthis.v3.fromArray(json.v3);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n\tclass CubicBezierCurve3 extends Curve {\n\t\tconstructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubicBezierCurve3';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2,\n\t\t\t\t\t\tv3 = this.v3;\n\t\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\tthis.v3.copy(source.v3);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\tdata.v3 = this.v3.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\tthis.v3.fromArray(json.v3);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n\tclass LineCurve extends Curve {\n\t\tconstructor(v1 = new Vector2(), v2 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineCurve';\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\n\t\t\tif (t === 1) {\n\t\t\t\tpoint.copy(this.v2);\n\t\t\t} else {\n\t\t\t\tpoint.copy(this.v2).sub(this.v1);\n\t\t\t\tpoint.multiplyScalar(t).add(this.v1);\n\t\t\t}\n\n\t\t\treturn point;\n\t\t} // Line curve is linear, so we can overwrite default getPointAt\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\treturn this.getPoint(u, optionalTarget);\n\t\t}\n\n\t\tgetTangent(t, optionalTarget) {\n\t\t\tconst tangent = optionalTarget || new Vector2();\n\t\t\ttangent.copy(this.v2).sub(this.v1).normalize();\n\t\t\treturn tangent;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tclass LineCurve3 extends Curve {\n\t\tconstructor(v1 = new Vector3(), v2 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineCurve3';\n\t\t\tthis.isLineCurve3 = true;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\n\t\t\tif (t === 1) {\n\t\t\t\tpoint.copy(this.v2);\n\t\t\t} else {\n\t\t\t\tpoint.copy(this.v2).sub(this.v1);\n\t\t\t\tpoint.multiplyScalar(t).add(this.v1);\n\t\t\t}\n\n\t\t\treturn point;\n\t\t} // Line curve is linear, so we can overwrite default getPointAt\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\treturn this.getPoint(u, optionalTarget);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass QuadraticBezierCurve extends Curve {\n\t\tconstructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'QuadraticBezierCurve';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2;\n\t\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n\tclass QuadraticBezierCurve3 extends Curve {\n\t\tconstructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'QuadraticBezierCurve3';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2;\n\t\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n\tclass SplineCurve extends Curve {\n\t\tconstructor(points = []) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SplineCurve';\n\t\t\tthis.points = points;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst points = this.points;\n\t\t\tconst p = (points.length - 1) * t;\n\t\t\tconst intPoint = Math.floor(p);\n\t\t\tconst weight = p - intPoint;\n\t\t\tconst p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n\t\t\tconst p1 = points[intPoint];\n\t\t\tconst p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n\t\t\tconst p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n\t\t\tpoint.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = source.points.length; i < l; i++) {\n\t\t\t\tconst point = source.points[i];\n\t\t\t\tthis.points.push(point.clone());\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.points = [];\n\n\t\t\tfor (let i = 0, l = this.points.length; i < l; i++) {\n\t\t\t\tconst point = this.points[i];\n\t\t\t\tdata.points.push(point.toArray());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = json.points.length; i < l; i++) {\n\t\t\t\tconst point = json.points[i];\n\t\t\t\tthis.points.push(new Vector2().fromArray(point));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tvar Curves = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tArcCurve: ArcCurve,\n\t\tCatmullRomCurve3: CatmullRomCurve3,\n\t\tCubicBezierCurve: CubicBezierCurve,\n\t\tCubicBezierCurve3: CubicBezierCurve3,\n\t\tEllipseCurve: EllipseCurve,\n\t\tLineCurve: LineCurve,\n\t\tLineCurve3: LineCurve3,\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\t\tSplineCurve: SplineCurve\n\t});\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *\tcurves, but retains the api of a curve\n\t **************************************************************/\n\n\tclass CurvePath extends Curve {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'CurvePath';\n\t\t\tthis.curves = [];\n\t\t\tthis.autoClose = false; // Automatically closes the path\n\t\t}\n\n\t\tadd(curve) {\n\t\t\tthis.curves.push(curve);\n\t\t}\n\n\t\tclosePath() {\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tconst startPoint = this.curves[0].getPoint(0);\n\t\t\tconst endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n\t\t\tif (!startPoint.equals(endPoint)) {\n\t\t\t\tthis.curves.push(new LineCurve(endPoint, startPoint));\n\t\t\t}\n\t\t} // To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\n\t\tgetPoint(t, optionalTarget) {\n\t\t\tconst d = t * this.getLength();\n\t\t\tconst curveLengths = this.getCurveLengths();\n\t\t\tlet i = 0; // To think about boundaries points.\n\n\t\t\twhile (i < curveLengths.length) {\n\t\t\t\tif (curveLengths[i] >= d) {\n\t\t\t\t\tconst diff = curveLengths[i] - d;\n\t\t\t\t\tconst curve = this.curves[i];\n\t\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\t\t\t\t\treturn curve.getPointAt(u, optionalTarget);\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\treturn null; // loop where sum != 0, sum > d , sum+1 <d\n\t\t} // We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\n\t\tgetLength() {\n\t\t\tconst lens = this.getCurveLengths();\n\t\t\treturn lens[lens.length - 1];\n\t\t} // cacheLengths must be recalculated.\n\n\n\t\tupdateArcLengths() {\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\t\t} // Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\n\t\tgetCurveLengths() {\n\t\t\t// We use cache values if curves and cache array are same length\n\t\t\tif (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n\t\t\t\treturn this.cacheLengths;\n\t\t\t} // Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\n\t\t\tconst lengths = [];\n\t\t\tlet sums = 0;\n\n\t\t\tfor (let i = 0, l = this.curves.length; i < l; i++) {\n\t\t\t\tsums += this.curves[i].getLength();\n\t\t\t\tlengths.push(sums);\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\t\t\treturn lengths;\n\t\t}\n\n\t\tgetSpacedPoints(divisions = 40) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let i = 0; i <= divisions; i++) {\n\t\t\t\tpoints.push(this.getPoint(i / divisions));\n\t\t\t}\n\n\t\t\tif (this.autoClose) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\treturn points;\n\t\t}\n\n\t\tgetPoints(divisions = 12) {\n\t\t\tconst points = [];\n\t\t\tlet last;\n\n\t\t\tfor (let i = 0, curves = this.curves; i < curves.length; i++) {\n\t\t\t\tconst curve = curves[i];\n\t\t\t\tconst resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && (curve.isLineCurve || curve.isLineCurve3) ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\n\t\t\t\tconst pts = curve.getPoints(resolution);\n\n\t\t\t\tfor (let j = 0; j < pts.length; j++) {\n\t\t\t\t\tconst point = pts[j];\n\t\t\t\t\tif (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tlast = point;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\treturn points;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.curves = [];\n\n\t\t\tfor (let i = 0, l = source.curves.length; i < l; i++) {\n\t\t\t\tconst curve = source.curves[i];\n\t\t\t\tthis.curves.push(curve.clone());\n\t\t\t}\n\n\t\t\tthis.autoClose = source.autoClose;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.autoClose = this.autoClose;\n\t\t\tdata.curves = [];\n\n\t\t\tfor (let i = 0, l = this.curves.length; i < l; i++) {\n\t\t\t\tconst curve = this.curves[i];\n\t\t\t\tdata.curves.push(curve.toJSON());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.autoClose = json.autoClose;\n\t\t\tthis.curves = [];\n\n\t\t\tfor (let i = 0, l = json.curves.length; i < l; i++) {\n\t\t\t\tconst curve = json.curves[i];\n\t\t\t\tthis.curves.push(new Curves[curve.type]().fromJSON(curve));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Path extends CurvePath {\n\t\tconstructor(points) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Path';\n\t\t\tthis.currentPoint = new Vector2();\n\n\t\t\tif (points) {\n\t\t\t\tthis.setFromPoints(points);\n\t\t\t}\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.moveTo(points[0].x, points[0].y);\n\n\t\t\tfor (let i = 1, l = points.length; i < l; i++) {\n\t\t\t\tthis.lineTo(points[i].x, points[i].y);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tmoveTo(x, y) {\n\t\t\tthis.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n\n\t\t\treturn this;\n\t\t}\n\n\t\tlineTo(x, y) {\n\t\t\tconst curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tquadraticCurveTo(aCPx, aCPy, aX, aY) {\n\t\t\tconst curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tbezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n\t\t\tconst curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tsplineThru(pts\n\t\t/*Array of Vector*/\n\t\t) {\n\t\t\tconst npts = [this.currentPoint.clone()].concat(pts);\n\t\t\tconst curve = new SplineCurve(npts);\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.copy(pts[pts.length - 1]);\n\t\t\treturn this;\n\t\t}\n\n\t\tarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tconst x0 = this.currentPoint.x;\n\t\t\tconst y0 = this.currentPoint.y;\n\t\t\tthis.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\treturn this;\n\t\t}\n\n\t\tabsarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tthis.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\treturn this;\n\t\t}\n\n\t\tellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n\t\t\tconst x0 = this.currentPoint.x;\n\t\t\tconst y0 = this.currentPoint.y;\n\t\t\tthis.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\t\t\treturn this;\n\t\t}\n\n\t\tabsellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n\t\t\tconst curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n\t\t\tif (this.curves.length > 0) {\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tconst firstPoint = curve.getPoint(0);\n\n\t\t\t\tif (!firstPoint.equals(this.currentPoint)) {\n\t\t\t\t\tthis.lineTo(firstPoint.x, firstPoint.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.curves.push(curve);\n\t\t\tconst lastPoint = curve.getPoint(1);\n\t\t\tthis.currentPoint.copy(lastPoint);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.currentPoint.copy(source.currentPoint);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.currentPoint.fromArray(json.currentPoint);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Shape extends Path {\n\t\tconstructor(points) {\n\t\t\tsuper(points);\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.type = 'Shape';\n\t\t\tthis.holes = [];\n\t\t}\n\n\t\tgetPointsHoles(divisions) {\n\t\t\tconst holesPts = [];\n\n\t\t\tfor (let i = 0, l = this.holes.length; i < l; i++) {\n\t\t\t\tholesPts[i] = this.holes[i].getPoints(divisions);\n\t\t\t}\n\n\t\t\treturn holesPts;\n\t\t} // get points of shape and holes (keypoints based on segments parameter)\n\n\n\t\textractPoints(divisions) {\n\t\t\treturn {\n\t\t\t\tshape: this.getPoints(divisions),\n\t\t\t\tholes: this.getPointsHoles(divisions)\n\t\t\t};\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.holes = [];\n\n\t\t\tfor (let i = 0, l = source.holes.length; i < l; i++) {\n\t\t\t\tconst hole = source.holes[i];\n\t\t\t\tthis.holes.push(hole.clone());\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.holes = [];\n\n\t\t\tfor (let i = 0, l = this.holes.length; i < l; i++) {\n\t\t\t\tconst hole = this.holes[i];\n\t\t\t\tdata.holes.push(hole.toJSON());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.uuid = json.uuid;\n\t\t\tthis.holes = [];\n\n\t\t\tfor (let i = 0, l = json.holes.length; i < l; i++) {\n\t\t\t\tconst hole = json.holes[i];\n\t\t\t\tthis.holes.push(new Path().fromJSON(hole));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\t/**\n\t * Port from https://github.com/mapbox/earcut (v2.2.2)\n\t */\n\tconst Earcut = {\n\t\ttriangulate: function (data, holeIndices, dim = 2) {\n\t\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\t\tconst outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\t\t\tlet outerNode = linkedList(data, 0, outerLen, dim, true);\n\t\t\tconst triangles = [];\n\t\t\tif (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\t\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\t\t\tif (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\t\tif (data.length > 80 * dim) {\n\t\t\t\tminX = maxX = data[0];\n\t\t\t\tminY = maxY = data[1];\n\n\t\t\t\tfor (let i = dim; i < outerLen; i += dim) {\n\t\t\t\t\tx = data[i];\n\t\t\t\t\ty = data[i + 1];\n\t\t\t\t\tif (x < minX) minX = x;\n\t\t\t\t\tif (y < minY) minY = y;\n\t\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\t} // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\n\t\t\t\tinvSize = Math.max(maxX - minX, maxY - minY);\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\t\t\t}\n\n\t\t\tearcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\t\t\treturn triangles;\n\t\t}\n\t}; // create a circular doubly linked list from polygon points in the specified winding order\n\n\tfunction linkedList(data, start, end, dim, clockwise) {\n\t\tlet i, last;\n\n\t\tif (clockwise === signedArea(data, start, end, dim) > 0) {\n\t\t\tfor (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n\t\t} else {\n\t\t\tfor (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n\t\t}\n\n\t\tif (last && equals(last, last.next)) {\n\t\t\tremoveNode(last);\n\t\t\tlast = last.next;\n\t\t}\n\n\t\treturn last;\n\t} // eliminate colinear or duplicate points\n\n\n\tfunction filterPoints(start, end) {\n\t\tif (!start) return start;\n\t\tif (!end) end = start;\n\t\tlet p = start,\n\t\t\t\tagain;\n\n\t\tdo {\n\t\t\tagain = false;\n\n\t\t\tif (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n\t\t\t\tremoveNode(p);\n\t\t\t\tp = end = p.prev;\n\t\t\t\tif (p === p.next) break;\n\t\t\t\tagain = true;\n\t\t\t} else {\n\t\t\t\tp = p.next;\n\t\t\t}\n\t\t} while (again || p !== end);\n\n\t\treturn end;\n\t} // main ear slicing loop which triangulates a polygon (given as a linked list)\n\n\n\tfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n\t\tif (!ear) return; // interlink polygon nodes in z-order\n\n\t\tif (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\t\tlet stop = ear,\n\t\t\t\tprev,\n\t\t\t\tnext; // iterate through ears, slicing them one by one\n\n\t\twhile (ear.prev !== ear.next) {\n\t\t\tprev = ear.prev;\n\t\t\tnext = ear.next;\n\n\t\t\tif (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n\t\t\t\t// cut off the triangle\n\t\t\t\ttriangles.push(prev.i / dim);\n\t\t\t\ttriangles.push(ear.i / dim);\n\t\t\t\ttriangles.push(next.i / dim);\n\t\t\t\tremoveNode(ear); // skipping the next vertex leads to less sliver triangles\n\n\t\t\t\tear = next.next;\n\t\t\t\tstop = next.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tear = next; // if we looped through the whole remaining polygon and can't find any more ears\n\n\t\t\tif (ear === stop) {\n\t\t\t\t// try filtering points and slicing again\n\t\t\t\tif (!pass) {\n\t\t\t\t\tearcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\n\t\t\t\t} else if (pass === 1) {\n\t\t\t\t\tear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n\t\t\t\t\tearcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\n\t\t\t\t} else if (pass === 2) {\n\t\t\t\t\tsplitEarcut(ear, triangles, dim, minX, minY, invSize);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} // check whether a polygon node forms a valid ear with adjacent nodes\n\n\n\tfunction isEar(ear) {\n\t\tconst a = ear.prev,\n\t\t\t\t\tb = ear,\n\t\t\t\t\tc = ear.next;\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\t\t// now make sure we don't have other points inside the potential ear\n\n\t\tlet p = ear.next.next;\n\n\t\twhile (p !== ear.prev) {\n\t\t\tif (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.next;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction isEarHashed(ear, minX, minY, invSize) {\n\t\tconst a = ear.prev,\n\t\t\t\t\tb = ear,\n\t\t\t\t\tc = ear.next;\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\t\t// triangle bbox; min & max are calculated like this for speed\n\n\t\tconst minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n\t\t\t\t\tminTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n\t\t\t\t\tmaxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n\t\t\t\t\tmaxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\n\n\t\tconst minZ = zOrder(minTX, minTY, minX, minY, invSize),\n\t\t\t\t\tmaxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\t\tlet p = ear.prevZ,\n\t\t\t\tn = ear.nextZ; // look for points inside the triangle in both directions\n\n\t\twhile (p && p.z >= minZ && n && n.z <= maxZ) {\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.prevZ;\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n\t\t\tn = n.nextZ;\n\t\t} // look for remaining points in decreasing z-order\n\n\n\t\twhile (p && p.z >= minZ) {\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.prevZ;\n\t\t} // look for remaining points in increasing z-order\n\n\n\t\twhile (n && n.z <= maxZ) {\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n\t\t\tn = n.nextZ;\n\t\t}\n\n\t\treturn true;\n\t} // go through all polygon nodes and cure small local self-intersections\n\n\n\tfunction cureLocalIntersections(start, triangles, dim) {\n\t\tlet p = start;\n\n\t\tdo {\n\t\t\tconst a = p.prev,\n\t\t\t\t\t\tb = p.next.next;\n\n\t\t\tif (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\t\t\t\ttriangles.push(a.i / dim);\n\t\t\t\ttriangles.push(p.i / dim);\n\t\t\t\ttriangles.push(b.i / dim); // remove two nodes involved\n\n\t\t\t\tremoveNode(p);\n\t\t\t\tremoveNode(p.next);\n\t\t\t\tp = start = b;\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\treturn filterPoints(p);\n\t} // try splitting polygon into two and triangulate them independently\n\n\n\tfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n\t\t// look for a valid diagonal that divides the polygon into two\n\t\tlet a = start;\n\n\t\tdo {\n\t\t\tlet b = a.next.next;\n\n\t\t\twhile (b !== a.prev) {\n\t\t\t\tif (a.i !== b.i && isValidDiagonal(a, b)) {\n\t\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\t\tlet c = splitPolygon(a, b); // filter colinear points around the cuts\n\n\t\t\t\t\ta = filterPoints(a, a.next);\n\t\t\t\t\tc = filterPoints(c, c.next); // run earcut on each half\n\n\t\t\t\t\tearcutLinked(a, triangles, dim, minX, minY, invSize);\n\t\t\t\t\tearcutLinked(c, triangles, dim, minX, minY, invSize);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tb = b.next;\n\t\t\t}\n\n\t\t\ta = a.next;\n\t\t} while (a !== start);\n\t} // link every hole into the outer loop, producing a single-ring polygon without holes\n\n\n\tfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n\t\tconst queue = [];\n\t\tlet i, len, start, end, list;\n\n\t\tfor (i = 0, len = holeIndices.length; i < len; i++) {\n\t\t\tstart = holeIndices[i] * dim;\n\t\t\tend = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n\t\t\tlist = linkedList(data, start, end, dim, false);\n\t\t\tif (list === list.next) list.steiner = true;\n\t\t\tqueue.push(getLeftmost(list));\n\t\t}\n\n\t\tqueue.sort(compareX); // process holes from left to right\n\n\t\tfor (i = 0; i < queue.length; i++) {\n\t\t\teliminateHole(queue[i], outerNode);\n\t\t\touterNode = filterPoints(outerNode, outerNode.next);\n\t\t}\n\n\t\treturn outerNode;\n\t}\n\n\tfunction compareX(a, b) {\n\t\treturn a.x - b.x;\n\t} // find a bridge between vertices that connects hole with an outer ring and and link it\n\n\n\tfunction eliminateHole(hole, outerNode) {\n\t\touterNode = findHoleBridge(hole, outerNode);\n\n\t\tif (outerNode) {\n\t\t\tconst b = splitPolygon(outerNode, hole); // filter collinear points around the cuts\n\n\t\t\tfilterPoints(outerNode, outerNode.next);\n\t\t\tfilterPoints(b, b.next);\n\t\t}\n\t} // David Eberly's algorithm for finding a bridge between hole and outer polygon\n\n\n\tfunction findHoleBridge(hole, outerNode) {\n\t\tlet p = outerNode;\n\t\tconst hx = hole.x;\n\t\tconst hy = hole.y;\n\t\tlet qx = -Infinity,\n\t\t\t\tm; // find a segment intersected by a ray from the hole's leftmost point to the left;\n\t\t// segment's endpoint with lesser x will be potential connection point\n\n\t\tdo {\n\t\t\tif (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n\t\t\t\tconst x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n\t\t\t\tif (x <= hx && x > qx) {\n\t\t\t\t\tqx = x;\n\n\t\t\t\t\tif (x === hx) {\n\t\t\t\t\t\tif (hy === p.y) return p;\n\t\t\t\t\t\tif (hy === p.next.y) return p.next;\n\t\t\t\t\t}\n\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== outerNode);\n\n\t\tif (!m) return null;\n\t\tif (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t\t// if there are no points found, we have a valid connection;\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\t\tconst stop = m,\n\t\t\t\t\tmx = m.x,\n\t\t\t\t\tmy = m.y;\n\t\tlet tanMin = Infinity,\n\t\t\t\ttan;\n\t\tp = m;\n\n\t\tdo {\n\t\t\tif (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\t\t\t\ttan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n\t\t\t\tif (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\n\t\t\t\t\tm = p;\n\t\t\t\t\ttanMin = tan;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== stop);\n\n\t\treturn m;\n\t} // whether sector in vertex m contains sector in vertex p in the same coordinates\n\n\n\tfunction sectorContainsSector(m, p) {\n\t\treturn area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n\t} // interlink polygon nodes in z-order\n\n\n\tfunction indexCurve(start, minX, minY, invSize) {\n\t\tlet p = start;\n\n\t\tdo {\n\t\t\tif (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n\t\t\tp.prevZ = p.prev;\n\t\t\tp.nextZ = p.next;\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\tp.prevZ.nextZ = null;\n\t\tp.prevZ = null;\n\t\tsortLinked(p);\n\t} // Simon Tatham's linked list merge sort algorithm\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\n\n\tfunction sortLinked(list) {\n\t\tlet i,\n\t\t\t\tp,\n\t\t\t\tq,\n\t\t\t\te,\n\t\t\t\ttail,\n\t\t\t\tnumMerges,\n\t\t\t\tpSize,\n\t\t\t\tqSize,\n\t\t\t\tinSize = 1;\n\n\t\tdo {\n\t\t\tp = list;\n\t\t\tlist = null;\n\t\t\ttail = null;\n\t\t\tnumMerges = 0;\n\n\t\t\twhile (p) {\n\t\t\t\tnumMerges++;\n\t\t\t\tq = p;\n\t\t\t\tpSize = 0;\n\n\t\t\t\tfor (i = 0; i < inSize; i++) {\n\t\t\t\t\tpSize++;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tif (!q) break;\n\t\t\t\t}\n\n\t\t\t\tqSize = inSize;\n\n\t\t\t\twhile (pSize > 0 || qSize > 0 && q) {\n\t\t\t\t\tif (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n\t\t\t\t\t\te = p;\n\t\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\t\tpSize--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\te = q;\n\t\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\t\tqSize--;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tail) tail.nextZ = e;else list = e;\n\t\t\t\t\te.prevZ = tail;\n\t\t\t\t\ttail = e;\n\t\t\t\t}\n\n\t\t\t\tp = q;\n\t\t\t}\n\n\t\t\ttail.nextZ = null;\n\t\t\tinSize *= 2;\n\t\t} while (numMerges > 1);\n\n\t\treturn list;\n\t} // z-order of a point given coords and inverse of the longer side of data bbox\n\n\n\tfunction zOrder(x, y, minX, minY, invSize) {\n\t\t// coords are transformed into non-negative 15-bit integer range\n\t\tx = 32767 * (x - minX) * invSize;\n\t\ty = 32767 * (y - minY) * invSize;\n\t\tx = (x | x << 8) & 0x00FF00FF;\n\t\tx = (x | x << 4) & 0x0F0F0F0F;\n\t\tx = (x | x << 2) & 0x33333333;\n\t\tx = (x | x << 1) & 0x55555555;\n\t\ty = (y | y << 8) & 0x00FF00FF;\n\t\ty = (y | y << 4) & 0x0F0F0F0F;\n\t\ty = (y | y << 2) & 0x33333333;\n\t\ty = (y | y << 1) & 0x55555555;\n\t\treturn x | y << 1;\n\t} // find the leftmost node of a polygon ring\n\n\n\tfunction getLeftmost(start) {\n\t\tlet p = start,\n\t\t\t\tleftmost = start;\n\n\t\tdo {\n\t\t\tif (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\treturn leftmost;\n\t} // check if a point lies within a convex triangle\n\n\n\tfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n\t\treturn (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n\t} // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\n\n\tfunction isValidDiagonal(a, b) {\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n\t\tequals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n\t} // signed area of a triangle\n\n\n\tfunction area(p, q, r) {\n\t\treturn (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n\t} // check if two points are equal\n\n\n\tfunction equals(p1, p2) {\n\t\treturn p1.x === p2.x && p1.y === p2.y;\n\t} // check if two segments intersect\n\n\n\tfunction intersects(p1, q1, p2, q2) {\n\t\tconst o1 = sign(area(p1, q1, p2));\n\t\tconst o2 = sign(area(p1, q1, q2));\n\t\tconst o3 = sign(area(p2, q2, p1));\n\t\tconst o4 = sign(area(p2, q2, q1));\n\t\tif (o1 !== o2 && o3 !== o4) return true; // general case\n\n\t\tif (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\n\t\tif (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\n\t\tif (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\n\t\tif (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\t\treturn false;\n\t} // for collinear points p, q, r, check if point q lies on segment pr\n\n\n\tfunction onSegment(p, q, r) {\n\t\treturn q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n\t}\n\n\tfunction sign(num) {\n\t\treturn num > 0 ? 1 : num < 0 ? -1 : 0;\n\t} // check if a polygon diagonal intersects any polygon segments\n\n\n\tfunction intersectsPolygon(a, b) {\n\t\tlet p = a;\n\n\t\tdo {\n\t\t\tif (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n\t\t\tp = p.next;\n\t\t} while (p !== a);\n\n\t\treturn false;\n\t} // check if a polygon diagonal is locally inside the polygon\n\n\n\tfunction locallyInside(a, b) {\n\t\treturn area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n\t} // check if the middle point of a polygon diagonal is inside the polygon\n\n\n\tfunction middleInside(a, b) {\n\t\tlet p = a,\n\t\t\t\tinside = false;\n\t\tconst px = (a.x + b.x) / 2,\n\t\t\t\t\tpy = (a.y + b.y) / 2;\n\n\t\tdo {\n\t\t\tif (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n\t\t\tp = p.next;\n\t\t} while (p !== a);\n\n\t\treturn inside;\n\t} // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\n\n\tfunction splitPolygon(a, b) {\n\t\tconst a2 = new Node(a.i, a.x, a.y),\n\t\t\t\t\tb2 = new Node(b.i, b.x, b.y),\n\t\t\t\t\tan = a.next,\n\t\t\t\t\tbp = b.prev;\n\t\ta.next = b;\n\t\tb.prev = a;\n\t\ta2.next = an;\n\t\tan.prev = a2;\n\t\tb2.next = a2;\n\t\ta2.prev = b2;\n\t\tbp.next = b2;\n\t\tb2.prev = bp;\n\t\treturn b2;\n\t} // create a node and optionally link it with previous one (in a circular doubly linked list)\n\n\n\tfunction insertNode(i, x, y, last) {\n\t\tconst p = new Node(i, x, y);\n\n\t\tif (!last) {\n\t\t\tp.prev = p;\n\t\t\tp.next = p;\n\t\t} else {\n\t\t\tp.next = last.next;\n\t\t\tp.prev = last;\n\t\t\tlast.next.prev = p;\n\t\t\tlast.next = p;\n\t\t}\n\n\t\treturn p;\n\t}\n\n\tfunction removeNode(p) {\n\t\tp.next.prev = p.prev;\n\t\tp.prev.next = p.next;\n\t\tif (p.prevZ) p.prevZ.nextZ = p.nextZ;\n\t\tif (p.nextZ) p.nextZ.prevZ = p.prevZ;\n\t}\n\n\tfunction Node(i, x, y) {\n\t\t// vertex index in coordinates array\n\t\tthis.i = i; // vertex coordinates\n\n\t\tthis.x = x;\n\t\tthis.y = y; // previous and next vertex nodes in a polygon ring\n\n\t\tthis.prev = null;\n\t\tthis.next = null; // z-order curve value\n\n\t\tthis.z = null; // previous and next nodes in z-order\n\n\t\tthis.prevZ = null;\n\t\tthis.nextZ = null; // indicates whether this is a steiner point\n\n\t\tthis.steiner = false;\n\t}\n\n\tfunction signedArea(data, start, end, dim) {\n\t\tlet sum = 0;\n\n\t\tfor (let i = start, j = end - dim; i < end; i += dim) {\n\t\t\tsum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n\t\t\tj = i;\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\tclass ShapeUtils {\n\t\t// calculate area of the contour polygon\n\t\tstatic area(contour) {\n\t\t\tconst n = contour.length;\n\t\t\tlet a = 0.0;\n\n\t\t\tfor (let p = n - 1, q = 0; q < n; p = q++) {\n\t\t\t\ta += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\t\t}\n\n\t\tstatic isClockWise(pts) {\n\t\t\treturn ShapeUtils.area(pts) < 0;\n\t\t}\n\n\t\tstatic triangulateShape(contour, holes) {\n\t\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\n\t\t\tconst holeIndices = []; // array of hole indices\n\n\t\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\t\tremoveDupEndPts(contour);\n\t\t\taddContour(vertices, contour); //\n\n\t\t\tlet holeIndex = contour.length;\n\t\t\tholes.forEach(removeDupEndPts);\n\n\t\t\tfor (let i = 0; i < holes.length; i++) {\n\t\t\t\tholeIndices.push(holeIndex);\n\t\t\t\tholeIndex += holes[i].length;\n\t\t\t\taddContour(vertices, holes[i]);\n\t\t\t} //\n\n\n\t\t\tconst triangles = Earcut.triangulate(vertices, holeIndices); //\n\n\t\t\tfor (let i = 0; i < triangles.length; i += 3) {\n\t\t\t\tfaces.push(triangles.slice(i, i + 3));\n\t\t\t}\n\n\t\t\treturn faces;\n\t\t}\n\n\t}\n\n\tfunction removeDupEndPts(points) {\n\t\tconst l = points.length;\n\n\t\tif (l > 2 && points[l - 1].equals(points[0])) {\n\t\t\tpoints.pop();\n\t\t}\n\t}\n\n\tfunction addContour(vertices, contour) {\n\t\tfor (let i = 0; i < contour.length; i++) {\n\t\t\tvertices.push(contour[i].x);\n\t\t\tvertices.push(contour[i].y);\n\t\t}\n\t}\n\n\t/**\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *\tcurveSegments: <int>, // number of points on the curves\n\t *\tsteps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *\tdepth: <float>, // Depth to extrude the shape\n\t *\n\t *\tbevelEnabled: <bool>, // turn on bevel\n\t *\tbevelThickness: <float>, // how deep into the original shape bevel goes\n\t *\tbevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n\t *\tbevelOffset: <float>, // how far from shape outline does bevel start\n\t *\tbevelSegments: <int>, // number of bevel layers\n\t *\n\t *\textrudePath: <THREE.Curve> // curve to extrude shape along\n\t *\n\t *\tUVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\tclass ExtrudeGeometry extends BufferGeometry {\n\t\tconstructor(shapes = new Shape([new Vector2(0.5, 0.5), new Vector2(-0.5, 0.5), new Vector2(-0.5, -0.5), new Vector2(0.5, -0.5)]), options = {}) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ExtrudeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\toptions: options\n\t\t\t};\n\t\t\tshapes = Array.isArray(shapes) ? shapes : [shapes];\n\t\t\tconst scope = this;\n\t\t\tconst verticesArray = [];\n\t\t\tconst uvArray = [];\n\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\taddShape(shape);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvArray, 2));\n\t\t\tthis.computeVertexNormals(); // functions\n\n\t\t\tfunction addShape(shape) {\n\t\t\t\tconst placeholder = []; // options\n\n\t\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\t\tlet depth = options.depth !== undefined ? options.depth : 1;\n\t\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\t\t\t\tconst extrudePath = options.extrudePath;\n\t\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\n\n\t\t\t\tif (options.amount !== undefined) {\n\t\t\t\t\tconsole.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\n\t\t\t\t\tdepth = options.amount;\n\t\t\t\t} //\n\n\n\t\t\t\tlet extrudePts,\n\t\t\t\t\t\textrudeByPath = false;\n\t\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\t\tif (extrudePath) {\n\t\t\t\t\textrudePts = extrudePath.getSpacedPoints(steps);\n\t\t\t\t\textrudeByPath = true;\n\t\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\t\t\t\t\t// SETUP TNB variables\n\t\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\t\tsplineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\t\tbinormal = new Vector3();\n\t\t\t\t\tnormal = new Vector3();\n\t\t\t\t\tposition2 = new Vector3();\n\t\t\t\t} // Safeguards if bevels are not enabled\n\n\n\t\t\t\tif (!bevelEnabled) {\n\t\t\t\t\tbevelSegments = 0;\n\t\t\t\t\tbevelThickness = 0;\n\t\t\t\t\tbevelSize = 0;\n\t\t\t\t\tbevelOffset = 0;\n\t\t\t\t} // Variables initialization\n\n\n\t\t\t\tconst shapePoints = shape.extractPoints(curveSegments);\n\t\t\t\tlet vertices = shapePoints.shape;\n\t\t\t\tconst holes = shapePoints.holes;\n\t\t\t\tconst reverse = !ShapeUtils.isClockWise(vertices);\n\n\t\t\t\tif (reverse) {\n\t\t\t\t\tvertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\n\t\t\t\t\t\tif (ShapeUtils.isClockWise(ahole)) {\n\t\t\t\t\t\t\tholes[h] = ahole.reverse();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst faces = ShapeUtils.triangulateShape(vertices, holes);\n\t\t\t\t/* Vertices */\n\n\t\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\tvertices = vertices.concat(ahole);\n\t\t\t\t}\n\n\t\t\t\tfunction scalePt2(pt, vec, size) {\n\t\t\t\t\tif (!vec) console.error('THREE.ExtrudeGeometry: vec does not exist');\n\t\t\t\t\treturn vec.clone().multiplyScalar(size).add(pt);\n\t\t\t\t}\n\n\t\t\t\tconst vlen = vertices.length,\n\t\t\t\t\t\t\tflen = faces.length; // Find directions for point movement\n\n\t\t\t\tfunction getBevelVec(inPt, inPrev, inNext) {\n\t\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t\t//\t shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t\t//\n\t\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t\t//\tadjacent edges of inPt at a distance of 1 unit on the left side.\n\t\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\t\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\t\t\t\t\tconst v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n\t\t\t\t\tconst collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n\t\t\t\t\tif (Math.abs(collinear0) > Number.EPSILON) {\n\t\t\t\t\t\t// not collinear\n\t\t\t\t\t\t// length of vectors for normalizing\n\t\t\t\t\t\tconst v_prev_len = Math.sqrt(v_prev_lensq);\n\t\t\t\t\t\tconst v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n\t\t\t\t\t\tconst ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n\t\t\t\t\t\tconst ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n\t\t\t\t\t\tconst ptNextShift_x = inNext.x - v_next_y / v_next_len;\n\t\t\t\t\t\tconst ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n\t\t\t\t\t\tconst sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n\t\t\t\t\t\tv_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n\t\t\t\t\t\tv_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t\t//\tbut prevent crazy spikes\n\n\t\t\t\t\t\tconst v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n\t\t\t\t\t\tif (v_trans_lensq <= 2) {\n\t\t\t\t\t\t\treturn new Vector2(v_trans_x, v_trans_y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_trans_lensq / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// handle special case of collinear edges\n\t\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\t\tif (v_prev_x > Number.EPSILON) {\n\t\t\t\t\t\t\tif (v_next_x > Number.EPSILON) {\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (v_prev_x < -Number.EPSILON) {\n\t\t\t\t\t\t\t\tif (v_next_x < -Number.EPSILON) {\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (direction_eq) {\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\t\tv_trans_x = -v_prev_y;\n\t\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n\t\t\t\t}\n\n\t\t\t\tconst contourMovements = [];\n\n\t\t\t\tfor (let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n\t\t\t\t\tif (j === il) j = 0;\n\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\n\t\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\t\tcontourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n\t\t\t\t}\n\n\t\t\t\tconst holesMovements = [];\n\t\t\t\tlet oneHoleMovements,\n\t\t\t\t\t\tverticesMovements = contourMovements.concat();\n\n\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\toneHoleMovements = [];\n\n\t\t\t\t\tfor (let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n\t\t\t\t\t\tif (j === il) j = 0;\n\t\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\n\n\t\t\t\t\t\toneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n\t\t\t\t\t}\n\n\t\t\t\t\tholesMovements.push(oneHoleMovements);\n\t\t\t\t\tverticesMovements = verticesMovements.concat(oneHoleMovements);\n\t\t\t\t} // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n\t\t\t\tfor (let b = 0; b < bevelSegments; b++) {\n\t\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\t\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\t\tconst z = bevelThickness * Math.cos(t * Math.PI / 2);\n\t\t\t\t\tconst bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n\t\t\t\t\tfor (let i = 0, il = contour.length; i < il; i++) {\n\t\t\t\t\t\tconst vert = scalePt2(contour[i], contourMovements[i], bs);\n\t\t\t\t\t\tv(vert.x, vert.y, -z);\n\t\t\t\t\t} // expand holes\n\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\toneHoleMovements = holesMovements[h];\n\n\t\t\t\t\t\tfor (let i = 0, il = ahole.length; i < il; i++) {\n\t\t\t\t\t\t\tconst vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\t\t\t\t\t\t\tv(vert.x, vert.y, -z);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst bs = bevelSize + bevelOffset; // Back facing vertices\n\n\t\t\t\tfor (let i = 0; i < vlen; i++) {\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\tv(vert.x, vert.y, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\t\t\t\t\t\tnormal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n\t\t\t\t\t\tbinormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n\t\t\t\t\t\tposition2.copy(extrudePts[0]).add(normal).add(binormal);\n\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\n\t\t\t\t\t}\n\t\t\t\t} // Add stepped vertices...\n\t\t\t\t// Including front facing vertices\n\n\n\t\t\t\tfor (let s = 1; s <= steps; s++) {\n\t\t\t\t\tfor (let i = 0; i < vlen; i++) {\n\t\t\t\t\t\tconst vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n\t\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\t\tv(vert.x, vert.y, depth / steps * s);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\t\t\t\t\t\t\tnormal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n\t\t\t\t\t\t\tbinormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n\t\t\t\t\t\t\tposition2.copy(extrudePts[s]).add(normal).add(binormal);\n\t\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // Add bevel segments planes\n\t\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n\t\t\t\tfor (let b = bevelSegments - 1; b >= 0; b--) {\n\t\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\t\tconst z = bevelThickness * Math.cos(t * Math.PI / 2);\n\t\t\t\t\tconst bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n\t\t\t\t\tfor (let i = 0, il = contour.length; i < il; i++) {\n\t\t\t\t\t\tconst vert = scalePt2(contour[i], contourMovements[i], bs);\n\t\t\t\t\t\tv(vert.x, vert.y, depth + z);\n\t\t\t\t\t} // expand holes\n\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\toneHoleMovements = holesMovements[h];\n\n\t\t\t\t\t\tfor (let i = 0, il = ahole.length; i < il; i++) {\n\t\t\t\t\t\t\tconst vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n\t\t\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\t\t\tv(vert.x, vert.y, depth + z);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tv(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* Faces */\n\t\t\t\t// Top and bottom faces\n\n\n\t\t\t\tbuildLidFaces(); // Sides faces\n\n\t\t\t\tbuildSideFaces(); /////\tInternal functions\n\n\t\t\t\tfunction buildLidFaces() {\n\t\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\t\tif (bevelEnabled) {\n\t\t\t\t\t\tlet layer = 0; // steps + 1\n\n\t\t\t\t\t\tlet offset = vlen * layer; // Bottom faces\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[2] + offset, face[1] + offset, face[0] + offset);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\t\toffset = vlen * layer; // Top faces\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[0] + offset, face[1] + offset, face[2] + offset);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Bottom faces\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[2], face[1], face[0]);\n\t\t\t\t\t\t} // Top faces\n\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 0);\n\t\t\t\t} // Create faces for the z-sides of the shape\n\n\n\t\t\t\tfunction buildSideFaces() {\n\t\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\t\tlet layeroffset = 0;\n\t\t\t\t\tsidewalls(contour, layeroffset);\n\t\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\tsidewalls(ahole, layeroffset); //, true\n\n\t\t\t\t\t\tlayeroffset += ahole.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 1);\n\t\t\t\t}\n\n\t\t\t\tfunction sidewalls(contour, layeroffset) {\n\t\t\t\t\tlet i = contour.length;\n\n\t\t\t\t\twhile (--i >= 0) {\n\t\t\t\t\t\tconst j = i;\n\t\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\t\tif (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\t\tfor (let s = 0, sl = steps + bevelSegments * 2; s < sl; s++) {\n\t\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\t\tconst slen2 = vlen * (s + 1);\n\t\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\t\t\t\t\t\t\tf4(a, b, c, d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction v(x, y, z) {\n\t\t\t\t\tplaceholder.push(x);\n\t\t\t\t\tplaceholder.push(y);\n\t\t\t\t\tplaceholder.push(z);\n\t\t\t\t}\n\n\t\t\t\tfunction f3(a, b, c) {\n\t\t\t\t\taddVertex(a);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(c);\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\t\tconst uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n\t\t\t\t\taddUV(uvs[0]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[2]);\n\t\t\t\t}\n\n\t\t\t\tfunction f4(a, b, c, d) {\n\t\t\t\t\taddVertex(a);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(d);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(c);\n\t\t\t\t\taddVertex(d);\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\t\tconst uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n\t\t\t\t\taddUV(uvs[0]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[3]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[2]);\n\t\t\t\t\taddUV(uvs[3]);\n\t\t\t\t}\n\n\t\t\t\tfunction addVertex(index) {\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 0]);\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 1]);\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 2]);\n\t\t\t\t}\n\n\t\t\t\tfunction addUV(vector2) {\n\t\t\t\t\tuvArray.push(vector2.x);\n\t\t\t\t\tuvArray.push(vector2.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tconst shapes = this.parameters.shapes;\n\t\t\tconst options = this.parameters.options;\n\t\t\treturn toJSON$1(shapes, options, data);\n\t\t}\n\n\t\tstatic fromJSON(data, shapes) {\n\t\t\tconst geometryShapes = [];\n\n\t\t\tfor (let j = 0, jl = data.shapes.length; j < jl; j++) {\n\t\t\t\tconst shape = shapes[data.shapes[j]];\n\t\t\t\tgeometryShapes.push(shape);\n\t\t\t}\n\n\t\t\tconst extrudePath = data.options.extrudePath;\n\n\t\t\tif (extrudePath !== undefined) {\n\t\t\t\tdata.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n\t\t\t}\n\n\t\t\treturn new ExtrudeGeometry(geometryShapes, data.options);\n\t\t}\n\n\t}\n\n\tconst WorldUVGenerator = {\n\t\tgenerateTopUV: function (geometry, vertices, indexA, indexB, indexC) {\n\t\t\tconst a_x = vertices[indexA * 3];\n\t\t\tconst a_y = vertices[indexA * 3 + 1];\n\t\t\tconst b_x = vertices[indexB * 3];\n\t\t\tconst b_y = vertices[indexB * 3 + 1];\n\t\t\tconst c_x = vertices[indexC * 3];\n\t\t\tconst c_y = vertices[indexC * 3 + 1];\n\t\t\treturn [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n\t\t},\n\t\tgenerateSideWallUV: function (geometry, vertices, indexA, indexB, indexC, indexD) {\n\t\t\tconst a_x = vertices[indexA * 3];\n\t\t\tconst a_y = vertices[indexA * 3 + 1];\n\t\t\tconst a_z = vertices[indexA * 3 + 2];\n\t\t\tconst b_x = vertices[indexB * 3];\n\t\t\tconst b_y = vertices[indexB * 3 + 1];\n\t\t\tconst b_z = vertices[indexB * 3 + 2];\n\t\t\tconst c_x = vertices[indexC * 3];\n\t\t\tconst c_y = vertices[indexC * 3 + 1];\n\t\t\tconst c_z = vertices[indexC * 3 + 2];\n\t\t\tconst d_x = vertices[indexD * 3];\n\t\t\tconst d_y = vertices[indexD * 3 + 1];\n\t\t\tconst d_z = vertices[indexD * 3 + 2];\n\n\t\t\tif (Math.abs(a_y - b_y) < Math.abs(a_x - b_x)) {\n\t\t\t\treturn [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n\t\t\t} else {\n\t\t\t\treturn [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction toJSON$1(shapes, options, data) {\n\t\tdata.shapes = [];\n\n\t\tif (Array.isArray(shapes)) {\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\tdata.shapes.push(shape.uuid);\n\t\t\t}\n\t\t} else {\n\t\t\tdata.shapes.push(shapes.uuid);\n\t\t}\n\n\t\tif (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\n\t\treturn data;\n\t}\n\n\tclass IcosahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst t = (1 + Math.sqrt(5)) / 2;\n\t\t\tconst vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n\t\t\tconst indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'IcosahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new IcosahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\tclass LatheGeometry extends BufferGeometry {\n\t\tconstructor(points = [new Vector2(0, 0.5), new Vector2(0.5, 0), new Vector2(0, -0.5)], segments = 12, phiStart = 0, phiLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LatheGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tpoints: points,\n\t\t\t\tsegments: segments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength\n\t\t\t};\n\t\t\tsegments = Math.floor(segments); // clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\t\tphiLength = clamp(phiLength, 0, Math.PI * 2); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst inverseSegments = 1.0 / segments;\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // generate vertices and uvs\n\n\t\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\t\t\t\tconst sin = Math.sin(phi);\n\t\t\t\tconst cos = Math.cos(phi);\n\n\t\t\t\tfor (let j = 0; j <= points.length - 1; j++) {\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertex.x = points[j].x * sin;\n\t\t\t\t\tvertex.y = points[j].y;\n\t\t\t\t\tvertex.z = points[j].x * cos;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // uv\n\n\t\t\t\t\tuv.x = i / segments;\n\t\t\t\t\tuv.y = j / (points.length - 1);\n\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t}\n\t\t\t} // indices\n\n\n\t\t\tfor (let i = 0; i < segments; i++) {\n\t\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\t\tconst base = j + i * points.length;\n\t\t\t\t\tconst a = base;\n\t\t\t\t\tconst b = base + points.length;\n\t\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\t\tconst d = base + 1; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\n\n\t\t\tthis.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n\t\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\t\tif (phiLength === Math.PI * 2) {\n\t\t\t\tconst normals = this.attributes.normal.array;\n\t\t\t\tconst n1 = new Vector3();\n\t\t\t\tconst n2 = new Vector3();\n\t\t\t\tconst n = new Vector3(); // this is the buffer offset for the last line of vertices\n\n\t\t\t\tconst base = segments * points.length * 3;\n\n\t\t\t\tfor (let i = 0, j = 0; i < points.length; i++, j += 3) {\n\t\t\t\t\t// select the normal of the vertex in the first line\n\t\t\t\t\tn1.x = normals[j + 0];\n\t\t\t\t\tn1.y = normals[j + 1];\n\t\t\t\t\tn1.z = normals[j + 2]; // select the normal of the vertex in the last line\n\n\t\t\t\t\tn2.x = normals[base + j + 0];\n\t\t\t\t\tn2.y = normals[base + j + 1];\n\t\t\t\t\tn2.z = normals[base + j + 2]; // average normals\n\n\t\t\t\t\tn.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n\t\t\t\t\tnormals[j + 0] = normals[base + j + 0] = n.x;\n\t\t\t\t\tnormals[j + 1] = normals[base + j + 1] = n.y;\n\t\t\t\t\tnormals[j + 2] = normals[base + j + 2] = n.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new LatheGeometry(data.points, data.segments, data.phiStart, data.phiLength);\n\t\t}\n\n\t}\n\n\tclass OctahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n\t\t\tconst indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'OctahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new OctahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\tclass RingGeometry extends BufferGeometry {\n\t\tconstructor(innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'RingGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tthetaSegments: thetaSegments,\n\t\t\t\tphiSegments: phiSegments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tthetaSegments = Math.max(3, thetaSegments);\n\t\t\tphiSegments = Math.max(1, phiSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // some helper variables\n\n\t\t\tlet radius = innerRadius;\n\t\t\tconst radiusStep = (outerRadius - innerRadius) / phiSegments;\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // generate vertices, normals and uvs\n\n\t\t\tfor (let j = 0; j <= phiSegments; j++) {\n\t\t\t\tfor (let i = 0; i <= thetaSegments; i++) {\n\t\t\t\t\t// values are generate from the inside of the ring to the outside\n\t\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n\t\t\t\t\tvertex.x = radius * Math.cos(segment);\n\t\t\t\t\tvertex.y = radius * Math.sin(segment);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormals.push(0, 0, 1); // uv\n\n\t\t\t\t\tuv.x = (vertex.x / outerRadius + 1) / 2;\n\t\t\t\t\tuv.y = (vertex.y / outerRadius + 1) / 2;\n\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t} // increase the radius for next row of vertices\n\n\n\t\t\t\tradius += radiusStep;\n\t\t\t} // indices\n\n\n\t\t\tfor (let j = 0; j < phiSegments; j++) {\n\t\t\t\tconst thetaSegmentLevel = j * (thetaSegments + 1);\n\n\t\t\t\tfor (let i = 0; i < thetaSegments; i++) {\n\t\t\t\t\tconst segment = i + thetaSegmentLevel;\n\t\t\t\t\tconst a = segment;\n\t\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\t\tconst d = segment + 1; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new RingGeometry(data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass ShapeGeometry extends BufferGeometry {\n\t\tconstructor(shapes = new Shape([new Vector2(0, 0.5), new Vector2(-0.5, -0.5), new Vector2(0.5, -0.5)]), curveSegments = 12) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShapeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\tcurveSegments: curveSegments\n\t\t\t}; // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet groupStart = 0;\n\t\t\tlet groupCount = 0; // allow single and array values for \"shapes\" parameter\n\n\t\t\tif (Array.isArray(shapes) === false) {\n\t\t\t\taddShape(shapes);\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < shapes.length; i++) {\n\t\t\t\t\taddShape(shapes[i]);\n\t\t\t\t\tthis.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n\t\t\t\t\tgroupStart += groupCount;\n\t\t\t\t\tgroupCount = 0;\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\n\n\t\t\tfunction addShape(shape) {\n\t\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\t\tconst points = shape.extractPoints(curveSegments);\n\t\t\t\tlet shapeVertices = points.shape;\n\t\t\t\tconst shapeHoles = points.holes; // check direction of vertices\n\n\t\t\t\tif (ShapeUtils.isClockWise(shapeVertices) === false) {\n\t\t\t\t\tshapeVertices = shapeVertices.reverse();\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0, l = shapeHoles.length; i < l; i++) {\n\t\t\t\t\tconst shapeHole = shapeHoles[i];\n\n\t\t\t\t\tif (ShapeUtils.isClockWise(shapeHole) === true) {\n\t\t\t\t\t\tshapeHoles[i] = shapeHole.reverse();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\n\n\t\t\t\tfor (let i = 0, l = shapeHoles.length; i < l; i++) {\n\t\t\t\t\tconst shapeHole = shapeHoles[i];\n\t\t\t\t\tshapeVertices = shapeVertices.concat(shapeHole);\n\t\t\t\t} // vertices, normals, uvs\n\n\n\t\t\t\tfor (let i = 0, l = shapeVertices.length; i < l; i++) {\n\t\t\t\t\tconst vertex = shapeVertices[i];\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, 0);\n\t\t\t\t\tnormals.push(0, 0, 1);\n\t\t\t\t\tuvs.push(vertex.x, vertex.y); // world uvs\n\t\t\t\t} // incides\n\n\n\t\t\t\tfor (let i = 0, l = faces.length; i < l; i++) {\n\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\tconst a = face[0] + indexOffset;\n\t\t\t\t\tconst b = face[1] + indexOffset;\n\t\t\t\t\tconst c = face[2] + indexOffset;\n\t\t\t\t\tindices.push(a, b, c);\n\t\t\t\t\tgroupCount += 3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tconst shapes = this.parameters.shapes;\n\t\t\treturn toJSON(shapes, data);\n\t\t}\n\n\t\tstatic fromJSON(data, shapes) {\n\t\t\tconst geometryShapes = [];\n\n\t\t\tfor (let j = 0, jl = data.shapes.length; j < jl; j++) {\n\t\t\t\tconst shape = shapes[data.shapes[j]];\n\t\t\t\tgeometryShapes.push(shape);\n\t\t\t}\n\n\t\t\treturn new ShapeGeometry(geometryShapes, data.curveSegments);\n\t\t}\n\n\t}\n\n\tfunction toJSON(shapes, data) {\n\t\tdata.shapes = [];\n\n\t\tif (Array.isArray(shapes)) {\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\tdata.shapes.push(shape.uuid);\n\t\t\t}\n\t\t} else {\n\t\t\tdata.shapes.push(shapes.uuid);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tclass SphereGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SphereGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\twidthSegments = Math.max(3, Math.floor(widthSegments));\n\t\t\theightSegments = Math.max(2, Math.floor(heightSegments));\n\t\t\tconst thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n\t\t\tlet index = 0;\n\t\t\tconst grid = [];\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3(); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // generate vertices, normals and uvs\n\n\t\t\tfor (let iy = 0; iy <= heightSegments; iy++) {\n\t\t\t\tconst verticesRow = [];\n\t\t\t\tconst v = iy / heightSegments; // special case for the poles\n\n\t\t\t\tlet uOffset = 0;\n\n\t\t\t\tif (iy == 0 && thetaStart == 0) {\n\t\t\t\t\tuOffset = 0.5 / widthSegments;\n\t\t\t\t} else if (iy == heightSegments && thetaEnd == Math.PI) {\n\t\t\t\t\tuOffset = -0.5 / widthSegments;\n\t\t\t\t}\n\n\t\t\t\tfor (let ix = 0; ix <= widthSegments; ix++) {\n\t\t\t\t\tconst u = ix / widthSegments; // vertex\n\n\t\t\t\t\tvertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\t\tvertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n\t\t\t\t\tvertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormal.copy(vertex).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(u + uOffset, 1 - v);\n\t\t\t\t\tverticesRow.push(index++);\n\t\t\t\t}\n\n\t\t\t\tgrid.push(verticesRow);\n\t\t\t} // indices\n\n\n\t\t\tfor (let iy = 0; iy < heightSegments; iy++) {\n\t\t\t\tfor (let ix = 0; ix < widthSegments; ix++) {\n\t\t\t\t\tconst a = grid[iy][ix + 1];\n\t\t\t\t\tconst b = grid[iy][ix];\n\t\t\t\t\tconst c = grid[iy + 1][ix];\n\t\t\t\t\tconst d = grid[iy + 1][ix + 1];\n\t\t\t\t\tif (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n\t\t\t\t\tif (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new SphereGeometry(data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass TetrahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n\t\t\tconst indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'TetrahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new TetrahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\tclass TorusGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TorusGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tarc: arc\n\t\t\t};\n\t\t\tradialSegments = Math.floor(radialSegments);\n\t\t\ttubularSegments = Math.floor(tubularSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst center = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\tfor (let i = 0; i <= tubularSegments; i++) {\n\t\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2; // vertex\n\n\t\t\t\t\tvertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n\t\t\t\t\tvertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n\t\t\t\t\tvertex.z = tube * Math.sin(v);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tcenter.x = radius * Math.cos(u);\n\t\t\t\t\tcenter.y = radius * Math.sin(u);\n\t\t\t\t\tnormal.subVectors(vertex, center).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(i / tubularSegments);\n\t\t\t\t\tuvs.push(j / radialSegments);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (let j = 1; j <= radialSegments; j++) {\n\t\t\t\tfor (let i = 1; i <= tubularSegments; i++) {\n\t\t\t\t\t// indices\n\t\t\t\t\tconst a = (tubularSegments + 1) * j + i - 1;\n\t\t\t\t\tconst b = (tubularSegments + 1) * (j - 1) + i - 1;\n\t\t\t\t\tconst c = (tubularSegments + 1) * (j - 1) + i;\n\t\t\t\t\tconst d = (tubularSegments + 1) * j + i; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new TorusGeometry(data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n\t\t}\n\n\t}\n\n\tclass TorusKnotGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TorusKnotGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tp: p,\n\t\t\t\tq: q\n\t\t\t};\n\t\t\ttubularSegments = Math.floor(tubularSegments);\n\t\t\tradialSegments = Math.floor(radialSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3();\n\t\t\tconst P1 = new Vector3();\n\t\t\tconst P2 = new Vector3();\n\t\t\tconst B = new Vector3();\n\t\t\tconst T = new Vector3();\n\t\t\tconst N = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\tfor (let i = 0; i <= tubularSegments; ++i) {\n\t\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\t\t\t\tconst u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\t\tcalculatePositionOnCurve(u, p, q, radius, P1);\n\t\t\t\tcalculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n\t\t\t\tT.subVectors(P2, P1);\n\t\t\t\tN.addVectors(P2, P1);\n\t\t\t\tB.crossVectors(T, N);\n\t\t\t\tN.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n\t\t\t\tB.normalize();\n\t\t\t\tN.normalize();\n\n\t\t\t\tfor (let j = 0; j <= radialSegments; ++j) {\n\t\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\t\tconst cx = -tube * Math.cos(v);\n\t\t\t\t\tconst cy = tube * Math.sin(v); // now calculate the final vertex position.\n\t\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\t\tvertex.x = P1.x + (cx * N.x + cy * B.x);\n\t\t\t\t\tvertex.y = P1.y + (cx * N.y + cy * B.y);\n\t\t\t\t\tvertex.z = P1.z + (cx * N.z + cy * B.z);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\t\tnormal.subVectors(vertex, P1).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(i / tubularSegments);\n\t\t\t\t\tuvs.push(j / radialSegments);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (let j = 1; j <= tubularSegments; j++) {\n\t\t\t\tfor (let i = 1; i <= radialSegments; i++) {\n\t\t\t\t\t// indices\n\t\t\t\t\tconst a = (radialSegments + 1) * (j - 1) + (i - 1);\n\t\t\t\t\tconst b = (radialSegments + 1) * j + (i - 1);\n\t\t\t\t\tconst c = (radialSegments + 1) * j + i;\n\t\t\t\t\tconst d = (radialSegments + 1) * (j - 1) + i; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\n\n\t\t\tfunction calculatePositionOnCurve(u, p, q, radius, position) {\n\t\t\t\tconst cu = Math.cos(u);\n\t\t\t\tconst su = Math.sin(u);\n\t\t\t\tconst quOverP = q / p * u;\n\t\t\t\tconst cs = Math.cos(quOverP);\n\t\t\t\tposition.x = radius * (2 + cs) * 0.5 * cu;\n\t\t\t\tposition.y = radius * (2 + cs) * su * 0.5;\n\t\t\t\tposition.z = radius * Math.sin(quOverP) * 0.5;\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new TorusKnotGeometry(data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n\t\t}\n\n\t}\n\n\tclass TubeGeometry extends BufferGeometry {\n\t\tconstructor(path = new QuadraticBezierCurve3(new Vector3(-1, -1, 0), new Vector3(-1, 1, 0), new Vector3(1, 1, 0)), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TubeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tpath: path,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradius: radius,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tclosed: closed\n\t\t\t};\n\t\t\tconst frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\n\n\t\t\tthis.tangents = frames.tangents;\n\t\t\tthis.normals = frames.normals;\n\t\t\tthis.binormals = frames.binormals; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3();\n\t\t\tconst uv = new Vector2();\n\t\t\tlet P = new Vector3(); // buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\t\t\tconst indices = []; // create buffer data\n\n\t\t\tgenerateBufferData(); // build geometry\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\n\n\t\t\tfunction generateBufferData() {\n\t\t\t\tfor (let i = 0; i < tubularSegments; i++) {\n\t\t\t\t\tgenerateSegment(i);\n\t\t\t\t} // if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t\t// at the regular position on the given path\n\t\t\t\t//\n\t\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\n\t\t\t\tgenerateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\n\t\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\t\tgenerateUVs(); // finally create faces\n\n\t\t\t\tgenerateIndices();\n\t\t\t}\n\n\t\t\tfunction generateSegment(i) {\n\t\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\t\t\t\tP = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\n\n\t\t\t\tconst N = frames.normals[i];\n\t\t\t\tconst B = frames.binormals[i]; // generate normals and vertices for the current segment\n\n\t\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\t\tconst sin = Math.sin(v);\n\t\t\t\t\tconst cos = -Math.cos(v); // normal\n\n\t\t\t\t\tnormal.x = cos * N.x + sin * B.x;\n\t\t\t\t\tnormal.y = cos * N.y + sin * B.y;\n\t\t\t\t\tnormal.z = cos * N.z + sin * B.z;\n\t\t\t\t\tnormal.normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // vertex\n\n\t\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\t\tvertex.z = P.z + radius * normal.z;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateIndices() {\n\t\t\t\tfor (let j = 1; j <= tubularSegments; j++) {\n\t\t\t\t\tfor (let i = 1; i <= radialSegments; i++) {\n\t\t\t\t\t\tconst a = (radialSegments + 1) * (j - 1) + (i - 1);\n\t\t\t\t\t\tconst b = (radialSegments + 1) * j + (i - 1);\n\t\t\t\t\t\tconst c = (radialSegments + 1) * j + i;\n\t\t\t\t\t\tconst d = (radialSegments + 1) * (j - 1) + i; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateUVs() {\n\t\t\t\tfor (let i = 0; i <= tubularSegments; i++) {\n\t\t\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\t\tuv.y = j / radialSegments;\n\t\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.path = this.parameters.path.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\treturn new TubeGeometry(new Curves[data.path.type]().fromJSON(data.path), data.tubularSegments, data.radius, data.radialSegments, data.closed);\n\t\t}\n\n\t}\n\n\tclass WireframeGeometry extends BufferGeometry {\n\t\tconstructor(geometry = null) {\n\t\t\tsuper();\n\t\t\tthis.type = 'WireframeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tgeometry: geometry\n\t\t\t};\n\n\t\t\tif (geometry !== null) {\n\t\t\t\t// buffer\n\t\t\t\tconst vertices = [];\n\t\t\t\tconst edges = new Set(); // helper variables\n\n\t\t\t\tconst start = new Vector3();\n\t\t\t\tconst end = new Vector3();\n\n\t\t\t\tif (geometry.index !== null) {\n\t\t\t\t\t// indexed BufferGeometry\n\t\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\t\tconst indices = geometry.index;\n\t\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\t\tif (groups.length === 0) {\n\t\t\t\t\t\tgroups = [{\n\t\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\t\tcount: indices.count,\n\t\t\t\t\t\t\tmaterialIndex: 0\n\t\t\t\t\t\t}];\n\t\t\t\t\t} // create a data structure that contains all eges without duplicates\n\n\n\t\t\t\t\tfor (let o = 0, ol = groups.length; o < ol; ++o) {\n\t\t\t\t\t\tconst group = groups[o];\n\t\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\t\tfor (let i = groupStart, l = groupStart + groupCount; i < l; i += 3) {\n\t\t\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\t\t\tconst index1 = indices.getX(i + j);\n\t\t\t\t\t\t\t\tconst index2 = indices.getX(i + (j + 1) % 3);\n\t\t\t\t\t\t\t\tstart.fromBufferAttribute(position, index1);\n\t\t\t\t\t\t\t\tend.fromBufferAttribute(position, index2);\n\n\t\t\t\t\t\t\t\tif (isUniqueEdge(start, end, edges) === true) {\n\t\t\t\t\t\t\t\t\tvertices.push(start.x, start.y, start.z);\n\t\t\t\t\t\t\t\t\tvertices.push(end.x, end.y, end.z);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// non-indexed BufferGeometry\n\t\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\t\tfor (let i = 0, l = position.count / 3; i < l; i++) {\n\t\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\t\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\t\tconst index2 = 3 * i + (j + 1) % 3;\n\t\t\t\t\t\t\tstart.fromBufferAttribute(position, index1);\n\t\t\t\t\t\t\tend.fromBufferAttribute(position, index2);\n\n\t\t\t\t\t\t\tif (isUniqueEdge(start, end, edges) === true) {\n\t\t\t\t\t\t\t\tvertices.push(start.x, start.y, start.z);\n\t\t\t\t\t\t\t\tvertices.push(end.x, end.y, end.z);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // build geometry\n\n\n\t\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction isUniqueEdge(start, end, edges) {\n\t\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\t\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\t\tif (edges.has(hash1) === true || edges.has(hash2) === true) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tedges.add(hash1, hash2);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tvar Geometries = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeGeometry,\n\t\tWireframeGeometry: WireframeGeometry\n\t});\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <THREE.Color>\n\t * }\n\t */\n\n\tclass ShadowMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShadowMaterial';\n\t\t\tthis.color = new Color(0x000000);\n\t\t\tthis.transparent = true;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\troughness: <float>,\n\t *\tmetalness: <float>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\troughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmetalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tenvMapIntensity: <float>\n\t *\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshStandardMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshStandardMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.roughness = 1.0;\n\t\t\tthis.metalness = 0.0;\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.roughnessMap = null;\n\t\t\tthis.metalnessMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.envMapIntensity = 1.0;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': ''\n\t\t\t};\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.roughness = source.roughness;\n\t\t\tthis.metalness = source.metalness;\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.roughnessMap = source.roughnessMap;\n\t\t\tthis.metalnessMap = source.metalnessMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.envMapIntensity = source.envMapIntensity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tclearcoat: <float>,\n\t *\tclearcoatMap: new THREE.Texture( <Image> ),\n\t *\tclearcoatRoughness: <float>,\n\t *\tclearcoatRoughnessMap: new THREE.Texture( <Image> ),\n\t *\tclearcoatNormalScale: <Vector2>,\n\t *\tclearcoatNormalMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tior: <float>,\n\t *\treflectivity: <float>,\n\t *\n\t *\tsheen: <float>,\n\t *\tsheenTint: <Color>,\n\t *\tsheenRoughness: <float>,\n\t *\n\t *\ttransmission: <float>,\n\t *\ttransmissionMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tthickness: <float>,\n\t *\tthicknessMap: new THREE.Texture( <Image> ),\n\t *\tattenuationDistance: <float>,\n\t *\tattenuationTint: <Color>,\n\t *\n\t *\tspecularIntensity: <float>,\n\t *\tspecularIntensityhMap: new THREE.Texture( <Image> ),\n\t *\tspecularTint: <Color>,\n\t *\tspecularTintMap: new THREE.Texture( <Image> )\n\t * }\n\t */\n\n\tclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': '',\n\t\t\t\t'PHYSICAL': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshPhysicalMaterial';\n\t\t\tthis.clearcoatMap = null;\n\t\t\tthis.clearcoatRoughness = 0.0;\n\t\t\tthis.clearcoatRoughnessMap = null;\n\t\t\tthis.clearcoatNormalScale = new Vector2(1, 1);\n\t\t\tthis.clearcoatNormalMap = null;\n\t\t\tthis.ior = 1.5;\n\t\t\tObject.defineProperty(this, 'reflectivity', {\n\t\t\t\tget: function () {\n\t\t\t\t\treturn clamp(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);\n\t\t\t\t},\n\t\t\t\tset: function (reflectivity) {\n\t\t\t\t\tthis.ior = (1 + 0.4 * reflectivity) / (1 - 0.4 * reflectivity);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.sheenTint = new Color(0x000000);\n\t\t\tthis.sheenRoughness = 1.0;\n\t\t\tthis.transmissionMap = null;\n\t\t\tthis.thickness = 0.01;\n\t\t\tthis.thicknessMap = null;\n\t\t\tthis.attenuationDistance = 0.0;\n\t\t\tthis.attenuationTint = new Color(1, 1, 1);\n\t\t\tthis.specularIntensity = 1.0;\n\t\t\tthis.specularIntensityMap = null;\n\t\t\tthis.specularTint = new Color(1, 1, 1);\n\t\t\tthis.specularTintMap = null;\n\t\t\tthis._sheen = 0.0;\n\t\t\tthis._clearcoat = 0;\n\t\t\tthis._transmission = 0;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tget sheen() {\n\t\t\treturn this._sheen;\n\t\t}\n\n\t\tset sheen(value) {\n\t\t\tif (this._sheen > 0 !== value > 0) {\n\t\t\t\tthis.version++;\n\t\t\t}\n\n\t\t\tthis._sheen = value;\n\t\t}\n\n\t\tget clearcoat() {\n\t\t\treturn this._clearcoat;\n\t\t}\n\n\t\tset clearcoat(value) {\n\t\t\tif (this._clearcoat > 0 !== value > 0) {\n\t\t\t\tthis.version++;\n\t\t\t}\n\n\t\t\tthis._clearcoat = value;\n\t\t}\n\n\t\tget transmission() {\n\t\t\treturn this._transmission;\n\t\t}\n\n\t\tset transmission(value) {\n\t\t\tif (this._transmission > 0 !== value > 0) {\n\t\t\t\tthis.version++;\n\t\t\t}\n\n\t\t\tthis._transmission = value;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': '',\n\t\t\t\t'PHYSICAL': ''\n\t\t\t};\n\t\t\tthis.clearcoat = source.clearcoat;\n\t\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\t\tthis.clearcoatNormalScale.copy(source.clearcoatNormalScale);\n\t\t\tthis.ior = source.ior;\n\t\t\tthis.sheen = source.sheen;\n\t\t\tthis.sheenTint.copy(source.sheenTint);\n\t\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\t\tthis.transmission = source.transmission;\n\t\t\tthis.transmissionMap = source.transmissionMap;\n\t\t\tthis.thickness = source.thickness;\n\t\t\tthis.thicknessMap = source.thicknessMap;\n\t\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\t\tthis.attenuationTint.copy(source.attenuationTint);\n\t\t\tthis.specularIntensity = source.specularIntensity;\n\t\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\t\tthis.specularTint.copy(source.specularTint);\n\t\t\tthis.specularTintMap = source.specularTintMap;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\tspecular: <hex>,\n\t *\tshininess: <float>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.MultiplyOperation,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshPhongMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshPhongMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.specular = new Color(0x111111);\n\t\t\tthis.shininess = 30;\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.specular.copy(source.specular);\n\t\t\tthis.shininess = source.shininess;\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\tgradientMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t * }\n\t */\n\n\tclass MeshToonMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'TOON': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshToonMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.gradientMap = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.gradientMap = source.gradientMap;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\topacity: <float>,\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshNormalMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshNormalMaterial';\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.Multiply,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t * }\n\t */\n\n\tclass MeshLambertMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshLambertMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tmatcap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshMatcapMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'MATCAP': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshMatcapMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.matcap = null;\n\t\t\tthis.map = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'MATCAP': ''\n\t\t\t};\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.matcap = source.matcap;\n\t\t\tthis.map = source.map;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tlinewidth: <float>,\n\t *\n\t *\tscale: <float>,\n\t *\tdashSize: <float>,\n\t *\tgapSize: <float>\n\t * }\n\t */\n\n\tclass LineDashedMaterial extends LineBasicMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineDashedMaterial';\n\t\t\tthis.scale = 1;\n\t\t\tthis.dashSize = 3;\n\t\t\tthis.gapSize = 1;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.scale = source.scale;\n\t\t\tthis.dashSize = source.dashSize;\n\t\t\tthis.gapSize = source.gapSize;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tvar Materials = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tMeshMatcapMaterial: MeshMatcapMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\tconst AnimationUtils = {\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function (array, from, to) {\n\t\t\tif (AnimationUtils.isTypedArray(array)) {\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n\t\t\t}\n\n\t\t\treturn array.slice(from, to);\n\t\t},\n\t\t// converts an array to a specific type\n\t\tconvertArray: function (array, type, forceClone) {\n\t\t\tif (!array || // let 'undefined' and 'null' pass\n\t\t\t!forceClone && array.constructor === type) return array;\n\n\t\t\tif (typeof type.BYTES_PER_ELEMENT === 'number') {\n\t\t\t\treturn new type(array); // create typed array\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call(array); // create Array\n\t\t},\n\t\tisTypedArray: function (object) {\n\t\t\treturn ArrayBuffer.isView(object) && !(object instanceof DataView);\n\t\t},\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function (times) {\n\t\t\tfunction compareTime(i, j) {\n\t\t\t\treturn times[i] - times[j];\n\t\t\t}\n\n\t\t\tconst n = times.length;\n\t\t\tconst result = new Array(n);\n\n\t\t\tfor (let i = 0; i !== n; ++i) result[i] = i;\n\n\t\t\tresult.sort(compareTime);\n\t\t\treturn result;\n\t\t},\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function (values, stride, order) {\n\t\t\tconst nValues = values.length;\n\t\t\tconst result = new values.constructor(nValues);\n\n\t\t\tfor (let i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n\t\t\t\tconst srcOffset = order[i] * stride;\n\n\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\tresult[dstOffset++] = values[srcOffset + j];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function (jsonKeys, times, values, valuePropertyName) {\n\t\t\tlet i = 1,\n\t\t\t\t\tkey = jsonKeys[0];\n\n\t\t\twhile (key !== undefined && key[valuePropertyName] === undefined) {\n\t\t\t\tkey = jsonKeys[i++];\n\t\t\t}\n\n\t\t\tif (key === undefined) return; // no data\n\n\t\t\tlet value = key[valuePropertyName];\n\t\t\tif (value === undefined) return; // no data\n\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalues.push.apply(values, value); // push all elements\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t} else if (value.toArray !== undefined) {\n\t\t\t\t// ...assume THREE.Math-ish\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalue.toArray(values, values.length);\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t} else {\n\t\t\t\t// otherwise push as-is\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t}\n\t\t},\n\t\tsubclip: function (sourceClip, name, startFrame, endFrame, fps = 30) {\n\t\t\tconst clip = sourceClip.clone();\n\t\t\tclip.name = name;\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tconst track = clip.tracks[i];\n\t\t\t\tconst valueSize = track.getValueSize();\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (let j = 0; j < track.times.length; ++j) {\n\t\t\t\t\tconst frame = track.times[j] * fps;\n\t\t\t\t\tif (frame < startFrame || frame >= endFrame) continue;\n\t\t\t\t\ttimes.push(track.times[j]);\n\n\t\t\t\t\tfor (let k = 0; k < valueSize; ++k) {\n\t\t\t\t\t\tvalues.push(track.values[j * valueSize + k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (times.length === 0) continue;\n\t\t\t\ttrack.times = AnimationUtils.convertArray(times, track.times.constructor);\n\t\t\t\ttrack.values = AnimationUtils.convertArray(values, track.values.constructor);\n\t\t\t\ttracks.push(track);\n\t\t\t}\n\n\t\t\tclip.tracks = tracks; // find minimum .times value across all tracks in the trimmed clip\n\n\t\t\tlet minStartTime = Infinity;\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tif (minStartTime > clip.tracks[i].times[0]) {\n\t\t\t\t\tminStartTime = clip.tracks[i].times[0];\n\t\t\t\t}\n\t\t\t} // shift all tracks such that clip begins at t=0\n\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tclip.tracks[i].shift(-1 * minStartTime);\n\t\t\t}\n\n\t\t\tclip.resetDuration();\n\t\t\treturn clip;\n\t\t},\n\t\tmakeClipAdditive: function (targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30) {\n\t\t\tif (fps <= 0) fps = 30;\n\t\t\tconst numTracks = referenceClip.tracks.length;\n\t\t\tconst referenceTime = referenceFrame / fps; // Make each track's values relative to the values at the reference frame\n\n\t\t\tfor (let i = 0; i < numTracks; ++i) {\n\t\t\t\tconst referenceTrack = referenceClip.tracks[i];\n\t\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName; // Skip this track if it's non-numeric\n\n\t\t\t\tif (referenceTrackType === 'bool' || referenceTrackType === 'string') continue; // Find the track in the target clip whose name and type matches the reference track\n\n\t\t\t\tconst targetTrack = targetClip.tracks.find(function (track) {\n\t\t\t\t\treturn track.name === referenceTrack.name && track.ValueTypeName === referenceTrackType;\n\t\t\t\t});\n\t\t\t\tif (targetTrack === undefined) continue;\n\t\t\t\tlet referenceOffset = 0;\n\t\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\t\tif (referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n\t\t\t\t\treferenceOffset = referenceValueSize / 3;\n\t\t\t\t}\n\n\t\t\t\tlet targetOffset = 0;\n\t\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\t\tif (targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n\t\t\t\t\ttargetOffset = targetValueSize / 3;\n\t\t\t\t}\n\n\t\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\t\tlet referenceValue; // Find the value to subtract out of the track\n\n\t\t\t\tif (referenceTime <= referenceTrack.times[0]) {\n\t\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\n\t\t\t\t} else if (referenceTime >= referenceTrack.times[lastIndex]) {\n\t\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\n\t\t\t\t} else {\n\t\t\t\t\t// Interpolate to the reference value\n\t\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\t\tinterpolant.evaluate(referenceTime);\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(interpolant.resultBuffer, startIndex, endIndex);\n\t\t\t\t} // Conjugate the quaternion\n\n\n\t\t\t\tif (referenceTrackType === 'quaternion') {\n\t\t\t\t\tconst referenceQuat = new Quaternion().fromArray(referenceValue).normalize().conjugate();\n\t\t\t\t\treferenceQuat.toArray(referenceValue);\n\t\t\t\t} // Subtract the reference value from all of the track values\n\n\n\t\t\t\tconst numTimes = targetTrack.times.length;\n\n\t\t\t\tfor (let j = 0; j < numTimes; ++j) {\n\t\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\t\tif (referenceTrackType === 'quaternion') {\n\t\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(targetTrack.values, valueStart, referenceValue, 0, targetTrack.values, valueStart);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2; // Subtract each value for all other numeric track types\n\n\t\t\t\t\t\tfor (let k = 0; k < valueEnd; ++k) {\n\t\t\t\t\t\t\ttargetTrack.values[valueStart + k] -= referenceValue[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\t\t\treturn targetClip;\n\t\t}\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t */\n\tclass Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tthis.parameterPositions = parameterPositions;\n\t\t\tthis._cachedIndex = 0;\n\t\t\tthis.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n\t\t\tthis.sampleValues = sampleValues;\n\t\t\tthis.valueSize = sampleSize;\n\t\t\tthis.settings = null;\n\t\t\tthis.DefaultSettings_ = {};\n\t\t}\n\n\t\tevaluate(t) {\n\t\t\tconst pp = this.parameterPositions;\n\t\t\tlet i1 = this._cachedIndex,\n\t\t\t\t\tt1 = pp[i1],\n\t\t\t\t\tt0 = pp[i1 - 1];\n\n\t\t\tvalidate_interval: {\n\t\t\t\tseek: {\n\t\t\t\t\tlet right;\n\n\t\t\t\t\tlinear_scan: {\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if (!(t < t1)) {\n\t\t\t\t\t\t\tfor (let giveUpAt = i1 + 2;;) {\n\t\t\t\t\t\t\t\tif (t1 === undefined) {\n\t\t\t\t\t\t\t\t\tif (t < t0) break forward_scan; // after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t, t0);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[++i1];\n\n\t\t\t\t\t\t\t\tif (t < t1) {\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} // prepare binary search on the right side of the index\n\n\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\t\t\t\t\t\t} //- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n\t\t\t\t\t\tif (!(t >= t0)) {\n\t\t\t\t\t\t\t// looping?\n\t\t\t\t\t\t\tconst t1global = pp[1];\n\n\t\t\t\t\t\t\tif (t < t1global) {\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\n\t\t\t\t\t\t\t\tt0 = t1global;\n\t\t\t\t\t\t\t} // linear reverse scan\n\n\n\t\t\t\t\t\t\tfor (let giveUpAt = i1 - 2;;) {\n\t\t\t\t\t\t\t\tif (t0 === undefined) {\n\t\t\t\t\t\t\t\t\t// before start\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[--i1 - 1];\n\n\t\t\t\t\t\t\t\tif (t >= t0) {\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} // prepare binary search on the left side of the index\n\n\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\t\t\t\t\t\t} // the interval is valid\n\n\n\t\t\t\t\t\tbreak validate_interval;\n\t\t\t\t\t} // linear scan\n\t\t\t\t\t// binary search\n\n\n\t\t\t\t\twhile (i1 < right) {\n\t\t\t\t\t\tconst mid = i1 + right >>> 1;\n\n\t\t\t\t\t\tif (t < pp[mid]) {\n\t\t\t\t\t\t\tright = mid;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ti1 = mid + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[i1];\n\t\t\t\t\tt0 = pp[i1 - 1]; // check boundary cases, again\n\n\t\t\t\t\tif (t0 === undefined) {\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (t1 === undefined) {\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t0, t);\n\t\t\t\t\t}\n\t\t\t\t} // seek\n\n\n\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\tthis.intervalChanged_(i1, t0, t1);\n\t\t\t} // validate_interval\n\n\n\t\t\treturn this.interpolate_(i1, t0, t, t1);\n\t\t}\n\n\t\tgetSettings_() {\n\t\t\treturn this.settings || this.DefaultSettings_;\n\t\t}\n\n\t\tcopySampleValue_(index) {\n\t\t\t// copies a sample value to the result buffer\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = index * stride;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = values[offset + i];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} // Template methods for derived classes:\n\n\n\t\tinterpolate_() {\n\t\t\tthrow new Error('call to abstract method'); // implementations shall return this.resultBuffer\n\t\t}\n\n\t\tintervalChanged_() {// empty\n\t\t}\n\n\t} // ALIAS DEFINITIONS\n\n\n\tInterpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\n\tInterpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t */\n\n\tclass CubicInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t\tthis._weightPrev = -0;\n\t\t\tthis._offsetPrev = -0;\n\t\t\tthis._weightNext = -0;\n\t\t\tthis._offsetNext = -0;\n\t\t\tthis.DefaultSettings_ = {\n\t\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t\t};\n\t\t}\n\n\t\tintervalChanged_(i1, t0, t1) {\n\t\t\tconst pp = this.parameterPositions;\n\t\t\tlet iPrev = i1 - 2,\n\t\t\t\t\tiNext = i1 + 1,\n\t\t\t\t\ttPrev = pp[iPrev],\n\t\t\t\t\ttNext = pp[iNext];\n\n\t\t\tif (tPrev === undefined) {\n\t\t\t\tswitch (this.getSettings_().endingStart) {\n\t\t\t\t\tcase ZeroSlopeEnding:\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// ZeroCurvatureEnding\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tNext === undefined) {\n\t\t\t\tswitch (this.getSettings_().endingEnd) {\n\t\t\t\t\tcase ZeroSlopeEnding:\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[1] - pp[0];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// ZeroCurvatureEnding\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst halfDt = (t1 - t0) * 0.5,\n\t\t\t\t\t\tstride = this.valueSize;\n\t\t\tthis._weightPrev = halfDt / (t0 - tPrev);\n\t\t\tthis._weightNext = halfDt / (tNext - t1);\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\to1 = i1 * stride,\n\t\t\t\t\t\to0 = o1 - stride,\n\t\t\t\t\t\toP = this._offsetPrev,\n\t\t\t\t\t\toN = this._offsetNext,\n\t\t\t\t\t\twP = this._weightPrev,\n\t\t\t\t\t\twN = this._weightNext,\n\t\t\t\t\t\tp = (t - t0) / (t1 - t0),\n\t\t\t\t\t\tpp = p * p,\n\t\t\t\t\t\tppp = pp * p; // evaluate polynomials\n\n\t\t\tconst sP = -wP * ppp + 2 * wP * pp - wP * p;\n\t\t\tconst s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n\t\t\tconst s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n\t\t\tconst sN = wN * ppp - wN * pp; // combine data linearly\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\tclass LinearInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset1 = i1 * stride,\n\t\t\t\t\t\toffset0 = offset1 - stride,\n\t\t\t\t\t\tweight1 = (t - t0) / (t1 - t0),\n\t\t\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t */\n\n\tclass DiscreteInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1\n\t\t/*, t0, t, t1 */\n\t\t) {\n\t\t\treturn this.copySampleValue_(i1 - 1);\n\t\t}\n\n\t}\n\n\tclass KeyframeTrack {\n\t\tconstructor(name, times, values, interpolation) {\n\t\t\tif (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\n\t\t\tif (times === undefined || times.length === 0) throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\n\t\t\tthis.name = name;\n\t\t\tthis.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n\t\t\tthis.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n\t\t\tthis.setInterpolation(interpolation || this.DefaultInterpolation);\n\t\t} // Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\n\t\tstatic toJSON(track) {\n\t\t\tconst trackType = track.constructor;\n\t\t\tlet json; // derived classes can define a static toJSON method\n\n\t\t\tif (trackType.toJSON !== this.toJSON) {\n\t\t\t\tjson = trackType.toJSON(track);\n\t\t\t} else {\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray(track.times, Array),\n\t\t\t\t\t'values': AnimationUtils.convertArray(track.values, Array)\n\t\t\t\t};\n\t\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\t\tif (interpolation !== track.DefaultInterpolation) {\n\t\t\t\t\tjson.interpolation = interpolation;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\t\t}\n\n\t\tInterpolantFactoryMethodDiscrete(result) {\n\t\t\treturn new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tInterpolantFactoryMethodLinear(result) {\n\t\t\treturn new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tInterpolantFactoryMethodSmooth(result) {\n\t\t\treturn new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tsetInterpolation(interpolation) {\n\t\t\tlet factoryMethod;\n\n\t\t\tswitch (interpolation) {\n\t\t\t\tcase InterpolateDiscrete:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (factoryMethod === undefined) {\n\t\t\t\tconst message = 'unsupported interpolation for ' + this.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\t\tif (this.createInterpolant === undefined) {\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif (interpolation !== this.DefaultInterpolation) {\n\t\t\t\t\t\tthis.setInterpolation(this.DefaultInterpolation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(message); // fatal, in this case\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconsole.warn('THREE.KeyframeTrack:', message);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetInterpolation() {\n\t\t\tswitch (this.createInterpolant) {\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\t\t\t\t\treturn InterpolateSmooth;\n\t\t\t}\n\t\t}\n\n\t\tgetValueSize() {\n\t\t\treturn this.values.length / this.times.length;\n\t\t} // move all keyframes either forwards or backwards in time\n\n\n\t\tshift(timeOffset) {\n\t\t\tif (timeOffset !== 0.0) {\n\t\t\t\tconst times = this.times;\n\n\t\t\t\tfor (let i = 0, n = times.length; i !== n; ++i) {\n\t\t\t\t\ttimes[i] += timeOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\n\n\t\tscale(timeScale) {\n\t\t\tif (timeScale !== 1.0) {\n\t\t\t\tconst times = this.times;\n\n\t\t\t\tfor (let i = 0, n = times.length; i !== n; ++i) {\n\t\t\t\t\ttimes[i] *= timeScale;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\n\n\t\ttrim(startTime, endTime) {\n\t\t\tconst times = this.times,\n\t\t\t\t\t\tnKeys = times.length;\n\t\t\tlet from = 0,\n\t\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile (from !== nKeys && times[from] < startTime) {\n\t\t\t\t++from;\n\t\t\t}\n\n\t\t\twhile (to !== -1 && times[to] > endTime) {\n\t\t\t\t--to;\n\t\t\t}\n\n\t\t\t++to; // inclusive -> exclusive bound\n\n\t\t\tif (from !== 0 || to !== nKeys) {\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif (from >= to) {\n\t\t\t\t\tto = Math.max(to, 1);\n\t\t\t\t\tfrom = to - 1;\n\t\t\t\t}\n\n\t\t\t\tconst stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, from, to);\n\t\t\t\tthis.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\n\n\t\tvalidate() {\n\t\t\tlet valid = true;\n\t\t\tconst valueSize = this.getValueSize();\n\n\t\t\tif (valueSize - Math.floor(valueSize) !== 0) {\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Invalid value size in track.', this);\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tconst times = this.times,\n\t\t\t\t\t\tvalues = this.values,\n\t\t\t\t\t\tnKeys = times.length;\n\n\t\t\tif (nKeys === 0) {\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Track is empty.', this);\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tlet prevTime = null;\n\n\t\t\tfor (let i = 0; i !== nKeys; i++) {\n\t\t\t\tconst currTime = times[i];\n\n\t\t\t\tif (typeof currTime === 'number' && isNaN(currTime)) {\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (prevTime !== null && prevTime > currTime) {\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\t\t\t}\n\n\t\t\tif (values !== undefined) {\n\t\t\t\tif (AnimationUtils.isTypedArray(values)) {\n\t\t\t\t\tfor (let i = 0, n = values.length; i !== n; ++i) {\n\t\t\t\t\t\tconst value = values[i];\n\n\t\t\t\t\t\tif (isNaN(value)) {\n\t\t\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Value is not a valid number.', this, i, value);\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn valid;\n\t\t} // removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\n\n\t\toptimize() {\n\t\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\t\tconst times = AnimationUtils.arraySlice(this.times),\n\t\t\t\t\t\tvalues = AnimationUtils.arraySlice(this.values),\n\t\t\t\t\t\tstride = this.getValueSize(),\n\t\t\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\t\t\t\t\t\tlastIndex = times.length - 1;\n\t\t\tlet writeIndex = 1;\n\n\t\t\tfor (let i = 1; i < lastIndex; ++i) {\n\t\t\t\tlet keep = false;\n\t\t\t\tconst time = times[i];\n\t\t\t\tconst timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif (time !== timeNext && (i !== 1 || time !== times[0])) {\n\t\t\t\t\tif (!smoothInterpolation) {\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\t\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\t\t\tconst value = values[offset + j];\n\n\t\t\t\t\t\t\tif (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t}\n\t\t\t\t} // in-place compaction\n\n\n\t\t\t\tif (keep) {\n\t\t\t\t\tif (i !== writeIndex) {\n\t\t\t\t\t\ttimes[writeIndex] = times[i];\n\t\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\t\t\tvalues[writeOffset + j] = values[readOffset + j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t++writeIndex;\n\t\t\t\t}\n\t\t\t} // flush last keyframe (compaction looks ahead)\n\n\n\t\t\tif (lastIndex > 0) {\n\t\t\t\ttimes[writeIndex] = times[lastIndex];\n\n\t\t\t\tfor (let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++j) {\n\t\t\t\t\tvalues[writeOffset + j] = values[readOffset + j];\n\t\t\t\t}\n\n\t\t\t\t++writeIndex;\n\t\t\t}\n\n\t\t\tif (writeIndex !== times.length) {\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n\t\t\t\tthis.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n\t\t\t} else {\n\t\t\t\tthis.times = times;\n\t\t\t\tthis.values = values;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\tconst times = AnimationUtils.arraySlice(this.times, 0);\n\t\t\tconst values = AnimationUtils.arraySlice(this.values, 0);\n\t\t\tconst TypedKeyframeTrack = this.constructor;\n\t\t\tconst track = new TypedKeyframeTrack(this.name, times, values); // Interpolant argument to constructor is not saved, so copy the factory method directly.\n\n\t\t\ttrack.createInterpolant = this.createInterpolant;\n\t\t\treturn track;\n\t\t}\n\n\t}\n\n\tKeyframeTrack.prototype.TimeBufferType = Float32Array;\n\tKeyframeTrack.prototype.ValueBufferType = Float32Array;\n\tKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n\t/**\n\t * A Track of Boolean keyframe values.\n\t */\n\n\tclass BooleanKeyframeTrack extends KeyframeTrack {}\n\n\tBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\n\tBooleanKeyframeTrack.prototype.ValueBufferType = Array;\n\tBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined; // Note: Actually this track could have a optimized / compressed\n\n\t/**\n\t * A Track of keyframe values that represent color.\n\t */\n\n\tclass ColorKeyframeTrack extends KeyframeTrack {}\n\n\tColorKeyframeTrack.prototype.ValueTypeName = 'color'; // ValueBufferType is inherited\n\n\t/**\n\t * A Track of numeric keyframe values.\n\t */\n\n\tclass NumberKeyframeTrack extends KeyframeTrack {}\n\n\tNumberKeyframeTrack.prototype.ValueTypeName = 'number'; // ValueBufferType is inherited\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t */\n\n\tclass QuaternionLinearInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\talpha = (t - t0) / (t1 - t0);\n\t\t\tlet offset = i1 * stride;\n\n\t\t\tfor (let end = offset + stride; offset !== end; offset += 4) {\n\t\t\t\tQuaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\t/**\n\t * A Track of quaternion keyframe values.\n\t */\n\n\tclass QuaternionKeyframeTrack extends KeyframeTrack {\n\t\tInterpolantFactoryMethodLinear(result) {\n\t\t\treturn new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion'; // ValueBufferType is inherited\n\n\tQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\tQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n\t/**\n\t * A Track that interpolates Strings\n\t */\n\n\tclass StringKeyframeTrack extends KeyframeTrack {}\n\n\tStringKeyframeTrack.prototype.ValueTypeName = 'string';\n\tStringKeyframeTrack.prototype.ValueBufferType = Array;\n\tStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n\t/**\n\t * A Track of vectored keyframe values.\n\t */\n\n\tclass VectorKeyframeTrack extends KeyframeTrack {}\n\n\tVectorKeyframeTrack.prototype.ValueTypeName = 'vector'; // ValueBufferType is inherited\n\n\tclass AnimationClip {\n\t\tconstructor(name, duration = -1, tracks, blendMode = NormalAnimationBlendMode) {\n\t\t\tthis.name = name;\n\t\t\tthis.tracks = tracks;\n\t\t\tthis.duration = duration;\n\t\t\tthis.blendMode = blendMode;\n\t\t\tthis.uuid = generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n\t\t\tif (this.duration < 0) {\n\t\t\t\tthis.resetDuration();\n\t\t\t}\n\t\t}\n\n\t\tstatic parse(json) {\n\t\t\tconst tracks = [],\n\t\t\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\t\t\tframeTime = 1.0 / (json.fps || 1.0);\n\n\t\t\tfor (let i = 0, n = jsonTracks.length; i !== n; ++i) {\n\t\t\t\ttracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\n\t\t\t}\n\n\t\t\tconst clip = new this(json.name, json.duration, tracks, json.blendMode);\n\t\t\tclip.uuid = json.uuid;\n\t\t\treturn clip;\n\t\t}\n\n\t\tstatic toJSON(clip) {\n\t\t\tconst tracks = [],\n\t\t\t\t\t\tclipTracks = clip.tracks;\n\t\t\tconst json = {\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks,\n\t\t\t\t'uuid': clip.uuid,\n\t\t\t\t'blendMode': clip.blendMode\n\t\t\t};\n\n\t\t\tfor (let i = 0, n = clipTracks.length; i !== n; ++i) {\n\t\t\t\ttracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n\t\t\t}\n\n\t\t\treturn json;\n\t\t}\n\n\t\tstatic CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\n\t\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < numMorphTargets; i++) {\n\t\t\t\tlet times = [];\n\t\t\t\tlet values = [];\n\t\t\t\ttimes.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n\t\t\t\tvalues.push(0, 1, 0);\n\t\t\t\tconst order = AnimationUtils.getKeyframeOrder(times);\n\t\t\t\ttimes = AnimationUtils.sortedArray(times, 1, order);\n\t\t\t\tvalues = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\n\t\t\t\tif (!noLoop && times[0] === 0) {\n\t\t\t\t\ttimes.push(numMorphTargets);\n\t\t\t\t\tvalues.push(values[0]);\n\t\t\t\t}\n\n\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n\t\t\t}\n\n\t\t\treturn new this(name, -1, tracks);\n\t\t}\n\n\t\tstatic findByName(objectOrClipArray, name) {\n\t\t\tlet clipArray = objectOrClipArray;\n\n\t\t\tif (!Array.isArray(objectOrClipArray)) {\n\t\t\t\tconst o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < clipArray.length; i++) {\n\t\t\t\tif (clipArray[i].name === name) {\n\t\t\t\t\treturn clipArray[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\tstatic CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\n\t\t\tconst animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n\t\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\n\t\t\tfor (let i = 0, il = morphTargets.length; i < il; i++) {\n\t\t\t\tconst morphTarget = morphTargets[i];\n\t\t\t\tconst parts = morphTarget.name.match(pattern);\n\n\t\t\t\tif (parts && parts.length > 1) {\n\t\t\t\t\tconst name = parts[1];\n\t\t\t\t\tlet animationMorphTargets = animationToMorphTargets[name];\n\n\t\t\t\t\tif (!animationMorphTargets) {\n\t\t\t\t\t\tanimationToMorphTargets[name] = animationMorphTargets = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push(morphTarget);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst clips = [];\n\n\t\t\tfor (const name in animationToMorphTargets) {\n\t\t\t\tclips.push(this.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\n\t\t\t}\n\n\t\t\treturn clips;\n\t\t} // parse the animation.hierarchy format\n\n\n\t\tstatic parseAnimation(animation, bones) {\n\t\t\tif (!animation) {\n\t\t\t\tconsole.error('THREE.AnimationClip: No animation in JSONLoader data.');\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst addNonemptyTrack = function (trackType, trackName, animationKeys, propertyName, destTracks) {\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif (animationKeys.length !== 0) {\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\t\t\t\t\tAnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n\t\t\t\t\tif (times.length !== 0) {\n\t\t\t\t\t\tdestTracks.push(new trackType(trackName, times, values));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst tracks = [];\n\t\t\tconst clipName = animation.name || 'default';\n\t\t\tconst fps = animation.fps || 30;\n\t\t\tconst blendMode = animation.blendMode; // automatic length determination in AnimationClip.\n\n\t\t\tlet duration = animation.length || -1;\n\t\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor (let h = 0; h < hierarchyTracks.length; h++) {\n\t\t\t\tconst animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n\t\t\t\tif (!animationKeys || animationKeys.length === 0) continue; // process morph targets\n\n\t\t\t\tif (animationKeys[0].morphTargets) {\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tconst morphTargetNames = {};\n\t\t\t\t\tlet k;\n\n\t\t\t\t\tfor (k = 0; k < animationKeys.length; k++) {\n\t\t\t\t\t\tif (animationKeys[k].morphTargets) {\n\t\t\t\t\t\t\tfor (let m = 0; m < animationKeys[k].morphTargets.length; m++) {\n\t\t\t\t\t\t\t\tmorphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} // create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\n\n\t\t\t\t\tfor (const morphTargetName in morphTargetNames) {\n\t\t\t\t\t\tconst times = [];\n\t\t\t\t\t\tconst values = [];\n\n\t\t\t\t\t\tfor (let m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n\t\t\t\t\t\t\tconst animationKey = animationKeys[k];\n\t\t\t\t\t\t\ttimes.push(animationKey.time);\n\t\t\t\t\t\t\tvalues.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * (fps || 1.0);\n\t\t\t\t} else {\n\t\t\t\t\t// ...assume skeletal animation\n\t\t\t\t\tconst boneName = '.bones[' + bones[h].name + ']';\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n\t\t\t\t\taddNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tracks.length === 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst clip = new this(clipName, duration, tracks, blendMode);\n\t\t\treturn clip;\n\t\t}\n\n\t\tresetDuration() {\n\t\t\tconst tracks = this.tracks;\n\t\t\tlet duration = 0;\n\n\t\t\tfor (let i = 0, n = tracks.length; i !== n; ++i) {\n\t\t\t\tconst track = this.tracks[i];\n\t\t\t\tduration = Math.max(duration, track.times[track.times.length - 1]);\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\t\t\treturn this;\n\t\t}\n\n\t\ttrim() {\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tthis.tracks[i].trim(0, this.duration);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tvalidate() {\n\t\t\tlet valid = true;\n\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tvalid = valid && this.tracks[i].validate();\n\t\t\t}\n\n\t\t\treturn valid;\n\t\t}\n\n\t\toptimize() {\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tthis.tracks[i].optimize();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\ttracks.push(this.tracks[i].clone());\n\t\t\t}\n\n\t\t\treturn new this.constructor(this.name, this.duration, tracks, this.blendMode);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn this.constructor.toJSON(this);\n\t\t}\n\n\t}\n\n\tfunction getTrackTypeForValueTypeName(typeName) {\n\t\tswitch (typeName.toLowerCase()) {\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\t\t\t\treturn StringKeyframeTrack;\n\t\t}\n\n\t\tthrow new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\n\t}\n\n\tfunction parseKeyframeTrack(json) {\n\t\tif (json.type === undefined) {\n\t\t\tthrow new Error('THREE.KeyframeTrack: track type undefined, can not parse');\n\t\t}\n\n\t\tconst trackType = getTrackTypeForValueTypeName(json.type);\n\n\t\tif (json.times === undefined) {\n\t\t\tconst times = [],\n\t\t\t\t\t\tvalues = [];\n\t\t\tAnimationUtils.flattenJSON(json.keys, times, values, 'value');\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\t\t} // derived classes can define a static parse method\n\n\n\t\tif (trackType.parse !== undefined) {\n\t\t\treturn trackType.parse(json);\n\t\t} else {\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType(json.name, json.times, json.values, json.interpolation);\n\t\t}\n\t}\n\n\tconst Cache = {\n\t\tenabled: false,\n\t\tfiles: {},\n\t\tadd: function (key, file) {\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[key] = file;\n\t\t},\n\t\tget: function (key) {\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[key];\n\t\t},\n\t\tremove: function (key) {\n\t\t\tdelete this.files[key];\n\t\t},\n\t\tclear: function () {\n\t\t\tthis.files = {};\n\t\t}\n\t};\n\n\tclass LoadingManager {\n\t\tconstructor(onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tlet isLoading = false;\n\t\t\tlet itemsLoaded = 0;\n\t\t\tlet itemsTotal = 0;\n\t\t\tlet urlModifier = undefined;\n\t\t\tconst handlers = []; // Refer to #5689 for the reason why we don't set .onStart\n\t\t\t// in the constructor\n\n\t\t\tthis.onStart = undefined;\n\t\t\tthis.onLoad = onLoad;\n\t\t\tthis.onProgress = onProgress;\n\t\t\tthis.onError = onError;\n\n\t\t\tthis.itemStart = function (url) {\n\t\t\t\titemsTotal++;\n\n\t\t\t\tif (isLoading === false) {\n\t\t\t\t\tif (scope.onStart !== undefined) {\n\t\t\t\t\t\tscope.onStart(url, itemsLoaded, itemsTotal);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tisLoading = true;\n\t\t\t};\n\n\t\t\tthis.itemEnd = function (url) {\n\t\t\t\titemsLoaded++;\n\n\t\t\t\tif (scope.onProgress !== undefined) {\n\t\t\t\t\tscope.onProgress(url, itemsLoaded, itemsTotal);\n\t\t\t\t}\n\n\t\t\t\tif (itemsLoaded === itemsTotal) {\n\t\t\t\t\tisLoading = false;\n\n\t\t\t\t\tif (scope.onLoad !== undefined) {\n\t\t\t\t\t\tscope.onLoad();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.itemError = function (url) {\n\t\t\t\tif (scope.onError !== undefined) {\n\t\t\t\t\tscope.onError(url);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.resolveURL = function (url) {\n\t\t\t\tif (urlModifier) {\n\t\t\t\t\treturn urlModifier(url);\n\t\t\t\t}\n\n\t\t\t\treturn url;\n\t\t\t};\n\n\t\t\tthis.setURLModifier = function (transform) {\n\t\t\t\turlModifier = transform;\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.addHandler = function (regex, loader) {\n\t\t\t\thandlers.push(regex, loader);\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.removeHandler = function (regex) {\n\t\t\t\tconst index = handlers.indexOf(regex);\n\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\thandlers.splice(index, 2);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.getHandler = function (file) {\n\t\t\t\tfor (let i = 0, l = handlers.length; i < l; i += 2) {\n\t\t\t\t\tconst regex = handlers[i];\n\t\t\t\t\tconst loader = handlers[i + 1];\n\t\t\t\t\tif (regex.global) regex.lastIndex = 0; // see #17920\n\n\t\t\t\t\tif (regex.test(file)) {\n\t\t\t\t\t\treturn loader;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t};\n\t\t}\n\n\t}\n\n\tconst DefaultLoadingManager = new LoadingManager();\n\n\tclass Loader {\n\t\tconstructor(manager) {\n\t\t\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\t\t\tthis.crossOrigin = 'anonymous';\n\t\t\tthis.withCredentials = false;\n\t\t\tthis.path = '';\n\t\t\tthis.resourcePath = '';\n\t\t\tthis.requestHeader = {};\n\t\t}\n\n\t\tload() {}\n\n\t\tloadAsync(url, onProgress) {\n\t\t\tconst scope = this;\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tscope.load(url, resolve, onProgress, reject);\n\t\t\t});\n\t\t}\n\n\t\tparse() {}\n\n\t\tsetCrossOrigin(crossOrigin) {\n\t\t\tthis.crossOrigin = crossOrigin;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetWithCredentials(value) {\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetPath(path) {\n\t\t\tthis.path = path;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetResourcePath(resourcePath) {\n\t\t\tthis.resourcePath = resourcePath;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRequestHeader(requestHeader) {\n\t\t\tthis.requestHeader = requestHeader;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tconst loading = {};\n\n\tclass FileLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (url === undefined) url = '';\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tthis.manager.itemStart(url);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tthis.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t} // Check if request is duplicate\n\n\n\t\t\tif (loading[url] !== undefined) {\n\t\t\t\tloading[url].push({\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} // Initialise array for duplicate requests\n\n\n\t\t\tloading[url] = [];\n\t\t\tloading[url].push({\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\t\t\t}); // create request\n\n\t\t\tconst req = new Request(url, {\n\t\t\t\theaders: new Headers(this.requestHeader),\n\t\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin' // An abort controller could be added within a future PR\n\n\t\t\t}); // start the fetch\n\n\t\t\tfetch(req).then(response => {\n\t\t\t\tif (response.status === 200 || response.status === 0) {\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\t\t\t\t\tif (response.status === 0) {\n\t\t\t\t\t\tconsole.warn('THREE.FileLoader: HTTP Status 0 received.');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[url];\n\t\t\t\t\tconst reader = response.body.getReader();\n\t\t\t\t\tconst contentLength = response.headers.get('Content-Length');\n\t\t\t\t\tconst total = contentLength ? parseInt(contentLength) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0; // periodically read data into the new stream tracking while download progress\n\n\t\t\t\t\treturn new ReadableStream({\n\t\t\t\t\t\tstart(controller) {\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\t\t\t\t\t\t\t\treader.read().then(({\n\t\t\t\t\t\t\t\t\tdone,\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t}) => {\n\t\t\t\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent('progress', {\n\t\t\t\t\t\t\t\t\t\t\tlengthComputable,\n\t\t\t\t\t\t\t\t\t\t\tloaded,\n\t\t\t\t\t\t\t\t\t\t\ttotal\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\t\t\t\t\t\tif (callback.onProgress) callback.onProgress(event);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue(value);\n\t\t\t\t\t\t\t\t\t\treadData();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error(`fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`);\n\t\t\t\t}\n\t\t\t}).then(stream => {\n\t\t\t\tconst response = new Response(stream);\n\n\t\t\t\tswitch (this.responseType) {\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\t\t\t\t\t\treturn response.text().then(text => {\n\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\treturn parser.parseFromString(text, this.mimeType);\n\t\t\t\t\t\t});\n\n\t\t\t\t\tcase 'json':\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn response.text();\n\t\t\t\t}\n\t\t\t}).then(data => {\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add(url, data);\n\t\t\t\tconst callbacks = loading[url];\n\t\t\t\tdelete loading[url];\n\n\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\tif (callback.onLoad) callback.onLoad(data);\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemEnd(url);\n\t\t\t}).catch(err => {\n\t\t\t\t// Abort errors and other errors are handled the same\n\t\t\t\tconst callbacks = loading[url];\n\t\t\t\tdelete loading[url];\n\n\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\tif (callback.onError) callback.onError(err);\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError(url);\n\t\t\t\tthis.manager.itemEnd(url);\n\t\t\t});\n\t\t\tthis.manager.itemStart(url);\n\t\t}\n\n\t\tsetResponseType(value) {\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMimeType(value) {\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AnimationLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst animations = [];\n\n\t\t\tfor (let i = 0; i < json.length; i++) {\n\t\t\t\tconst clip = AnimationClip.parse(json[i]);\n\t\t\t\tanimations.push(clip);\n\t\t\t}\n\n\t\t\treturn animations;\n\t\t}\n\n\t}\n\n\t/**\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tclass CompressedTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst images = [];\n\t\t\tconst texture = new CompressedTexture();\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tlet loaded = 0;\n\n\t\t\tfunction loadTexture(i) {\n\t\t\t\tloader.load(url[i], function (buffer) {\n\t\t\t\t\tconst texDatas = scope.parse(buffer, true);\n\t\t\t\t\timages[i] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif (loaded === 6) {\n\t\t\t\t\t\tif (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.image = images;\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t\t}\n\t\t\t\t}, onProgress, onError);\n\t\t\t}\n\n\t\t\tif (Array.isArray(url)) {\n\t\t\t\tfor (let i = 0, il = url.length; i < il; ++i) {\n\t\t\t\t\tloadTexture(i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\t\t\t\tloader.load(url, function (buffer) {\n\t\t\t\t\tconst texDatas = scope.parse(buffer, true);\n\n\t\t\t\t\tif (texDatas.isCubemap) {\n\t\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor (let f = 0; f < faces; f++) {\n\t\t\t\t\t\t\timages[f] = {\n\t\t\t\t\t\t\t\tmipmaps: []\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tfor (let i = 0; i < texDatas.mipmapCount; i++) {\n\t\t\t\t\t\t\t\timages[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n\t\t\t\t\t\t\t\timages[f].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[f].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[f].height = texDatas.height;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttexture.image = images;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (texDatas.mipmapCount === 1) {\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t}, onProgress, onError);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\tclass ImageLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst scope = this;\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t}\n\n\t\t\tconst image = createElementNS('img');\n\n\t\t\tfunction onImageLoad() {\n\t\t\t\tremoveEventListeners();\n\t\t\t\tCache.add(url, this);\n\t\t\t\tif (onLoad) onLoad(this);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}\n\n\t\t\tfunction onImageError(event) {\n\t\t\t\tremoveEventListeners();\n\t\t\t\tif (onError) onError(event);\n\t\t\t\tscope.manager.itemError(url);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}\n\n\t\t\tfunction removeEventListeners() {\n\t\t\t\timage.removeEventListener('load', onImageLoad, false);\n\t\t\t\timage.removeEventListener('error', onImageError, false);\n\t\t\t}\n\n\t\t\timage.addEventListener('load', onImageLoad, false);\n\t\t\timage.addEventListener('error', onImageError, false);\n\n\t\t\tif (url.substr(0, 5) !== 'data:') {\n\t\t\t\tif (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n\t\t\t}\n\n\t\t\tscope.manager.itemStart(url);\n\t\t\timage.src = url;\n\t\t\treturn image;\n\t\t}\n\n\t}\n\n\tclass CubeTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(urls, onLoad, onProgress, onError) {\n\t\t\tconst texture = new CubeTexture();\n\t\t\tconst loader = new ImageLoader(this.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.setPath(this.path);\n\t\t\tlet loaded = 0;\n\n\t\t\tfunction loadTexture(i) {\n\t\t\t\tloader.load(urls[i], function (image) {\n\t\t\t\t\ttexture.images[i] = image;\n\t\t\t\t\tloaded++;\n\n\t\t\t\t\tif (loaded === 6) {\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t\t}\n\t\t\t\t}, undefined, onError);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < urls.length; ++i) {\n\t\t\t\tloadTexture(i);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\t/**\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tclass DataTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst texture = new DataTexture();\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (buffer) {\n\t\t\t\tconst texData = scope.parse(buffer);\n\t\t\t\tif (!texData) return;\n\n\t\t\t\tif (texData.image !== undefined) {\n\t\t\t\t\ttexture.image = texData.image;\n\t\t\t\t} else if (texData.data !== undefined) {\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\t\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\t\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\t\tif (texData.encoding !== undefined) {\n\t\t\t\t\ttexture.encoding = texData.encoding;\n\t\t\t\t}\n\n\t\t\t\tif (texData.flipY !== undefined) {\n\t\t\t\t\ttexture.flipY = texData.flipY;\n\t\t\t\t}\n\n\t\t\t\tif (texData.format !== undefined) {\n\t\t\t\t\ttexture.format = texData.format;\n\t\t\t\t}\n\n\t\t\t\tif (texData.type !== undefined) {\n\t\t\t\t\ttexture.type = texData.type;\n\t\t\t\t}\n\n\t\t\t\tif (texData.mipmaps !== undefined) {\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\t\t\t\t}\n\n\t\t\t\tif (texData.mipmapCount === 1) {\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t}\n\n\t\t\t\tif (texData.generateMipmaps !== undefined) {\n\t\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\tif (onLoad) onLoad(texture, texData);\n\t\t\t}, onProgress, onError);\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\tclass TextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst texture = new Texture();\n\t\t\tconst loader = new ImageLoader(this.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.load(url, function (image) {\n\t\t\t\ttexture.image = image;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif (onLoad !== undefined) {\n\t\t\t\t\tonLoad(texture);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\tclass Light extends Object3D {\n\t\tconstructor(color, intensity = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Light';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.intensity = intensity;\n\t\t}\n\n\t\tdispose() {// Empty here in base class; some subclasses override.\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.intensity = source.intensity;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\t\t\tif (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n\t\t\tif (this.distance !== undefined) data.object.distance = this.distance;\n\t\t\tif (this.angle !== undefined) data.object.angle = this.angle;\n\t\t\tif (this.decay !== undefined) data.object.decay = this.decay;\n\t\t\tif (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n\t\t\tif (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tLight.prototype.isLight = true;\n\n\tclass HemisphereLight extends Light {\n\t\tconstructor(skyColor, groundColor, intensity) {\n\t\t\tsuper(skyColor, intensity);\n\t\t\tthis.type = 'HemisphereLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.groundColor = new Color(groundColor);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tLight.prototype.copy.call(this, source);\n\t\t\tthis.groundColor.copy(source.groundColor);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tHemisphereLight.prototype.isHemisphereLight = true;\n\n\tconst _projScreenMatrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _lightPositionWorld$1 = /*@__PURE__*/new Vector3();\n\n\tconst _lookTarget$1 = /*@__PURE__*/new Vector3();\n\n\tclass LightShadow {\n\t\tconstructor(camera) {\n\t\t\tthis.camera = camera;\n\t\t\tthis.bias = 0;\n\t\t\tthis.normalBias = 0;\n\t\t\tthis.radius = 1;\n\t\t\tthis.blurSamples = 8;\n\t\t\tthis.mapSize = new Vector2(512, 512);\n\t\t\tthis.map = null;\n\t\t\tthis.mapPass = null;\n\t\t\tthis.matrix = new Matrix4();\n\t\t\tthis.autoUpdate = true;\n\t\t\tthis.needsUpdate = false;\n\t\t\tthis._frustum = new Frustum();\n\t\t\tthis._frameExtents = new Vector2(1, 1);\n\t\t\tthis._viewportCount = 1;\n\t\t\tthis._viewports = [new Vector4(0, 0, 1, 1)];\n\t\t}\n\n\t\tgetViewportCount() {\n\t\t\treturn this._viewportCount;\n\t\t}\n\n\t\tgetFrustum() {\n\t\t\treturn this._frustum;\n\t\t}\n\n\t\tupdateMatrices(light) {\n\t\t\tconst shadowCamera = this.camera;\n\t\t\tconst shadowMatrix = this.matrix;\n\n\t\t\t_lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\tshadowCamera.position.copy(_lightPositionWorld$1);\n\n\t\t\t_lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);\n\n\t\t\tshadowCamera.lookAt(_lookTarget$1);\n\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t_projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n\t\t\tthis._frustum.setFromProjectionMatrix(_projScreenMatrix$1);\n\n\t\t\tshadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n\t\t\tshadowMatrix.multiply(shadowCamera.projectionMatrix);\n\t\t\tshadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n\t\t}\n\n\t\tgetViewport(viewportIndex) {\n\t\t\treturn this._viewports[viewportIndex];\n\t\t}\n\n\t\tgetFrameExtents() {\n\t\t\treturn this._frameExtents;\n\t\t}\n\n\t\tdispose() {\n\t\t\tif (this.map) {\n\t\t\t\tthis.map.dispose();\n\t\t\t}\n\n\t\t\tif (this.mapPass) {\n\t\t\t\tthis.mapPass.dispose();\n\t\t\t}\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.camera = source.camera.clone();\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\t\t\tthis.mapSize.copy(source.mapSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst object = {};\n\t\t\tif (this.bias !== 0) object.bias = this.bias;\n\t\t\tif (this.normalBias !== 0) object.normalBias = this.normalBias;\n\t\t\tif (this.radius !== 1) object.radius = this.radius;\n\t\t\tif (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n\t\t\tobject.camera = this.camera.toJSON(false).object;\n\t\t\tdelete object.camera.matrix;\n\t\t\treturn object;\n\t\t}\n\n\t}\n\n\tclass SpotLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new PerspectiveCamera(50, 1, 0.5, 500));\n\t\t\tthis.focus = 1;\n\t\t}\n\n\t\tupdateMatrices(light) {\n\t\t\tconst camera = this.camera;\n\t\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tconst far = light.distance || camera.far;\n\n\t\t\tif (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\t\t\t}\n\n\t\t\tsuper.updateMatrices(light);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.focus = source.focus;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpotLightShadow.prototype.isSpotLightShadow = true;\n\n\tclass SpotLight extends Light {\n\t\tconstructor(color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'SpotLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.target = new Object3D();\n\t\t\tthis.distance = distance;\n\t\t\tthis.angle = angle;\n\t\t\tthis.penumbra = penumbra;\n\t\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\t\tthis.shadow = new SpotLightShadow();\n\t\t}\n\n\t\tget power() {\n\t\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t\t// by convention for a spotlight, luminous power (lm) = \u03C0 * luminous intensity (cd)\n\t\t\treturn this.intensity * Math.PI;\n\t\t}\n\n\t\tset power(power) {\n\t\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\t\tthis.intensity = power / Math.PI;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\t\t\tthis.target = source.target.clone();\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpotLight.prototype.isSpotLight = true;\n\n\tconst _projScreenMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _lightPositionWorld = /*@__PURE__*/new Vector3();\n\n\tconst _lookTarget = /*@__PURE__*/new Vector3();\n\n\tclass PointLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new PerspectiveCamera(90, 1, 0.5, 500));\n\t\t\tthis._frameExtents = new Vector2(4, 2);\n\t\t\tthis._viewportCount = 6;\n\t\t\tthis._viewports = [// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//\txzXZ\n\t\t\t//\t y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\t\t\t// positive X\n\t\t\tnew Vector4(2, 1, 1, 1), // negative X\n\t\t\tnew Vector4(0, 1, 1, 1), // positive Z\n\t\t\tnew Vector4(3, 1, 1, 1), // negative Z\n\t\t\tnew Vector4(1, 1, 1, 1), // positive Y\n\t\t\tnew Vector4(3, 0, 1, 1), // negative Y\n\t\t\tnew Vector4(1, 0, 1, 1)];\n\t\t\tthis._cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n\t\t\tthis._cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n\t\t}\n\n\t\tupdateMatrices(light, viewportIndex = 0) {\n\t\t\tconst camera = this.camera;\n\t\t\tconst shadowMatrix = this.matrix;\n\t\t\tconst far = light.distance || camera.far;\n\n\t\t\tif (far !== camera.far) {\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\t\t\t}\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\tcamera.position.copy(_lightPositionWorld);\n\n\t\t\t_lookTarget.copy(camera.position);\n\n\t\t\t_lookTarget.add(this._cubeDirections[viewportIndex]);\n\n\t\t\tcamera.up.copy(this._cubeUps[viewportIndex]);\n\t\t\tcamera.lookAt(_lookTarget);\n\t\t\tcamera.updateMatrixWorld();\n\t\t\tshadowMatrix.makeTranslation(-_lightPositionWorld.x, -_lightPositionWorld.y, -_lightPositionWorld.z);\n\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n\t\t\tthis._frustum.setFromProjectionMatrix(_projScreenMatrix);\n\t\t}\n\n\t}\n\n\tPointLightShadow.prototype.isPointLightShadow = true;\n\n\tclass PointLight extends Light {\n\t\tconstructor(color, intensity, distance = 0, decay = 1) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'PointLight';\n\t\t\tthis.distance = distance;\n\t\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\t\tthis.shadow = new PointLightShadow();\n\t\t}\n\n\t\tget power() {\n\t\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t\t// for an isotropic light source, luminous power (lm) = 4 \u03C0 luminous intensity (cd)\n\t\t\treturn this.intensity * 4 * Math.PI;\n\t\t}\n\n\t\tset power(power) {\n\t\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\t\tthis.intensity = power / (4 * Math.PI);\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tPointLight.prototype.isPointLight = true;\n\n\tclass DirectionalLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n\t\t}\n\n\t}\n\n\tDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\n\tclass DirectionalLight extends Light {\n\t\tconstructor(color, intensity) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'DirectionalLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.target = new Object3D();\n\t\t\tthis.shadow = new DirectionalLightShadow();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.target = source.target.clone();\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tDirectionalLight.prototype.isDirectionalLight = true;\n\n\tclass AmbientLight extends Light {\n\t\tconstructor(color, intensity) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'AmbientLight';\n\t\t}\n\n\t}\n\n\tAmbientLight.prototype.isAmbientLight = true;\n\n\tclass RectAreaLight extends Light {\n\t\tconstructor(color, intensity, width = 10, height = 10) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'RectAreaLight';\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tget power() {\n\t\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\t\treturn this.intensity * this.width * this.height * Math.PI;\n\t\t}\n\n\t\tset power(power) {\n\t\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\t\tthis.intensity = power / (this.width * this.height * Math.PI);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tRectAreaLight.prototype.isRectAreaLight = true;\n\n\t/**\n\t * Primary reference:\n\t *\t https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t *\n\t * Secondary reference:\n\t *\t https://www.ppsloan.org/publications/StupidSH36.pdf\n\t */\n\t// 3-band SH defined by 9 coefficients\n\n\tclass SphericalHarmonics3 {\n\t\tconstructor() {\n\t\t\tthis.coefficients = [];\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients.push(new Vector3());\n\t\t\t}\n\t\t}\n\n\t\tset(coefficients) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].copy(coefficients[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tzero() {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].set(0, 0, 0);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // get the radiance in the direction of the normal\n\t\t// target is a Vector3\n\n\n\t\tgetAt(normal, target) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z;\n\t\t\tconst coeff = this.coefficients; // band 0\n\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.282095); // band 1\n\n\t\t\ttarget.addScaledVector(coeff[1], 0.488603 * y);\n\t\t\ttarget.addScaledVector(coeff[2], 0.488603 * z);\n\t\t\ttarget.addScaledVector(coeff[3], 0.488603 * x); // band 2\n\n\t\t\ttarget.addScaledVector(coeff[4], 1.092548 * (x * y));\n\t\t\ttarget.addScaledVector(coeff[5], 1.092548 * (y * z));\n\t\t\ttarget.addScaledVector(coeff[6], 0.315392 * (3.0 * z * z - 1.0));\n\t\t\ttarget.addScaledVector(coeff[7], 1.092548 * (x * z));\n\t\t\ttarget.addScaledVector(coeff[8], 0.546274 * (x * x - y * y));\n\t\t\treturn target;\n\t\t} // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t\t// target is a Vector3\n\t\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\n\n\t\tgetIrradianceAt(normal, target) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z;\n\t\t\tconst coeff = this.coefficients; // band 0\n\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.886227); // \u03C0 * 0.282095\n\t\t\t// band 1\n\n\t\t\ttarget.addScaledVector(coeff[1], 2.0 * 0.511664 * y); // ( 2 * \u03C0 / 3 ) * 0.488603\n\n\t\t\ttarget.addScaledVector(coeff[2], 2.0 * 0.511664 * z);\n\t\t\ttarget.addScaledVector(coeff[3], 2.0 * 0.511664 * x); // band 2\n\n\t\t\ttarget.addScaledVector(coeff[4], 2.0 * 0.429043 * x * y); // ( \u03C0 / 4 ) * 1.092548\n\n\t\t\ttarget.addScaledVector(coeff[5], 2.0 * 0.429043 * y * z);\n\t\t\ttarget.addScaledVector(coeff[6], 0.743125 * z * z - 0.247708); // ( \u03C0 / 4 ) * 0.315392 * 3\n\n\t\t\ttarget.addScaledVector(coeff[7], 2.0 * 0.429043 * x * z);\n\t\t\ttarget.addScaledVector(coeff[8], 0.429043 * (x * x - y * y)); // ( \u03C0 / 4 ) * 0.546274\n\n\t\t\treturn target;\n\t\t}\n\n\t\tadd(sh) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].add(sh.coefficients[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledSH(sh, s) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].addScaledVector(sh.coefficients[i], s);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(s) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].multiplyScalar(s);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tlerp(sh, alpha) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].lerp(sh.coefficients[i], alpha);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(sh) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tif (!this.coefficients[i].equals(sh.coefficients[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tcopy(sh) {\n\t\t\treturn this.set(sh.coefficients);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tconst coefficients = this.coefficients;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tcoefficients[i].fromArray(array, offset + i * 3);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst coefficients = this.coefficients;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tcoefficients[i].toArray(array, offset + i * 3);\n\t\t\t}\n\n\t\t\treturn array;\n\t\t} // evaluate the basis functions\n\t\t// shBasis is an Array[ 9 ]\n\n\n\t\tstatic getBasisAt(normal, shBasis) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z; // band 0\n\n\t\t\tshBasis[0] = 0.282095; // band 1\n\n\t\t\tshBasis[1] = 0.488603 * y;\n\t\t\tshBasis[2] = 0.488603 * z;\n\t\t\tshBasis[3] = 0.488603 * x; // band 2\n\n\t\t\tshBasis[4] = 1.092548 * x * y;\n\t\t\tshBasis[5] = 1.092548 * y * z;\n\t\t\tshBasis[6] = 0.315392 * (3 * z * z - 1);\n\t\t\tshBasis[7] = 1.092548 * x * z;\n\t\t\tshBasis[8] = 0.546274 * (x * x - y * y);\n\t\t}\n\n\t}\n\n\tSphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n\n\tclass LightProbe extends Light {\n\t\tconstructor(sh = new SphericalHarmonics3(), intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tthis.sh = sh;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.sh.copy(source.sh);\n\t\t\treturn this;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\n\t\t\tthis.sh.fromArray(json.sh);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.sh = this.sh.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tLightProbe.prototype.isLightProbe = true;\n\n\tclass MaterialLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t\tthis.textures = {};\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(scope.manager);\n\t\t\tloader.setPath(scope.path);\n\t\t\tloader.setRequestHeader(scope.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst textures = this.textures;\n\n\t\t\tfunction getTexture(name) {\n\t\t\t\tif (textures[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.MaterialLoader: Undefined texture', name);\n\t\t\t\t}\n\n\t\t\t\treturn textures[name];\n\t\t\t}\n\n\t\t\tconst material = new Materials[json.type]();\n\t\t\tif (json.uuid !== undefined) material.uuid = json.uuid;\n\t\t\tif (json.name !== undefined) material.name = json.name;\n\t\t\tif (json.color !== undefined && material.color !== undefined) material.color.setHex(json.color);\n\t\t\tif (json.roughness !== undefined) material.roughness = json.roughness;\n\t\t\tif (json.metalness !== undefined) material.metalness = json.metalness;\n\t\t\tif (json.sheen !== undefined) material.sheen = json.sheen;\n\t\t\tif (json.sheenTint !== undefined) material.sheenTint = new Color().setHex(json.sheenTint);\n\t\t\tif (json.sheenRoughness !== undefined) material.sheenRoughness = json.sheenRoughness;\n\t\t\tif (json.emissive !== undefined && material.emissive !== undefined) material.emissive.setHex(json.emissive);\n\t\t\tif (json.specular !== undefined && material.specular !== undefined) material.specular.setHex(json.specular);\n\t\t\tif (json.specularIntensity !== undefined) material.specularIntensity = json.specularIntensity;\n\t\t\tif (json.specularTint !== undefined && material.specularTint !== undefined) material.specularTint.setHex(json.specularTint);\n\t\t\tif (json.shininess !== undefined) material.shininess = json.shininess;\n\t\t\tif (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\n\t\t\tif (json.clearcoatRoughness !== undefined) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\t\tif (json.transmission !== undefined) material.transmission = json.transmission;\n\t\t\tif (json.thickness !== undefined) material.thickness = json.thickness;\n\t\t\tif (json.attenuationDistance !== undefined) material.attenuationDistance = json.attenuationDistance;\n\t\t\tif (json.attenuationTint !== undefined && material.attenuationTint !== undefined) material.attenuationTint.setHex(json.attenuationTint);\n\t\t\tif (json.fog !== undefined) material.fog = json.fog;\n\t\t\tif (json.flatShading !== undefined) material.flatShading = json.flatShading;\n\t\t\tif (json.blending !== undefined) material.blending = json.blending;\n\t\t\tif (json.combine !== undefined) material.combine = json.combine;\n\t\t\tif (json.side !== undefined) material.side = json.side;\n\t\t\tif (json.shadowSide !== undefined) material.shadowSide = json.shadowSide;\n\t\t\tif (json.opacity !== undefined) material.opacity = json.opacity;\n\t\t\tif (json.format !== undefined) material.format = json.format;\n\t\t\tif (json.transparent !== undefined) material.transparent = json.transparent;\n\t\t\tif (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n\t\t\tif (json.depthTest !== undefined) material.depthTest = json.depthTest;\n\t\t\tif (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n\t\t\tif (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n\t\t\tif (json.stencilWrite !== undefined) material.stencilWrite = json.stencilWrite;\n\t\t\tif (json.stencilWriteMask !== undefined) material.stencilWriteMask = json.stencilWriteMask;\n\t\t\tif (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\n\t\t\tif (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\n\t\t\tif (json.stencilFuncMask !== undefined) material.stencilFuncMask = json.stencilFuncMask;\n\t\t\tif (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\n\t\t\tif (json.stencilZFail !== undefined) material.stencilZFail = json.stencilZFail;\n\t\t\tif (json.stencilZPass !== undefined) material.stencilZPass = json.stencilZPass;\n\t\t\tif (json.wireframe !== undefined) material.wireframe = json.wireframe;\n\t\t\tif (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n\t\t\tif (json.rotation !== undefined) material.rotation = json.rotation;\n\t\t\tif (json.linewidth !== 1) material.linewidth = json.linewidth;\n\t\t\tif (json.dashSize !== undefined) material.dashSize = json.dashSize;\n\t\t\tif (json.gapSize !== undefined) material.gapSize = json.gapSize;\n\t\t\tif (json.scale !== undefined) material.scale = json.scale;\n\t\t\tif (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\n\t\t\tif (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\t\tif (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\t\t\tif (json.dithering !== undefined) material.dithering = json.dithering;\n\t\t\tif (json.alphaToCoverage !== undefined) material.alphaToCoverage = json.alphaToCoverage;\n\t\t\tif (json.premultipliedAlpha !== undefined) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\t\tif (json.visible !== undefined) material.visible = json.visible;\n\t\t\tif (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\n\t\t\tif (json.userData !== undefined) material.userData = json.userData;\n\n\t\t\tif (json.vertexColors !== undefined) {\n\t\t\t\tif (typeof json.vertexColors === 'number') {\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors > 0 ? true : false;\n\t\t\t\t} else {\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\t\t\t\t}\n\t\t\t} // Shader Material\n\n\n\t\t\tif (json.uniforms !== undefined) {\n\t\t\t\tfor (const name in json.uniforms) {\n\t\t\t\t\tconst uniform = json.uniforms[name];\n\t\t\t\t\tmaterial.uniforms[name] = {};\n\n\t\t\t\t\tswitch (uniform.type) {\n\t\t\t\t\t\tcase 't':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = getTexture(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Color().setHex(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector2().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector3().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector4().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix3().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix4().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = uniform.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json.defines !== undefined) material.defines = json.defines;\n\t\t\tif (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n\t\t\tif (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n\n\t\t\tif (json.extensions !== undefined) {\n\t\t\t\tfor (const key in json.extensions) {\n\t\t\t\t\tmaterial.extensions[key] = json.extensions[key];\n\t\t\t\t}\n\t\t\t} // Deprecated\n\n\n\t\t\tif (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n\t\t\t// for PointsMaterial\n\n\t\t\tif (json.size !== undefined) material.size = json.size;\n\t\t\tif (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n\t\t\tif (json.map !== undefined) material.map = getTexture(json.map);\n\t\t\tif (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\n\t\t\tif (json.alphaMap !== undefined) material.alphaMap = getTexture(json.alphaMap);\n\t\t\tif (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n\t\t\tif (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n\t\t\tif (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n\t\t\tif (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\n\n\t\t\tif (json.normalScale !== undefined) {\n\t\t\t\tlet normalScale = json.normalScale;\n\n\t\t\t\tif (Array.isArray(normalScale) === false) {\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\t\t\t\t\tnormalScale = [normalScale, normalScale];\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray(normalScale);\n\t\t\t}\n\n\t\t\tif (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n\t\t\tif (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n\t\t\tif (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n\t\t\tif (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n\t\t\tif (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n\t\t\tif (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n\t\t\tif (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n\t\t\tif (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n\t\t\tif (json.specularIntensityMap !== undefined) material.specularIntensityMap = getTexture(json.specularIntensityMap);\n\t\t\tif (json.specularTintMap !== undefined) material.specularTintMap = getTexture(json.specularTintMap);\n\t\t\tif (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n\t\t\tif (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\n\t\t\tif (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n\t\t\tif (json.refractionRatio !== undefined) material.refractionRatio = json.refractionRatio;\n\t\t\tif (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n\t\t\tif (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n\t\t\tif (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n\t\t\tif (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n\t\t\tif (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n\t\t\tif (json.clearcoatMap !== undefined) material.clearcoatMap = getTexture(json.clearcoatMap);\n\t\t\tif (json.clearcoatRoughnessMap !== undefined) material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\n\t\t\tif (json.clearcoatNormalMap !== undefined) material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\n\t\t\tif (json.clearcoatNormalScale !== undefined) material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\n\t\t\tif (json.transmissionMap !== undefined) material.transmissionMap = getTexture(json.transmissionMap);\n\t\t\tif (json.thicknessMap !== undefined) material.thicknessMap = getTexture(json.thicknessMap);\n\t\t\treturn material;\n\t\t}\n\n\t\tsetTextures(value) {\n\t\t\tthis.textures = value;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass LoaderUtils {\n\t\tstatic decodeText(array) {\n\t\t\tif (typeof TextDecoder !== 'undefined') {\n\t\t\t\treturn new TextDecoder().decode(array);\n\t\t\t} // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\n\t\t\tlet s = '';\n\n\t\t\tfor (let i = 0, il = array.length; i < il; i++) {\n\t\t\t\t// Implicitly assumes little-endian.\n\t\t\t\ts += String.fromCharCode(array[i]);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// merges multi-byte utf-8 characters.\n\t\t\t\treturn decodeURIComponent(escape(s));\n\t\t\t} catch (e) {\n\t\t\t\t// see #16358\n\t\t\t\treturn s;\n\t\t\t}\n\t\t}\n\n\t\tstatic extractUrlBase(url) {\n\t\t\tconst index = url.lastIndexOf('/');\n\t\t\tif (index === -1) return './';\n\t\t\treturn url.substr(0, index + 1);\n\t\t}\n\n\t\tstatic resolveURL(url, path) {\n\t\t\t// Invalid URL\n\t\t\tif (typeof url !== 'string' || url === '') return ''; // Host Relative URL\n\n\t\t\tif (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n\t\t\t\tpath = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n\t\t\t} // Absolute URL http://,https://,//\n\n\n\t\t\tif (/^(https?:)?\\/\\//i.test(url)) return url; // Data URI\n\n\t\t\tif (/^data:.*,.*$/i.test(url)) return url; // Blob URL\n\n\t\t\tif (/^blob:.*$/i.test(url)) return url; // Relative URL\n\n\t\t\treturn path + url;\n\t\t}\n\n\t}\n\n\tclass InstancedBufferGeometry extends BufferGeometry {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'InstancedBufferGeometry';\n\t\t\tthis.instanceCount = Infinity;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.instanceCount = source.instanceCount;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON(this);\n\t\t\tdata.instanceCount = this.instanceCount;\n\t\t\tdata.isInstancedBufferGeometry = true;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\n\tclass BufferGeometryLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(scope.manager);\n\t\t\tloader.setPath(scope.path);\n\t\t\tloader.setRequestHeader(scope.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst interleavedBufferMap = {};\n\t\t\tconst arrayBufferMap = {};\n\n\t\t\tfunction getInterleavedBuffer(json, uuid) {\n\t\t\t\tif (interleavedBufferMap[uuid] !== undefined) return interleavedBufferMap[uuid];\n\t\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\t\tconst interleavedBuffer = interleavedBuffers[uuid];\n\t\t\t\tconst buffer = getArrayBuffer(json, interleavedBuffer.buffer);\n\t\t\t\tconst array = getTypedArray(interleavedBuffer.type, buffer);\n\t\t\t\tconst ib = new InterleavedBuffer(array, interleavedBuffer.stride);\n\t\t\t\tib.uuid = interleavedBuffer.uuid;\n\t\t\t\tinterleavedBufferMap[uuid] = ib;\n\t\t\t\treturn ib;\n\t\t\t}\n\n\t\t\tfunction getArrayBuffer(json, uuid) {\n\t\t\t\tif (arrayBufferMap[uuid] !== undefined) return arrayBufferMap[uuid];\n\t\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\t\tconst arrayBuffer = arrayBuffers[uuid];\n\t\t\t\tconst ab = new Uint32Array(arrayBuffer).buffer;\n\t\t\t\tarrayBufferMap[uuid] = ab;\n\t\t\t\treturn ab;\n\t\t\t}\n\n\t\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\t\t\tconst index = json.data.index;\n\n\t\t\tif (index !== undefined) {\n\t\t\t\tconst typedArray = getTypedArray(index.type, index.array);\n\t\t\t\tgeometry.setIndex(new BufferAttribute(typedArray, 1));\n\t\t\t}\n\n\t\t\tconst attributes = json.data.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tlet bufferAttribute;\n\n\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n\t\t\t\t} else {\n\t\t\t\t\tconst typedArray = getTypedArray(attribute.type, attribute.array);\n\t\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\t\tbufferAttribute = new bufferAttributeConstr(typedArray, attribute.itemSize, attribute.normalized);\n\t\t\t\t}\n\n\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n\t\t\t\tif (attribute.usage !== undefined) bufferAttribute.setUsage(attribute.usage);\n\n\t\t\t\tif (attribute.updateRange !== undefined) {\n\t\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute(key, bufferAttribute);\n\t\t\t}\n\n\t\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\t\tif (morphAttributes) {\n\t\t\t\tfor (const key in morphAttributes) {\n\t\t\t\t\tconst attributeArray = morphAttributes[key];\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor (let i = 0, il = attributeArray.length; i < il; i++) {\n\t\t\t\t\t\tconst attribute = attributeArray[i];\n\t\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n\t\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst typedArray = getTypedArray(attribute.type, attribute.array);\n\t\t\t\t\t\t\tbufferAttribute = new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n\t\t\t\t\t\tarray.push(bufferAttribute);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.morphAttributes[key] = array;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\t\tif (morphTargetsRelative) {\n\t\t\t\tgeometry.morphTargetsRelative = true;\n\t\t\t}\n\n\t\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif (groups !== undefined) {\n\t\t\t\tfor (let i = 0, n = groups.length; i !== n; ++i) {\n\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\tgeometry.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\t\tif (boundingSphere !== undefined) {\n\t\t\t\tconst center = new Vector3();\n\n\t\t\t\tif (boundingSphere.center !== undefined) {\n\t\t\t\t\tcenter.fromArray(boundingSphere.center);\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n\t\t\t}\n\n\t\t\tif (json.name) geometry.name = json.name;\n\t\t\tif (json.userData) geometry.userData = json.userData;\n\t\t\treturn geometry;\n\t\t}\n\n\t}\n\n\tclass ObjectLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\tlet json = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(text);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (onError !== undefined) onError(error);\n\t\t\t\t\tconsole.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst metadata = json.metadata;\n\n\t\t\t\tif (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n\t\t\t\t\tconsole.error('THREE.ObjectLoader: Can\\'t load ' + url);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tscope.parse(json, onLoad);\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tasync loadAsync(url, onProgress) {\n\t\t\tconst scope = this;\n\t\t\tconst path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tconst text = await loader.loadAsync(url, onProgress);\n\t\t\tconst json = JSON.parse(text);\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n\t\t\t\tthrow new Error('THREE.ObjectLoader: Can\\'t load ' + url);\n\t\t\t}\n\n\t\t\treturn await scope.parseAsync(json);\n\t\t}\n\n\t\tparse(json, onLoad) {\n\t\t\tconst animations = this.parseAnimations(json.animations);\n\t\t\tconst shapes = this.parseShapes(json.shapes);\n\t\t\tconst geometries = this.parseGeometries(json.geometries, shapes);\n\t\t\tconst images = this.parseImages(json.images, function () {\n\t\t\t\tif (onLoad !== undefined) onLoad(object);\n\t\t\t});\n\t\t\tconst textures = this.parseTextures(json.textures, images);\n\t\t\tconst materials = this.parseMaterials(json.materials, textures);\n\t\t\tconst object = this.parseObject(json.object, geometries, materials, textures, animations);\n\t\t\tconst skeletons = this.parseSkeletons(json.skeletons, object);\n\t\t\tthis.bindSkeletons(object, skeletons); //\n\n\t\t\tif (onLoad !== undefined) {\n\t\t\t\tlet hasImages = false;\n\n\t\t\t\tfor (const uuid in images) {\n\t\t\t\t\tif (images[uuid] instanceof HTMLImageElement) {\n\t\t\t\t\t\thasImages = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hasImages === false) onLoad(object);\n\t\t\t}\n\n\t\t\treturn object;\n\t\t}\n\n\t\tasync parseAsync(json) {\n\t\t\tconst animations = this.parseAnimations(json.animations);\n\t\t\tconst shapes = this.parseShapes(json.shapes);\n\t\t\tconst geometries = this.parseGeometries(json.geometries, shapes);\n\t\t\tconst images = await this.parseImagesAsync(json.images);\n\t\t\tconst textures = this.parseTextures(json.textures, images);\n\t\t\tconst materials = this.parseMaterials(json.materials, textures);\n\t\t\tconst object = this.parseObject(json.object, geometries, materials, textures, animations);\n\t\t\tconst skeletons = this.parseSkeletons(json.skeletons, object);\n\t\t\tthis.bindSkeletons(object, skeletons);\n\t\t\treturn object;\n\t\t}\n\n\t\tparseShapes(json) {\n\t\t\tconst shapes = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst shape = new Shape().fromJSON(json[i]);\n\t\t\t\t\tshapes[shape.uuid] = shape;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn shapes;\n\t\t}\n\n\t\tparseSkeletons(json, object) {\n\t\t\tconst skeletons = {};\n\t\t\tconst bones = {}; // generate bone lookup table\n\n\t\t\tobject.traverse(function (child) {\n\t\t\t\tif (child.isBone) bones[child.uuid] = child;\n\t\t\t}); // create skeletons\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst skeleton = new Skeleton().fromJSON(json[i], bones);\n\t\t\t\t\tskeletons[skeleton.uuid] = skeleton;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn skeletons;\n\t\t}\n\n\t\tparseGeometries(json, shapes) {\n\t\t\tconst geometries = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tlet geometry;\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tswitch (data.type) {\n\t\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\t\tcase 'InstancedBufferGeometry':\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse(data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\t\t\t\t\t\t\tconsole.error('THREE.ObjectLoader: The legacy Geometry type is no longer supported.');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif (data.type in Geometries) {\n\t\t\t\t\t\t\t\tgeometry = Geometries[data.type].fromJSON(data, shapes);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.warn(`THREE.ObjectLoader: Unsupported geometry type \"${data.type}\"`);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\t\t\t\t\tif (data.name !== undefined) geometry.name = data.name;\n\t\t\t\t\tif (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\n\t\t\t\t\tgeometries[data.uuid] = geometry;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn geometries;\n\t\t}\n\n\t\tparseMaterials(json, textures) {\n\t\t\tconst cache = {}; // MultiMaterial\n\n\t\t\tconst materials = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tconst loader = new MaterialLoader();\n\t\t\t\tloader.setTextures(textures);\n\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tif (data.type === 'MultiMaterial') {\n\t\t\t\t\t\t// Deprecated\n\t\t\t\t\t\tconst array = [];\n\n\t\t\t\t\t\tfor (let j = 0; j < data.materials.length; j++) {\n\t\t\t\t\t\t\tconst material = data.materials[j];\n\n\t\t\t\t\t\t\tif (cache[material.uuid] === undefined) {\n\t\t\t\t\t\t\t\tcache[material.uuid] = loader.parse(material);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tarray.push(cache[material.uuid]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[data.uuid] = array;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (cache[data.uuid] === undefined) {\n\t\t\t\t\t\t\tcache[data.uuid] = loader.parse(data);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[data.uuid] = cache[data.uuid];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn materials;\n\t\t}\n\n\t\tparseAnimations(json) {\n\t\t\tconst animations = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0; i < json.length; i++) {\n\t\t\t\t\tconst data = json[i];\n\t\t\t\t\tconst clip = AnimationClip.parse(data);\n\t\t\t\t\tanimations[clip.uuid] = clip;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn animations;\n\t\t}\n\n\t\tparseImages(json, onLoad) {\n\t\t\tconst scope = this;\n\t\t\tconst images = {};\n\t\t\tlet loader;\n\n\t\t\tfunction loadImage(url) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\treturn loader.load(url, function () {\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, undefined, function () {\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction deserializeImage(image) {\n\t\t\t\tif (typeof image === 'string') {\n\t\t\t\t\tconst url = image;\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n\t\t\t\t\treturn loadImage(path);\n\t\t\t\t} else {\n\t\t\t\t\tif (image.data) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tdata: getTypedArray(image.type, image.data),\n\t\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\t\theight: image.height\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json !== undefined && json.length > 0) {\n\t\t\t\tconst manager = new LoadingManager(onLoad);\n\t\t\t\tloader = new ImageLoader(manager);\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\n\t\t\t\tfor (let i = 0, il = json.length; i < il; i++) {\n\t\t\t\t\tconst image = json[i];\n\t\t\t\t\tconst url = image.url;\n\n\t\t\t\t\tif (Array.isArray(url)) {\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\t\t\t\t\t\timages[image.uuid] = [];\n\n\t\t\t\t\t\tfor (let j = 0, jl = url.length; j < jl; j++) {\n\t\t\t\t\t\t\tconst currentUrl = url[j];\n\t\t\t\t\t\t\tconst deserializedImage = deserializeImage(currentUrl);\n\n\t\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\t\tif (deserializedImage instanceof HTMLImageElement) {\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(deserializedImage);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// load single image\n\t\t\t\t\t\tconst deserializedImage = deserializeImage(image.url);\n\n\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\timages[image.uuid] = deserializedImage;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn images;\n\t\t}\n\n\t\tasync parseImagesAsync(json) {\n\t\t\tconst scope = this;\n\t\t\tconst images = {};\n\t\t\tlet loader;\n\n\t\t\tasync function deserializeImage(image) {\n\t\t\t\tif (typeof image === 'string') {\n\t\t\t\t\tconst url = image;\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n\t\t\t\t\treturn await loader.loadAsync(path);\n\t\t\t\t} else {\n\t\t\t\t\tif (image.data) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tdata: getTypedArray(image.type, image.data),\n\t\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\t\theight: image.height\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json !== undefined && json.length > 0) {\n\t\t\t\tloader = new ImageLoader(this.manager);\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\n\t\t\t\tfor (let i = 0, il = json.length; i < il; i++) {\n\t\t\t\t\tconst image = json[i];\n\t\t\t\t\tconst url = image.url;\n\n\t\t\t\t\tif (Array.isArray(url)) {\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\t\t\t\t\t\timages[image.uuid] = [];\n\n\t\t\t\t\t\tfor (let j = 0, jl = url.length; j < jl; j++) {\n\t\t\t\t\t\t\tconst currentUrl = url[j];\n\t\t\t\t\t\t\tconst deserializedImage = await deserializeImage(currentUrl);\n\n\t\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\t\tif (deserializedImage instanceof HTMLImageElement) {\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(deserializedImage);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// load single image\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage(image.url);\n\n\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\timages[image.uuid] = deserializedImage;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn images;\n\t\t}\n\n\t\tparseTextures(json, images) {\n\t\t\tfunction parseConstant(value, type) {\n\t\t\t\tif (typeof value === 'number') return value;\n\t\t\t\tconsole.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n\t\t\t\treturn type[value];\n\t\t\t}\n\n\t\t\tconst textures = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tif (data.image === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (images[data.image] === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined image', data.image);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet texture;\n\t\t\t\t\tconst image = images[data.image];\n\n\t\t\t\t\tif (Array.isArray(image)) {\n\t\t\t\t\t\ttexture = new CubeTexture(image);\n\t\t\t\t\t\tif (image.length === 6) texture.needsUpdate = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (image && image.data) {\n\t\t\t\t\t\t\ttexture = new DataTexture(image.data, image.width, image.height);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexture = new Texture(image);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (image) texture.needsUpdate = true; // textures can have undefined image data\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\t\t\t\t\tif (data.name !== undefined) texture.name = data.name;\n\t\t\t\t\tif (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n\t\t\t\t\tif (data.offset !== undefined) texture.offset.fromArray(data.offset);\n\t\t\t\t\tif (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n\t\t\t\t\tif (data.center !== undefined) texture.center.fromArray(data.center);\n\t\t\t\t\tif (data.rotation !== undefined) texture.rotation = data.rotation;\n\n\t\t\t\t\tif (data.wrap !== undefined) {\n\t\t\t\t\t\ttexture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n\t\t\t\t\t\ttexture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.format !== undefined) texture.format = data.format;\n\t\t\t\t\tif (data.type !== undefined) texture.type = data.type;\n\t\t\t\t\tif (data.encoding !== undefined) texture.encoding = data.encoding;\n\t\t\t\t\tif (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n\t\t\t\t\tif (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n\t\t\t\t\tif (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n\t\t\t\t\tif (data.flipY !== undefined) texture.flipY = data.flipY;\n\t\t\t\t\tif (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\t\tif (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\t\tif (data.userData !== undefined) texture.userData = data.userData;\n\t\t\t\t\ttextures[data.uuid] = texture;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn textures;\n\t\t}\n\n\t\tparseObject(data, geometries, materials, textures, animations) {\n\t\t\tlet object;\n\n\t\t\tfunction getGeometry(name) {\n\t\t\t\tif (geometries[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined geometry', name);\n\t\t\t\t}\n\n\t\t\t\treturn geometries[name];\n\t\t\t}\n\n\t\t\tfunction getMaterial(name) {\n\t\t\t\tif (name === undefined) return undefined;\n\n\t\t\t\tif (Array.isArray(name)) {\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor (let i = 0, l = name.length; i < l; i++) {\n\t\t\t\t\t\tconst uuid = name[i];\n\n\t\t\t\t\t\tif (materials[uuid] === undefined) {\n\t\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', uuid);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push(materials[uuid]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\t\t\t\t}\n\n\t\t\t\tif (materials[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', name);\n\t\t\t\t}\n\n\t\t\t\treturn materials[name];\n\t\t\t}\n\n\t\t\tfunction getTexture(uuid) {\n\t\t\t\tif (textures[uuid] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined texture', uuid);\n\t\t\t\t}\n\n\t\t\t\treturn textures[uuid];\n\t\t\t}\n\n\t\t\tlet geometry, material;\n\n\t\t\tswitch (data.type) {\n\t\t\t\tcase 'Scene':\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif (data.background !== undefined) {\n\t\t\t\t\t\tif (Number.isInteger(data.background)) {\n\t\t\t\t\t\t\tobject.background = new Color(data.background);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobject.background = getTexture(data.background);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.environment !== undefined) {\n\t\t\t\t\t\tobject.environment = getTexture(data.environment);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.fog !== undefined) {\n\t\t\t\t\t\tif (data.fog.type === 'Fog') {\n\t\t\t\t\t\t\tobject.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n\t\t\t\t\t\t} else if (data.fog.type === 'FogExp2') {\n\t\t\t\t\t\t\tobject.fog = new FogExp2(data.fog.color, data.fog.density);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\t\t\t\t\tobject = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n\t\t\t\t\tif (data.focus !== undefined) object.focus = data.focus;\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\n\t\t\t\t\tif (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n\t\t\t\t\tif (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\t\t\t\t\tobject = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\t\t\t\t\tobject = new AmbientLight(data.color, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tobject = new DirectionalLight(data.color, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tobject = new PointLight(data.color, data.intensity, data.distance, data.decay);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tobject = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tobject = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tobject = new HemisphereLight(data.color, data.groundColor, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LightProbe':\n\t\t\t\t\tobject = new LightProbe().fromJSON(data);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tobject = new SkinnedMesh(geometry, material);\n\t\t\t\t\tif (data.bindMode !== undefined) object.bindMode = data.bindMode;\n\t\t\t\t\tif (data.bindMatrix !== undefined) object.bindMatrix.fromArray(data.bindMatrix);\n\t\t\t\t\tif (data.skeleton !== undefined) object.skeleton = data.skeleton;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Mesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tobject = new Mesh(geometry, material);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'InstancedMesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tconst count = data.count;\n\t\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\t\tconst instanceColor = data.instanceColor;\n\t\t\t\t\tobject = new InstancedMesh(geometry, material, count);\n\t\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute(new Float32Array(instanceMatrix.array), 16);\n\t\t\t\t\tif (instanceColor !== undefined) object.instanceColor = new InstancedBufferAttribute(new Float32Array(instanceColor.array), instanceColor.itemSize);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\t\t\t\t\tobject = new LOD();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\t\t\t\t\tobject = new Line(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\t\t\t\t\tobject = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\t\t\t\t\tobject = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\t\t\t\t\tobject = new Points(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\t\t\t\t\tobject = new Sprite(getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\t\t\t\t\tobject = new Group();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Bone':\n\t\t\t\t\tobject = new Bone();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tobject = new Object3D();\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\t\t\tif (data.name !== undefined) object.name = data.name;\n\n\t\t\tif (data.matrix !== undefined) {\n\t\t\t\tobject.matrix.fromArray(data.matrix);\n\t\t\t\tif (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\t\tif (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n\t\t\t} else {\n\t\t\t\tif (data.position !== undefined) object.position.fromArray(data.position);\n\t\t\t\tif (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n\t\t\t\tif (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n\t\t\t\tif (data.scale !== undefined) object.scale.fromArray(data.scale);\n\t\t\t}\n\n\t\t\tif (data.castShadow !== undefined) object.castShadow = data.castShadow;\n\t\t\tif (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n\t\t\tif (data.shadow) {\n\t\t\t\tif (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n\t\t\t\tif (data.shadow.normalBias !== undefined) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\t\tif (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n\t\t\t\tif (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n\t\t\t\tif (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n\t\t\t}\n\n\t\t\tif (data.visible !== undefined) object.visible = data.visible;\n\t\t\tif (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n\t\t\tif (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n\t\t\tif (data.userData !== undefined) object.userData = data.userData;\n\t\t\tif (data.layers !== undefined) object.layers.mask = data.layers;\n\n\t\t\tif (data.children !== undefined) {\n\t\t\t\tconst children = data.children;\n\n\t\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\t\tobject.add(this.parseObject(children[i], geometries, materials, textures, animations));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.animations !== undefined) {\n\t\t\t\tconst objectAnimations = data.animations;\n\n\t\t\t\tfor (let i = 0; i < objectAnimations.length; i++) {\n\t\t\t\t\tconst uuid = objectAnimations[i];\n\t\t\t\t\tobject.animations.push(animations[uuid]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.type === 'LOD') {\n\t\t\t\tif (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\n\t\t\t\tconst levels = data.levels;\n\n\t\t\t\tfor (let l = 0; l < levels.length; l++) {\n\t\t\t\t\tconst level = levels[l];\n\t\t\t\t\tconst child = object.getObjectByProperty('uuid', level.object);\n\n\t\t\t\t\tif (child !== undefined) {\n\t\t\t\t\t\tobject.addLevel(child, level.distance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn object;\n\t\t}\n\n\t\tbindSkeletons(object, skeletons) {\n\t\t\tif (Object.keys(skeletons).length === 0) return;\n\t\t\tobject.traverse(function (child) {\n\t\t\t\tif (child.isSkinnedMesh === true && child.skeleton !== undefined) {\n\t\t\t\t\tconst skeleton = skeletons[child.skeleton];\n\n\t\t\t\t\tif (skeleton === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchild.bind(skeleton, child.bindMatrix);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/* DEPRECATED */\n\n\n\t\tsetTexturePath(value) {\n\t\t\tconsole.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');\n\t\t\treturn this.setResourcePath(value);\n\t\t}\n\n\t}\n\n\tconst TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\tconst TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\tconst TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\t\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\t\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n\t};\n\n\tclass ImageBitmapLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\n\t\t\tif (typeof createImageBitmap === 'undefined') {\n\t\t\t\tconsole.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n\t\t\t}\n\n\t\t\tif (typeof fetch === 'undefined') {\n\t\t\t\tconsole.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n\t\t\t}\n\n\t\t\tthis.options = {\n\t\t\t\tpremultiplyAlpha: 'none'\n\t\t\t};\n\t\t}\n\n\t\tsetOptions(options) {\n\t\t\tthis.options = options;\n\t\t\treturn this;\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (url === undefined) url = '';\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst scope = this;\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t}\n\n\t\t\tconst fetchOptions = {};\n\t\t\tfetchOptions.credentials = this.crossOrigin === 'anonymous' ? 'same-origin' : 'include';\n\t\t\tfetchOptions.headers = this.requestHeader;\n\t\t\tfetch(url, fetchOptions).then(function (res) {\n\t\t\t\treturn res.blob();\n\t\t\t}).then(function (blob) {\n\t\t\t\treturn createImageBitmap(blob, Object.assign(scope.options, {\n\t\t\t\t\tcolorSpaceConversion: 'none'\n\t\t\t\t}));\n\t\t\t}).then(function (imageBitmap) {\n\t\t\t\tCache.add(url, imageBitmap);\n\t\t\t\tif (onLoad) onLoad(imageBitmap);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}).catch(function (e) {\n\t\t\t\tif (onError) onError(e);\n\t\t\t\tscope.manager.itemError(url);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t});\n\t\t\tscope.manager.itemStart(url);\n\t\t}\n\n\t}\n\n\tImageBitmapLoader.prototype.isImageBitmapLoader = true;\n\n\tlet _context;\n\n\tconst AudioContext = {\n\t\tgetContext: function () {\n\t\t\tif (_context === undefined) {\n\t\t\t\t_context = new (window.AudioContext || window.webkitAudioContext)();\n\t\t\t}\n\n\t\t\treturn _context;\n\t\t},\n\t\tsetContext: function (value) {\n\t\t\t_context = value;\n\t\t}\n\t};\n\n\tclass AudioLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (buffer) {\n\t\t\t\ttry {\n\t\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\t\tconst bufferCopy = buffer.slice(0);\n\t\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\t\tcontext.decodeAudioData(bufferCopy, function (audioBuffer) {\n\t\t\t\t\t\tonLoad(audioBuffer);\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t}\n\n\tclass HemisphereLightProbe extends LightProbe {\n\t\tconstructor(skyColor, groundColor, intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tconst color1 = new Color().set(skyColor);\n\t\t\tconst color2 = new Color().set(groundColor);\n\t\t\tconst sky = new Vector3(color1.r, color1.g, color1.b);\n\t\t\tconst ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\n\t\t\tconst c0 = Math.sqrt(Math.PI);\n\t\t\tconst c1 = c0 * Math.sqrt(0.75);\n\t\t\tthis.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\n\t\t\tthis.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\n\t\t}\n\n\t}\n\n\tHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n\n\tclass AmbientLightProbe extends LightProbe {\n\t\tconstructor(color, intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tconst color1 = new Color().set(color); // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\n\t\t\tthis.sh.coefficients[0].set(color1.r, color1.g, color1.b).multiplyScalar(2 * Math.sqrt(Math.PI));\n\t\t}\n\n\t}\n\n\tAmbientLightProbe.prototype.isAmbientLightProbe = true;\n\n\tconst _eyeRight = /*@__PURE__*/new Matrix4();\n\n\tconst _eyeLeft = /*@__PURE__*/new Matrix4();\n\n\tclass StereoCamera {\n\t\tconstructor() {\n\t\t\tthis.type = 'StereoCamera';\n\t\t\tthis.aspect = 1;\n\t\t\tthis.eyeSep = 0.064;\n\t\t\tthis.cameraL = new PerspectiveCamera();\n\t\t\tthis.cameraL.layers.enable(1);\n\t\t\tthis.cameraL.matrixAutoUpdate = false;\n\t\t\tthis.cameraR = new PerspectiveCamera();\n\t\t\tthis.cameraR.layers.enable(2);\n\t\t\tthis.cameraR.matrixAutoUpdate = false;\n\t\t\tthis._cache = {\n\t\t\t\tfocus: null,\n\t\t\t\tfov: null,\n\t\t\t\taspect: null,\n\t\t\t\tnear: null,\n\t\t\t\tfar: null,\n\t\t\t\tzoom: null,\n\t\t\t\teyeSep: null\n\t\t\t};\n\t\t}\n\n\t\tupdate(camera) {\n\t\t\tconst cache = this._cache;\n\t\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\t\tif (needsUpdate) {\n\t\t\t\tcache.focus = camera.focus;\n\t\t\t\tcache.fov = camera.fov;\n\t\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\t\tcache.near = camera.near;\n\t\t\t\tcache.far = camera.far;\n\t\t\t\tcache.zoom = camera.zoom;\n\t\t\t\tcache.eyeSep = this.eyeSep; // Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tconst projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\t\tconst ymax = cache.near * Math.tan(DEG2RAD * cache.fov * 0.5) / cache.zoom;\n\t\t\t\tlet xmin, xmax; // translate xOffset\n\n\t\t\t\t_eyeLeft.elements[12] = -eyeSepHalf;\n\t\t\t\t_eyeRight.elements[12] = eyeSepHalf; // for left eye\n\n\t\t\t\txmin = -ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\tprojectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n\t\t\t\tprojectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n\t\t\t\tthis.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n\t\t\t\txmin = -ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\tprojectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n\t\t\t\tprojectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n\t\t\t\tthis.cameraR.projectionMatrix.copy(projectionMatrix);\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\n\t\t\tthis.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\n\t\t}\n\n\t}\n\n\tclass Clock {\n\t\tconstructor(autoStart = true) {\n\t\t\tthis.autoStart = autoStart;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.oldTime = 0;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = false;\n\t\t}\n\n\t\tstart() {\n\t\t\tthis.startTime = now();\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\t\t}\n\n\t\tstop() {\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\t\t}\n\n\t\tgetElapsedTime() {\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\t\t}\n\n\t\tgetDelta() {\n\t\t\tlet diff = 0;\n\n\t\t\tif (this.autoStart && !this.running) {\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (this.running) {\n\t\t\t\tconst newTime = now();\n\t\t\t\tdiff = (newTime - this.oldTime) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\t\t\t\tthis.elapsedTime += diff;\n\t\t\t}\n\n\t\t\treturn diff;\n\t\t}\n\n\t}\n\n\tfunction now() {\n\t\treturn (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\n\t}\n\n\tconst _position$1 = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$1 = /*@__PURE__*/new Quaternion();\n\n\tconst _scale$1 = /*@__PURE__*/new Vector3();\n\n\tconst _orientation$1 = /*@__PURE__*/new Vector3();\n\n\tclass AudioListener extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'AudioListener';\n\t\t\tthis.context = AudioContext.getContext();\n\t\t\tthis.gain = this.context.createGain();\n\t\t\tthis.gain.connect(this.context.destination);\n\t\t\tthis.filter = null;\n\t\t\tthis.timeDelta = 0; // private\n\n\t\t\tthis._clock = new Clock();\n\t\t}\n\n\t\tgetInput() {\n\t\t\treturn this.gain;\n\t\t}\n\n\t\tremoveFilter() {\n\t\t\tif (this.filter !== null) {\n\t\t\t\tthis.gain.disconnect(this.filter);\n\t\t\t\tthis.filter.disconnect(this.context.destination);\n\t\t\t\tthis.gain.connect(this.context.destination);\n\t\t\t\tthis.filter = null;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetFilter() {\n\t\t\treturn this.filter;\n\t\t}\n\n\t\tsetFilter(value) {\n\t\t\tif (this.filter !== null) {\n\t\t\t\tthis.gain.disconnect(this.filter);\n\t\t\t\tthis.filter.disconnect(this.context.destination);\n\t\t\t} else {\n\t\t\t\tthis.gain.disconnect(this.context.destination);\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect(this.filter);\n\t\t\tthis.filter.connect(this.context.destination);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMasterVolume() {\n\t\t\treturn this.gain.gain.value;\n\t\t}\n\n\t\tsetMasterVolume(value) {\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tconst listener = this.context.listener;\n\t\t\tconst up = this.up;\n\t\t\tthis.timeDelta = this._clock.getDelta();\n\t\t\tthis.matrixWorld.decompose(_position$1, _quaternion$1, _scale$1);\n\n\t\t\t_orientation$1.set(0, 0, -1).applyQuaternion(_quaternion$1);\n\n\t\t\tif (listener.positionX) {\n\t\t\t\t// code path for Chrome (see #14393)\n\t\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\t\t\t\tlistener.positionX.linearRampToValueAtTime(_position$1.x, endTime);\n\t\t\t\tlistener.positionY.linearRampToValueAtTime(_position$1.y, endTime);\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime(_position$1.z, endTime);\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime(_orientation$1.x, endTime);\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime(_orientation$1.y, endTime);\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime(_orientation$1.z, endTime);\n\t\t\t\tlistener.upX.linearRampToValueAtTime(up.x, endTime);\n\t\t\t\tlistener.upY.linearRampToValueAtTime(up.y, endTime);\n\t\t\t\tlistener.upZ.linearRampToValueAtTime(up.z, endTime);\n\t\t\t} else {\n\t\t\t\tlistener.setPosition(_position$1.x, _position$1.y, _position$1.z);\n\t\t\t\tlistener.setOrientation(_orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclass Audio extends Object3D {\n\t\tconstructor(listener) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Audio';\n\t\t\tthis.listener = listener;\n\t\t\tthis.context = listener.context;\n\t\t\tthis.gain = this.context.createGain();\n\t\t\tthis.gain.connect(listener.getInput());\n\t\t\tthis.autoplay = false;\n\t\t\tthis.buffer = null;\n\t\t\tthis.detune = 0;\n\t\t\tthis.loop = false;\n\t\t\tthis.loopStart = 0;\n\t\t\tthis.loopEnd = 0;\n\t\t\tthis.offset = 0;\n\t\t\tthis.duration = undefined;\n\t\t\tthis.playbackRate = 1;\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.hasPlaybackControl = true;\n\t\t\tthis.source = null;\n\t\t\tthis.sourceType = 'empty';\n\t\t\tthis._startedAt = 0;\n\t\t\tthis._progress = 0;\n\t\t\tthis._connected = false;\n\t\t\tthis.filters = [];\n\t\t}\n\n\t\tgetOutput() {\n\t\t\treturn this.gain;\n\t\t}\n\n\t\tsetNodeSource(audioNode) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMediaElementSource(mediaElement) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaNode';\n\t\t\tthis.source = this.context.createMediaElementSource(mediaElement);\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMediaStreamSource(mediaStream) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaStreamNode';\n\t\t\tthis.source = this.context.createMediaStreamSource(mediaStream);\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetBuffer(audioBuffer) {\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\t\t\tif (this.autoplay) this.play();\n\t\t\treturn this;\n\t\t}\n\n\t\tplay(delay = 0) {\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tconsole.warn('THREE.Audio: Audio is already playing.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._startedAt = this.context.currentTime + delay;\n\t\t\tconst source = this.context.createBufferSource();\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.loopStart = this.loopStart;\n\t\t\tsource.loopEnd = this.loopEnd;\n\t\t\tsource.onended = this.onEnded.bind(this);\n\t\t\tsource.start(this._startedAt, this._progress + this.offset, this.duration);\n\t\t\tthis.isPlaying = true;\n\t\t\tthis.source = source;\n\t\t\tthis.setDetune(this.detune);\n\t\t\tthis.setPlaybackRate(this.playbackRate);\n\t\t\treturn this.connect();\n\t\t}\n\n\t\tpause() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\t// update current progress\n\t\t\t\tthis._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate;\n\n\t\t\t\tif (this.loop === true) {\n\t\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\t\t\t\t\tthis._progress = this._progress % (this.duration || this.buffer.duration);\n\t\t\t\t}\n\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.source.onended = null;\n\t\t\t\tthis.isPlaying = false;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tstop() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._progress = 0;\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.isPlaying = false;\n\t\t\treturn this;\n\t\t}\n\n\t\tconnect() {\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\tthis.source.connect(this.filters[0]);\n\n\t\t\t\tfor (let i = 1, l = this.filters.length; i < l; i++) {\n\t\t\t\t\tthis.filters[i - 1].connect(this.filters[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.filters[this.filters.length - 1].connect(this.getOutput());\n\t\t\t} else {\n\t\t\t\tthis.source.connect(this.getOutput());\n\t\t\t}\n\n\t\t\tthis._connected = true;\n\t\t\treturn this;\n\t\t}\n\n\t\tdisconnect() {\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\tthis.source.disconnect(this.filters[0]);\n\n\t\t\t\tfor (let i = 1, l = this.filters.length; i < l; i++) {\n\t\t\t\t\tthis.filters[i - 1].disconnect(this.filters[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.filters[this.filters.length - 1].disconnect(this.getOutput());\n\t\t\t} else {\n\t\t\t\tthis.source.disconnect(this.getOutput());\n\t\t\t}\n\n\t\t\tthis._connected = false;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetFilters() {\n\t\t\treturn this.filters;\n\t\t}\n\n\t\tsetFilters(value) {\n\t\t\tif (!value) value = [];\n\n\t\t\tif (this._connected === true) {\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value.slice();\n\t\t\t\tthis.connect();\n\t\t\t} else {\n\t\t\t\tthis.filters = value.slice();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetDetune(value) {\n\t\t\tthis.detune = value;\n\t\t\tif (this.source.detune === undefined) return; // only set detune when available\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetDetune() {\n\t\t\treturn this.detune;\n\t\t}\n\n\t\tgetFilter() {\n\t\t\treturn this.getFilters()[0];\n\t\t}\n\n\t\tsetFilter(filter) {\n\t\t\treturn this.setFilters(filter ? [filter] : []);\n\t\t}\n\n\t\tsetPlaybackRate(value) {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetPlaybackRate() {\n\t\t\treturn this.playbackRate;\n\t\t}\n\n\t\tonEnded() {\n\t\t\tthis.isPlaying = false;\n\t\t}\n\n\t\tgetLoop() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.loop;\n\t\t}\n\n\t\tsetLoop(value) {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.loop = this.loop;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoopStart(value) {\n\t\t\tthis.loopStart = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoopEnd(value) {\n\t\t\tthis.loopEnd = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetVolume() {\n\t\t\treturn this.gain.gain.value;\n\t\t}\n\n\t\tsetVolume(value) {\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tconst _position = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion = /*@__PURE__*/new Quaternion();\n\n\tconst _scale = /*@__PURE__*/new Vector3();\n\n\tconst _orientation = /*@__PURE__*/new Vector3();\n\n\tclass PositionalAudio extends Audio {\n\t\tconstructor(listener) {\n\t\t\tsuper(listener);\n\t\t\tthis.panner = this.context.createPanner();\n\t\t\tthis.panner.panningModel = 'HRTF';\n\t\t\tthis.panner.connect(this.gain);\n\t\t}\n\n\t\tgetOutput() {\n\t\t\treturn this.panner;\n\t\t}\n\n\t\tgetRefDistance() {\n\t\t\treturn this.panner.refDistance;\n\t\t}\n\n\t\tsetRefDistance(value) {\n\t\t\tthis.panner.refDistance = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetRolloffFactor() {\n\t\t\treturn this.panner.rolloffFactor;\n\t\t}\n\n\t\tsetRolloffFactor(value) {\n\t\t\tthis.panner.rolloffFactor = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetDistanceModel() {\n\t\t\treturn this.panner.distanceModel;\n\t\t}\n\n\t\tsetDistanceModel(value) {\n\t\t\tthis.panner.distanceModel = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMaxDistance() {\n\t\t\treturn this.panner.maxDistance;\n\t\t}\n\n\t\tsetMaxDistance(value) {\n\t\t\tthis.panner.maxDistance = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tif (this.hasPlaybackControl === true && this.isPlaying === false) return;\n\t\t\tthis.matrixWorld.decompose(_position, _quaternion, _scale);\n\n\t\t\t_orientation.set(0, 0, 1).applyQuaternion(_quaternion);\n\n\t\t\tconst panner = this.panner;\n\n\t\t\tif (panner.positionX) {\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\t\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\t\t\t\tpanner.positionX.linearRampToValueAtTime(_position.x, endTime);\n\t\t\t\tpanner.positionY.linearRampToValueAtTime(_position.y, endTime);\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime(_position.z, endTime);\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime(_orientation.x, endTime);\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime(_orientation.y, endTime);\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime(_orientation.z, endTime);\n\t\t\t} else {\n\t\t\t\tpanner.setPosition(_position.x, _position.y, _position.z);\n\t\t\t\tpanner.setOrientation(_orientation.x, _orientation.y, _orientation.z);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclass AudioAnalyser {\n\t\tconstructor(audio, fftSize = 2048) {\n\t\t\tthis.analyser = audio.context.createAnalyser();\n\t\t\tthis.analyser.fftSize = fftSize;\n\t\t\tthis.data = new Uint8Array(this.analyser.frequencyBinCount);\n\t\t\taudio.getOutput().connect(this.analyser);\n\t\t}\n\n\t\tgetFrequencyData() {\n\t\t\tthis.analyser.getByteFrequencyData(this.data);\n\t\t\treturn this.data;\n\t\t}\n\n\t\tgetAverageFrequency() {\n\t\t\tlet value = 0;\n\t\t\tconst data = this.getFrequencyData();\n\n\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\tvalue += data[i];\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\t\t}\n\n\t}\n\n\tclass PropertyMixer {\n\t\tconstructor(binding, typeName, valueSize) {\n\t\t\tthis.binding = binding;\n\t\t\tthis.valueSize = valueSize;\n\t\t\tlet mixFunction, mixFunctionAdditive, setIdentity; // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t\t//\n\t\t\t// interpolators can use .buffer as their .result\n\t\t\t// the data then goes to 'incoming'\n\t\t\t//\n\t\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t\t// the cumulative result and are compared to detect\n\t\t\t// changes\n\t\t\t//\n\t\t\t// 'orig' stores the original state of the property\n\t\t\t//\n\t\t\t// 'add' is used for additive cumulative results\n\t\t\t//\n\t\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t\t// to store intermediate quaternion multiplication results\n\n\t\t\tswitch (typeName) {\n\t\t\t\tcase 'quaternion':\n\t\t\t\t\tmixFunction = this._slerp;\n\t\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\t\t\t\t\tthis.buffer = new Float64Array(valueSize * 6);\n\t\t\t\t\tthis._workIndex = 5;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'string':\n\t\t\t\tcase 'bool':\n\t\t\t\t\tmixFunction = this._select; // Use the regular mix function and for additive on these types,\n\t\t\t\t\t// additive is not relevant for non-numeric types\n\n\t\t\t\t\tmixFunctionAdditive = this._select;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\t\t\t\t\tthis.buffer = new Array(valueSize * 5);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmixFunction = this._lerp;\n\t\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\t\t\t\t\tthis.buffer = new Float64Array(valueSize * 5);\n\t\t\t}\n\n\t\t\tthis._mixBufferRegion = mixFunction;\n\t\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\t\tthis._setIdentity = setIdentity;\n\t\t\tthis._origIndex = 3;\n\t\t\tthis._addIndex = 4;\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\t\t\tthis.useCount = 0;\n\t\t\tthis.referenceCount = 0;\n\t\t} // accumulate data in the 'incoming' region into 'accu<i>'\n\n\n\t\taccumulate(accuIndex, weight) {\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = accuIndex * stride + stride;\n\t\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\t\tif (currentWeight === 0) {\n\t\t\t\t// accuN := incoming * weight\n\t\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\t\tbuffer[offset + i] = buffer[i];\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\t\t\t} else {\n\t\t\t\t// accuN := accuN + incoming * weight\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tconst mix = weight / currentWeight;\n\n\t\t\t\tthis._mixBufferRegion(buffer, offset, 0, mix, stride);\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\t\t} // accumulate data in the 'incoming' region into 'add'\n\n\n\t\taccumulateAdditive(weight) {\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = stride * this._addIndex;\n\n\t\t\tif (this.cumulativeWeightAdditive === 0) {\n\t\t\t\t// add = identity\n\t\t\t\tthis._setIdentity();\n\t\t\t} // add := add + incoming * weight\n\n\n\t\t\tthis._mixBufferRegionAdditive(buffer, offset, 0, weight, stride);\n\n\t\t\tthis.cumulativeWeightAdditive += weight;\n\t\t} // apply the state of 'accu<i>' to the binding when accus differ\n\n\n\t\tapply(accuIndex) {\n\t\t\tconst stride = this.valueSize,\n\t\t\t\t\t\tbuffer = this.buffer,\n\t\t\t\t\t\toffset = accuIndex * stride + stride,\n\t\t\t\t\t\tweight = this.cumulativeWeight,\n\t\t\t\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\t\t\t\t\t\tbinding = this.binding;\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\t\tif (weight < 1) {\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\t\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\t\tthis._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n\t\t\t}\n\n\t\t\tif (weightAdditive > 0) {\n\t\t\t\t// accuN := accuN + additive accuN\n\t\t\t\tthis._mixBufferRegionAdditive(buffer, offset, this._addIndex * stride, 1, stride);\n\t\t\t}\n\n\t\t\tfor (let i = stride, e = stride + stride; i !== e; ++i) {\n\t\t\t\tif (buffer[i] !== buffer[i + stride]) {\n\t\t\t\t\t// value has changed -> update scene graph\n\t\t\t\t\tbinding.setValue(buffer, offset);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} // remember the state of the bound property and copy it to both accus\n\n\n\t\tsaveOriginalState() {\n\t\t\tconst binding = this.binding;\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toriginalValueOffset = stride * this._origIndex;\n\t\t\tbinding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n\t\t\tfor (let i = stride, e = originalValueOffset; i !== e; ++i) {\n\t\t\t\tbuffer[i] = buffer[originalValueOffset + i % stride];\n\t\t\t} // Add to identity for additive\n\n\n\t\t\tthis._setIdentity();\n\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\t\t} // apply the state previously taken via 'saveOriginalState' to the binding\n\n\n\t\trestoreOriginalState() {\n\t\t\tconst originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue(this.buffer, originalValueOffset);\n\t\t}\n\n\t\t_setAdditiveIdentityNumeric() {\n\t\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tthis.buffer[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t_setAdditiveIdentityQuaternion() {\n\t\t\tthis._setAdditiveIdentityNumeric();\n\n\t\t\tthis.buffer[this._addIndex * this.valueSize + 3] = 1;\n\t\t}\n\n\t\t_setAdditiveIdentityOther() {\n\t\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\t\tfor (let i = 0; i < this.valueSize; i++) {\n\t\t\t\tthis.buffer[targetIndex + i] = this.buffer[startIndex + i];\n\t\t\t}\n\t\t} // mix functions\n\n\n\t\t_select(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tif (t >= 0.5) {\n\t\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\t\tbuffer[dstOffset + i] = buffer[srcOffset + i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_slerp(buffer, dstOffset, srcOffset, t) {\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n\t\t}\n\n\t\t_slerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tconst workOffset = this._workIndex * stride; // Store result in intermediate buffer offset\n\n\t\t\tQuaternion.multiplyQuaternionsFlat(buffer, workOffset, buffer, dstOffset, buffer, srcOffset); // Slerp to the intermediate result\n\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t);\n\t\t}\n\n\t\t_lerp(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tconst s = 1 - t;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tconst j = dstOffset + i;\n\t\t\t\tbuffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n\t\t\t}\n\t\t}\n\n\t\t_lerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tconst j = dstOffset + i;\n\t\t\t\tbuffer[j] = buffer[j] + buffer[srcOffset + i] * t;\n\t\t\t}\n\t\t}\n\n\t}\n\n\t// Characters [].:/ are reserved for track binding syntax.\n\tconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\n\tconst _reservedRe = new RegExp('[' + _RESERVED_CHARS_RE + ']', 'g'); // Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t// instead, we exclude reserved characters and match everything else.\n\n\n\tconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\n\tconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t// be matched to parse the rest of the track name.\n\n\n\tconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace('WC', _wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\n\n\tconst _nodeRe = /(WCOD+)?/.source.replace('WCOD', _wordCharOrDot); // Object on target node, and accessor. May not contain reserved\n\t// characters. Accessor may contain any character except closing bracket.\n\n\n\tconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', _wordChar); // Property and accessor. May not contain reserved characters. Accessor may\n\t// contain any non-bracket characters.\n\n\n\tconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', _wordChar);\n\n\tconst _trackRe = new RegExp('' + '^' + _directoryRe + _nodeRe + _objectRe + _propertyRe + '$');\n\n\tconst _supportedObjectNames = ['material', 'materials', 'bones'];\n\n\tclass Composite {\n\t\tconstructor(targetGroup, path, optionalParsedPath) {\n\t\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n\t\t\tthis._targetGroup = targetGroup;\n\t\t\tthis._bindings = targetGroup.subscribe_(path, parsedPath);\n\t\t}\n\n\t\tgetValue(array, offset) {\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t\tbinding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n\t\t\tif (binding !== undefined) binding.getValue(array, offset);\n\t\t}\n\n\t\tsetValue(array, offset) {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].setValue(array, offset);\n\t\t\t}\n\t\t}\n\n\t\tbind() {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].bind();\n\t\t\t}\n\t\t}\n\n\t\tunbind() {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].unbind();\n\t\t\t}\n\t\t}\n\n\t} // Note: This class uses a State pattern on a per-method basis:\n\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t// prototype version of these methods with one that represents\n\t// the bound state. When the property is not found, the methods\n\t// become no-ops.\n\n\n\tclass PropertyBinding {\n\t\tconstructor(rootNode, path, parsedPath) {\n\t\t\tthis.path = path;\n\t\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n\t\t\tthis.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n\t\t\tthis.rootNode = rootNode; // initial state of these methods that calls 'bind'\n\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\t\t}\n\n\t\tstatic create(root, path, parsedPath) {\n\t\t\tif (!(root && root.isAnimationObjectGroup)) {\n\t\t\t\treturn new PropertyBinding(root, path, parsedPath);\n\t\t\t} else {\n\t\t\t\treturn new PropertyBinding.Composite(root, path, parsedPath);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\n\n\t\tstatic sanitizeNodeName(name) {\n\t\t\treturn name.replace(/\\s/g, '_').replace(_reservedRe, '');\n\t\t}\n\n\t\tstatic parseTrackName(trackName) {\n\t\t\tconst matches = _trackRe.exec(trackName);\n\n\t\t\tif (!matches) {\n\t\t\t\tthrow new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n\t\t\t}\n\n\t\t\tconst results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[2],\n\t\t\t\tobjectName: matches[3],\n\t\t\t\tobjectIndex: matches[4],\n\t\t\t\tpropertyName: matches[5],\n\t\t\t\t// required\n\t\t\t\tpropertyIndex: matches[6]\n\t\t\t};\n\t\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n\n\t\t\tif (lastDot !== undefined && lastDot !== -1) {\n\t\t\t\tconst objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against an allowlist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\n\t\t\t\tif (_supportedObjectNames.indexOf(objectName) !== -1) {\n\t\t\t\t\tresults.nodeName = results.nodeName.substring(0, lastDot);\n\t\t\t\t\tresults.objectName = objectName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (results.propertyName === null || results.propertyName.length === 0) {\n\t\t\t\tthrow new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n\t\t\t}\n\n\t\t\treturn results;\n\t\t}\n\n\t\tstatic findNode(root, nodeName) {\n\t\t\tif (!nodeName || nodeName === '' || nodeName === '.' || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n\t\t\t\treturn root;\n\t\t\t} // search into skeleton bones.\n\n\n\t\t\tif (root.skeleton) {\n\t\t\t\tconst bone = root.skeleton.getBoneByName(nodeName);\n\n\t\t\t\tif (bone !== undefined) {\n\t\t\t\t\treturn bone;\n\t\t\t\t}\n\t\t\t} // search into node subtree.\n\n\n\t\t\tif (root.children) {\n\t\t\t\tconst searchNodeSubtree = function (children) {\n\t\t\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\t\t\tconst childNode = children[i];\n\n\t\t\t\t\t\tif (childNode.name === nodeName || childNode.uuid === nodeName) {\n\t\t\t\t\t\t\treturn childNode;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = searchNodeSubtree(childNode.children);\n\t\t\t\t\t\tif (result) return result;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t};\n\n\t\t\t\tconst subTreeNode = searchNodeSubtree(root.children);\n\n\t\t\t\tif (subTreeNode) {\n\t\t\t\t\treturn subTreeNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} // these are used to \"bind\" a nonexistent property\n\n\n\t\t_getValue_unavailable() {}\n\n\t\t_setValue_unavailable() {} // Getters\n\n\n\t\t_getValue_direct(buffer, offset) {\n\t\t\tbuffer[offset] = this.targetObject[this.propertyName];\n\t\t}\n\n\t\t_getValue_array(buffer, offset) {\n\t\t\tconst source = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = source.length; i !== n; ++i) {\n\t\t\t\tbuffer[offset++] = source[i];\n\t\t\t}\n\t\t}\n\n\t\t_getValue_arrayElement(buffer, offset) {\n\t\t\tbuffer[offset] = this.resolvedProperty[this.propertyIndex];\n\t\t}\n\n\t\t_getValue_toArray(buffer, offset) {\n\t\t\tthis.resolvedProperty.toArray(buffer, offset);\n\t\t} // Direct\n\n\n\t\t_setValue_direct(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t}\n\n\t\t_setValue_direct_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // EntireArray\n\n\n\t\t_setValue_array(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\t\t}\n\n\t\t_setValue_array_setNeedsUpdate(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // ArrayElement\n\n\n\t\t_setValue_arrayElement(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t}\n\n\t\t_setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // HasToFromArray\n\n\n\t\t_setValue_fromArray(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t}\n\n\t\t_setValue_fromArray_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t}\n\n\t\t_getValue_unbound(targetArray, offset) {\n\t\t\tthis.bind();\n\t\t\tthis.getValue(targetArray, offset);\n\t\t}\n\n\t\t_setValue_unbound(sourceArray, offset) {\n\t\t\tthis.bind();\n\t\t\tthis.setValue(sourceArray, offset);\n\t\t} // create getter / setter pair for a property in the scene graph\n\n\n\t\tbind() {\n\t\t\tlet targetObject = this.node;\n\t\t\tconst parsedPath = this.parsedPath;\n\t\t\tconst objectName = parsedPath.objectName;\n\t\t\tconst propertyName = parsedPath.propertyName;\n\t\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif (!targetObject) {\n\t\t\t\ttargetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n\t\t\t\tthis.node = targetObject;\n\t\t\t} // set fail state so we can just 'return' on error\n\n\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable; // ensure there is a value node\n\n\t\t\tif (!targetObject) {\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (objectName) {\n\t\t\t\tlet objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n\t\t\t\tswitch (objectName) {\n\t\t\t\t\tcase 'materials':\n\t\t\t\t\t\tif (!targetObject.material) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!targetObject.material.materials) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\t\t\t\t\t\tif (!targetObject.skeleton) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} // potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n\t\t\t\t\t\tfor (let i = 0; i < targetObject.length; i++) {\n\t\t\t\t\t\t\tif (targetObject[i].name === objectIndex) {\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (targetObject[objectName] === undefined) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[objectName];\n\t\t\t\t}\n\n\t\t\t\tif (objectIndex !== undefined) {\n\t\t\t\t\tif (targetObject[objectIndex] === undefined) {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[objectIndex];\n\t\t\t\t}\n\t\t\t} // resolve property\n\n\n\t\t\tconst nodeProperty = targetObject[propertyName];\n\n\t\t\tif (nodeProperty === undefined) {\n\t\t\t\tconst nodeName = parsedPath.nodeName;\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n\t\t\t\treturn;\n\t\t\t} // determine versioning scheme\n\n\n\t\t\tlet versioning = this.Versioning.None;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t\tif (targetObject.needsUpdate !== undefined) {\n\t\t\t\t// material\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t} else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n\t\t\t\t// node transform\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t} // determine how the property gets bound\n\n\n\t\t\tlet bindingType = this.BindingType.Direct;\n\n\t\t\tif (propertyIndex !== undefined) {\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\t\t\t\tif (propertyName === 'morphTargetInfluences') {\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif (!targetObject.geometry) {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (targetObject.geometry.isBufferGeometry) {\n\t\t\t\t\t\tif (!targetObject.geometry.morphAttributes) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (targetObject.morphTargetDictionary[propertyIndex] !== undefined) {\n\t\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[propertyIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\t\t\t} else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t} else if (Array.isArray(nodeProperty)) {\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t} else {\n\t\t\t\tthis.propertyName = propertyName;\n\t\t\t} // select getter / setter\n\n\n\t\t\tthis.getValue = this.GetterByBindingType[bindingType];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n\t\t}\n\n\t\tunbind() {\n\t\t\tthis.node = null; // back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\t\t}\n\n\t}\n\n\tPropertyBinding.Composite = Composite;\n\tPropertyBinding.prototype.BindingType = {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t};\n\tPropertyBinding.prototype.Versioning = {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t};\n\tPropertyBinding.prototype.GetterByBindingType = [PropertyBinding.prototype._getValue_direct, PropertyBinding.prototype._getValue_array, PropertyBinding.prototype._getValue_arrayElement, PropertyBinding.prototype._getValue_toArray];\n\tPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [[// Direct\n\tPropertyBinding.prototype._setValue_direct, PropertyBinding.prototype._setValue_direct_setNeedsUpdate, PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate], [// EntireArray\n\tPropertyBinding.prototype._setValue_array, PropertyBinding.prototype._setValue_array_setNeedsUpdate, PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate], [// ArrayElement\n\tPropertyBinding.prototype._setValue_arrayElement, PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate, PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate], [// HasToFromArray\n\tPropertyBinding.prototype._setValue_fromArray, PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate, PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t *\t- Add objects you would otherwise pass as 'root' to the\n\t *\t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t *\t- Instead pass this object as 'root'.\n\t *\n\t *\t- You can also add and remove objects later when the mixer\n\t *\t\tis running.\n\t *\n\t * Note:\n\t *\n\t *\t\tObjects of this class appear as one object to the mixer,\n\t *\t\tso cache control of the individual objects must be done\n\t *\t\ton the group.\n\t *\n\t * Limitation:\n\t *\n\t *\t- The animated properties must be compatible among the\n\t *\t\tall objects in the group.\n\t *\n\t *\t- A single property can either be controlled through a\n\t *\t\ttarget group or directly, but not both.\n\t */\n\n\tclass AnimationObjectGroup {\n\t\tconstructor() {\n\t\t\tthis.uuid = generateUUID(); // cached objects followed by the active ones\n\n\t\t\tthis._objects = Array.prototype.slice.call(arguments);\n\t\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t\t// note: read by PropertyBinding.Composite\n\n\t\t\tconst indices = {};\n\t\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tindices[arguments[i].uuid] = i;\n\t\t\t}\n\n\t\t\tthis._paths = []; // inside: string\n\n\t\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\n\t\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\n\t\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\t\tconst scope = this;\n\t\t\tthis.stats = {\n\t\t\t\tobjects: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._objects.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tget bindingsPerObject() {\n\t\t\t\t\treturn scope._bindings.length;\n\t\t\t\t}\n\n\t\t\t};\n\t\t}\n\n\t\tadd() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tpaths = this._paths,\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet knownObject = undefined,\n\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid;\n\t\t\t\tlet index = indicesByUUID[uuid];\n\n\t\t\t\tif (index === undefined) {\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\t\t\t\t\tindex = nObjects++;\n\t\t\t\t\tindicesByUUID[uuid] = index;\n\t\t\t\t\tobjects.push(object); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tbindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n\t\t\t\t\t}\n\t\t\t\t} else if (index < nCachedObjects) {\n\t\t\t\t\tknownObject = objects[index]; // move existing object to the ACTIVE region\n\n\t\t\t\t\tconst firstActiveIndex = --nCachedObjects,\n\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex];\n\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\n\t\t\t\t\tobjects[index] = lastCachedObject;\n\t\t\t\t\tindicesByUUID[uuid] = firstActiveIndex;\n\t\t\t\t\tobjects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex];\n\t\t\t\t\t\tlet binding = bindingsForPath[index];\n\t\t\t\t\t\tbindingsForPath[index] = lastCached;\n\n\t\t\t\t\t\tif (binding === undefined) {\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\t\t\t\t\t\t\tbinding = new PropertyBinding(object, paths[j], parsedPaths[j]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = binding;\n\t\t\t\t\t}\n\t\t\t\t} else if (objects[index] !== knownObject) {\n\t\t\t\t\tconsole.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t}\n\n\t\tremove() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\t\tindex = indicesByUUID[uuid];\n\n\t\t\t\tif (index !== undefined && index >= nCachedObjects) {\n\t\t\t\t\t// move existing object into the CACHED region\n\t\t\t\t\tconst lastCachedIndex = nCachedObjects++,\n\t\t\t\t\t\t\t\tfirstActiveObject = objects[lastCachedIndex];\n\t\t\t\t\tindicesByUUID[firstActiveObject.uuid] = index;\n\t\t\t\t\tobjects[index] = firstActiveObject;\n\t\t\t\t\tindicesByUUID[uuid] = lastCachedIndex;\n\t\t\t\t\tobjects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\tfirstActive = bindingsForPath[lastCachedIndex],\n\t\t\t\t\t\t\t\t\tbinding = bindingsForPath[index];\n\t\t\t\t\t\tbindingsForPath[index] = firstActive;\n\t\t\t\t\t\tbindingsForPath[lastCachedIndex] = binding;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t} // remove & forget\n\n\n\t\tuncache() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\t\t\tnObjects = objects.length;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\t\tindex = indicesByUUID[uuid];\n\n\t\t\t\tif (index !== undefined) {\n\t\t\t\t\tdelete indicesByUUID[uuid];\n\n\t\t\t\t\tif (index < nCachedObjects) {\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\t\t\t\t\t\tconst firstActiveIndex = --nCachedObjects,\n\t\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex],\n\t\t\t\t\t\t\t\t\tlastIndex = --nObjects,\n\t\t\t\t\t\t\t\t\tlastObject = objects[lastIndex]; // last cached object takes this object's place\n\n\t\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\n\t\t\t\t\t\tobjects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = firstActiveIndex;\n\t\t\t\t\t\tobjects[firstActiveIndex] = lastObject;\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex],\n\t\t\t\t\t\t\t\t\t\tlast = bindingsForPath[lastIndex];\n\t\t\t\t\t\t\tbindingsForPath[index] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\t\t\t\t\t\tconst lastIndex = --nObjects,\n\t\t\t\t\t\t\t\t\tlastObject = objects[lastIndex];\n\n\t\t\t\t\t\tif (lastIndex > 0) {\n\t\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = index;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobjects[index] = lastObject;\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[j];\n\t\t\t\t\t\t\tbindingsForPath[index] = bindingsForPath[lastIndex];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t} // Internal interface used by befriended PropertyBinding.Composite:\n\n\n\t\tsubscribe_(path, parsedPath) {\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\t\tlet index = indicesByPath[path];\n\t\t\tconst bindings = this._bindings;\n\t\t\tif (index !== undefined) return bindings[index];\n\t\t\tconst paths = this._paths,\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\tobjects = this._objects,\n\t\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\t\t\tbindingsForPath = new Array(nObjects);\n\t\t\tindex = bindings.length;\n\t\t\tindicesByPath[path] = index;\n\t\t\tpaths.push(path);\n\t\t\tparsedPaths.push(parsedPath);\n\t\t\tbindings.push(bindingsForPath);\n\n\t\t\tfor (let i = nCachedObjects, n = objects.length; i !== n; ++i) {\n\t\t\t\tconst object = objects[i];\n\t\t\t\tbindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\t\t}\n\n\t\tunsubscribe_(path) {\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\t\t\tindex = indicesByPath[path];\n\n\t\t\tif (index !== undefined) {\n\t\t\t\tconst paths = this._paths,\n\t\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\t\t\tlastBindings = bindings[lastBindingsIndex],\n\t\t\t\t\t\t\tlastBindingsPath = path[lastBindingsIndex];\n\t\t\t\tindicesByPath[lastBindingsPath] = index;\n\t\t\t\tbindings[index] = lastBindings;\n\t\t\t\tbindings.pop();\n\t\t\t\tparsedPaths[index] = parsedPaths[lastBindingsIndex];\n\t\t\t\tparsedPaths.pop();\n\t\t\t\tpaths[index] = paths[lastBindingsIndex];\n\t\t\t\tpaths.pop();\n\t\t\t}\n\t\t}\n\n\t}\n\n\tAnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n\n\tclass AnimationAction {\n\t\tconstructor(mixer, clip, localRoot = null, blendMode = clip.blendMode) {\n\t\t\tthis._mixer = mixer;\n\t\t\tthis._clip = clip;\n\t\t\tthis._localRoot = localRoot;\n\t\t\tthis.blendMode = blendMode;\n\t\t\tconst tracks = clip.tracks,\n\t\t\t\t\t\tnTracks = tracks.length,\n\t\t\t\t\t\tinterpolants = new Array(nTracks);\n\t\t\tconst interpolantSettings = {\n\t\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t\t};\n\n\t\t\tfor (let i = 0; i !== nTracks; ++i) {\n\t\t\t\tconst interpolant = tracks[i].createInterpolant(null);\n\t\t\t\tinterpolants[i] = interpolant;\n\t\t\t\tinterpolant.settings = interpolantSettings;\n\t\t\t}\n\n\t\t\tthis._interpolantSettings = interpolantSettings;\n\t\t\tthis._interpolants = interpolants; // bound by the mixer\n\t\t\t// inside: PropertyMixer (managed by the mixer)\n\n\t\t\tthis._propertyBindings = new Array(nTracks);\n\t\t\tthis._cacheIndex = null; // for the memory manager\n\n\t\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis.loop = LoopRepeat;\n\t\t\tthis._loopCount = -1; // global mixer time when the action is to be started\n\t\t\t// it's set back to 'null' upon start of the action\n\n\t\t\tthis._startTime = null; // scaled local time of the action\n\t\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\n\t\t\tthis.time = 0;\n\t\t\tthis.timeScale = 1;\n\t\t\tthis._effectiveTimeScale = 1;\n\t\t\tthis.weight = 1;\n\t\t\tthis._effectiveWeight = 1;\n\t\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\t\tthis.paused = false; // true -> zero effective time scale\n\n\t\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\t\tthis.clampWhenFinished = false; // keep feeding the last frame?\n\n\t\t\tthis.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n\t\t\tthis.zeroSlopeAtEnd = true; // clips for start, loop and end\n\t\t} // State & Scheduling\n\n\n\t\tplay() {\n\t\t\tthis._mixer._activateAction(this);\n\n\t\t\treturn this;\n\t\t}\n\n\t\tstop() {\n\t\t\tthis._mixer._deactivateAction(this);\n\n\t\t\treturn this.reset();\n\t\t}\n\n\t\treset() {\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\t\t\tthis.time = 0; // restart clip\n\n\t\t\tthis._loopCount = -1; // forget previous loops\n\n\t\t\tthis._startTime = null; // forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\t\t}\n\n\t\tisRunning() {\n\t\t\treturn this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n\t\t} // return true when play has been called\n\n\n\t\tisScheduled() {\n\t\t\treturn this._mixer._isActiveAction(this);\n\t\t}\n\n\t\tstartAt(time) {\n\t\t\tthis._startTime = time;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoop(mode, repetitions) {\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\t\t\treturn this;\n\t\t} // Weight\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\n\n\t\tsetEffectiveWeight(weight) {\n\t\t\tthis.weight = weight; // note: same logic as when updated at runtime\n\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\t\t\treturn this.stopFading();\n\t\t} // return the weight considering fading and .enabled\n\n\n\t\tgetEffectiveWeight() {\n\t\t\treturn this._effectiveWeight;\n\t\t}\n\n\t\tfadeIn(duration) {\n\t\t\treturn this._scheduleFading(duration, 0, 1);\n\t\t}\n\n\t\tfadeOut(duration) {\n\t\t\treturn this._scheduleFading(duration, 1, 0);\n\t\t}\n\n\t\tcrossFadeFrom(fadeOutAction, duration, warp) {\n\t\t\tfadeOutAction.fadeOut(duration);\n\t\t\tthis.fadeIn(duration);\n\n\t\t\tif (warp) {\n\t\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\t\t\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\t\t\t\tfadeOutAction.warp(1.0, startEndRatio, duration);\n\t\t\t\tthis.warp(endStartRatio, 1.0, duration);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcrossFadeTo(fadeInAction, duration, warp) {\n\t\t\treturn fadeInAction.crossFadeFrom(this, duration, warp);\n\t\t}\n\n\t\tstopFading() {\n\t\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\t\tif (weightInterpolant !== null) {\n\t\t\t\tthis._weightInterpolant = null;\n\n\t\t\t\tthis._mixer._takeBackControlInterpolant(weightInterpolant);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Time Scale Control\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\n\n\t\tsetEffectiveTimeScale(timeScale) {\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\t\t\treturn this.stopWarping();\n\t\t} // return the time scale considering warping and .paused\n\n\n\t\tgetEffectiveTimeScale() {\n\t\t\treturn this._effectiveTimeScale;\n\t\t}\n\n\t\tsetDuration(duration) {\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\t\t\treturn this.stopWarping();\n\t\t}\n\n\t\tsyncWith(action) {\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\t\t\treturn this.stopWarping();\n\t\t}\n\n\t\thalt(duration) {\n\t\t\treturn this.warp(this._effectiveTimeScale, 0, duration);\n\t\t}\n\n\t\twarp(startTimeScale, endTimeScale, duration) {\n\t\t\tconst mixer = this._mixer,\n\t\t\t\t\t\tnow = mixer.time,\n\t\t\t\t\t\ttimeScale = this.timeScale;\n\t\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\t\tif (interpolant === null) {\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\t\t\t}\n\n\t\t\tconst times = interpolant.parameterPositions,\n\t\t\t\t\t\tvalues = interpolant.sampleValues;\n\t\t\ttimes[0] = now;\n\t\t\ttimes[1] = now + duration;\n\t\t\tvalues[0] = startTimeScale / timeScale;\n\t\t\tvalues[1] = endTimeScale / timeScale;\n\t\t\treturn this;\n\t\t}\n\n\t\tstopWarping() {\n\t\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif (timeScaleInterpolant !== null) {\n\t\t\t\tthis._timeScaleInterpolant = null;\n\n\t\t\t\tthis._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Object Accessors\n\n\n\t\tgetMixer() {\n\t\t\treturn this._mixer;\n\t\t}\n\n\t\tgetClip() {\n\t\t\treturn this._clip;\n\t\t}\n\n\t\tgetRoot() {\n\t\t\treturn this._localRoot || this._mixer._root;\n\t\t} // Interna\n\n\n\t\t_update(time, deltaTime, timeDirection, accuIndex) {\n\t\t\t// called by the mixer\n\t\t\tif (!this.enabled) {\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\t\t\t\tthis._updateWeight(time);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst startTime = this._startTime;\n\n\t\t\tif (startTime !== null) {\n\t\t\t\t// check for scheduled start of action\n\t\t\t\tconst timeRunning = (time - startTime) * timeDirection;\n\n\t\t\t\tif (timeRunning < 0 || timeDirection === 0) {\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\t\t\t\t} // start\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\t\t\t} // apply time scale and advance time\n\n\n\t\t\tdeltaTime *= this._updateTimeScale(time);\n\n\t\t\tconst clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\n\t\t\tconst weight = this._updateWeight(time);\n\n\t\t\tif (weight > 0) {\n\t\t\t\tconst interpolants = this._interpolants;\n\t\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\t\tswitch (this.blendMode) {\n\t\t\t\t\tcase AdditiveAnimationBlendMode:\n\t\t\t\t\t\tfor (let j = 0, m = interpolants.length; j !== m; ++j) {\n\t\t\t\t\t\t\tinterpolants[j].evaluate(clipTime);\n\t\t\t\t\t\t\tpropertyMixers[j].accumulateAdditive(weight);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tfor (let j = 0, m = interpolants.length; j !== m; ++j) {\n\t\t\t\t\t\t\tinterpolants[j].evaluate(clipTime);\n\t\t\t\t\t\t\tpropertyMixers[j].accumulate(accuIndex, weight);\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_updateWeight(time) {\n\t\t\tlet weight = 0;\n\n\t\t\tif (this.enabled) {\n\t\t\t\tweight = this.weight;\n\t\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\t\tif (interpolant !== null) {\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate(time)[0];\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif (interpolantValue === 0) {\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\t\t}\n\n\t\t_updateTimeScale(time) {\n\t\t\tlet timeScale = 0;\n\n\t\t\tif (!this.paused) {\n\t\t\t\ttimeScale = this.timeScale;\n\t\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif (interpolant !== null) {\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate(time)[0];\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif (timeScale === 0) {\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\t\t}\n\n\t\t_updateTime(deltaTime) {\n\t\t\tconst duration = this._clip.duration;\n\t\t\tconst loop = this.loop;\n\t\t\tlet time = this.time + deltaTime;\n\t\t\tlet loopCount = this._loopCount;\n\t\t\tconst pingPong = loop === LoopPingPong;\n\n\t\t\tif (deltaTime === 0) {\n\t\t\t\tif (loopCount === -1) return time;\n\t\t\t\treturn pingPong && (loopCount & 1) === 1 ? duration - time : time;\n\t\t\t}\n\n\t\t\tif (loop === LoopOnce) {\n\t\t\t\tif (loopCount === -1) {\n\t\t\t\t\t// just started\n\t\t\t\t\tthis._loopCount = 0;\n\n\t\t\t\t\tthis._setEndings(true, true, false);\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\t\t\t\t\tif (time >= duration) {\n\t\t\t\t\t\ttime = duration;\n\t\t\t\t\t} else if (time < 0) {\n\t\t\t\t\t\ttime = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.time = time;\n\t\t\t\t\t\tbreak handle_stop;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\ttype: 'finished',\n\t\t\t\t\t\taction: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// repetitive Repeat or PingPong\n\t\t\t\tif (loopCount === -1) {\n\t\t\t\t\t// just started\n\t\t\t\t\tif (deltaTime >= 0) {\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings(true, this.repetitions === 0, pingPong);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\t\t\t\t\t\tthis._setEndings(this.repetitions === 0, true, pingPong);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (time >= duration || time < 0) {\n\t\t\t\t\t// wrap around\n\t\t\t\t\tconst loopDelta = Math.floor(time / duration); // signed\n\n\t\t\t\t\ttime -= duration * loopDelta;\n\t\t\t\t\tloopCount += Math.abs(loopDelta);\n\t\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif (pending <= 0) {\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\t\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'finished',\n\t\t\t\t\t\t\taction: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep running\n\t\t\t\t\t\tif (pending === 1) {\n\t\t\t\t\t\t\t// entering the last round\n\t\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\n\t\t\t\t\t\t\tthis._setEndings(atStart, !atStart, pingPong);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._setEndings(false, false, pingPong);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'loop',\n\t\t\t\t\t\t\taction: this,\n\t\t\t\t\t\t\tloopDelta: loopDelta\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.time = time;\n\t\t\t\t}\n\n\t\t\t\tif (pingPong && (loopCount & 1) === 1) {\n\t\t\t\t\t// invert time for the \"pong round\"\n\t\t\t\t\treturn duration - time;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn time;\n\t\t}\n\n\t\t_setEndings(atStart, atEnd, pingPong) {\n\t\t\tconst settings = this._interpolantSettings;\n\n\t\t\tif (pingPong) {\n\t\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\t\t\t} else {\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\t\t\t\tif (atStart) {\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\t\t\t\t} else {\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\t\t\t\t}\n\n\t\t\t\tif (atEnd) {\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\t\t\t\t} else {\n\t\t\t\t\tsettings.endingEnd = WrapAroundEnding;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_scheduleFading(duration, weightNow, weightThen) {\n\t\t\tconst mixer = this._mixer,\n\t\t\t\t\t\tnow = mixer.time;\n\t\t\tlet interpolant = this._weightInterpolant;\n\n\t\t\tif (interpolant === null) {\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\t\t\t}\n\n\t\t\tconst times = interpolant.parameterPositions,\n\t\t\t\t\t\tvalues = interpolant.sampleValues;\n\t\t\ttimes[0] = now;\n\t\t\tvalues[0] = weightNow;\n\t\t\ttimes[1] = now + duration;\n\t\t\tvalues[1] = weightThen;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AnimationMixer extends EventDispatcher {\n\t\tconstructor(root) {\n\t\t\tsuper();\n\t\t\tthis._root = root;\n\n\t\t\tthis._initMemoryManager();\n\n\t\t\tthis._accuIndex = 0;\n\t\t\tthis.time = 0;\n\t\t\tthis.timeScale = 1.0;\n\t\t}\n\n\t\t_bindAction(action, prototypeAction) {\n\t\t\tconst root = action._localRoot || this._root,\n\t\t\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\t\t\tnTracks = tracks.length,\n\t\t\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\t\t\trootUuid = root.uuid,\n\t\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\t\t\tlet bindingsByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingsByName === undefined) {\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[rootUuid] = bindingsByName;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i !== nTracks; ++i) {\n\t\t\t\tconst track = tracks[i],\n\t\t\t\t\t\t\ttrackName = track.name;\n\t\t\t\tlet binding = bindingsByName[trackName];\n\n\t\t\t\tif (binding !== undefined) {\n\t\t\t\t\tbindings[i] = binding;\n\t\t\t\t} else {\n\t\t\t\t\tbinding = bindings[i];\n\n\t\t\t\t\tif (binding !== undefined) {\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\t\t\t\t\t\tif (binding._cacheIndex === null) {\n\t\t\t\t\t\t\t++binding.referenceCount;\n\n\t\t\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n\t\t\t\t\tbinding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n\t\t\t\t\t++binding.referenceCount;\n\n\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\n\n\t\t\t\t\tbindings[i] = binding;\n\t\t\t\t}\n\n\t\t\t\tinterpolants[i].resultBuffer = binding.buffer;\n\t\t\t}\n\t\t}\n\n\t\t_activateAction(action) {\n\t\t\tif (!this._isActiveAction(action)) {\n\t\t\t\tif (action._cacheIndex === null) {\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\t\t\t\t\tconst rootUuid = (action._localRoot || this._root).uuid,\n\t\t\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\n\n\t\t\t\t\tthis._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n\t\t\t\t\tthis._addInactiveAction(action, clipUuid, rootUuid);\n\t\t\t\t}\n\n\t\t\t\tconst bindings = action._propertyBindings; // increment reference counts / sort out state\n\n\t\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\t\tif (binding.useCount++ === 0) {\n\t\t\t\t\t\tthis._lendBinding(binding);\n\n\t\t\t\t\t\tbinding.saveOriginalState();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction(action);\n\t\t\t}\n\t\t}\n\n\t\t_deactivateAction(action) {\n\t\t\tif (this._isActiveAction(action)) {\n\t\t\t\tconst bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n\t\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\t\tif (--binding.useCount === 0) {\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\n\t\t\t\t\t\tthis._takeBackBinding(binding);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction(action);\n\t\t\t}\n\t\t} // Memory manager\n\n\n\t\t_initMemoryManager() {\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._actionsByClip = {}; // inside:\n\t\t\t// {\n\t\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t\t// }\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n\t\t\tthis._nActiveBindings = 0;\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\n\t\t\tthis._nActiveControlInterpolants = 0;\n\t\t\tconst scope = this;\n\t\t\tthis.stats = {\n\t\t\t\tactions: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._actions.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveActions;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._bindings.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveBindings;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t};\n\t\t} // Memory management for AnimationAction objects\n\n\n\t\t_isActiveAction(action) {\n\t\t\tconst index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\t\t}\n\n\t\t_addInactiveAction(action, clipUuid, rootUuid) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip;\n\t\t\tlet actionsForClip = actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip === undefined) {\n\t\t\t\tactionsForClip = {\n\t\t\t\t\tknownActions: [action],\n\t\t\t\t\tactionByRoot: {}\n\t\t\t\t};\n\t\t\t\taction._byClipCacheIndex = 0;\n\t\t\t\tactionsByClip[clipUuid] = actionsForClip;\n\t\t\t} else {\n\t\t\t\tconst knownActions = actionsForClip.knownActions;\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push(action);\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push(action);\n\t\t\tactionsForClip.actionByRoot[rootUuid] = action;\n\t\t}\n\n\t\t_removeInactiveAction(action) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1],\n\t\t\t\t\t\tcacheIndex = action._cacheIndex;\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[cacheIndex] = lastInactiveAction;\n\t\t\tactions.pop();\n\t\t\taction._cacheIndex = null;\n\t\t\tconst clipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\t\tactionsForClip = actionsByClip[clipUuid],\n\t\t\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\t\t\t\t\t\tlastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n\t\t\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[byClipCacheIndex] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\t\t\taction._byClipCacheIndex = null;\n\t\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\t\t\trootUuid = (action._localRoot || this._root).uuid;\n\t\t\tdelete actionByRoot[rootUuid];\n\n\t\t\tif (knownActionsForClip.length === 0) {\n\t\t\t\tdelete actionsByClip[clipUuid];\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction(action);\n\t\t}\n\n\t\t_removeInactiveBindingsForAction(action) {\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\tif (--binding.referenceCount === 0) {\n\t\t\t\t\tthis._removeInactiveBinding(binding);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_lendAction(action) {\n\t\t\t// [ active actions |\tinactive actions\t]\n\t\t\t// [\tactive actions >| inactive actions ]\n\t\t\t//\t\t\t\t\t\t\t\t s\t\t\t\ta\n\t\t\t//\t\t\t\t\t\t\t\t\t<-swap->\n\t\t\t//\t\t\t\t\t\t\t\t a\t\t\t\ts\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tprevIndex = action._cacheIndex,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveActions++,\n\t\t\t\t\t\tfirstInactiveAction = actions[lastActiveIndex];\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[lastActiveIndex] = action;\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[prevIndex] = firstInactiveAction;\n\t\t}\n\n\t\t_takeBackAction(action) {\n\t\t\t// [\tactive actions\t| inactive actions ]\n\t\t\t// [ active actions |< inactive actions\t]\n\t\t\t//\t\t\t\ta\t\t\t\ts\n\t\t\t//\t\t\t\t <-swap->\n\t\t\t//\t\t\t\ts\t\t\t\ta\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tprevIndex = action._cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveActions,\n\t\t\t\t\t\tlastActiveAction = actions[firstInactiveIndex];\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[firstInactiveIndex] = action;\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[prevIndex] = lastActiveAction;\n\t\t} // Memory management for PropertyMixer objects\n\n\n\t\t_addInactiveBinding(binding, rootUuid, trackName) {\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindings = this._bindings;\n\t\t\tlet bindingByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingByName === undefined) {\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[rootUuid] = bindingByName;\n\t\t\t}\n\n\t\t\tbindingByName[trackName] = binding;\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push(binding);\n\t\t}\n\n\t\t_removeInactiveBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tpropBinding = binding.binding,\n\t\t\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\t\t\ttrackName = propBinding.path,\n\t\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid],\n\t\t\t\t\t\tlastInactiveBinding = bindings[bindings.length - 1],\n\t\t\t\t\t\tcacheIndex = binding._cacheIndex;\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[cacheIndex] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\t\t\tdelete bindingByName[trackName];\n\n\t\t\tif (Object.keys(bindingByName).length === 0) {\n\t\t\t\tdelete bindingsByRoot[rootUuid];\n\t\t\t}\n\t\t}\n\n\t\t_lendBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tprevIndex = binding._cacheIndex,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveBindings++,\n\t\t\t\t\t\tfirstInactiveBinding = bindings[lastActiveIndex];\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[lastActiveIndex] = binding;\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[prevIndex] = firstInactiveBinding;\n\t\t}\n\n\t\t_takeBackBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tprevIndex = binding._cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveBindings,\n\t\t\t\t\t\tlastActiveBinding = bindings[firstInactiveIndex];\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[firstInactiveIndex] = binding;\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[prevIndex] = lastActiveBinding;\n\t\t} // Memory management of Interpolants for weight and time scale\n\n\n\t\t_lendControlInterpolant() {\n\t\t\tconst interpolants = this._controlInterpolants,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants++;\n\t\t\tlet interpolant = interpolants[lastActiveIndex];\n\n\t\t\tif (interpolant === undefined) {\n\t\t\t\tinterpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[lastActiveIndex] = interpolant;\n\t\t\t}\n\n\t\t\treturn interpolant;\n\t\t}\n\n\t\t_takeBackControlInterpolant(interpolant) {\n\t\t\tconst interpolants = this._controlInterpolants,\n\t\t\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveControlInterpolants,\n\t\t\t\t\t\tlastActiveInterpolant = interpolants[firstInactiveIndex];\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[firstInactiveIndex] = interpolant;\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[prevIndex] = lastActiveInterpolant;\n\t\t} // return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\n\n\t\tclipAction(clip, optionalRoot, blendMode) {\n\t\t\tconst root = optionalRoot || this._root,\n\t\t\t\t\t\trootUuid = root.uuid;\n\t\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip;\n\t\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\t\t\tconst actionsForClip = this._actionsByClip[clipUuid];\n\t\t\tlet prototypeAction = null;\n\n\t\t\tif (blendMode === undefined) {\n\t\t\t\tif (clipObject !== null) {\n\t\t\t\t\tblendMode = clipObject.blendMode;\n\t\t\t\t} else {\n\t\t\t\t\tblendMode = NormalAnimationBlendMode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\tconst existingAction = actionsForClip.actionByRoot[rootUuid];\n\n\t\t\t\tif (existingAction !== undefined && existingAction.blendMode === blendMode) {\n\t\t\t\t\treturn existingAction;\n\t\t\t\t} // we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\n\n\t\t\t\tprototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n\t\t\t\tif (clipObject === null) clipObject = prototypeAction._clip;\n\t\t\t} // clip must be known when specified via string\n\n\n\t\t\tif (clipObject === null) return null; // allocate all resources required to run it\n\n\t\t\tconst newAction = new AnimationAction(this, clipObject, optionalRoot, blendMode);\n\n\t\t\tthis._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n\t\t\tthis._addInactiveAction(newAction, clipUuid, rootUuid);\n\n\t\t\treturn newAction;\n\t\t} // get an existing action\n\n\n\t\texistingAction(clip, optionalRoot) {\n\t\t\tconst root = optionalRoot || this._root,\n\t\t\t\t\t\trootUuid = root.uuid,\n\t\t\t\t\t\tclipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n\t\t\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\treturn actionsForClip.actionByRoot[rootUuid] || null;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} // deactivates all previously scheduled actions\n\n\n\t\tstopAllAction() {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tnActions = this._nActiveActions;\n\n\t\t\tfor (let i = nActions - 1; i >= 0; --i) {\n\t\t\t\tactions[i].stop();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // advance the time and update apply the animation\n\n\n\t\tupdate(deltaTime) {\n\t\t\tdeltaTime *= this.timeScale;\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\t\t\ttimeDirection = Math.sign(deltaTime),\n\t\t\t\t\t\taccuIndex = this._accuIndex ^= 1; // run active actions\n\n\t\t\tfor (let i = 0; i !== nActions; ++i) {\n\t\t\t\tconst action = actions[i];\n\n\t\t\t\taction._update(time, deltaTime, timeDirection, accuIndex);\n\t\t\t} // update scene graph\n\n\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor (let i = 0; i !== nBindings; ++i) {\n\t\t\t\tbindings[i].apply(accuIndex);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Allows you to seek to a specific time in an animation.\n\n\n\t\tsetTime(timeInSeconds) {\n\t\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\n\t\t\tfor (let i = 0; i < this._actions.length; i++) {\n\t\t\t\tthis._actions[i].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\t\t\t}\n\n\t\t\treturn this.update(timeInSeconds); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\t\t} // return this mixer's root target object\n\n\n\t\tgetRoot() {\n\t\t\treturn this._root;\n\t\t} // free all resources specific to a particular clip\n\n\n\t\tuncacheClip(clip) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\t\tactionsForClip = actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\t\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor (let i = 0, n = actionsToRemove.length; i !== n; ++i) {\n\t\t\t\t\tconst action = actionsToRemove[i];\n\n\t\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1];\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[cacheIndex] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction(action);\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[clipUuid];\n\t\t\t}\n\t\t} // free all resources specific to a particular root target object\n\n\n\t\tuncacheRoot(root) {\n\t\t\tconst rootUuid = root.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor (const clipUuid in actionsByClip) {\n\t\t\t\tconst actionByRoot = actionsByClip[clipUuid].actionByRoot,\n\t\t\t\t\t\t\taction = actionByRoot[rootUuid];\n\n\t\t\t\tif (action !== undefined) {\n\t\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\t\tthis._removeInactiveAction(action);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingByName !== undefined) {\n\t\t\t\tfor (const trackName in bindingByName) {\n\t\t\t\t\tconst binding = bindingByName[trackName];\n\t\t\t\t\tbinding.restoreOriginalState();\n\n\t\t\t\t\tthis._removeInactiveBinding(binding);\n\t\t\t\t}\n\t\t\t}\n\t\t} // remove a targeted clip from the cache\n\n\n\t\tuncacheAction(clip, optionalRoot) {\n\t\t\tconst action = this.existingAction(clip, optionalRoot);\n\n\t\t\tif (action !== null) {\n\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\tthis._removeInactiveAction(action);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tAnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array(1);\n\n\tclass Uniform {\n\t\tconstructor(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tconsole.warn('THREE.Uniform: Type parameter is no longer needed.');\n\t\t\t\tvalue = arguments[1];\n\t\t\t}\n\n\t\t\tthis.value = value;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n\t\t}\n\n\t}\n\n\tclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\t\tconstructor(array, stride, meshPerAttribute = 1) {\n\t\t\tsuper(array, stride);\n\t\t\tthis.meshPerAttribute = meshPerAttribute;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tconst ib = super.clone(data);\n\t\t\tib.meshPerAttribute = this.meshPerAttribute;\n\t\t\treturn ib;\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tconst json = super.toJSON(data);\n\t\t\tjson.isInstancedInterleavedBuffer = true;\n\t\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\t\t\treturn json;\n\t\t}\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\n\tclass GLBufferAttribute {\n\t\tconstructor(buffer, type, itemSize, elementSize, count) {\n\t\t\tthis.buffer = buffer;\n\t\t\tthis.type = type;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.elementSize = elementSize;\n\t\t\tthis.count = count;\n\t\t\tthis.version = 0;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetBuffer(buffer) {\n\t\t\tthis.buffer = buffer;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetType(type, elementSize) {\n\t\t\tthis.type = type;\n\t\t\tthis.elementSize = elementSize;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetItemSize(itemSize) {\n\t\t\tthis.itemSize = itemSize;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetCount(count) {\n\t\t\tthis.count = count;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tGLBufferAttribute.prototype.isGLBufferAttribute = true;\n\n\tclass Raycaster {\n\t\tconstructor(origin, direction, near = 0, far = Infinity) {\n\t\t\tthis.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.camera = null;\n\t\t\tthis.layers = new Layers();\n\t\t\tthis.params = {\n\t\t\t\tMesh: {},\n\t\t\t\tLine: {\n\t\t\t\t\tthreshold: 1\n\t\t\t\t},\n\t\t\t\tLOD: {},\n\t\t\t\tPoints: {\n\t\t\t\t\tthreshold: 1\n\t\t\t\t},\n\t\t\t\tSprite: {}\n\t\t\t};\n\t\t}\n\n\t\tset(origin, direction) {\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\t\t\tthis.ray.set(origin, direction);\n\t\t}\n\n\t\tsetFromCamera(coords, camera) {\n\t\t\tif (camera && camera.isPerspectiveCamera) {\n\t\t\t\tthis.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n\t\t\t\tthis.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n\t\t\t\tthis.camera = camera;\n\t\t\t} else if (camera && camera.isOrthographicCamera) {\n\t\t\t\tthis.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n\t\t\t\tthis.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n\t\t\t\tthis.camera = camera;\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Raycaster: Unsupported camera type: ' + camera.type);\n\t\t\t}\n\t\t}\n\n\t\tintersectObject(object, recursive = true, intersects = []) {\n\t\t\tintersectObject(object, this, intersects, recursive);\n\t\t\tintersects.sort(ascSort);\n\t\t\treturn intersects;\n\t\t}\n\n\t\tintersectObjects(objects, recursive = true, intersects = []) {\n\t\t\tfor (let i = 0, l = objects.length; i < l; i++) {\n\t\t\t\tintersectObject(objects[i], this, intersects, recursive);\n\t\t\t}\n\n\t\t\tintersects.sort(ascSort);\n\t\t\treturn intersects;\n\t\t}\n\n\t}\n\n\tfunction ascSort(a, b) {\n\t\treturn a.distance - b.distance;\n\t}\n\n\tfunction intersectObject(object, raycaster, intersects, recursive) {\n\t\tif (object.layers.test(raycaster.layers)) {\n\t\t\tobject.raycast(raycaster, intersects);\n\t\t}\n\n\t\tif (recursive === true) {\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tintersectObject(children[i], raycaster, intersects, true);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n\t * The azimuthal angle (theta) is measured from the positive z-axis.\n\t */\n\n\tclass Spherical {\n\t\tconstructor(radius = 1, phi = 0, theta = 0) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi; // polar angle\n\n\t\t\tthis.theta = theta; // azimuthal angle\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(radius, phi, theta) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(other) {\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\t\t\treturn this;\n\t\t} // restrict phi to be betwee EPS and PI-EPS\n\n\n\t\tmakeSafe() {\n\t\t\tconst EPS = 0.000001;\n\t\t\tthis.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromVector3(v) {\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\n\t\t}\n\n\t\tsetFromCartesianCoords(x, y, z) {\n\t\t\tthis.radius = Math.sqrt(x * x + y * y + z * z);\n\n\t\t\tif (this.radius === 0) {\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\t\t\t} else {\n\t\t\t\tthis.theta = Math.atan2(x, z);\n\t\t\t\tthis.phi = Math.acos(clamp(y / this.radius, -1, 1));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\t/**\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t */\n\tclass Cylindrical {\n\t\tconstructor(radius = 1, theta = 0, y = 0) {\n\t\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\n\t\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\n\t\t\tthis.y = y; // height above the x-z plane\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(radius, theta, y) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(other) {\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromVector3(v) {\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\n\t\t}\n\n\t\tsetFromCartesianCoords(x, y, z) {\n\t\t\tthis.radius = Math.sqrt(x * x + z * z);\n\t\t\tthis.theta = Math.atan2(x, z);\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tconst _vector$4 = /*@__PURE__*/new Vector2();\n\n\tclass Box2 {\n\t\tconstructor(min = new Vector2(+Infinity, +Infinity), max = new Vector2(-Infinity, -Infinity)) {\n\t\t\tthis.min = min;\n\t\t\tthis.max = max;\n\t\t}\n\n\t\tset(min, max) {\n\t\t\tthis.min.copy(min);\n\t\t\tthis.max.copy(max);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tthis.expandByPoint(points[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCenterAndSize(center, size) {\n\t\t\tconst halfSize = _vector$4.copy(size).multiplyScalar(0.5);\n\n\t\t\tthis.min.copy(center).sub(halfSize);\n\t\t\tthis.max.copy(center).add(halfSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(box) {\n\t\t\tthis.min.copy(box.min);\n\t\t\tthis.max.copy(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.min.x = this.min.y = +Infinity;\n\t\t\tthis.max.x = this.max.y = -Infinity;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n\t\t}\n\n\t\tgetSize(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\tthis.min.min(point);\n\t\t\tthis.max.max(point);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByVector(vector) {\n\t\t\tthis.min.sub(vector);\n\t\t\tthis.max.add(vector);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByScalar(scalar) {\n\t\t\tthis.min.addScalar(-scalar);\n\t\t\tthis.max.addScalar(scalar);\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n\t\t}\n\n\t\tcontainsBox(box) {\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n\t\t}\n\n\t\tgetParameter(point, target) {\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\t// using 4 splitting planes to rule out intersections\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\tconst clampedPoint = _vector$4.copy(point).clamp(this.min, this.max);\n\n\t\t\treturn clampedPoint.sub(point).length();\n\t\t}\n\n\t\tintersect(box) {\n\t\t\tthis.min.max(box.min);\n\t\t\tthis.max.min(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(box) {\n\t\t\tthis.min.min(box.min);\n\t\t\tthis.max.max(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.min.add(offset);\n\t\t\tthis.max.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(box) {\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\n\t\t}\n\n\t}\n\n\tBox2.prototype.isBox2 = true;\n\n\tconst _startP = /*@__PURE__*/new Vector3();\n\n\tconst _startEnd = /*@__PURE__*/new Vector3();\n\n\tclass Line3 {\n\t\tconstructor(start = new Vector3(), end = new Vector3()) {\n\t\t\tthis.start = start;\n\t\t\tthis.end = end;\n\t\t}\n\n\t\tset(start, end) {\n\t\t\tthis.start.copy(start);\n\t\t\tthis.end.copy(end);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(line) {\n\t\t\tthis.start.copy(line.start);\n\t\t\tthis.end.copy(line.end);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\treturn target.addVectors(this.start, this.end).multiplyScalar(0.5);\n\t\t}\n\n\t\tdelta(target) {\n\t\t\treturn target.subVectors(this.end, this.start);\n\t\t}\n\n\t\tdistanceSq() {\n\t\t\treturn this.start.distanceToSquared(this.end);\n\t\t}\n\n\t\tdistance() {\n\t\t\treturn this.start.distanceTo(this.end);\n\t\t}\n\n\t\tat(t, target) {\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\n\t\t}\n\n\t\tclosestPointToPointParameter(point, clampToLine) {\n\t\t\t_startP.subVectors(point, this.start);\n\n\t\t\t_startEnd.subVectors(this.end, this.start);\n\n\t\t\tconst startEnd2 = _startEnd.dot(_startEnd);\n\n\t\t\tconst startEnd_startP = _startEnd.dot(_startP);\n\n\t\t\tlet t = startEnd_startP / startEnd2;\n\n\t\t\tif (clampToLine) {\n\t\t\t\tt = clamp(t, 0, 1);\n\t\t\t}\n\n\t\t\treturn t;\n\t\t}\n\n\t\tclosestPointToPoint(point, clampToLine, target) {\n\t\t\tconst t = this.closestPointToPointParameter(point, clampToLine);\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tthis.start.applyMatrix4(matrix);\n\t\t\tthis.end.applyMatrix4(matrix);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(line) {\n\t\t\treturn line.start.equals(this.start) && line.end.equals(this.end);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tconst _vector$3 = /*@__PURE__*/new Vector3();\n\n\tclass SpotLightHelper extends Object3D {\n\t\tconstructor(light, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n\t\t\tfor (let i = 0, j = 1, l = 32; i < l; i++, j++) {\n\t\t\t\tconst p1 = i / l * Math.PI * 2;\n\t\t\t\tconst p2 = j / l * Math.PI * 2;\n\t\t\t\tpositions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tthis.cone = new LineSegments(geometry, material);\n\t\t\tthis.add(this.cone);\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.cone.geometry.dispose();\n\t\t\tthis.cone.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tconst coneWidth = coneLength * Math.tan(this.light.angle);\n\t\t\tthis.cone.scale.set(coneWidth, coneWidth, coneLength);\n\n\t\t\t_vector$3.setFromMatrixPosition(this.light.target.matrixWorld);\n\n\t\t\tthis.cone.lookAt(_vector$3);\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.cone.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.cone.material.color.copy(this.light.color);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst _vector$2 = /*@__PURE__*/new Vector3();\n\n\tconst _boneMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _matrixWorldInv = /*@__PURE__*/new Matrix4();\n\n\tclass SkeletonHelper extends LineSegments {\n\t\tconstructor(object) {\n\t\t\tconst bones = getBoneList(object);\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst vertices = [];\n\t\t\tconst colors = [];\n\t\t\tconst color1 = new Color(0, 0, 1);\n\t\t\tconst color2 = new Color(0, 1, 0);\n\n\t\t\tfor (let i = 0; i < bones.length; i++) {\n\t\t\t\tconst bone = bones[i];\n\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\t\tcolors.push(color1.r, color1.g, color1.b);\n\t\t\t\t\tcolors.push(color2.r, color2.g, color2.b);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\tdepthTest: false,\n\t\t\t\tdepthWrite: false,\n\t\t\t\ttoneMapped: false,\n\t\t\t\ttransparent: true\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'SkeletonHelper';\n\t\t\tthis.isSkeletonHelper = true;\n\t\t\tthis.root = object;\n\t\t\tthis.bones = bones;\n\t\t\tthis.matrix = object.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tconst bones = this.bones;\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst position = geometry.getAttribute('position');\n\n\t\t\t_matrixWorldInv.copy(this.root.matrixWorld).invert();\n\n\t\t\tfor (let i = 0, j = 0; i < bones.length; i++) {\n\t\t\t\tconst bone = bones[i];\n\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\n\n\t\t\t\t\t_vector$2.setFromMatrixPosition(_boneMatrix);\n\n\t\t\t\t\tposition.setXYZ(j, _vector$2.x, _vector$2.y, _vector$2.z);\n\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\n\n\t\t\t\t\t_vector$2.setFromMatrixPosition(_boneMatrix);\n\n\t\t\t\t\tposition.setXYZ(j + 1, _vector$2.x, _vector$2.y, _vector$2.z);\n\t\t\t\t\tj += 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tfunction getBoneList(object) {\n\t\tconst boneList = [];\n\n\t\tif (object && object.isBone) {\n\t\t\tboneList.push(object);\n\t\t}\n\n\t\tfor (let i = 0; i < object.children.length; i++) {\n\t\t\tboneList.push.apply(boneList, getBoneList(object.children[i]));\n\t\t}\n\n\t\treturn boneList;\n\t}\n\n\tclass PointLightHelper extends Mesh {\n\t\tconstructor(light, sphereSize, color) {\n\t\t\tconst geometry = new SphereGeometry(sphereSize, 4, 2);\n\t\t\tconst material = new MeshBasicMaterial({\n\t\t\t\twireframe: true,\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.color = color;\n\t\t\tthis.type = 'PointLightHelper';\n\t\t\tthis.matrix = this.light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.update();\n\t\t\t/*\n\t\t\t// TODO: delete this comment?\n\t\t\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\t\t\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\t\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\t\t\tconst d = light.distance;\n\t\t\tif ( d === 0.0 ) {\n\t\t\t\tthis.lightDistance.visible = false;\n\t\t\t} else {\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\t\t\t}\n\t\t\tthis.add( this.lightDistance );\n\t\t\t*/\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.material.color.copy(this.light.color);\n\t\t\t}\n\t\t\t/*\n\t\t\tconst d = this.light.distance;\n\t\t\t\tif ( d === 0.0 ) {\n\t\t\t\t\tthis.lightDistance.visible = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.lightDistance.visible = true;\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\t\t\t\t}\n\t\t\t*/\n\n\t\t}\n\n\t}\n\n\tconst _vector$1 = /*@__PURE__*/new Vector3();\n\n\tconst _color1 = /*@__PURE__*/new Color();\n\n\tconst _color2 = /*@__PURE__*/new Color();\n\n\tclass HemisphereLightHelper extends Object3D {\n\t\tconstructor(light, size, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tconst geometry = new OctahedronGeometry(size);\n\t\t\tgeometry.rotateY(Math.PI * 0.5);\n\t\t\tthis.material = new MeshBasicMaterial({\n\t\t\t\twireframe: true,\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tif (this.color === undefined) this.material.vertexColors = true;\n\t\t\tconst position = geometry.getAttribute('position');\n\t\t\tconst colors = new Float32Array(position.count * 3);\n\t\t\tgeometry.setAttribute('color', new BufferAttribute(colors, 3));\n\t\t\tthis.add(new Mesh(geometry, this.material));\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.children[0].geometry.dispose();\n\t\t\tthis.children[0].material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst mesh = this.children[0];\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tconst colors = mesh.geometry.getAttribute('color');\n\n\t\t\t\t_color1.copy(this.light.color);\n\n\t\t\t\t_color2.copy(this.light.groundColor);\n\n\t\t\t\tfor (let i = 0, l = colors.count; i < l; i++) {\n\t\t\t\t\tconst color = i < l / 2 ? _color1 : _color2;\n\t\t\t\t\tcolors.setXYZ(i, color.r, color.g, color.b);\n\t\t\t\t}\n\n\t\t\t\tcolors.needsUpdate = true;\n\t\t\t}\n\n\t\t\tmesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate());\n\t\t}\n\n\t}\n\n\tclass GridHelper extends LineSegments {\n\t\tconstructor(size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888) {\n\t\t\tcolor1 = new Color(color1);\n\t\t\tcolor2 = new Color(color2);\n\t\t\tconst center = divisions / 2;\n\t\t\tconst step = size / divisions;\n\t\t\tconst halfSize = size / 2;\n\t\t\tconst vertices = [],\n\t\t\t\t\t\tcolors = [];\n\n\t\t\tfor (let i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n\t\t\t\tvertices.push(-halfSize, 0, k, halfSize, 0, k);\n\t\t\t\tvertices.push(k, 0, -halfSize, k, 0, halfSize);\n\t\t\t\tconst color = i === center ? color1 : color2;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t}\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'GridHelper';\n\t\t}\n\n\t}\n\n\tclass PolarGridHelper extends LineSegments {\n\t\tconstructor(radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888) {\n\t\t\tcolor1 = new Color(color1);\n\t\t\tcolor2 = new Color(color2);\n\t\t\tconst vertices = [];\n\t\t\tconst colors = []; // create the radials\n\n\t\t\tfor (let i = 0; i <= radials; i++) {\n\t\t\t\tconst v = i / radials * (Math.PI * 2);\n\t\t\t\tconst x = Math.sin(v) * radius;\n\t\t\t\tconst z = Math.cos(v) * radius;\n\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\tconst color = i & 1 ? color1 : color2;\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t} // create the circles\n\n\n\t\t\tfor (let i = 0; i <= circles; i++) {\n\t\t\t\tconst color = i & 1 ? color1 : color2;\n\t\t\t\tconst r = radius - radius / circles * i;\n\n\t\t\t\tfor (let j = 0; j < divisions; j++) {\n\t\t\t\t\t// first vertex\n\t\t\t\t\tlet v = j / divisions * (Math.PI * 2);\n\t\t\t\t\tlet x = Math.sin(v) * r;\n\t\t\t\t\tlet z = Math.cos(v) * r;\n\t\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\t\tcolors.push(color.r, color.g, color.b); // second vertex\n\n\t\t\t\t\tv = (j + 1) / divisions * (Math.PI * 2);\n\t\t\t\t\tx = Math.sin(v) * r;\n\t\t\t\t\tz = Math.cos(v) * r;\n\t\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'PolarGridHelper';\n\t\t}\n\n\t}\n\n\tconst _v1 = /*@__PURE__*/new Vector3();\n\n\tconst _v2 = /*@__PURE__*/new Vector3();\n\n\tconst _v3 = /*@__PURE__*/new Vector3();\n\n\tclass DirectionalLightHelper extends Object3D {\n\t\tconstructor(light, size, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tif (size === undefined) size = 1;\n\t\t\tlet geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tthis.lightPlane = new Line(geometry, material);\n\t\t\tthis.add(this.lightPlane);\n\t\t\tgeometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n\t\t\tthis.targetLine = new Line(geometry, material);\n\t\t\tthis.add(this.targetLine);\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.lightPlane.geometry.dispose();\n\t\t\tthis.lightPlane.material.dispose();\n\t\t\tthis.targetLine.geometry.dispose();\n\t\t\tthis.targetLine.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\t_v1.setFromMatrixPosition(this.light.matrixWorld);\n\n\t\t\t_v2.setFromMatrixPosition(this.light.target.matrixWorld);\n\n\t\t\t_v3.subVectors(_v2, _v1);\n\n\t\t\tthis.lightPlane.lookAt(_v2);\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.lightPlane.material.color.set(this.color);\n\t\t\t\tthis.targetLine.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.lightPlane.material.color.copy(this.light.color);\n\t\t\t\tthis.targetLine.material.color.copy(this.light.color);\n\t\t\t}\n\n\t\t\tthis.targetLine.lookAt(_v2);\n\t\t\tthis.targetLine.scale.z = _v3.length();\n\t\t}\n\n\t}\n\n\tconst _vector = /*@__PURE__*/new Vector3();\n\n\tconst _camera = /*@__PURE__*/new Camera();\n\t/**\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\n\tclass CameraHelper extends LineSegments {\n\t\tconstructor(camera) {\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tcolor: 0xffffff,\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tconst vertices = [];\n\t\t\tconst colors = [];\n\t\t\tconst pointMap = {}; // colors\n\n\t\t\tconst colorFrustum = new Color(0xffaa00);\n\t\t\tconst colorCone = new Color(0xff0000);\n\t\t\tconst colorUp = new Color(0x00aaff);\n\t\t\tconst colorTarget = new Color(0xffffff);\n\t\t\tconst colorCross = new Color(0x333333); // near\n\n\t\t\taddLine('n1', 'n2', colorFrustum);\n\t\t\taddLine('n2', 'n4', colorFrustum);\n\t\t\taddLine('n4', 'n3', colorFrustum);\n\t\t\taddLine('n3', 'n1', colorFrustum); // far\n\n\t\t\taddLine('f1', 'f2', colorFrustum);\n\t\t\taddLine('f2', 'f4', colorFrustum);\n\t\t\taddLine('f4', 'f3', colorFrustum);\n\t\t\taddLine('f3', 'f1', colorFrustum); // sides\n\n\t\t\taddLine('n1', 'f1', colorFrustum);\n\t\t\taddLine('n2', 'f2', colorFrustum);\n\t\t\taddLine('n3', 'f3', colorFrustum);\n\t\t\taddLine('n4', 'f4', colorFrustum); // cone\n\n\t\t\taddLine('p', 'n1', colorCone);\n\t\t\taddLine('p', 'n2', colorCone);\n\t\t\taddLine('p', 'n3', colorCone);\n\t\t\taddLine('p', 'n4', colorCone); // up\n\n\t\t\taddLine('u1', 'u2', colorUp);\n\t\t\taddLine('u2', 'u3', colorUp);\n\t\t\taddLine('u3', 'u1', colorUp); // target\n\n\t\t\taddLine('c', 't', colorTarget);\n\t\t\taddLine('p', 'c', colorCross); // cross\n\n\t\t\taddLine('cn1', 'cn2', colorCross);\n\t\t\taddLine('cn3', 'cn4', colorCross);\n\t\t\taddLine('cf1', 'cf2', colorCross);\n\t\t\taddLine('cf3', 'cf4', colorCross);\n\n\t\t\tfunction addLine(a, b, color) {\n\t\t\t\taddPoint(a, color);\n\t\t\t\taddPoint(b, color);\n\t\t\t}\n\n\t\t\tfunction addPoint(id, color) {\n\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\n\t\t\t\tif (pointMap[id] === undefined) {\n\t\t\t\t\tpointMap[id] = [];\n\t\t\t\t}\n\n\t\t\t\tpointMap[id].push(vertices.length / 3 - 1);\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'CameraHelper';\n\t\t\tthis.camera = camera;\n\t\t\tif (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\n\t\t\tthis.matrix = camera.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.pointMap = pointMap;\n\t\t\tthis.update();\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst pointMap = this.pointMap;\n\t\t\tconst w = 1,\n\t\t\t\t\t\th = 1; // we need just camera projection matrix inverse\n\t\t\t// world matrix must be identity\n\n\t\t\t_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse); // center / target\n\n\n\t\t\tsetPoint('c', pointMap, geometry, _camera, 0, 0, -1);\n\t\t\tsetPoint('t', pointMap, geometry, _camera, 0, 0, 1); // near\n\n\t\t\tsetPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\n\t\t\tsetPoint('n2', pointMap, geometry, _camera, w, -h, -1);\n\t\t\tsetPoint('n3', pointMap, geometry, _camera, -w, h, -1);\n\t\t\tsetPoint('n4', pointMap, geometry, _camera, w, h, -1); // far\n\n\t\t\tsetPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\n\t\t\tsetPoint('f2', pointMap, geometry, _camera, w, -h, 1);\n\t\t\tsetPoint('f3', pointMap, geometry, _camera, -w, h, 1);\n\t\t\tsetPoint('f4', pointMap, geometry, _camera, w, h, 1); // up\n\n\t\t\tsetPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n\t\t\tsetPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n\t\t\tsetPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1); // cross\n\n\t\t\tsetPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\n\t\t\tsetPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\n\t\t\tsetPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\n\t\t\tsetPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\n\t\t\tsetPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\n\t\t\tsetPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\n\t\t\tsetPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\n\t\t\tsetPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t}\n\n\tfunction setPoint(point, pointMap, geometry, camera, x, y, z) {\n\t\t_vector.set(x, y, z).unproject(camera);\n\n\t\tconst points = pointMap[point];\n\n\t\tif (points !== undefined) {\n\t\t\tconst position = geometry.getAttribute('position');\n\n\t\t\tfor (let i = 0, l = points.length; i < l; i++) {\n\t\t\t\tposition.setXYZ(points[i], _vector.x, _vector.y, _vector.z);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst _box = /*@__PURE__*/new Box3();\n\n\tclass BoxHelper extends LineSegments {\n\t\tconstructor(object, color = 0xffff00) {\n\t\t\tconst indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n\t\t\tconst positions = new Float32Array(8 * 3);\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\n\t\t\tgeometry.setAttribute('position', new BufferAttribute(positions, 3));\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.object = object;\n\t\t\tthis.type = 'BoxHelper';\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.update();\n\t\t}\n\n\t\tupdate(object) {\n\t\t\tif (object !== undefined) {\n\t\t\t\tconsole.warn('THREE.BoxHelper: .update() has no longer arguments.');\n\t\t\t}\n\n\t\t\tif (this.object !== undefined) {\n\t\t\t\t_box.setFromObject(this.object);\n\t\t\t}\n\n\t\t\tif (_box.isEmpty()) return;\n\t\t\tconst min = _box.min;\n\t\t\tconst max = _box.max;\n\t\t\t/*\n\t\t\t\t5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\t\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tconst position = this.geometry.attributes.position;\n\t\t\tconst array = position.array;\n\t\t\tarray[0] = max.x;\n\t\t\tarray[1] = max.y;\n\t\t\tarray[2] = max.z;\n\t\t\tarray[3] = min.x;\n\t\t\tarray[4] = max.y;\n\t\t\tarray[5] = max.z;\n\t\t\tarray[6] = min.x;\n\t\t\tarray[7] = min.y;\n\t\t\tarray[8] = max.z;\n\t\t\tarray[9] = max.x;\n\t\t\tarray[10] = min.y;\n\t\t\tarray[11] = max.z;\n\t\t\tarray[12] = max.x;\n\t\t\tarray[13] = max.y;\n\t\t\tarray[14] = min.z;\n\t\t\tarray[15] = min.x;\n\t\t\tarray[16] = max.y;\n\t\t\tarray[17] = min.z;\n\t\t\tarray[18] = min.x;\n\t\t\tarray[19] = min.y;\n\t\t\tarray[20] = min.z;\n\t\t\tarray[21] = max.x;\n\t\t\tarray[22] = min.y;\n\t\t\tarray[23] = min.z;\n\t\t\tposition.needsUpdate = true;\n\t\t\tthis.geometry.computeBoundingSphere();\n\t\t}\n\n\t\tsetFromObject(object) {\n\t\t\tthis.object = object;\n\t\t\tthis.update();\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tLineSegments.prototype.copy.call(this, source);\n\t\t\tthis.object = source.object;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Box3Helper extends LineSegments {\n\t\tconstructor(box, color = 0xffff00) {\n\t\t\tconst indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n\t\t\tconst positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.box = box;\n\t\t\tthis.type = 'Box3Helper';\n\t\t\tthis.geometry.computeBoundingSphere();\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tconst box = this.box;\n\t\t\tif (box.isEmpty()) return;\n\t\t\tbox.getCenter(this.position);\n\t\t\tbox.getSize(this.scale);\n\t\t\tthis.scale.multiplyScalar(0.5);\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tclass PlaneHelper extends Line {\n\t\tconstructor(plane, size = 1, hex = 0xffff00) {\n\t\t\tconst color = hex;\n\t\t\tconst positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tgeometry.computeBoundingSphere();\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.type = 'PlaneHelper';\n\t\t\tthis.plane = plane;\n\t\t\tthis.size = size;\n\t\t\tconst positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\n\t\t\tconst geometry2 = new BufferGeometry();\n\t\t\tgeometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n\t\t\tgeometry2.computeBoundingSphere();\n\t\t\tthis.add(new Mesh(geometry2, new MeshBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\topacity: 0.2,\n\t\t\t\ttransparent: true,\n\t\t\t\tdepthWrite: false,\n\t\t\t\ttoneMapped: false\n\t\t\t})));\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tlet scale = -this.plane.constant;\n\t\t\tif (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\n\n\t\t\tthis.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n\t\t\tthis.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\t\tthis.lookAt(this.plane.normal);\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tconst _axis = /*@__PURE__*/new Vector3();\n\n\tlet _lineGeometry, _coneGeometry;\n\n\tclass ArrowHelper extends Object3D {\n\t\t// dir is assumed to be normalized\n\t\tconstructor(dir = new Vector3(0, 0, 1), origin = new Vector3(0, 0, 0), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ArrowHelper';\n\n\t\t\tif (_lineGeometry === undefined) {\n\t\t\t\t_lineGeometry = new BufferGeometry();\n\n\t\t\t\t_lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n\t\t\t\t_coneGeometry = new CylinderGeometry(0, 0.5, 1, 5, 1);\n\n\t\t\t\t_coneGeometry.translate(0, -0.5, 0);\n\t\t\t}\n\n\t\t\tthis.position.copy(origin);\n\t\t\tthis.line = new Line(_lineGeometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.line.matrixAutoUpdate = false;\n\t\t\tthis.add(this.line);\n\t\t\tthis.cone = new Mesh(_coneGeometry, new MeshBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.cone.matrixAutoUpdate = false;\n\t\t\tthis.add(this.cone);\n\t\t\tthis.setDirection(dir);\n\t\t\tthis.setLength(length, headLength, headWidth);\n\t\t}\n\n\t\tsetDirection(dir) {\n\t\t\t// dir is assumed to be normalized\n\t\t\tif (dir.y > 0.99999) {\n\t\t\t\tthis.quaternion.set(0, 0, 0, 1);\n\t\t\t} else if (dir.y < -0.99999) {\n\t\t\t\tthis.quaternion.set(1, 0, 0, 0);\n\t\t\t} else {\n\t\t\t\t_axis.set(dir.z, 0, -dir.x).normalize();\n\n\t\t\t\tconst radians = Math.acos(dir.y);\n\t\t\t\tthis.quaternion.setFromAxisAngle(_axis, radians);\n\t\t\t}\n\t\t}\n\n\t\tsetLength(length, headLength = length * 0.2, headWidth = headLength * 0.2) {\n\t\t\tthis.line.scale.set(1, Math.max(0.0001, length - headLength), 1); // see #17458\n\n\t\t\tthis.line.updateMatrix();\n\t\t\tthis.cone.scale.set(headWidth, headLength, headWidth);\n\t\t\tthis.cone.position.y = length;\n\t\t\tthis.cone.updateMatrix();\n\t\t}\n\n\t\tsetColor(color) {\n\t\t\tthis.line.material.color.set(color);\n\t\t\tthis.cone.material.color.set(color);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source, false);\n\t\t\tthis.line.copy(source.line);\n\t\t\tthis.cone.copy(source.cone);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AxesHelper extends LineSegments {\n\t\tconstructor(size = 1) {\n\t\t\tconst vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n\t\t\tconst colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'AxesHelper';\n\t\t}\n\n\t\tsetColors(xAxisColor, yAxisColor, zAxisColor) {\n\t\t\tconst color = new Color();\n\t\t\tconst array = this.geometry.attributes.color.array;\n\t\t\tcolor.set(xAxisColor);\n\t\t\tcolor.toArray(array, 0);\n\t\t\tcolor.toArray(array, 3);\n\t\t\tcolor.set(yAxisColor);\n\t\t\tcolor.toArray(array, 6);\n\t\t\tcolor.toArray(array, 9);\n\t\t\tcolor.set(zAxisColor);\n\t\t\tcolor.toArray(array, 12);\n\t\t\tcolor.toArray(array, 15);\n\t\t\tthis.geometry.attributes.color.needsUpdate = true;\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t}\n\n\tclass ShapePath {\n\t\tconstructor() {\n\t\t\tthis.type = 'ShapePath';\n\t\t\tthis.color = new Color();\n\t\t\tthis.subPaths = [];\n\t\t\tthis.currentPath = null;\n\t\t}\n\n\t\tmoveTo(x, y) {\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push(this.currentPath);\n\t\t\tthis.currentPath.moveTo(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tlineTo(x, y) {\n\t\t\tthis.currentPath.lineTo(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tquadraticCurveTo(aCPx, aCPy, aX, aY) {\n\t\t\tthis.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tbezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n\t\t\tthis.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tsplineThru(pts) {\n\t\t\tthis.currentPath.splineThru(pts);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoShapes(isCCW, noHoles) {\n\t\t\tfunction toShapesNoHoles(inSubpaths) {\n\t\t\t\tconst shapes = [];\n\n\t\t\t\tfor (let i = 0, l = inSubpaths.length; i < l; i++) {\n\t\t\t\t\tconst tmpPath = inSubpaths[i];\n\t\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\t\tshapes.push(tmpShape);\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon(inPt, inPolygon) {\n\t\t\t\tconst polyLen = inPolygon.length; // inPt on polygon contour => immediate success\t\tor\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//\twith the horizontal line through inPt, left of inPt\n\t\t\t\t//\tnot counting lowerY endpoints of edges and whole edges on that line\n\n\t\t\t\tlet inside = false;\n\n\t\t\t\tfor (let p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n\t\t\t\t\tlet edgeLowPt = inPolygon[p];\n\t\t\t\t\tlet edgeHighPt = inPolygon[q];\n\t\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif (Math.abs(edgeDy) > Number.EPSILON) {\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif (edgeDy < 0) {\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[q];\n\t\t\t\t\t\t\tedgeDx = -edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[p];\n\t\t\t\t\t\t\tedgeDy = -edgeDy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n\t\t\t\t\t\tif (inPt.y === edgeLowPt.y) {\n\t\t\t\t\t\t\tif (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n\t\t\t\t\t\t\tif (perpEdge === 0) return true; // inPt is on contour ?\n\n\t\t\t\t\t\t\tif (perpEdge < 0) continue;\n\t\t\t\t\t\t\tinside = !inside; // true intersection left of inPt\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif (inPt.y !== edgeLowPt.y) continue; // parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\n\t\t\t\t\t\tif (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn inside;\n\t\t\t}\n\n\t\t\tconst isClockWise = ShapeUtils.isClockWise;\n\t\t\tconst subPaths = this.subPaths;\n\t\t\tif (subPaths.length === 0) return [];\n\t\t\tif (noHoles === true) return toShapesNoHoles(subPaths);\n\t\t\tlet solid, tmpPath, tmpShape;\n\t\t\tconst shapes = [];\n\n\t\t\tif (subPaths.length === 1) {\n\t\t\t\ttmpPath = subPaths[0];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push(tmpShape);\n\t\t\t\treturn shapes;\n\t\t\t}\n\n\t\t\tlet holesFirst = !isClockWise(subPaths[0].getPoints());\n\t\t\tholesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n\t\t\tconst betterShapeHoles = [];\n\t\t\tconst newShapes = [];\n\t\t\tlet newShapeHoles = [];\n\t\t\tlet mainIdx = 0;\n\t\t\tlet tmpPoints;\n\t\t\tnewShapes[mainIdx] = undefined;\n\t\t\tnewShapeHoles[mainIdx] = [];\n\n\t\t\tfor (let i = 0, l = subPaths.length; i < l; i++) {\n\t\t\t\ttmpPath = subPaths[i];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise(tmpPoints);\n\t\t\t\tsolid = isCCW ? !solid : solid;\n\n\t\t\t\tif (solid) {\n\t\t\t\t\tif (!holesFirst && newShapes[mainIdx]) mainIdx++;\n\t\t\t\t\tnewShapes[mainIdx] = {\n\t\t\t\t\t\ts: new Shape(),\n\t\t\t\t\t\tp: tmpPoints\n\t\t\t\t\t};\n\t\t\t\t\tnewShapes[mainIdx].s.curves = tmpPath.curves;\n\t\t\t\t\tif (holesFirst) mainIdx++;\n\t\t\t\t\tnewShapeHoles[mainIdx] = []; //console.log('cw', i);\n\t\t\t\t} else {\n\t\t\t\t\tnewShapeHoles[mainIdx].push({\n\t\t\t\t\t\th: tmpPath,\n\t\t\t\t\t\tp: tmpPoints[0]\n\t\t\t\t\t}); //console.log('ccw', i);\n\t\t\t\t}\n\t\t\t} // only Holes? -> probably all Shapes with wrong orientation\n\n\n\t\t\tif (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n\t\t\tif (newShapes.length > 1) {\n\t\t\t\tlet ambiguous = false;\n\t\t\t\tconst toChange = [];\n\n\t\t\t\tfor (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n\t\t\t\t\tbetterShapeHoles[sIdx] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n\t\t\t\t\tconst sho = newShapeHoles[sIdx];\n\n\t\t\t\t\tfor (let hIdx = 0; hIdx < sho.length; hIdx++) {\n\t\t\t\t\t\tconst ho = sho[hIdx];\n\t\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\t\tfor (let s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n\t\t\t\t\t\t\tif (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n\t\t\t\t\t\t\t\tif (sIdx !== s2Idx) toChange.push({\n\t\t\t\t\t\t\t\t\tfroms: sIdx,\n\t\t\t\t\t\t\t\t\ttos: s2Idx,\n\t\t\t\t\t\t\t\t\thole: hIdx\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (hole_unassigned) {\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[s2Idx].push(ho);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (hole_unassigned) {\n\t\t\t\t\t\t\tbetterShapeHoles[sIdx].push(ho);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // console.log(\"ambiguous: \", ambiguous);\n\n\n\t\t\t\tif (toChange.length > 0) {\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif (!ambiguous) newShapeHoles = betterShapeHoles;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet tmpHoles;\n\n\t\t\tfor (let i = 0, il = newShapes.length; i < il; i++) {\n\t\t\t\ttmpShape = newShapes[i].s;\n\t\t\t\tshapes.push(tmpShape);\n\t\t\t\ttmpHoles = newShapeHoles[i];\n\n\t\t\t\tfor (let j = 0, jl = tmpHoles.length; j < jl; j++) {\n\t\t\t\t\ttmpShape.holes.push(tmpHoles[j].h);\n\t\t\t\t}\n\t\t\t} //console.log(\"shape\", shapes);\n\n\n\t\t\treturn shapes;\n\t\t}\n\n\t}\n\n\tconst _floatView = new Float32Array(1);\n\n\tconst _int32View = new Int32Array(_floatView.buffer);\n\n\tclass DataUtils {\n\t\t// Converts float32 to float16 (stored as uint16 value).\n\t\tstatic toHalfFloat(val) {\n\t\t\tif (val > 65504) {\n\t\t\t\tconsole.warn('THREE.DataUtils.toHalfFloat(): value exceeds 65504.');\n\t\t\t\tval = 65504; // maximum representable value in float16\n\t\t\t} // Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t\t* by James Tursa?s half-precision code. */\n\n\n\t\t\t_floatView[0] = val;\n\t\t\tconst x = _int32View[0];\n\t\t\tlet bits = x >> 16 & 0x8000;\n\t\t\t/* Get the sign */\n\n\t\t\tlet m = x >> 12 & 0x07ff;\n\t\t\t/* Keep one extra bit for rounding */\n\n\t\t\tconst e = x >> 23 & 0xff;\n\t\t\t/* Using int is faster here */\n\n\t\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t\t* half, return signed zero. */\n\n\t\t\tif (e < 103) return bits;\n\t\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\n\t\t\tif (e > 142) {\n\t\t\t\tbits |= 0x7c00;\n\t\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */\n\n\t\t\t\tbits |= (e == 255 ? 0 : 1) && x & 0x007fffff;\n\t\t\t\treturn bits;\n\t\t\t}\n\t\t\t/* If exponent underflows but not too much, return a denormal */\n\n\n\t\t\tif (e < 113) {\n\t\t\t\tm |= 0x0800;\n\t\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t\t* to 1, which is OK. */\n\n\t\t\t\tbits |= (m >> 114 - e) + (m >> 113 - e & 1);\n\t\t\t\treturn bits;\n\t\t\t}\n\n\t\t\tbits |= e - 112 << 10 | m >> 1;\n\t\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t\t* the exponent, which is OK. */\n\n\t\t\tbits += m & 1;\n\t\t\treturn bits;\n\t\t}\n\n\t}\n\n\tconst LineStrip = 0;\n\tconst LinePieces = 1;\n\tconst NoColors = 0;\n\tconst FaceColors = 1;\n\tconst VertexColors = 2;\n\tfunction MeshFaceMaterial(materials) {\n\t\tconsole.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\n\t\treturn materials;\n\t}\n\tfunction MultiMaterial(materials = []) {\n\t\tconsole.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\n\t\tmaterials.clone = function () {\n\t\t\treturn materials.slice();\n\t\t};\n\n\t\treturn materials;\n\t}\n\tfunction PointCloud(geometry, material) {\n\t\tconsole.warn('THREE.PointCloud has been renamed to THREE.Points.');\n\t\treturn new Points(geometry, material);\n\t}\n\tfunction Particle(material) {\n\t\tconsole.warn('THREE.Particle has been renamed to THREE.Sprite.');\n\t\treturn new Sprite(material);\n\t}\n\tfunction ParticleSystem(geometry, material) {\n\t\tconsole.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n\t\treturn new Points(geometry, material);\n\t}\n\tfunction PointCloudMaterial(parameters) {\n\t\tconsole.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction ParticleBasicMaterial(parameters) {\n\t\tconsole.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction ParticleSystemMaterial(parameters) {\n\t\tconsole.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction Vertex(x, y, z) {\n\t\tconsole.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n\t\treturn new Vector3(x, y, z);\n\t} //\n\n\tfunction DynamicBufferAttribute(array, itemSize) {\n\t\tconsole.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.');\n\t\treturn new BufferAttribute(array, itemSize).setUsage(DynamicDrawUsage);\n\t}\n\tfunction Int8Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\n\t\treturn new Int8BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint8Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\n\t\treturn new Uint8BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint8ClampedAttribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\n\t\treturn new Uint8ClampedBufferAttribute(array, itemSize);\n\t}\n\tfunction Int16Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\n\t\treturn new Int16BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint16Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\n\t\treturn new Uint16BufferAttribute(array, itemSize);\n\t}\n\tfunction Int32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\n\t\treturn new Int32BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\n\t\treturn new Uint32BufferAttribute(array, itemSize);\n\t}\n\tfunction Float32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\n\t\treturn new Float32BufferAttribute(array, itemSize);\n\t}\n\tfunction Float64Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\n\t\treturn new Float64BufferAttribute(array, itemSize);\n\t} //\n\n\tCurve.create = function (construct, getPoint) {\n\t\tconsole.log('THREE.Curve.create() has been deprecated');\n\t\tconstruct.prototype = Object.create(Curve.prototype);\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\t\treturn construct;\n\t}; //\n\n\n\tPath.prototype.fromPoints = function (points) {\n\t\tconsole.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');\n\t\treturn this.setFromPoints(points);\n\t}; //\n\n\n\tfunction AxisHelper(size) {\n\t\tconsole.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');\n\t\treturn new AxesHelper(size);\n\t}\n\tfunction BoundingBoxHelper(object, color) {\n\t\tconsole.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\n\t\treturn new BoxHelper(object, color);\n\t}\n\tfunction EdgesHelper(object, hex) {\n\t\tconsole.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\n\t\treturn new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\n\t\t}));\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\t\tconsole.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\t\tconsole.error('THREE.SkeletonHelper: update() no longer needs to be called.');\n\t};\n\n\tfunction WireframeHelper(object, hex) {\n\t\tconsole.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\n\t\treturn new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\n\t\t}));\n\t} //\n\n\tLoader.prototype.extractUrlBase = function (url) {\n\t\tconsole.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');\n\t\treturn LoaderUtils.extractUrlBase(url);\n\t};\n\n\tLoader.Handlers = {\n\t\tadd: function () {\n\t\t\tconsole.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');\n\t\t},\n\t\tget: function () {\n\t\t\tconsole.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');\n\t\t}\n\t};\n\tfunction XHRLoader(manager) {\n\t\tconsole.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\n\t\treturn new FileLoader(manager);\n\t}\n\tfunction BinaryTextureLoader(manager) {\n\t\tconsole.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\n\t\treturn new DataTextureLoader(manager);\n\t} //\n\n\tBox2.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box2: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t};\n\n\tBox2.prototype.empty = function () {\n\t\tconsole.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t};\n\n\tBox2.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tBox2.prototype.size = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box2: .size() has been renamed to .getSize().');\n\t\treturn this.getSize(optionalTarget);\n\t}; //\n\n\n\tBox3.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box3: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t};\n\n\tBox3.prototype.empty = function () {\n\t\tconsole.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t};\n\n\tBox3.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tBox3.prototype.isIntersectionSphere = function (sphere) {\n\t\tconsole.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n\t\treturn this.intersectsSphere(sphere);\n\t};\n\n\tBox3.prototype.size = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box3: .size() has been renamed to .getSize().');\n\t\treturn this.getSize(optionalTarget);\n\t}; //\n\n\n\tSphere.prototype.empty = function () {\n\t\tconsole.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t}; //\n\n\n\tFrustum.prototype.setFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');\n\t\treturn this.setFromProjectionMatrix(m);\n\t}; //\n\n\n\tLine3.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Line3: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t}; //\n\n\n\tMatrix3.prototype.flattenToArrayOffset = function (array, offset) {\n\t\tconsole.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n\t\treturn this.toArray(array, offset);\n\t};\n\n\tMatrix3.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n\t\treturn vector.applyMatrix3(this);\n\t};\n\n\tMatrix3.prototype.multiplyVector3Array = function () {\n\t\tconsole.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\n\t};\n\n\tMatrix3.prototype.applyToBufferAttribute = function (attribute) {\n\t\tconsole.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');\n\t\treturn attribute.applyMatrix3(this);\n\t};\n\n\tMatrix3.prototype.applyToVector3Array = function () {\n\t\tconsole.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\n\t};\n\n\tMatrix3.prototype.getInverse = function (matrix) {\n\t\tconsole.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n\t\treturn this.copy(matrix).invert();\n\t}; //\n\n\n\tMatrix4.prototype.extractPosition = function (m) {\n\t\tconsole.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n\t\treturn this.copyPosition(m);\n\t};\n\n\tMatrix4.prototype.flattenToArrayOffset = function (array, offset) {\n\t\tconsole.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n\t\treturn this.toArray(array, offset);\n\t};\n\n\tMatrix4.prototype.getPosition = function () {\n\t\tconsole.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n\t\treturn new Vector3().setFromMatrixColumn(this, 3);\n\t};\n\n\tMatrix4.prototype.setRotationFromQuaternion = function (q) {\n\t\tconsole.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n\t\treturn this.makeRotationFromQuaternion(q);\n\t};\n\n\tMatrix4.prototype.multiplyToArray = function () {\n\t\tconsole.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\n\t};\n\n\tMatrix4.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.multiplyVector4 = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.multiplyVector3Array = function () {\n\t\tconsole.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateAxis = function (v) {\n\t\tconsole.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n\t\tv.transformDirection(this);\n\t};\n\n\tMatrix4.prototype.crossVector = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.translate = function () {\n\t\tconsole.error('THREE.Matrix4: .translate() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateX = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateX() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateY = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateY() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateZ = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateZ() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateByAxis = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n\t};\n\n\tMatrix4.prototype.applyToBufferAttribute = function (attribute) {\n\t\tconsole.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');\n\t\treturn attribute.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.applyToVector3Array = function () {\n\t\tconsole.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\n\t};\n\n\tMatrix4.prototype.makeFrustum = function (left, right, bottom, top, near, far) {\n\t\tconsole.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\n\t\treturn this.makePerspective(left, right, top, bottom, near, far);\n\t};\n\n\tMatrix4.prototype.getInverse = function (matrix) {\n\t\tconsole.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n\t\treturn this.copy(matrix).invert();\n\t}; //\n\n\n\tPlane.prototype.isIntersectionLine = function (line) {\n\t\tconsole.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n\t\treturn this.intersectsLine(line);\n\t}; //\n\n\n\tQuaternion.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n\t\treturn vector.applyQuaternion(this);\n\t};\n\n\tQuaternion.prototype.inverse = function () {\n\t\tconsole.warn('THREE.Quaternion: .inverse() has been renamed to invert().');\n\t\treturn this.invert();\n\t}; //\n\n\n\tRay.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tRay.prototype.isIntersectionPlane = function (plane) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n\t\treturn this.intersectsPlane(plane);\n\t};\n\n\tRay.prototype.isIntersectionSphere = function (sphere) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n\t\treturn this.intersectsSphere(sphere);\n\t}; //\n\n\n\tTriangle.prototype.area = function () {\n\t\tconsole.warn('THREE.Triangle: .area() has been renamed to .getArea().');\n\t\treturn this.getArea();\n\t};\n\n\tTriangle.prototype.barycoordFromPoint = function (point, target) {\n\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n\t\treturn this.getBarycoord(point, target);\n\t};\n\n\tTriangle.prototype.midpoint = function (target) {\n\t\tconsole.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');\n\t\treturn this.getMidpoint(target);\n\t};\n\n\tTriangle.prototypenormal = function (target) {\n\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n\t\treturn this.getNormal(target);\n\t};\n\n\tTriangle.prototype.plane = function (target) {\n\t\tconsole.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');\n\t\treturn this.getPlane(target);\n\t};\n\n\tTriangle.barycoordFromPoint = function (point, a, b, c, target) {\n\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n\t\treturn Triangle.getBarycoord(point, a, b, c, target);\n\t};\n\n\tTriangle.normal = function (a, b, c, target) {\n\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n\t\treturn Triangle.getNormal(a, b, c, target);\n\t}; //\n\n\n\tShape.prototype.extractAllPoints = function (divisions) {\n\t\tconsole.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');\n\t\treturn this.extractPoints(divisions);\n\t};\n\n\tShape.prototype.extrude = function (options) {\n\t\tconsole.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\n\t\treturn new ExtrudeGeometry(this, options);\n\t};\n\n\tShape.prototype.makeGeometry = function (options) {\n\t\tconsole.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\n\t\treturn new ShapeGeometry(this, options);\n\t}; //\n\n\n\tVector2.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector2.prototype.distanceToManhattan = function (v) {\n\t\tconsole.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n\t\treturn this.manhattanDistanceTo(v);\n\t};\n\n\tVector2.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tVector3.prototype.setEulerFromRotationMatrix = function () {\n\t\tconsole.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n\t};\n\n\tVector3.prototype.setEulerFromQuaternion = function () {\n\t\tconsole.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n\t};\n\n\tVector3.prototype.getPositionFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n\t\treturn this.setFromMatrixPosition(m);\n\t};\n\n\tVector3.prototype.getScaleFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n\t\treturn this.setFromMatrixScale(m);\n\t};\n\n\tVector3.prototype.getColumnFromMatrix = function (index, matrix) {\n\t\tconsole.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n\t\treturn this.setFromMatrixColumn(matrix, index);\n\t};\n\n\tVector3.prototype.applyProjection = function (m) {\n\t\tconsole.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\n\t\treturn this.applyMatrix4(m);\n\t};\n\n\tVector3.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector3.prototype.distanceToManhattan = function (v) {\n\t\tconsole.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n\t\treturn this.manhattanDistanceTo(v);\n\t};\n\n\tVector3.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tVector4.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector4.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tObject3D.prototype.getChildByName = function (name) {\n\t\tconsole.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n\t\treturn this.getObjectByName(name);\n\t};\n\n\tObject3D.prototype.renderDepth = function () {\n\t\tconsole.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n\t};\n\n\tObject3D.prototype.translate = function (distance, axis) {\n\t\tconsole.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n\t\treturn this.translateOnAxis(axis, distance);\n\t};\n\n\tObject3D.prototype.getWorldRotation = function () {\n\t\tconsole.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');\n\t};\n\n\tObject3D.prototype.applyMatrix = function (matrix) {\n\t\tconsole.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');\n\t\treturn this.applyMatrix4(matrix);\n\t};\n\n\tObject.defineProperties(Object3D.prototype, {\n\t\teulerOrder: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n\t\t\t\treturn this.rotation.order;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n\t\t\t\tthis.rotation.order = value;\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n\t\t\t}\n\t\t}\n\t});\n\n\tMesh.prototype.setDrawMode = function () {\n\t\tconsole.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n\t};\n\n\tObject.defineProperties(Mesh.prototype, {\n\t\tdrawMode: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');\n\t\t\t\treturn TrianglesDrawMode;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n\t\t\t}\n\t\t}\n\t});\n\n\tSkinnedMesh.prototype.initBones = function () {\n\t\tconsole.error('THREE.SkinnedMesh: initBones() has been removed.');\n\t}; //\n\n\n\tPerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n\t\tconsole.warn('THREE.PerspectiveCamera.setLens is deprecated. ' + 'Use .setFocalLength and .filmGauge for a photographic setup.');\n\t\tif (filmGauge !== undefined) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength(focalLength);\n\t}; //\n\n\n\tObject.defineProperties(Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .onlyShadow has been removed.');\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n\t\t\t\tthis.shadow.camera.fov = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n\t\t\t\tthis.shadow.camera.left = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n\t\t\t\tthis.shadow.camera.right = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n\t\t\t\tthis.shadow.camera.top = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n\t\t\t\tthis.shadow.camera.bottom = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n\t\t\t\tthis.shadow.camera.near = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n\t\t\t\tthis.shadow.camera.far = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n\t\t\t\tthis.shadow.bias = value;\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .shadowDarkness has been removed.');\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n\t\t\t\tthis.shadow.mapSize.width = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n\t\t\t\tthis.shadow.mapSize.height = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tObject.defineProperties(BufferAttribute.prototype, {\n\t\tlength: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\n\t\t\t\treturn this.array.length;\n\t\t\t}\n\t\t},\n\t\tdynamic: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n\t\t\t\treturn this.usage === DynamicDrawUsage;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n\t\t\t\tthis.setUsage(DynamicDrawUsage);\n\t\t\t}\n\t\t}\n\t});\n\n\tBufferAttribute.prototype.setDynamic = function (value) {\n\t\tconsole.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');\n\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n\t\treturn this;\n\t};\n\n\tBufferAttribute.prototype.copyIndicesArray = function () {\n\t\tconsole.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');\n\t}, BufferAttribute.prototype.setArray = function () {\n\t\tconsole.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n\t}; //\n\n\tBufferGeometry.prototype.addIndex = function (index) {\n\t\tconsole.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n\t\tthis.setIndex(index);\n\t};\n\n\tBufferGeometry.prototype.addAttribute = function (name, attribute) {\n\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');\n\n\t\tif (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\n\t\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n\t\t\treturn this.setAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\n\t\t}\n\n\t\tif (name === 'index') {\n\t\t\tconsole.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n\t\t\tthis.setIndex(attribute);\n\t\t\treturn this;\n\t\t}\n\n\t\treturn this.setAttribute(name, attribute);\n\t};\n\n\tBufferGeometry.prototype.addDrawCall = function (start, count, indexOffset) {\n\t\tif (indexOffset !== undefined) {\n\t\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n\t\t}\n\n\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n\t\tthis.addGroup(start, count);\n\t};\n\n\tBufferGeometry.prototype.clearDrawCalls = function () {\n\t\tconsole.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n\t\tthis.clearGroups();\n\t};\n\n\tBufferGeometry.prototype.computeOffsets = function () {\n\t\tconsole.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n\t};\n\n\tBufferGeometry.prototype.removeAttribute = function (name) {\n\t\tconsole.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');\n\t\treturn this.deleteAttribute(name);\n\t};\n\n\tBufferGeometry.prototype.applyMatrix = function (matrix) {\n\t\tconsole.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');\n\t\treturn this.applyMatrix4(matrix);\n\t};\n\n\tObject.defineProperties(BufferGeometry.prototype, {\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t}\n\t});\n\n\tInterleavedBuffer.prototype.setDynamic = function (value) {\n\t\tconsole.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');\n\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n\t\treturn this;\n\t};\n\n\tInterleavedBuffer.prototype.setArray = function () {\n\t\tconsole.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n\t}; //\n\n\n\tExtrudeGeometry.prototype.getArrays = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');\n\t};\n\n\tExtrudeGeometry.prototype.addShapeList = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');\n\t};\n\n\tExtrudeGeometry.prototype.addShape = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .addShape() has been removed.');\n\t}; //\n\n\n\tScene.prototype.dispose = function () {\n\t\tconsole.error('THREE.Scene: .dispose() has been removed.');\n\t}; //\n\n\n\tUniform.prototype.onUpdate = function () {\n\t\tconsole.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\n\t\treturn this;\n\t}; //\n\n\n\tObject.defineProperties(Material.prototype, {\n\t\twrapAround: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\n\t\t\t}\n\t\t},\n\t\toverdraw: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapRGB has been removed.');\n\t\t\t\treturn new Color();\n\t\t\t}\n\t\t},\n\t\tshading: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t\tthis.flatShading = value === FlatShading;\n\t\t\t}\n\t\t},\n\t\tstencilMask: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n\t\t\t\treturn this.stencilFuncMask;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n\t\t\t\tthis.stencilFuncMask = value;\n\t\t\t}\n\t\t},\n\t\tvertexTangents: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .vertexTangents has been removed.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .vertexTangents has been removed.');\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(ShaderMaterial.prototype, {\n\t\tderivatives: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n\t\t\t\treturn this.extensions.derivatives;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n\t\t\t\tthis.extensions.derivatives = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tWebGLRenderer.prototype.clearTarget = function (renderTarget, color, depth, stencil) {\n\t\tconsole.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');\n\t\tthis.setRenderTarget(renderTarget);\n\t\tthis.clear(color, depth, stencil);\n\t};\n\n\tWebGLRenderer.prototype.animate = function (callback) {\n\t\tconsole.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');\n\t\tthis.setAnimationLoop(callback);\n\t};\n\n\tWebGLRenderer.prototype.getCurrentRenderTarget = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\n\t\treturn this.getRenderTarget();\n\t};\n\n\tWebGLRenderer.prototype.getMaxAnisotropy = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');\n\t\treturn this.capabilities.getMaxAnisotropy();\n\t};\n\n\tWebGLRenderer.prototype.getPrecision = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\n\t\treturn this.capabilities.precision;\n\t};\n\n\tWebGLRenderer.prototype.resetGLState = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');\n\t\treturn this.state.reset();\n\t};\n\n\tWebGLRenderer.prototype.supportsFloatTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n\t\treturn this.extensions.get('OES_texture_float');\n\t};\n\n\tWebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n\t\treturn this.extensions.get('OES_texture_half_float');\n\t};\n\n\tWebGLRenderer.prototype.supportsStandardDerivatives = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n\t\treturn this.extensions.get('OES_standard_derivatives');\n\t};\n\n\tWebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n\t\treturn this.extensions.get('WEBGL_compressed_texture_s3tc');\n\t};\n\n\tWebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n\t\treturn this.extensions.get('WEBGL_compressed_texture_pvrtc');\n\t};\n\n\tWebGLRenderer.prototype.supportsBlendMinMax = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n\t\treturn this.extensions.get('EXT_blend_minmax');\n\t};\n\n\tWebGLRenderer.prototype.supportsVertexTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\n\t\treturn this.capabilities.vertexTextures;\n\t};\n\n\tWebGLRenderer.prototype.supportsInstancedArrays = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n\t\treturn this.extensions.get('ANGLE_instanced_arrays');\n\t};\n\n\tWebGLRenderer.prototype.enableScissorTest = function (boolean) {\n\t\tconsole.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n\t\tthis.setScissorTest(boolean);\n\t};\n\n\tWebGLRenderer.prototype.initMaterial = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.addPrePlugin = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.addPostPlugin = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.updateShadowMap = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setFaceCulling = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.allocTextureUnit = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTexture = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTexture() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTexture2D = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTextureCube = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.getActiveMipMapLevel = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');\n\t\treturn this.getActiveMipmapLevel();\n\t};\n\n\tObject.defineProperties(WebGLRenderer.prototype, {\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.enabled;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n\t\t\t\tthis.shadowMap.enabled = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.type;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n\t\t\t\tthis.shadowMap.type = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\tcontext: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');\n\t\t\t\treturn this.getContext();\n\t\t\t}\n\t\t},\n\t\tvr: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');\n\t\t\t\treturn this.xr;\n\t\t\t}\n\t\t},\n\t\tgammaInput: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n\t\t\t}\n\t\t},\n\t\tgammaOutput: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n\t\t\t\tthis.outputEncoding = value === true ? sRGBEncoding : LinearEncoding;\n\t\t\t}\n\t\t},\n\t\ttoneMappingWhitePoint: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n\t\t\t\treturn 1.0;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(WebGLShadowMap.prototype, {\n\t\tcullFace: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\trenderReverseSided: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\trenderSingleSided: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t}\n\t});\n\tfunction WebGLRenderTargetCube(width, height, options) {\n\t\tconsole.warn('THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).');\n\t\treturn new WebGLCubeRenderTarget(width, options);\n\t} //\n\n\tObject.defineProperties(WebGLRenderTarget.prototype, {\n\t\twrapS: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n\t\t\t\treturn this.texture.wrapS;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n\t\t\t\tthis.texture.wrapS = value;\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n\t\t\t\treturn this.texture.wrapT;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n\t\t\t\tthis.texture.wrapT = value;\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n\t\t\t\treturn this.texture.magFilter;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n\t\t\t\tthis.texture.magFilter = value;\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n\t\t\t\treturn this.texture.minFilter;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n\t\t\t\tthis.texture.minFilter = value;\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n\t\t\t\treturn this.texture.anisotropy;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n\t\t\t\tthis.texture.anisotropy = value;\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n\t\t\t\treturn this.texture.offset;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n\t\t\t\tthis.texture.offset = value;\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n\t\t\t\treturn this.texture.repeat;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n\t\t\t\tthis.texture.repeat = value;\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n\t\t\t\treturn this.texture.format;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n\t\t\t\tthis.texture.format = value;\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n\t\t\t\treturn this.texture.type;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n\t\t\t\tthis.texture.type = value;\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n\t\t\t\treturn this.texture.generateMipmaps;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n\t\t\t\tthis.texture.generateMipmaps = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tAudio.prototype.load = function (file) {\n\t\tconsole.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\n\t\tconst scope = this;\n\t\tconst audioLoader = new AudioLoader();\n\t\taudioLoader.load(file, function (buffer) {\n\t\t\tscope.setBuffer(buffer);\n\t\t});\n\t\treturn this;\n\t};\n\n\tAudioAnalyser.prototype.getData = function () {\n\t\tconsole.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n\t\treturn this.getFrequencyData();\n\t}; //\n\n\n\tCubeCamera.prototype.updateCubeMap = function (renderer, scene) {\n\t\tconsole.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\n\t\treturn this.update(renderer, scene);\n\t};\n\n\tCubeCamera.prototype.clear = function (renderer, color, depth, stencil) {\n\t\tconsole.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');\n\t\treturn this.renderTarget.clear(renderer, color, depth, stencil);\n\t};\n\n\tImageUtils.crossOrigin = undefined;\n\n\tImageUtils.loadTexture = function (url, mapping, onLoad, onError) {\n\t\tconsole.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n\t\tconst loader = new TextureLoader();\n\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\tconst texture = loader.load(url, onLoad, undefined, onError);\n\t\tif (mapping) texture.mapping = mapping;\n\t\treturn texture;\n\t};\n\n\tImageUtils.loadTextureCube = function (urls, mapping, onLoad, onError) {\n\t\tconsole.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n\t\tconst loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\tconst texture = loader.load(urls, onLoad, undefined, onError);\n\t\tif (mapping) texture.mapping = mapping;\n\t\treturn texture;\n\t};\n\n\tImageUtils.loadCompressedTexture = function () {\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n\t};\n\n\tImageUtils.loadCompressedTextureCube = function () {\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n\t}; //\n\n\n\tfunction CanvasRenderer() {\n\t\tconsole.error('THREE.CanvasRenderer has been removed');\n\t} //\n\n\tfunction JSONLoader() {\n\t\tconsole.error('THREE.JSONLoader has been removed.');\n\t} //\n\n\tconst SceneUtils = {\n\t\tcreateMultiMaterialObject: function () {\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t},\n\t\tdetach: function () {\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t},\n\t\tattach: function () {\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t}\n\t}; //\n\n\tfunction LensFlare() {\n\t\tconsole.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');\n\t} //\n\n\tfunction ParametricGeometry() {\n\t\tconsole.error('THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js');\n\t\treturn new BufferGeometry();\n\t}\n\tfunction TextGeometry() {\n\t\tconsole.error('THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js');\n\t\treturn new BufferGeometry();\n\t}\n\tfunction FontLoader() {\n\t\tconsole.error('THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js');\n\t}\n\tfunction Font() {\n\t\tconsole.error('THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js');\n\t}\n\tfunction ImmediateRenderObject() {\n\t\tconsole.error('THREE.ImmediateRenderObject has been removed.');\n\t}\n\n\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t/* eslint-disable no-undef */\n\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register', {\n\t\t\tdetail: {\n\t\t\t\trevision: REVISION\n\t\t\t}\n\t\t}));\n\t\t/* eslint-enable no-undef */\n\n\t}\n\n\tif (typeof window !== 'undefined') {\n\t\tif (window.__THREE__) {\n\t\t\tconsole.warn('WARNING: Multiple instances of Three.js being imported.');\n\t\t} else {\n\t\t\twindow.__THREE__ = REVISION;\n\t\t}\n\t}\n\n\texports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n\texports.AddEquation = AddEquation;\n\texports.AddOperation = AddOperation;\n\texports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.AlphaFormat = AlphaFormat;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.AlwaysStencilFunc = AlwaysStencilFunc;\n\texports.AmbientLight = AmbientLight;\n\texports.AmbientLightProbe = AmbientLightProbe;\n\texports.AnimationClip = AnimationClip;\n\texports.AnimationLoader = AnimationLoader;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationUtils = AnimationUtils;\n\texports.ArcCurve = ArcCurve;\n\texports.ArrayCamera = ArrayCamera;\n\texports.ArrowHelper = ArrowHelper;\n\texports.Audio = Audio;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.AudioContext = AudioContext;\n\texports.AudioListener = AudioListener;\n\texports.AudioLoader = AudioLoader;\n\texports.AxesHelper = AxesHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.BackSide = BackSide;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.Bone = Bone;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.Box2 = Box2;\n\texports.Box3 = Box3;\n\texports.Box3Helper = Box3Helper;\n\texports.BoxBufferGeometry = BoxGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxHelper = BoxHelper;\n\texports.BufferAttribute = BufferAttribute;\n\texports.BufferGeometry = BufferGeometry;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.ByteType = ByteType;\n\texports.Cache = Cache;\n\texports.Camera = Camera;\n\texports.CameraHelper = CameraHelper;\n\texports.CanvasRenderer = CanvasRenderer;\n\texports.CanvasTexture = CanvasTexture;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.CircleBufferGeometry = CircleGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.Clock = Clock;\n\texports.Color = Color;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.ConeBufferGeometry = ConeGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.CubeCamera = CubeCamera;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.CubeTexture = CubeTexture;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.CullFaceNone = CullFaceNone;\n\texports.Curve = Curve;\n\texports.CurvePath = CurvePath;\n\texports.CustomBlending = CustomBlending;\n\texports.CustomToneMapping = CustomToneMapping;\n\texports.CylinderBufferGeometry = CylinderGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.Cylindrical = Cylindrical;\n\texports.DataTexture = DataTexture;\n\texports.DataTexture2DArray = DataTexture2DArray;\n\texports.DataTexture3D = DataTexture3D;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.DataUtils = DataUtils;\n\texports.DecrementStencilOp = DecrementStencilOp;\n\texports.DecrementWrapStencilOp = DecrementWrapStencilOp;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.DepthTexture = DepthTexture;\n\texports.DirectionalLight = DirectionalLight;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.DodecahedronBufferGeometry = DodecahedronGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DoubleSide = DoubleSide;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.DynamicCopyUsage = DynamicCopyUsage;\n\texports.DynamicDrawUsage = DynamicDrawUsage;\n\texports.DynamicReadUsage = DynamicReadUsage;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.EdgesHelper = EdgesHelper;\n\texports.EllipseCurve = EllipseCurve;\n\texports.EqualDepth = EqualDepth;\n\texports.EqualStencilFunc = EqualStencilFunc;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.Euler = Euler;\n\texports.EventDispatcher = EventDispatcher;\n\texports.ExtrudeBufferGeometry = ExtrudeGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.FaceColors = FaceColors;\n\texports.FileLoader = FileLoader;\n\texports.FlatShading = FlatShading;\n\texports.Float16BufferAttribute = Float16BufferAttribute;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.FloatType = FloatType;\n\texports.Fog = Fog;\n\texports.FogExp2 = FogExp2;\n\texports.Font = Font;\n\texports.FontLoader = FontLoader;\n\texports.FrontSide = FrontSide;\n\texports.Frustum = Frustum;\n\texports.GLBufferAttribute = GLBufferAttribute;\n\texports.GLSL1 = GLSL1;\n\texports.GLSL3 = GLSL3;\n\texports.GammaEncoding = GammaEncoding;\n\texports.GreaterDepth = GreaterDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\n\texports.GreaterStencilFunc = GreaterStencilFunc;\n\texports.GridHelper = GridHelper;\n\texports.Group = Group;\n\texports.HalfFloatType = HalfFloatType;\n\texports.HemisphereLight = HemisphereLight;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.HemisphereLightProbe = HemisphereLightProbe;\n\texports.IcosahedronBufferGeometry = IcosahedronGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.ImageBitmapLoader = ImageBitmapLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.ImageUtils = ImageUtils;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.IncrementStencilOp = IncrementStencilOp;\n\texports.IncrementWrapStencilOp = IncrementWrapStencilOp;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InstancedMesh = InstancedMesh;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.IntType = IntType;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.Interpolant = Interpolant;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.InvertStencilOp = InvertStencilOp;\n\texports.JSONLoader = JSONLoader;\n\texports.KeepStencilOp = KeepStencilOp;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.LOD = LOD;\n\texports.LatheBufferGeometry = LatheGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.Layers = Layers;\n\texports.LensFlare = LensFlare;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.LessEqualStencilFunc = LessEqualStencilFunc;\n\texports.LessStencilFunc = LessStencilFunc;\n\texports.Light = Light;\n\texports.LightProbe = LightProbe;\n\texports.Line = Line;\n\texports.Line3 = Line3;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.LineCurve = LineCurve;\n\texports.LineCurve3 = LineCurve3;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineLoop = LineLoop;\n\texports.LinePieces = LinePieces;\n\texports.LineSegments = LineSegments;\n\texports.LineStrip = LineStrip;\n\texports.LinearEncoding = LinearEncoding;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\n\texports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.Loader = Loader;\n\texports.LoaderUtils = LoaderUtils;\n\texports.LoadingManager = LoadingManager;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopPingPong = LoopPingPong;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.MOUSE = MOUSE;\n\texports.Material = Material;\n\texports.MaterialLoader = MaterialLoader;\n\texports.Math = MathUtils;\n\texports.MathUtils = MathUtils;\n\texports.Matrix3 = Matrix3;\n\texports.Matrix4 = Matrix4;\n\texports.MaxEquation = MaxEquation;\n\texports.Mesh = Mesh;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MinEquation = MinEquation;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.MixOperation = MixOperation;\n\texports.MultiMaterial = MultiMaterial;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\n\texports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\n\texports.NeverDepth = NeverDepth;\n\texports.NeverStencilFunc = NeverStencilFunc;\n\texports.NoBlending = NoBlending;\n\texports.NoColors = NoColors;\n\texports.NoToneMapping = NoToneMapping;\n\texports.NormalAnimationBlendMode = NormalAnimationBlendMode;\n\texports.NormalBlending = NormalBlending;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.NotEqualStencilFunc = NotEqualStencilFunc;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.Object3D = Object3D;\n\texports.ObjectLoader = ObjectLoader;\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n\texports.OctahedronBufferGeometry = OctahedronGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OneFactor = OneFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.PMREMGenerator = PMREMGenerator;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.Particle = Particle;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystem = ParticleSystem;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Path = Path;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.Plane = Plane;\n\texports.PlaneBufferGeometry = PlaneGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneHelper = PlaneHelper;\n\texports.PointCloud = PointCloud;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.PointLight = PointLight;\n\texports.PointLightHelper = PointLightHelper;\n\texports.Points = Points;\n\texports.PointsMaterial = PointsMaterial;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.PolyhedronBufferGeometry = PolyhedronGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PositionalAudio = PositionalAudio;\n\texports.PropertyBinding = PropertyBinding;\n\texports.PropertyMixer = PropertyMixer;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.Quaternion = Quaternion;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.REVISION = REVISION;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.RGBAFormat = RGBAFormat;\n\texports.RGBAIntegerFormat = RGBAIntegerFormat;\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n\texports.RGBA_BPTC_Format = RGBA_BPTC_Format;\n\texports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.RGBEFormat = RGBEFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBIntegerFormat = RGBIntegerFormat;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.RGB_ETC2_Format = RGB_ETC2_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGFormat = RGFormat;\n\texports.RGIntegerFormat = RGIntegerFormat;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.Ray = Ray;\n\texports.Raycaster = Raycaster;\n\texports.RectAreaLight = RectAreaLight;\n\texports.RedFormat = RedFormat;\n\texports.RedIntegerFormat = RedIntegerFormat;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ReplaceStencilOp = ReplaceStencilOp;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.RingBufferGeometry = RingGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.SRGB8_ALPHA8_ASTC_10x10_Format = SRGB8_ALPHA8_ASTC_10x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x5_Format = SRGB8_ALPHA8_ASTC_10x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x6_Format = SRGB8_ALPHA8_ASTC_10x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x8_Format = SRGB8_ALPHA8_ASTC_10x8_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x10_Format = SRGB8_ALPHA8_ASTC_12x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x12_Format = SRGB8_ALPHA8_ASTC_12x12_Format;\n\texports.SRGB8_ALPHA8_ASTC_4x4_Format = SRGB8_ALPHA8_ASTC_4x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x4_Format = SRGB8_ALPHA8_ASTC_5x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x5_Format = SRGB8_ALPHA8_ASTC_5x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x5_Format = SRGB8_ALPHA8_ASTC_6x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x6_Format = SRGB8_ALPHA8_ASTC_6x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x5_Format = SRGB8_ALPHA8_ASTC_8x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x6_Format = SRGB8_ALPHA8_ASTC_8x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x8_Format = SRGB8_ALPHA8_ASTC_8x8_Format;\n\texports.Scene = Scene;\n\texports.SceneUtils = SceneUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.ShaderLib = ShaderLib;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.Shape = Shape;\n\texports.ShapeBufferGeometry = ShapeGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapePath = ShapePath;\n\texports.ShapeUtils = ShapeUtils;\n\texports.ShortType = ShortType;\n\texports.Skeleton = Skeleton;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.SmoothShading = SmoothShading;\n\texports.Sphere = Sphere;\n\texports.SphereBufferGeometry = SphereGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.Spherical = Spherical;\n\texports.SphericalHarmonics3 = SphericalHarmonics3;\n\texports.SplineCurve = SplineCurve;\n\texports.SpotLight = SpotLight;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.Sprite = Sprite;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.StaticCopyUsage = StaticCopyUsage;\n\texports.StaticDrawUsage = StaticDrawUsage;\n\texports.StaticReadUsage = StaticReadUsage;\n\texports.StereoCamera = StereoCamera;\n\texports.StreamCopyUsage = StreamCopyUsage;\n\texports.StreamDrawUsage = StreamDrawUsage;\n\texports.StreamReadUsage = StreamReadUsage;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.SubtractEquation = SubtractEquation;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.TOUCH = TOUCH;\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n\texports.TetrahedronBufferGeometry = TetrahedronGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.Texture = Texture;\n\texports.TextureLoader = TextureLoader;\n\texports.TorusBufferGeometry = TorusGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.Triangle = Triangle;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TubeBufferGeometry = TubeGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.UVMapping = UVMapping;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uniform = Uniform;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.VSMShadowMap = VSMShadowMap;\n\texports.Vector2 = Vector2;\n\texports.Vector3 = Vector3;\n\texports.Vector4 = Vector4;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.Vertex = Vertex;\n\texports.VertexColors = VertexColors;\n\texports.VideoTexture = VideoTexture;\n\texports.WebGL1Renderer = WebGL1Renderer;\n\texports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\n\texports.WebGLMultipleRenderTargets = WebGLMultipleRenderTargets;\n\texports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.WireframeHelper = WireframeHelper;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.XHRLoader = XHRLoader;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroFactor = ZeroFactor;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.ZeroStencilOp = ZeroStencilOp;\n\texports.sRGBEncoding = sRGBEncoding;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "import {\n\tDataTextureLoader,\n\tDataUtils,\n\tFloatType,\n\tHalfFloatType,\n\tLinearEncoding,\n\tLinearFilter,\n\tNearestFilter,\n\tRGBEEncoding,\n\tRGBEFormat,\n\tRGBFormat,\n\tUnsignedByteType\n} from '../../../build/three.js';\n\n// https://github.com/mrdoob/three.js/issues/5552\n// http://en.wikipedia.org/wiki/RGBE_image_format\n\nclass RGBELoader extends DataTextureLoader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.type = HalfFloatType;\n\n\t}\n\n\t// adapted from http://www.graphics.cornell.edu/~bjw/rgbe.html\n\n\tparse( buffer ) {\n\n\t\tconst\n\t\t\t/* return codes for rgbe routines */\n\t\t\t//RGBE_RETURN_SUCCESS = 0,\n\t\t\tRGBE_RETURN_FAILURE = - 1,\n\n\t\t\t/* default error routine.  change this to change error handling */\n\t\t\trgbe_read_error = 1,\n\t\t\trgbe_write_error = 2,\n\t\t\trgbe_format_error = 3,\n\t\t\trgbe_memory_error = 4,\n\t\t\trgbe_error = function ( rgbe_error_code, msg ) {\n\n\t\t\t\tswitch ( rgbe_error_code ) {\n\n\t\t\t\t\tcase rgbe_read_error: console.error( 'THREE.RGBELoader Read Error: ' + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase rgbe_write_error: console.error( 'THREE.RGBELoader Write Error: ' + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase rgbe_format_error: console.error( 'THREE.RGBELoader Bad File Format: ' + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\tcase rgbe_memory_error: console.error( 'THREE.RGBELoader: Error: ' + ( msg || '' ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn RGBE_RETURN_FAILURE;\n\n\t\t\t},\n\n\t\t\t/* offsets to red, green, and blue components in a data (float) pixel */\n\t\t\t//RGBE_DATA_RED = 0,\n\t\t\t//RGBE_DATA_GREEN = 1,\n\t\t\t//RGBE_DATA_BLUE = 2,\n\n\t\t\t/* number of floats per pixel, use 4 since stored in rgba image format */\n\t\t\t//RGBE_DATA_SIZE = 4,\n\n\t\t\t/* flags indicating which fields in an rgbe_header_info are valid */\n\t\t\tRGBE_VALID_PROGRAMTYPE = 1,\n\t\t\tRGBE_VALID_FORMAT = 2,\n\t\t\tRGBE_VALID_DIMENSIONS = 4,\n\n\t\t\tNEWLINE = '\\n',\n\n\t\t\tfgets = function ( buffer, lineLimit, consume ) {\n\n\t\t\t\tconst chunkSize = 128;\n\n\t\t\t\tlineLimit = ! lineLimit ? 1024 : lineLimit;\n\t\t\t\tlet p = buffer.pos,\n\t\t\t\t\ti = - 1, len = 0, s = '',\n\t\t\t\t\tchunk = String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\twhile ( ( 0 > ( i = chunk.indexOf( NEWLINE ) ) ) && ( len < lineLimit ) && ( p < buffer.byteLength ) ) {\n\n\t\t\t\t\ts += chunk; len += chunk.length;\n\t\t\t\t\tp += chunkSize;\n\t\t\t\t\tchunk += String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( - 1 < i ) {\n\n\t\t\t\t\t/*for (i=l-1; i>=0; i--) {\n\t\t\t\t\t\tbyteCode = m.charCodeAt(i);\n\t\t\t\t\t\tif (byteCode > 0x7f && byteCode <= 0x7ff) byteLen++;\n\t\t\t\t\t\telse if (byteCode > 0x7ff && byteCode <= 0xffff) byteLen += 2;\n\t\t\t\t\t\tif (byteCode >= 0xDC00 && byteCode <= 0xDFFF) i--; //trail surrogate\n\t\t\t\t\t}*/\n\t\t\t\t\tif ( false !== consume ) buffer.pos += len + i + 1;\n\t\t\t\t\treturn s + chunk.slice( 0, i );\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\t/* minimal header reading.  modify if you want to parse more information */\n\t\t\tRGBE_ReadHeader = function ( buffer ) {\n\n\n\t\t\t\t// regexes to parse header info fields\n\t\t\t\tconst magic_token_re = /^#\\?(\\S+)/,\n\t\t\t\t\tgamma_re = /^\\s*GAMMA\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\texposure_re = /^\\s*EXPOSURE\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\tformat_re = /^\\s*FORMAT=(\\S+)\\s*$/,\n\t\t\t\t\tdimensions_re = /^\\s*\\-Y\\s+(\\d+)\\s+\\+X\\s+(\\d+)\\s*$/,\n\n\t\t\t\t\t// RGBE format header struct\n\t\t\t\t\theader = {\n\n\t\t\t\t\t\tvalid: 0, /* indicate which fields are valid */\n\n\t\t\t\t\t\tstring: '', /* the actual header string */\n\n\t\t\t\t\t\tcomments: '', /* comments found in header */\n\n\t\t\t\t\t\tprogramtype: 'RGBE', /* listed at beginning of file to identify it after \"#?\". defaults to \"RGBE\" */\n\n\t\t\t\t\t\tformat: '', /* RGBE format, default 32-bit_rle_rgbe */\n\n\t\t\t\t\t\tgamma: 1.0, /* image has already been gamma corrected with given gamma. defaults to 1.0 (no correction) */\n\n\t\t\t\t\t\texposure: 1.0, /* a value of 1.0 in an image corresponds to <exposure> watts/steradian/m^2. defaults to 1.0 */\n\n\t\t\t\t\t\twidth: 0, height: 0 /* image dimensions, width/height */\n\n\t\t\t\t\t};\n\n\t\t\t\tlet line, match;\n\n\t\t\t\tif ( buffer.pos >= buffer.byteLength || ! ( line = fgets( buffer ) ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_read_error, 'no header found' );\n\n\t\t\t\t}\n\n\t\t\t\t/* if you want to require the magic token then uncomment the next line */\n\t\t\t\tif ( ! ( match = line.match( magic_token_re ) ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'bad initial token' );\n\n\t\t\t\t}\n\n\t\t\t\theader.valid |= RGBE_VALID_PROGRAMTYPE;\n\t\t\t\theader.programtype = match[ 1 ];\n\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\twhile ( true ) {\n\n\t\t\t\t\tline = fgets( buffer );\n\t\t\t\t\tif ( false === line ) break;\n\t\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\t\tif ( '#' === line.charAt( 0 ) ) {\n\n\t\t\t\t\t\theader.comments += line + '\\n';\n\t\t\t\t\t\tcontinue; // comment line\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( gamma_re ) ) {\n\n\t\t\t\t\t\theader.gamma = parseFloat( match[ 1 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( exposure_re ) ) {\n\n\t\t\t\t\t\theader.exposure = parseFloat( match[ 1 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( format_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_FORMAT;\n\t\t\t\t\t\theader.format = match[ 1 ];//'32-bit_rle_rgbe';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( dimensions_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_DIMENSIONS;\n\t\t\t\t\t\theader.height = parseInt( match[ 1 ], 10 );\n\t\t\t\t\t\theader.width = parseInt( match[ 2 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( header.valid & RGBE_VALID_FORMAT ) && ( header.valid & RGBE_VALID_DIMENSIONS ) ) break;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_FORMAT ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'missing format specifier' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_DIMENSIONS ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'missing image size specifier' );\n\n\t\t\t\t}\n\n\t\t\t\treturn header;\n\n\t\t\t},\n\n\t\t\tRGBE_ReadPixels_RLE = function ( buffer, w, h ) {\n\n\t\t\t\tconst scanline_width = w;\n\n\t\t\t\tif (\n\t\t\t\t\t// run length encoding is not allowed so read flat\n\t\t\t\t\t( ( scanline_width < 8 ) || ( scanline_width > 0x7fff ) ) ||\n\t\t\t\t\t// this file is not run length encoded\n\t\t\t\t\t( ( 2 !== buffer[ 0 ] ) || ( 2 !== buffer[ 1 ] ) || ( buffer[ 2 ] & 0x80 ) )\n\t\t\t\t) {\n\n\t\t\t\t\t// return the flat buffer\n\t\t\t\t\treturn new Uint8Array( buffer );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scanline_width !== ( ( buffer[ 2 ] << 8 ) | buffer[ 3 ] ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'wrong scanline width' );\n\n\t\t\t\t}\n\n\t\t\t\tconst data_rgba = new Uint8Array( 4 * w * h );\n\n\t\t\t\tif ( ! data_rgba.length ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_memory_error, 'unable to allocate buffer space' );\n\n\t\t\t\t}\n\n\t\t\t\tlet offset = 0, pos = 0;\n\n\t\t\t\tconst ptr_end = 4 * scanline_width;\n\t\t\t\tconst rgbeStart = new Uint8Array( 4 );\n\t\t\t\tconst scanline_buffer = new Uint8Array( ptr_end );\n\t\t\t\tlet num_scanlines = h;\n\n\t\t\t\t// read in each successive scanline\n\t\t\t\twhile ( ( num_scanlines > 0 ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\tif ( pos + 4 > buffer.byteLength ) {\n\n\t\t\t\t\t\treturn rgbe_error( rgbe_read_error );\n\n\t\t\t\t\t}\n\n\t\t\t\t\trgbeStart[ 0 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 1 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 2 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 3 ] = buffer[ pos ++ ];\n\n\t\t\t\t\tif ( ( 2 != rgbeStart[ 0 ] ) || ( 2 != rgbeStart[ 1 ] ) || ( ( ( rgbeStart[ 2 ] << 8 ) | rgbeStart[ 3 ] ) != scanline_width ) ) {\n\n\t\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'bad rgbe scanline format' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// read each of the four channels for the scanline into the buffer\n\t\t\t\t\t// first red, then green, then blue, then exponent\n\t\t\t\t\tlet ptr = 0, count;\n\n\t\t\t\t\twhile ( ( ptr < ptr_end ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\t\tcount = buffer[ pos ++ ];\n\t\t\t\t\t\tconst isEncodedRun = count > 128;\n\t\t\t\t\t\tif ( isEncodedRun ) count -= 128;\n\n\t\t\t\t\t\tif ( ( 0 === count ) || ( ptr + count > ptr_end ) ) {\n\n\t\t\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'bad scanline data' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isEncodedRun ) {\n\n\t\t\t\t\t\t\t// a (encoded) run of the same value\n\t\t\t\t\t\t\tconst byteValue = buffer[ pos ++ ];\n\t\t\t\t\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\tscanline_buffer[ ptr ++ ] = byteValue;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//ptr += count;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// a literal-run\n\t\t\t\t\t\t\tscanline_buffer.set( buffer.subarray( pos, pos + count ), ptr );\n\t\t\t\t\t\t\tptr += count; pos += count;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// now convert data from buffer into rgba\n\t\t\t\t\t// first red, then green, then blue, then exponent (alpha)\n\t\t\t\t\tconst l = scanline_width; //scanline_buffer.byteLength;\n\t\t\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\t\t\tlet off = 0;\n\t\t\t\t\t\tdata_rgba[ offset ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 1 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 2 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 3 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnum_scanlines --;\n\n\t\t\t\t}\n\n\t\t\t\treturn data_rgba;\n\n\t\t\t};\n\n\t\tconst RGBEByteToRGBFloat = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tconst e = sourceArray[ sourceOffset + 3 ];\n\t\t\tconst scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = sourceArray[ sourceOffset + 0 ] * scale;\n\t\t\tdestArray[ destOffset + 1 ] = sourceArray[ sourceOffset + 1 ] * scale;\n\t\t\tdestArray[ destOffset + 2 ] = sourceArray[ sourceOffset + 2 ] * scale;\n\n\t\t};\n\n\t\tconst RGBEByteToRGBHalf = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tconst e = sourceArray[ sourceOffset + 3 ];\n\t\t\tconst scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\t// clamping to 65504, the maximum representable value in float16\n\t\t\tdestArray[ destOffset + 0 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 0 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 1 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 1 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 2 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 2 ] * scale, 65504 ) );\n\n\t\t};\n\n\t\tconst byteArray = new Uint8Array( buffer );\n\t\tbyteArray.pos = 0;\n\t\tconst rgbe_header_info = RGBE_ReadHeader( byteArray );\n\n\t\tif ( RGBE_RETURN_FAILURE !== rgbe_header_info ) {\n\n\t\t\tconst w = rgbe_header_info.width,\n\t\t\t\th = rgbe_header_info.height,\n\t\t\t\timage_rgba_data = RGBE_ReadPixels_RLE( byteArray.subarray( byteArray.pos ), w, h );\n\n\t\t\tif ( RGBE_RETURN_FAILURE !== image_rgba_data ) {\n\n\t\t\t\tlet data, format, type;\n\t\t\t\tlet numElements;\n\n\t\t\t\tswitch ( this.type ) {\n\n\t\t\t\t\tcase UnsignedByteType:\n\n\t\t\t\t\t\tdata = image_rgba_data;\n\t\t\t\t\t\tformat = RGBEFormat; // handled as THREE.RGBAFormat in shaders\n\t\t\t\t\t\ttype = UnsignedByteType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase FloatType:\n\n\t\t\t\t\t\tnumElements = image_rgba_data.length / 4;\n\t\t\t\t\t\tconst floatArray = new Float32Array( numElements * 3 );\n\n\t\t\t\t\t\tfor ( let j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\t\t\tRGBEByteToRGBFloat( image_rgba_data, j * 4, floatArray, j * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata = floatArray;\n\t\t\t\t\t\tformat = RGBFormat;\n\t\t\t\t\t\ttype = FloatType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\t\tnumElements = image_rgba_data.length / 4;\n\t\t\t\t\t\tconst halfArray = new Uint16Array( numElements * 3 );\n\n\t\t\t\t\t\tfor ( let j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\t\t\tRGBEByteToRGBHalf( image_rgba_data, j * 4, halfArray, j * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata = halfArray;\n\t\t\t\t\t\tformat = RGBFormat;\n\t\t\t\t\t\ttype = HalfFloatType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.error( 'THREE.RGBELoader: unsupported type: ', this.type );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\twidth: w, height: h,\n\t\t\t\t\tdata: data,\n\t\t\t\t\theader: rgbe_header_info.string,\n\t\t\t\t\tgamma: rgbe_header_info.gamma,\n\t\t\t\t\texposure: rgbe_header_info.exposure,\n\t\t\t\t\tformat: format,\n\t\t\t\t\ttype: type\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tsetDataType( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tfunction onLoadCallback( texture, texData ) {\n\n\t\t\tswitch ( texture.type ) {\n\n\t\t\t\tcase UnsignedByteType:\n\n\t\t\t\t\ttexture.encoding = RGBEEncoding;\n\t\t\t\t\ttexture.minFilter = NearestFilter;\n\t\t\t\t\ttexture.magFilter = NearestFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase FloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}\n\n\t\treturn super.load( url, onLoadCallback, onProgress, onError );\n\n\t}\n\n}\n\nexport { RGBELoader };\n", "(function ($global) { \"use strict\";\nclass EnvironmentManager {\n\tconstructor(renderer,scene) {\n\t\tthis.environmentPath = null;\n\t\tthis.renderer = renderer;\n\t\tthis.scene = scene;\n\t\tthis.environmentSun = new three_DirectionalLight(16777215,0);\n\t\tthis.environmentSun.castShadow = true;\n\t\tthis.environmentSun.shadow.bias = -0.001;\n\t\tthis.environmentSun.shadow.radius = 7;\n\t\tthis.environmentSun.layers.enable(1);\n\t\tscene.add(this.environmentSun);\n\t\tthis.environmentAmbient = new three_AmbientLight(0,1);\n\t\tscene.add(this.environmentAmbient);\n\t}\n\tsetEnvironmentMapPath(path,onLoaded,onError) {\n\t\tif(path == this.environmentPath) {\n\t\t\treturn;\n\t\t}\n\t\tif(onLoaded == null) {\n\t\t\tonLoaded = function(e) {\n\t\t\t};\n\t\t}\n\t\tif(onError == null) {\n\t\t\tonError = function(e) {\n\t\t\t};\n\t\t}\n\t\tthis.environmentPath = path;\n\t\tlet _gthis = this;\n\t\tif(path != null) {\n\t\t\tlet ext = haxe_io_Path.extension(path);\n\t\t\tswitch(ext.toLowerCase()) {\n\t\t\tcase \"hdr\":\n\t\t\t\tlet iblGenerator = new tool_IBLGenerator(this.renderer);\n\t\t\t\tiblGenerator.compileEquirectangularShader();\n\t\t\t\tnew three_examples_jsm_loaders_rgbeloader_RGBELoader().setDataType(three_TextureDataType.FloatType).load(path,function(texture,texData) {\n\t\t\t\t\tif(_gthis._pmremRenderTarget != null) {\n\t\t\t\t\t\t_gthis._pmremRenderTarget.dispose();\n\t\t\t\t\t}\n\t\t\t\t\t_gthis._pmremRenderTarget = iblGenerator.fromEquirectangular(texture);\n\t\t\t\t\tiblGenerator.dispose();\n\t\t\t\t\t_gthis._pmremRenderTarget.texture.sourceFile = path;\n\t\t\t\t\t_gthis.setEnvironmentMap(_gthis._pmremRenderTarget.texture);\n\t\t\t\t\tonLoaded(_gthis._pmremRenderTarget.texture);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"png\":\n\t\t\t\tnew three_TextureLoader().load(path,function(texture) {\n\t\t\t\t\ttexture.minFilter = three_TextureFilter.NearestFilter;\n\t\t\t\t\ttexture.magFilter = three_TextureFilter.NearestFilter;\n\t\t\t\t\ttexture.type = three_TextureDataType.UnsignedByteType;\n\t\t\t\t\ttexture.format = three_PixelFormat.RGBEFormat;\n\t\t\t\t\ttexture.encoding = three_TextureEncoding.RGBDEncoding;\n\t\t\t\t\ttexture.mapping = three_Mapping.CubeUVReflectionMapping;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = false;\n\t\t\t\t\ttexture.sourceFile = path;\n\t\t\t\t\t_gthis.setEnvironmentMap(texture);\n\t\t\t\t\tonLoaded(texture);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlet error = \"Unknown environment extension \" + ext;\n\t\t\t\t$global.console.error(error);\n\t\t\t\tonError(error);\n\t\t\t}\n\t\t}\n\t}\n\tsetEnvironmentMap(texture) {\n\t\tif(this.scene.environment != null) {\n\t\t\tthis.scene.environment.dispose();\n\t\t}\n\t\tthis.scene.environment = texture;\n\t\tthis.applyAdditionalLighting(texture.sourceFile);\n\t}\n\tapplyAdditionalLighting(sourceFile) {\n\t\tlet mapName;\n\t\tif(sourceFile != null) {\n\t\t\tlet filename = haxe_io_Path.withoutDirectory(sourceFile);\n\t\t\tmapName = HxOverrides.substr(filename,0,filename.indexOf(\".\")).toLowerCase();\n\t\t} else {\n\t\t\tmapName = null;\n\t\t}\n\t\tlet additionalLighting;\n\t\tif(mapName == null) {\n\t\t\tadditionalLighting = { sunPosition : new three_Vector3(), sunColor : 16777215, sunIntensity : 0, sunShadowRadius : 0, ambient : 0, exposure : 1};\n\t\t} else {\n\t\t\tswitch(mapName) {\n\t\t\tcase \"birchwood_2k\":\n\t\t\t\tadditionalLighting = { sunPosition : new three_Vector3(0.83,0.21,0.50).normalize(), sunColor : 16768200, sunIntensity : 4., sunShadowRadius : 15, ambient : 0, exposure : 0.7};\n\t\t\t\tbreak;\n\t\t\tcase \"blouberg_sunrise_1_2k\":\n\t\t\t\tadditionalLighting = { sunPosition : new three_Vector3(-59,43,-26).normalize(), sunColor : 16759601, sunIntensity : 2, sunShadowRadius : 12, ambient : 0, exposure : 1.0};\n\t\t\t\tbreak;\n\t\t\tcase \"kiara_1_dawn_2k\":\n\t\t\t\tadditionalLighting = { sunPosition : new three_Vector3(0.64,0.35,0.5).normalize(), sunColor : 16740919, sunIntensity : 1.0, sunShadowRadius : 5, ambient : 0, exposure : 0.9};\n\t\t\t\tbreak;\n\t\t\tcase \"night_bridge_2k\":\n\t\t\t\tadditionalLighting = { sunPosition : new three_Vector3(0.7,0.21,0.579).normalize(), sunColor : 16777215, sunIntensity : 1.8, sunShadowRadius : 13, ambient : 0, exposure : 0.7};\n\t\t\t\tbreak;\n\t\t\tcase \"snowy_forest_path_01_1k\":\n\t\t\t\tadditionalLighting = { sunPosition : new three_Vector3(1.37,0.45,0.84).normalize(), sunColor : 16777215, sunIntensity : 1.0, sunShadowRadius : 3, ambient : 0, exposure : 1.0};\n\t\t\t\tbreak;\n\t\t\tcase \"snowy_park_01_1k\":\n\t\t\t\tadditionalLighting = { sunPosition : new three_Vector3(0.31,0.48,0.902).normalize(), sunColor : 16777215, sunIntensity : 0.8, sunShadowRadius : 6, ambient : 0, exposure : 1.2};\n\t\t\t\tbreak;\n\t\t\tcase \"the_sky_is_on_fire_2k\":\n\t\t\t\tadditionalLighting = { sunPosition : new three_Vector3(1.71,0.08,2.41).normalize(), sunColor : 16742209, sunIntensity : 1, sunShadowRadius : 12, ambient : 0, exposure : 1.0};\n\t\t\t\tbreak;\n\t\t\tcase \"venice_sunset_2k\":\n\t\t\t\tadditionalLighting = { sunPosition : new three_Vector3(1.2,0.25,0.88).normalize(), sunColor : 16759601, sunIntensity : 2, sunShadowRadius : 12, ambient : 58, exposure : 0.7};\n\t\t\t\tbreak;\n\t\t\tcase \"winter_evening_2k\":\n\t\t\t\tadditionalLighting = { sunPosition : new three_Vector3(0.66,0.4,-0.03).normalize(), sunColor : 16777215, sunIntensity : 1.0, sunShadowRadius : 7, ambient : 0, exposure : 1.0};\n\t\t\t\tbreak;\n\t\t\tcase \"winter_lake_01_1k\":\n\t\t\t\tadditionalLighting = { sunPosition : new three_Vector3(1.17,0.55,0.88).normalize(), sunColor : 16773753, sunIntensity : 1., sunShadowRadius : 10, ambient : 33, exposure : 0.9};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tadditionalLighting = { sunPosition : new three_Vector3(), sunColor : 16777215, sunIntensity : 0, sunShadowRadius : 0, ambient : 0, exposure : 1};\n\t\t\t}\n\t\t}\n\t\tthis.environmentSun.color.set(additionalLighting.sunColor);\n\t\tthis.environmentSun.intensity = additionalLighting.sunIntensity;\n\t\tthis.environmentSun.position.copy(additionalLighting.sunPosition);\n\t\tthis.environmentSun.shadow.radius = additionalLighting.sunShadowRadius;\n\t\tthis.environmentSun.visible = true;\n\t\tthis.environmentAmbient.color.set(additionalLighting.ambient);\n\t}\n}\nvar dat_$gui_GUI = require(\"dat.gui\").GUI;\nfunction GUI_init() {\n\tGUI_gui.domElement.style.userSelect = \"none\";\n\tGUI_gui.domElement.parentElement.style.zIndex = \"1000\";\n\tlet renderer = Main_renderer;\n\tlet o = { };\n\tObject.defineProperty(o,\"f\",{ set : function(x) {\n\t\tMain_overrideTransmissionFramebuffer = x;\n\t}, get : function() {\n\t\treturn Main_overrideTransmissionFramebuffer;\n\t}});\n\tGUI_gui.add(o,\"f\",0,1).name(\"overrideTransmissionFramebuffer\").onChange(function(v) {\n\t\tMain_overrideTransmissionFramebuffer = v;\n\t}).listen().name(\"Fix Transmission\");\n\tlet g = GUI_gui.addFolder(\"Rendering\");\n\tlet o1 = { };\n\tObject.defineProperty(o1,\"f\",{ set : function(x) {\n\t\tMain_pixelRatio = x;\n\t}, get : function() {\n\t\treturn Main_pixelRatio;\n\t}});\n\tg.add(o1,\"f\",0.1,4).name(\"pixelRatio\").onChange(function(v) {\n\t\tMain_pixelRatio = v;\n\t}).listen().name(\"resolution\");\n\tlet o2 = { };\n\tObject.defineProperty(o2,\"f\",{ set : function(x) {\n\t\tMain_camera.fov = x;\n\t}, get : function() {\n\t\treturn Main_camera.fov;\n\t}});\n\tg.add(o2,\"f\",1,200).name(\"fov\").onChange(function(v) {\n\t\tMain_camera.fov = v;\n\t\tlet cb = function(v) {\n\t\t\tMain_camera.updateProjectionMatrix();\n\t\t};\n\t\tif(cb != null) {\n\t\t\tcb(v);\n\t\t}\n\t}).listen();\n\tg.add({ toneMapping : renderer.toneMapping},\"toneMapping\",{ \"NoToneMapping\" : three_ToneMapping.NoToneMapping, \"LinearToneMapping\" : three_ToneMapping.LinearToneMapping, \"ReinhardToneMapping\" : three_ToneMapping.ReinhardToneMapping, \"CineonToneMapping\" : three_ToneMapping.CineonToneMapping, \"ACESFilmicToneMapping\" : three_ToneMapping.ACESFilmicToneMapping}).onChange(function(v) {\n\t\trenderer.toneMapping = Std.parseInt(v);\n\t\treturn renderer.outputEncoding = renderer.outputEncoding;\n\t});\n\tg.add({ outputEncoding : renderer.outputEncoding},\"outputEncoding\",{ \"LinearEncoding\" : three_TextureEncoding.LinearEncoding, \"sRGBEncoding\" : three_TextureEncoding.sRGBEncoding, \"GammaEncoding\" : three_TextureEncoding.GammaEncoding}).onChange(function(v) {\n\t\treturn renderer.outputEncoding = Std.parseInt(v);\n\t});\n\tlet o3 = { };\n\tObject.defineProperty(o3,\"f\",{ set : function(x) {\n\t\trenderer.toneMappingExposure = x;\n\t}, get : function() {\n\t\treturn renderer.toneMappingExposure;\n\t}});\n\tg.add(o3,\"f\",0,10).name(\"toneMappingExposure\").onChange(function(v) {\n\t\trenderer.toneMappingExposure = v;\n\t}).listen();\n\tg.add({ p : Main_environmentManager.environmentPath},\"p\",[\"assets/env/winter_lake_01_1k.rgbd.png\",\"assets/env/venice_sunset_2k.rgbd.png\",\"assets/env/the_sky_is_on_fire_2k.rgbd.png\",\"assets/env/snowy_park_01_1k.rgbd.png\",\"assets/env/snowy_forest_path_01_1k.rgbd.png\",\"assets/env/night_bridge_2k.rgbd.png\",\"assets/env/kiara_1_dawn_2k.rgbd.png\",\"assets/env/blouberg_sunrise_1_2k.rgbd.png\",\"assets/env/birchwood_2k.rgbd.png\"]).onChange(function(p) {\n\t\tMain_environmentManager.setEnvironmentMapPath(p,function(e) {\n\t\t\tGUI_gui.updateDisplay();\n\t\t});\n\t}).name(\"Environment\");\n\tlet o4 = { };\n\tObject.defineProperty(o4,\"f\",{ set : function(x) {\n\t\tMain_background.environmentMaterial.uRoughness.value = x;\n\t}, get : function() {\n\t\treturn Main_background.environmentMaterial.uRoughness.value;\n\t}});\n\tg.add(o4,\"f\",0,1).name(\"roughness\").onChange(function(v) {\n\t\tMain_background.environmentMaterial.uRoughness.value = v;\n\t}).listen();\n\tlet o5 = { };\n\tObject.defineProperty(o5,\"f\",{ set : function(x) {\n\t\tMain_bloomEnabled = x;\n\t}, get : function() {\n\t\treturn Main_bloomEnabled;\n\t}});\n\tg.add(o5,\"f\",0,1).name(\"bloomEnabled\").onChange(function(v) {\n\t\tMain_bloomEnabled = v;\n\t}).listen();\n\tlet o6 = { };\n\tObject.defineProperty(o6,\"f\",{ set : function(x) {\n\t\tMain_bloomAlpha = x;\n\t}, get : function() {\n\t\treturn Main_bloomAlpha;\n\t}});\n\tg.add(o6,\"f\",0,1).name(\"bloomAlpha\").onChange(function(v) {\n\t\tMain_bloomAlpha = v;\n\t}).listen();\n\tlet o7 = { };\n\tObject.defineProperty(o7,\"f\",{ set : function(x) {\n\t\tMain_bloomExponent = x;\n\t}, get : function() {\n\t\treturn Main_bloomExponent;\n\t}});\n\tg.add(o7,\"f\",0,4).name(\"bloomExponent\").onChange(function(v) {\n\t\tMain_bloomExponent = v;\n\t}).listen();\n\tlet o8 = { };\n\tObject.defineProperty(o8,\"f\",{ set : function(x) {\n\t\tMain_bloomSigma = x;\n\t}, get : function() {\n\t\treturn Main_bloomSigma;\n\t}});\n\tg.add(o8,\"f\",0,1).name(\"bloomSigma\").onChange(function(v) {\n\t\tMain_bloomSigma = v;\n\t}).listen();\n\tlet o9 = { };\n\tObject.defineProperty(o9,\"f\",{ set : function(x) {\n\t\tMain_bloomBlurRadius = x;\n\t}, get : function() {\n\t\treturn Main_bloomBlurRadius;\n\t}});\n\tg.add(o9,\"f\",0,0.2).name(\"bloomBlurRadius\").onChange(function(v) {\n\t\tMain_bloomBlurRadius = v;\n\t}).listen();\n\tlet o10 = { };\n\tObject.defineProperty(o10,\"f\",{ set : function(x) {\n\t\tMain_bloomBlurDownsampleIterations = x;\n\t}, get : function() {\n\t\treturn Main_bloomBlurDownsampleIterations;\n\t}});\n\tg.add(o10,\"f\",0,4).name(\"bloomBlurDownsampleIterations\").onChange(function(v) {\n\t\tMain_bloomBlurDownsampleIterations = v;\n\t}).listen().step(1);\n\tlet g1 = GUI_gui.addFolder(\"Controls\");\n\tlet c = Main_arcBallControl;\n\tlet o11 = { };\n\tObject.defineProperty(o11,\"f\",{ set : function(x) {\n\t\tc.dragSpeed = x;\n\t}, get : function() {\n\t\treturn c.dragSpeed;\n\t}});\n\tg1.add(o11,\"f\",0,15).name(\"dragSpeed\").onChange(function(v) {\n\t\tc.dragSpeed = v;\n\t}).listen();\n\tlet o12 = { };\n\tObject.defineProperty(o12,\"f\",{ set : function(x) {\n\t\tc.zoomSpeed = x;\n\t}, get : function() {\n\t\treturn c.zoomSpeed;\n\t}});\n\tg1.add(o12,\"f\",0,20).name(\"zoomSpeed\").onChange(function(v) {\n\t\tc.zoomSpeed = v;\n\t}).listen();\n\tlet o13 = { };\n\tObject.defineProperty(o13,\"f\",{ set : function(x) {\n\t\tlet v = x;\n\t\tc.angleAroundY.strength = v;\n\t\tc.angleAroundXZ.strength = v;\n\t\tc.radius.strength = v;\n\t}, get : function() {\n\t\treturn c.angleAroundY.strength;\n\t}});\n\tg1.add(o13,\"f\",0,1000).name(\"strength\").onChange(function(v) {\n\t\tc.angleAroundY.strength = v;\n\t\tc.angleAroundXZ.strength = v;\n\t\tc.radius.strength = v;\n\t}).listen();\n\tlet o14 = { };\n\tObject.defineProperty(o14,\"f\",{ set : function(x) {\n\t\tlet v = x;\n\t\tc.angleAroundY.damping = v;\n\t\tc.angleAroundXZ.damping = v;\n\t\tc.radius.damping = v;\n\t}, get : function() {\n\t\treturn c.angleAroundY.damping;\n\t}});\n\tg1.add(o14,\"f\",0,200).name(\"damping\").onChange(function(v) {\n\t\tc.angleAroundY.damping = v;\n\t\tc.angleAroundXZ.damping = v;\n\t\tc.radius.damping = v;\n\t}).listen();\n\tlet g2 = GUI_gui;\n\tGUI_addMaterial(g2,Main_cube.material,\"Cube\");\n\tGUI_addMaterial(g2,Main_sphere.material,\"Sphere\");\n\tlet o15 = { };\n\tObject.defineProperty(o15,\"f\",{ set : function(x) {\n\t\tMain_environmentManager.environmentSun.intensity = x;\n\t}, get : function() {\n\t\treturn Main_environmentManager.environmentSun.intensity;\n\t}});\n\tg2.add(o15,\"f\",0,3).name(\"intensity\").onChange(function(v) {\n\t\tMain_environmentManager.environmentSun.intensity = v;\n\t}).listen().name(\"Sun intensity\");\n\tlet color = Main_environmentManager.environmentSun.color;\n\tg2.addColor({ c : color.getHex()},\"c\").name(\"color\").onChange(function(hex) {\n\t\tcolor.setHex(hex);\n\t}).name(\"Sun color\");\n}\nfunction GUI_addMaterial(g,material,name) {\n\tlet g1 = g.addFolder(name);\n\tlet m = material;\n\tlet o = { };\n\tObject.defineProperty(o,\"f\",{ set : function(x) {\n\t\tm.roughness = x;\n\t}, get : function() {\n\t\treturn m.roughness;\n\t}});\n\tg1.add(o,\"f\",0,1).name(\"roughness\").onChange(function(v) {\n\t\tm.roughness = v;\n\t}).listen();\n\tlet o1 = { };\n\tObject.defineProperty(o1,\"f\",{ set : function(x) {\n\t\tm.metalness = x;\n\t}, get : function() {\n\t\treturn m.metalness;\n\t}});\n\tg1.add(o1,\"f\",0,1).name(\"metalness\").onChange(function(v) {\n\t\tm.metalness = v;\n\t}).listen();\n\tlet o2 = { };\n\tObject.defineProperty(o2,\"f\",{ set : function(x) {\n\t\tm.clearcoat = x;\n\t}, get : function() {\n\t\treturn m.clearcoat;\n\t}});\n\tg1.add(o2,\"f\",0,1).name(\"clearcoat\").onChange(function(v) {\n\t\tm.clearcoat = v;\n\t}).listen();\n\tlet o3 = { };\n\tObject.defineProperty(o3,\"f\",{ set : function(x) {\n\t\tm.clearcoatRoughness = x;\n\t}, get : function() {\n\t\treturn m.clearcoatRoughness;\n\t}});\n\tg1.add(o3,\"f\",0,1).name(\"clearcoatRoughness\").onChange(function(v) {\n\t\tm.clearcoatRoughness = v;\n\t}).listen();\n\tlet o4 = { };\n\tObject.defineProperty(o4,\"f\",{ set : function(x) {\n\t\tm.reflectivity = x;\n\t}, get : function() {\n\t\treturn m.reflectivity;\n\t}});\n\tg1.add(o4,\"f\",0,1).name(\"reflectivity\").onChange(function(v) {\n\t\tm.reflectivity = v;\n\t}).listen();\n\tlet o5 = { };\n\tObject.defineProperty(o5,\"f\",{ set : function(x) {\n\t\tm.transmission = x;\n\t}, get : function() {\n\t\treturn m.transmission;\n\t}});\n\tg1.add(o5,\"f\",0,1).name(\"transmission\").onChange(function(v) {\n\t\tm.transmission = v;\n\t}).listen();\n\tlet o6 = { };\n\tObject.defineProperty(o6,\"f\",{ set : function(x) {\n\t\tm.ior = x;\n\t}, get : function() {\n\t\treturn m.ior;\n\t}});\n\tg1.add(o6,\"f\",0,3).name(\"ior\").onChange(function(v) {\n\t\tm.ior = v;\n\t}).listen();\n\tlet o7 = { };\n\tObject.defineProperty(o7,\"f\",{ set : function(x) {\n\t\tm.thickness = x;\n\t}, get : function() {\n\t\treturn m.thickness;\n\t}});\n\tg1.add(o7,\"f\",0,3).name(\"thickness\").onChange(function(v) {\n\t\tm.thickness = v;\n\t}).listen();\n\tlet color = m.attenuationTint;\n\tg1.addColor({ c : color.getHex()},\"c\").name(\"attenuationTint\").onChange(function(hex) {\n\t\tcolor.setHex(hex);\n\t});\n\tlet o8 = { };\n\tObject.defineProperty(o8,\"f\",{ set : function(x) {\n\t\tm.attenuationDistance = x;\n\t}, get : function() {\n\t\treturn m.attenuationDistance;\n\t}});\n\tg1.add(o8,\"f\",0,10).name(\"attenuationDistance\").onChange(function(v) {\n\t\tm.attenuationDistance = v;\n\t}).listen();\n\tlet o9 = { };\n\tObject.defineProperty(o9,\"f\",{ set : function(x) {\n\t\tm.transparent = x;\n\t}, get : function() {\n\t\treturn m.transparent;\n\t}});\n\tg1.add(o9,\"f\",0,1).name(\"transparent\").onChange(function(v) {\n\t\tm.transparent = v;\n\t}).listen();\n\tlet o10 = { };\n\tObject.defineProperty(o10,\"f\",{ set : function(x) {\n\t\tm.emissiveIntensity = x;\n\t}, get : function() {\n\t\treturn m.emissiveIntensity;\n\t}});\n\tg1.add(o10,\"f\",0,4).name(\"emissiveIntensity\").onChange(function(v) {\n\t\tm.emissiveIntensity = v;\n\t}).listen();\n\tlet color1 = m.color;\n\tg1.addColor({ c : color1.getHex()},\"c\").name(\"color\").onChange(function(hex) {\n\t\tcolor1.setHex(hex);\n\t});\n\tlet color2 = m.emissive;\n\tg1.addColor({ c : color2.getHex()},\"c\").name(\"emissive\").onChange(function(hex) {\n\t\tcolor2.setHex(hex);\n\t});\n\tlet o11 = { };\n\tObject.defineProperty(o11,\"f\",{ set : function(x) {\n\t\tm.opacity = x;\n\t}, get : function() {\n\t\treturn m.opacity;\n\t}});\n\tg1.add(o11,\"f\",0,1).name(\"opacity\").onChange(function(v) {\n\t\tm.opacity = v;\n\t}).listen();\n}\nclass HxOverrides {\n\tstatic substr(s,pos,len) {\n\t\tif(len == null) {\n\t\t\tlen = s.length;\n\t\t} else if(len < 0) {\n\t\t\tif(pos == 0) {\n\t\t\t\tlen = s.length + len;\n\t\t\t} else {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t}\n\t\treturn s.substr(pos,len);\n\t}\n\tstatic now() {\n\t\treturn Date.now();\n\t}\n}\nvar three_ShaderMaterial = require(\"three\").ShaderMaterial;\nvar three_RawShaderMaterial = require(\"three\").RawShaderMaterial;\nclass _$Main_StarsMaterial extends three_RawShaderMaterial {\n\tconstructor(shape) {\n\t\tlet pointScale = new three_Uniform(1.);\n\t\tsuper({ uniforms : { shape : new three_Uniform(shape), pointScale : pointScale, time_s : Main_uTime_s}, vertexShader : \"\\n\\t\\t\\t\\tprecision highp float;\\n\\n\\t\\t\\t\\tuniform mat4 projectionMatrix;\\n\\t\\t\\t\\tuniform mat4 modelViewMatrix;\\n\\t\\t\\t\\tuniform float pointScale;\\n\\t\\t\\t\\tattribute vec3 position;\\n\\n\\t\\t\\t\\tattribute vec4 special;\\n\\n\\t\\t\\t\\tvarying vec2 vBlackBodyCoordinate;\\n\\t\\t\\t\\tvarying float vIntensity;\\n\\t\\t\\t\\tvarying float vPointScale;\\n\\n\\t\\t\\t\\tuniform float time_s;\\n\\n\\t\\t\\t\\tstruct GalaxyShape {\\n\\t\\t\\t\\t\\tfloat height;\\n\\t\\t\\t\\t\\tfloat winding;\\n\\t\\t\\t\\t\\tfloat windingExponent;\\n\\t\\t\\t\\t\\tfloat bulgeWinding;\\n\\t\\t\\t\\t\\tfloat bulgeWindingExponent;\\n\\t\\t\\t\\t\\tfloat armSpread;\\n\\t\\t\\t\\t\\tfloat armSpreadExponent;\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tuniform GalaxyShape shape;\\n\\n\\t\\t\\t\\tvoid main() {\\n\\t\\t\\t\\t\\tvec3 rand = position;\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tvec3 pos;\\n\\t\\t\\t\\t\\tfloat r;\\n\\t\\t\\t\\t\\tif (false) {\\n\\t\\t\\t\\t\\t\\tr = pow(rand.x, 5.);\\n\\n\\t\\t\\t\\t\\t\\t// spiral shape parameters\\n\\t\\t\\t\\t\\t\\t// https://www.desmos.com/calculator/iwl6c2mqfe\\n\\n\\t\\t\\t\\t\\t\\tfloat angle =\\n\\t\\t\\t\\t\\t\\t\\t// base spiral a ~ r\\n\\t\\t\\t\\t\\t\\t\\tshape.winding * pow(r, shape.windingExponent)\\n\\t\\t\\t\\t\\t\\t\\t// core tight spiral\\n\\t\\t\\t\\t\\t\\t\\t- shape.bulgeWinding * pow(r, -shape.bulgeWindingExponent)\\n\\n\\t\\t\\t\\t\\t\\t\\t// angle offset\\n\\t\\t\\t\\t\\t\\t\\t+ shape.armSpread * pow(rand.y, shape.armSpreadExponent) / pow(r, 0.9)\\n\\n\\t\\t\\t\\t\\t\\t\\t// left or right arm\\n\\t\\t\\t\\t\\t\\t\\t+ (rand.z > 0.5 ? 3.14159 : 0.);\\n\\n\\t\\t\\t\\t\\t\\tfloat x = r * 4.;\\n\\t\\t\\t\\t\\t\\tfloat y = pow(1. + x, -x) * 0.1 * (rand.z > 0.5 ? 1. : -1.) * rand.x;\\n\\n\\t\\t\\t\\t\\t\\tpos = vec3(\\n\\t\\t\\t\\t\\t\\t\\tcos(angle) * r,\\n\\t\\t\\t\\t\\t\\t\\ty,\\n\\t\\t\\t\\t\\t\\t\\tsin(angle) * r\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (true) {\\n\\t\\t\\t\\t\\t\\tr = special.r;\\n\\t\\t\\t\\t\\t\\tpos = r * normalize(rand * 2. - 1.);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tvec4 eyeSpace = modelViewMatrix * vec4(pos, 1.0);\\n\\t\\t\\t\\t\\tgl_Position = projectionMatrix * eyeSpace;\\n\\n\\t\\t\\t\\t\\t// star color and brightness\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tfloat u = special.r; // uniform random number 0 - 1\\n\\t\\t\\t\\t\\t\\tfloat v = special.g; // uniform random number 0 - 1\\n\\n\\t\\t\\t\\t\\t\\tfloat I = 6. + v * 2.;\\n\\t\\t\\t\\t\\t\\tI *= pow((sin(r * 20. + time_s) * 0.5 + 0.5), 2.);\\n\\n\\t\\t\\t\\t\\t\\t// inverse square intensity falloff\\n\\t\\t\\t\\t\\t\\tfloat eyeSpaceDistanceSq = dot(eyeSpace.xyz, eyeSpace.xyz);\\n\\t\\t\\t\\t\\t\\tI /= eyeSpaceDistanceSq;\\n\\n\\t\\t\\t\\t\\t\\tvIntensity = I;\\n\\n\\t\\t\\t\\t\\t\\t// set sprite size to fit airy disk (approximate)\\n\\t\\t\\t\\t\\t\\tvPointScale = pointScale / sqrt(eyeSpaceDistanceSq);\\n\\t\\t\\t\\t\\t\\tgl_PointSize = min(vPointScale, 1000.);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\", fragmentShader : \"\\n\\t\\t\\t\\tprecision highp float;\\n\\n\\t\\t\\t\\tvarying float vIntensity;\\n\\t\\t\\t\\tvarying float vPointScale;\\n\\n\\t\\t\\t\\t// https://www.shadertoy.com/view/tlc3zM\\n\\t\\t\\t\\tfloat fastAiry(float x) {\\n\\t\\t\\t\\t\\t#define gauss(x) exp(-.5*((x)*(x)) )\\n\\t\\t\\t\\t\\treturn (abs(x) < 1.88 ? gauss(x/1.4) : abs(x) > 6. ? 1.35/abs(x*x*x) : ( gauss(x/1.4) + 2.7/abs(x*x*x) )/2. );\\n\\t\\t\\t\\t\\t#undef gauss\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvoid main() {\\n\\t\\t\\t\\t\\tfloat I = vIntensity;\\n\\n\\t\\t\\t\\t\\tfloat d = length(gl_PointCoord.xy - vec2(0.5));\\n\\n\\t\\t\\t\\t\\t// force circular bound at sprite edges\\n\\t\\t\\t\\t\\tI *= smoothstep(0.5, 0.45, d);\\n\\n\\t\\t\\t\\t\\tvec3 c = vec3(1.) * I;\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tgl_FragColor = vec4(c, 1.0);\\n\\n\\t\\t\\t\\t\\t// if (gl_PointCoord.y < 0.05) gl_FragColor = vec4(vec3(0., 1., 0.), 1.0);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\", blending : three_Blending.AdditiveBlending, depthWrite : false, depthTest : true, transparent : false});\n\t\tthis.pointScale = pointScale;\n\t}\n}\nclass app_InteractionEventsManager {\n\tconstructor(el) {\n\t\tthis.haxeAppActivated = false;\n\t\tthis.elClientHeight = null;\n\t\tthis.elClientWidth = null;\n\t\tthis.primaryPointer = null;\n\t\tthis.el = el;\n\t\tthis.eventHandler = new app__$InteractionEventsManager_EventDispatcher();\n\t\tif(el.tabIndex == null) {\n\t\t\tel.tabIndex = 1;\n\t\t}\n\t\tel.style.touchAction = \"none\";\n\t\tel.setAttribute(\"touch-action\",\"none\");\n\t\tlet cancelEvent = function(e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t};\n\t\tel.addEventListener(\"gesturestart\",cancelEvent,false);\n\t\tel.addEventListener(\"gesturechange\",cancelEvent,false);\n\t\tthis.addPointerEventListeners();\n\t\tthis.addWheelEventListeners();\n\t\tthis.addKeyboardEventListeners();\n\t\tthis.addLifeCycleEventListeners();\n\t\tthis.addResizeEventListeners();\n\t\tthis.onVisibilityChange();\n\t}\n\tonVisibilityChange() {\n\t\tswitch(window.document.visibilityState) {\n\t\tcase \"hidden\":\n\t\t\tif(this.haxeAppActivated) {\n\t\t\t\tthis.eventHandler.onDeactivate();\n\t\t\t\tthis.haxeAppActivated = false;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"visible\":\n\t\t\tif(!this.haxeAppActivated) {\n\t\t\t\tthis.eventHandler.onActivate();\n\t\t\t\tthis.haxeAppActivated = true;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\taddPointerEventListeners() {\n\t\tlet _gthis = this;\n\t\tlet executePointerMethodFromMouseEvent = function(mouseEvent,pointerMethod) {\n\t\t\tlet force = mouseEvent.force != null ? mouseEvent.force : mouseEvent.webkitForce != null ? mouseEvent.webkitForce : 0.5;\n\t\t\tif(pointerMethod(new app_event_PointerEvent(1,\"mouse\",true,mouseEvent.button,mouseEvent.buttons,mouseEvent.clientX,mouseEvent.clientY,1,1,_gthis.el.clientWidth,_gthis.el.clientHeight,Math.max(force - 1,0),0,0,0,0)) == 0) {\n\t\t\t\tmouseEvent.preventDefault();\n\t\t\t}\n\t\t};\n\t\tlet touchInfoForType_h = Object.create(null);\n\t\tlet getTouchInfoForType = function(type) {\n\t\t\tlet touchInfo = touchInfoForType_h[type];\n\t\t\tif(touchInfo == null) {\n\t\t\t\ttouchInfo = { primaryTouchIdentifier : null, activeCount : 0};\n\t\t\t\ttouchInfoForType_h[type] = touchInfo;\n\t\t\t}\n\t\t\treturn touchInfo;\n\t\t};\n\t\tlet executePointerMethodFromTouchEvent = function(touchEvent,pointerMethod) {\n\t\t\tlet buttonStates;\n\t\t\tswitch(touchEvent.type) {\n\t\t\tcase \"touchforcechange\":case \"touchmove\":\n\t\t\t\tbuttonStates = { button : -1, buttons : 1};\n\t\t\t\tbreak;\n\t\t\tcase \"touchstart\":\n\t\t\t\tbuttonStates = { button : 0, buttons : 1};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuttonStates = { button : 0, buttons : 0};\n\t\t\t}\n\t\t\tlet _g = 0;\n\t\t\tlet _g1 = touchEvent.changedTouches.length;\n\t\t\twhile(_g < _g1) {\n\t\t\t\tlet touch = touchEvent.changedTouches[_g++];\n\t\t\t\tif(touchEvent.type == \"touchforcechange\") {\n\t\t\t\t\tlet touchIsActive = false;\n\t\t\t\t\tlet _g = 0;\n\t\t\t\t\tlet _g1 = touchEvent.touches;\n\t\t\t\t\twhile(_g < _g1.length) if(touch == _g1[_g++]) {\n\t\t\t\t\t\ttouchIsActive = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(!touchIsActive) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet touchInfo = getTouchInfoForType(touch.touchType);\n\t\t\t\tif(touchInfo.activeCount == 0 && touchEvent.type == \"touchstart\") {\n\t\t\t\t\ttouchInfo.primaryTouchIdentifier = touch.identifier;\n\t\t\t\t}\n\t\t\t\tswitch(touchEvent.type) {\n\t\t\t\tcase \"touchcancel\":case \"touchend\":\n\t\t\t\t\ttouchInfo.activeCount--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"touchstart\":\n\t\t\t\t\ttouchInfo.activeCount++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet tanAlt = Math.tan(touch.altitudeAngle);\n\t\t\t\tlet radToDeg = 180.0 / Math.PI;\n\t\t\t\tlet tiltX = Math.atan(Math.cos(touch.azimuthAngle) / tanAlt) * radToDeg;\n\t\t\t\tlet tiltY = Math.atan(Math.sin(touch.azimuthAngle) / tanAlt) * radToDeg;\n\t\t\t\tlet radiusX = touch.radiusX != null ? touch.radiusX : touch.webkitRadiusX != null ? touch.webkitRadiusX : 5;\n\t\t\t\tlet radiusY = touch.radiusY != null ? touch.radiusY : touch.webkitRadiusY != null ? touch.webkitRadiusY : 5;\n\t\t\t\tif(pointerMethod(new app_event_PointerEvent(touch.identifier,touch.touchType == \"stylus\" ? \"pen\" : \"touch\",touch.identifier == touchInfo.primaryTouchIdentifier,buttonStates.button,buttonStates.buttons,touch.clientX,touch.clientY,radiusX * 2,radiusY * 2,_gthis.el.clientWidth,_gthis.el.clientHeight,touch.force,0,isFinite(tiltX) ? tiltX : 0,isFinite(tiltY) ? tiltY : 0,touch.rotationAngle)) == 0) {\n\t\t\t\t\ttouchEvent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tlet onPointerDown = function(e) {\n\t\t\te[\"viewWidth\"] = _gthis.el.clientWidth;\n\t\t\te[\"viewHeight\"] = _gthis.el.clientHeight;\n\t\t\tif(e.isPrimary) {\n\t\t\t\t_gthis.primaryPointer = e;\n\t\t\t}\n\t\t\treturn _gthis.eventHandler.onPointerDown(e);\n\t\t};\n\t\tlet onPointerMove = function(e) {\n\t\t\te[\"viewWidth\"] = _gthis.el.clientWidth;\n\t\t\te[\"viewHeight\"] = _gthis.el.clientHeight;\n\t\t\tif(e.isPrimary) {\n\t\t\t\t_gthis.primaryPointer = e;\n\t\t\t}\n\t\t\treturn _gthis.eventHandler.onPointerMove(e);\n\t\t};\n\t\tlet onPointerUp = function(e) {\n\t\t\te[\"viewWidth\"] = _gthis.el.clientWidth;\n\t\t\te[\"viewHeight\"] = _gthis.el.clientHeight;\n\t\t\tif(e.isPrimary) {\n\t\t\t\t_gthis.primaryPointer = null;\n\t\t\t}\n\t\t\treturn _gthis.eventHandler.onPointerUp(e);\n\t\t};\n\t\tlet onPointerCancel = function(e) {\n\t\t\te[\"viewWidth\"] = _gthis.el.clientWidth;\n\t\t\te[\"viewHeight\"] = _gthis.el.clientHeight;\n\t\t\tif(e.isPrimary) {\n\t\t\t\t_gthis.primaryPointer = null;\n\t\t\t}\n\t\t\treturn _gthis.eventHandler.onPointerCancel(e);\n\t\t};\n\t\tif(window.PointerEvent) {\n\t\t\tthis.el.addEventListener(\"pointerdown\",onPointerDown);\n\t\t\twindow.addEventListener(\"pointermove\",onPointerMove);\n\t\t\twindow.addEventListener(\"pointerup\",onPointerUp);\n\t\t\twindow.addEventListener(\"pointercancel\",onPointerCancel);\n\t\t} else {\n\t\t\tthis.el.addEventListener(\"mousedown\",function(e) {\n\t\t\t\texecutePointerMethodFromMouseEvent(e,onPointerDown);\n\t\t\t});\n\t\t\twindow.addEventListener(\"mousemove\",function(e) {\n\t\t\t\texecutePointerMethodFromMouseEvent(e,onPointerMove);\n\t\t\t});\n\t\t\twindow.addEventListener(\"webkitmouseforcechanged\",function(e) {\n\t\t\t\texecutePointerMethodFromMouseEvent(e,onPointerMove);\n\t\t\t});\n\t\t\twindow.addEventListener(\"mouseforcechanged\",function(e) {\n\t\t\t\texecutePointerMethodFromMouseEvent(e,onPointerMove);\n\t\t\t});\n\t\t\twindow.addEventListener(\"mouseup\",function(e) {\n\t\t\t\texecutePointerMethodFromMouseEvent(e,onPointerUp);\n\t\t\t});\n\t\t\tthis.el.addEventListener(\"touchstart\",function(e) {\n\t\t\t\texecutePointerMethodFromTouchEvent(e,onPointerDown);\n\t\t\t},{ capture : true, passive : false});\n\t\t\twindow.addEventListener(\"touchmove\",function(e) {\n\t\t\t\texecutePointerMethodFromTouchEvent(e,onPointerMove);\n\t\t\t},{ capture : true, passive : false});\n\t\t\twindow.addEventListener(\"touchforcechange\",function(e) {\n\t\t\t\texecutePointerMethodFromTouchEvent(e,onPointerMove);\n\t\t\t},{ capture : true, passive : false});\n\t\t\twindow.addEventListener(\"touchend\",function(e) {\n\t\t\t\texecutePointerMethodFromTouchEvent(e,onPointerUp);\n\t\t\t},{ capture : true, passive : false});\n\t\t\twindow.addEventListener(\"touchcancel\",function(e) {\n\t\t\t\texecutePointerMethodFromTouchEvent(e,onPointerCancel);\n\t\t\t},{ capture : true, passive : false});\n\t\t}\n\t}\n\taddWheelEventListeners() {\n\t\tlet _gthis = this;\n\t\tthis.el.addEventListener(\"wheel\",function(e) {\n\t\t\tlet x_px = e.clientX;\n\t\t\tlet y_px = e.clientY;\n\t\t\tlet deltaX_px = e.deltaX;\n\t\t\tlet deltaY_px = e.deltaY;\n\t\t\tlet deltaZ_px = e.deltaZ;\n\t\t\tswitch(e.deltaMode) {\n\t\t\tcase 0:\n\t\t\t\tdeltaX_px = e.deltaX;\n\t\t\t\tdeltaY_px = e.deltaY;\n\t\t\t\tdeltaZ_px = e.deltaZ;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tdeltaX_px = e.deltaX * 16;\n\t\t\t\tdeltaY_px = e.deltaY * 16;\n\t\t\t\tdeltaZ_px = e.deltaZ * 16;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tdeltaX_px = e.deltaX * 100;\n\t\t\t\tdeltaY_px = e.deltaY * 100;\n\t\t\t\tdeltaZ_px = e.deltaZ * 100;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(_gthis.eventHandler.onWheel(new app_event_WheelEvent(deltaX_px,deltaY_px,deltaZ_px,x_px,y_px,e.altKey,e.ctrlKey,e.metaKey,e.shiftKey,e)) == 0) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},{ passive : false});\n\t}\n\taddKeyboardEventListeners() {\n\t\tlet _gthis = this;\n\t\twindow.addEventListener(\"keydown\",function(e) {\n\t\t\tif(_gthis.eventHandler.onKeyDown(e,e.target == _gthis.el) == 0) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener(\"keyup\",function(e) {\n\t\t\tif(_gthis.eventHandler.onKeyUp(e,e.target == _gthis.el) == 0) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t});\n\t}\n\taddLifeCycleEventListeners() {\n\t\tlet _gthis = this;\n\t\twindow.document.addEventListener(\"visibilitychange\",function() {\n\t\t\t_gthis.onVisibilityChange();\n\t\t});\n\t}\n\taddResizeEventListeners() {\n\t\tlet _gthis = this;\n\t\twindow.addEventListener(\"resize\",function() {\n\t\t\tif(_gthis.elClientWidth != _gthis.el.clientWidth || _gthis.elClientHeight != _gthis.el.clientHeight) {\n\t\t\t\t_gthis.elClientWidth = _gthis.el.clientWidth;\n\t\t\t\t_gthis.elClientHeight = _gthis.el.clientHeight;\n\t\t\t\t_gthis.eventHandler.onResize(_gthis.el.clientWidth,_gthis.el.clientHeight);\n\t\t\t}\n\t\t},{ capture : false});\n\t}\n}\nclass app__$InteractionEventsManager_EventDispatcher {\n\tconstructor() {\n\t\tthis.onDeactivateCallbacks = [];\n\t\tthis.onActivateCallbacks = [];\n\t\tthis.onKeyUpCallbacks = [];\n\t\tthis.onKeyDownCallbacks = [];\n\t\tthis.onWheelCallbacks = [];\n\t\tthis.onPointerCancelCallbacks = [];\n\t\tthis.onPointerUpCallbacks = [];\n\t\tthis.onPointerMoveCallbacks = [];\n\t\tthis.onPointerDownCallbacks = [];\n\t\tthis.onResizeCallbacks = [];\n\t}\n\tonResize(width,height) {\n\t\tlet _g = 0;\n\t\tlet _g1 = this.onResizeCallbacks;\n\t\twhile(_g < _g1.length) _g1[_g++](width,height);\n\t}\n\tonPointerDown(event) {\n\t\tlet _g = 0;\n\t\tlet _g1 = this.onPointerDownCallbacks;\n\t\twhile(_g < _g1.length) if(_g1[_g++](event) == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn 1;\n\t}\n\tonPointerMove(event) {\n\t\tlet _g = 0;\n\t\tlet _g1 = this.onPointerMoveCallbacks;\n\t\twhile(_g < _g1.length) if(_g1[_g++](event) == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn 1;\n\t}\n\tonPointerUp(event) {\n\t\tlet _g = 0;\n\t\tlet _g1 = this.onPointerUpCallbacks;\n\t\twhile(_g < _g1.length) if(_g1[_g++](event) == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn 1;\n\t}\n\tonPointerCancel(event) {\n\t\tlet _g = 0;\n\t\tlet _g1 = this.onPointerCancelCallbacks;\n\t\twhile(_g < _g1.length) if(_g1[_g++](event) == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn 1;\n\t}\n\tonWheel(event) {\n\t\tlet _g = 0;\n\t\tlet _g1 = this.onWheelCallbacks;\n\t\twhile(_g < _g1.length) if(_g1[_g++](event) == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn 1;\n\t}\n\tonKeyDown(event,hasFocus) {\n\t\tlet _g = 0;\n\t\tlet _g1 = this.onKeyDownCallbacks;\n\t\twhile(_g < _g1.length) if(_g1[_g++](event,hasFocus) == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn 1;\n\t}\n\tonKeyUp(event,hasFocus) {\n\t\tlet _g = 0;\n\t\tlet _g1 = this.onKeyUpCallbacks;\n\t\twhile(_g < _g1.length) if(_g1[_g++](event,hasFocus) == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn 1;\n\t}\n\tonActivate() {\n\t\tlet _g = 0;\n\t\tlet _g1 = this.onActivateCallbacks;\n\t\twhile(_g < _g1.length) _g1[_g++]();\n\t}\n\tonDeactivate() {\n\t\tlet _g = 0;\n\t\tlet _g1 = this.onDeactivateCallbacks;\n\t\twhile(_g < _g1.length) _g1[_g++]();\n\t}\n}\nclass control_ArcBallControl {\n\tconstructor(options) {\n\t\tthis._isPointerDown = false;\n\t\tthis._onDown_clientXY = new Vec2Data(0,0);\n\t\tthis._onDown_angleAroundXZ = 0;\n\t\tthis._onDown_angleAroundY = 0;\n\t\tthis.orientation = new Vec4Data(0,0,0,1);\n\t\tthis.position = new Vec3Data(0.,0.,0.);\n\t\tthis.radius = new animator_Spring(1.);\n\t\tthis.angleAroundXZ = new animator_Spring(0.);\n\t\tthis.angleAroundY = new animator_Spring(0.);\n\t\tlet a = control_ArcBallControl.defaults;\n\t\tlet options_radius = options.radius != null ? options.radius : a.radius;\n\t\tlet options_interactionSurface = options.interactionSurface;\n\t\tlet options_interactionEventsManager = options.interactionEventsManager;\n\t\tlet options_angleAroundXZ = options.angleAroundXZ != null ? options.angleAroundXZ : a.angleAroundXZ;\n\t\tthis.dragSpeed = options.dragSpeed != null ? options.dragSpeed : a.dragSpeed;\n\t\tthis.zoomSpeed = options.zoomSpeed != null ? options.zoomSpeed : a.zoomSpeed;\n\t\tlet v = options.strength != null ? options.strength : a.strength;\n\t\tthis.angleAroundY.strength = v;\n\t\tthis.angleAroundXZ.strength = v;\n\t\tthis.radius.strength = v;\n\t\tlet v1 = options.damping != null ? options.damping : a.damping;\n\t\tthis.angleAroundY.damping = v1;\n\t\tthis.angleAroundXZ.damping = v1;\n\t\tthis.radius.damping = v1;\n\t\tthis.angleAroundY.forceCompletion(options.angleAroundY != null ? options.angleAroundY : a.angleAroundY);\n\t\tthis.angleAroundXZ.forceCompletion(options_angleAroundXZ);\n\t\tthis.radius.forceCompletion(options_radius);\n\t\tlet interactionSurface = options_interactionSurface;\n\t\tlet _gthis = this;\n\t\tif(options_interactionEventsManager != null) {\n\t\t\toptions_interactionEventsManager.eventHandler.onPointerDownCallbacks.push(function(e) {\n\t\t\t\t_gthis._isPointerDown = true;\n\t\t\t\t_gthis._onDown_angleAroundY = _gthis.angleAroundY.target;\n\t\t\t\t_gthis._onDown_angleAroundXZ = _gthis.angleAroundXZ.target;\n\t\t\t\tlet this1 = _gthis._onDown_clientXY;\n\t\t\t\tthis1.x = e.x;\n\t\t\t\tthis1.y = e.y;\n\t\t\t\treturn 1;\n\t\t\t});\n\t\t\toptions_interactionEventsManager.eventHandler.onPointerMoveCallbacks.push(function(e) {\n\t\t\t\tlet surfaceSize_x = e.viewWidth;\n\t\t\t\tlet surfaceSize_y = e.viewHeight;\n\t\t\t\tif(_gthis._isPointerDown) {\n\t\t\t\t\tlet a = _gthis._onDown_clientXY;\n\t\t\t\t\t_gthis.angleAroundXZ.target = _gthis._onDown_angleAroundXZ + (e.y / surfaceSize_y - a.y / surfaceSize_y) * _gthis.dragSpeed;\n\t\t\t\t\tlet this1 = _gthis.orientation;\n\t\t\t\t\tlet u_x = this1.x;\n\t\t\t\t\tlet u_y = this1.y;\n\t\t\t\t\tlet u_z = this1.z;\n\t\t\t\t\tlet s = this1.w;\n\t\t\t\t\tlet up_y = u_y * (2 * (u_x * 0. + u_y + u_z * 0.)) + (s * s - (u_x * u_x + u_y * u_y + u_z * u_z)) + (u_z * 0. - u_x * 0.) * (2 * s);\n\t\t\t\t\t_gthis.angleAroundY.target = _gthis._onDown_angleAroundY - (1.0 - Math.pow(Math.abs(up_y) + 1,-4)) * (up_y >= 0 ? 1 : -1) * (e.x / surfaceSize_x - a.x / surfaceSize_x) * _gthis.dragSpeed * (surfaceSize_x / surfaceSize_y);\n\t\t\t\t\treturn 0;\n\t\t\t\t} else {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t});\n\t\t\toptions_interactionEventsManager.eventHandler.onPointerUpCallbacks.push(function(e) {\n\t\t\t\t_gthis._isPointerDown = false;\n\t\t\t\treturn 1;\n\t\t\t});\n\t\t\toptions_interactionEventsManager.eventHandler.onWheelCallbacks.push(function(e) {\n\t\t\t\t_gthis.radius.target += e.deltaY * _gthis.zoomSpeed / 1000;\n\t\t\t\t_gthis.radius.target = Math.max(_gthis.radius.target,0);\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t} else if(interactionSurface != null) {\n\t\t\tinteractionSurface.addEventListener(\"mousedown\",function(e) {\n\t\t\t\t_gthis._isPointerDown = true;\n\t\t\t\t_gthis._onDown_angleAroundY = _gthis.angleAroundY.target;\n\t\t\t\t_gthis._onDown_angleAroundXZ = _gthis.angleAroundXZ.target;\n\t\t\t\tlet this1 = _gthis._onDown_clientXY;\n\t\t\t\tthis1.x = e.clientX;\n\t\t\t\tthis1.y = e.clientY;\n\t\t\t});\n\t\t\tinteractionSurface.addEventListener(\"contextmenu\",function(e) {\n\t\t\t\t_gthis._isPointerDown = false;\n\t\t\t});\n\t\t\twindow.addEventListener(\"mousemove\",function(e) {\n\t\t\t\tlet surfaceSize_x = interactionSurface.clientWidth;\n\t\t\t\tlet surfaceSize_y = interactionSurface.clientHeight;\n\t\t\t\tlet tmp;\n\t\t\t\tif(_gthis._isPointerDown) {\n\t\t\t\t\tlet a = _gthis._onDown_clientXY;\n\t\t\t\t\t_gthis.angleAroundXZ.target = _gthis._onDown_angleAroundXZ + (e.clientY / surfaceSize_y - a.y / surfaceSize_y) * _gthis.dragSpeed;\n\t\t\t\t\tlet this1 = _gthis.orientation;\n\t\t\t\t\tlet u_x = this1.x;\n\t\t\t\t\tlet u_y = this1.y;\n\t\t\t\t\tlet u_z = this1.z;\n\t\t\t\t\tlet s = this1.w;\n\t\t\t\t\tlet up_y = u_y * (2 * (u_x * 0. + u_y + u_z * 0.)) + (s * s - (u_x * u_x + u_y * u_y + u_z * u_z)) + (u_z * 0. - u_x * 0.) * (2 * s);\n\t\t\t\t\t_gthis.angleAroundY.target = _gthis._onDown_angleAroundY - (1.0 - Math.pow(Math.abs(up_y) + 1,-4)) * (up_y >= 0 ? 1 : -1) * (e.clientX / surfaceSize_x - a.x / surfaceSize_x) * _gthis.dragSpeed * (surfaceSize_x / surfaceSize_y);\n\t\t\t\t\ttmp = 0;\n\t\t\t\t} else {\n\t\t\t\t\ttmp = 1;\n\t\t\t\t}\n\t\t\t\tif(tmp == 0) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t});\n\t\t\twindow.addEventListener(\"mouseup\",function(e) {\n\t\t\t\t_gthis._isPointerDown = false;\n\t\t\t});\n\t\t\tinteractionSurface.addEventListener(\"wheel\",function(e) {\n\t\t\t\t_gthis.radius.target += e.deltaY * _gthis.zoomSpeed / 1000;\n\t\t\t\t_gthis.radius.target = Math.max(_gthis.radius.target,0);\n\t\t\t\te.preventDefault();\n\t\t\t},{ passive : false});\n\t\t}\n\t}\n\tapplyToCamera(camera) {\n\t\tlet p = this.position;\n\t\tlet q = this.orientation;\n\t\tcamera.position.x = p.x;\n\t\tcamera.position.y = p.y;\n\t\tcamera.position.z = p.z;\n\t\tcamera.quaternion.x = q.x;\n\t\tcamera.quaternion.y = q.y;\n\t\tcamera.quaternion.z = q.z;\n\t\tcamera.quaternion.w = q.w;\n\t}\n}\nvar three_Mesh = require(\"three\").Mesh;\nclass rendering_Background extends three_Mesh {\n\tconstructor(roughness) {\n\t\tif(roughness == null) {\n\t\t\troughness = 0.5;\n\t\t}\n\t\tlet environmentMaterial = new rendering_EnvironmentMaterial(roughness);\n\t\tsuper(new three_BoxGeometry(1,1,1),environmentMaterial);\n\t\tthis.environmentMaterial = environmentMaterial;\n\t\tthis.geometry.deleteAttribute(\"normal\");\n\t\tthis.geometry.deleteAttribute(\"uv\");\n\t\tthis.frustumCulled = false;\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\t\tthis.matrixAutoUpdate = false;\n\t\tthis.renderOrder = -Infinity;\n\t\tlet _gthis = this;\n\t\tthis.onBeforeRender = function(renderer,scene,camera,geometry,material,group) {\n\t\t\tlet v = scene.environment;\n\t\t\tif(v != environmentMaterial.uEnvMap.value) {\n\t\t\t\tenvironmentMaterial.needsUpdate = true;\n\t\t\t}\n\t\t\tif(v != null) {\n\t\t\t\tenvironmentMaterial.uFlipEnvMap.value = v.isCubeTexture == true ? -1 : 1;\n\t\t\t}\n\t\t\tenvironmentMaterial.uEnvMap.value = v;\n\t\t\tenvironmentMaterial.envMap = v;\n\t\t\t_gthis.matrixWorld.copyPosition(camera.matrixWorld);\n\t\t};\n\t}\n}\nclass rendering_EnvironmentMaterial extends three_ShaderMaterial {\n\tconstructor(roughness) {\n\t\tlet uRoughness = new three_Uniform(0.5);\n\t\tlet uFlipEnvMap = new three_Uniform(-1);\n\t\tlet uEnvMap = new three_Uniform(null);\n\t\tsuper({ uniforms : { \"envMap\" : uEnvMap, \"flipEnvMap\" : uFlipEnvMap, \"uRoughness\" : uRoughness}, vertexShader : Three.ShaderLib.cube.vertexShader, fragmentShader : \"\\n\\t\\t\\t\\tuniform float uRoughness;\\n\\t\\t\\t\\t#include <envmap_common_pars_fragment>\\n\\t\\t\\t\\t#ifdef USE_ENVMAP\\n\\t\\t\\t\\tvarying vec3 vWorldDirection;\\n\\t\\t\\t\\t#endif\\n\\t\\t\\t\\t#include <cube_uv_reflection_fragment>\\n\\t\\t\\t\\tvoid main() {\\n\\t\\t\\t\\t\\t#ifdef USE_ENVMAP\\n\\t\\t\\t\\t\\t\\tvec3 reflectVec = vWorldDirection;\\n\\t\\t\\t\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\t\\t\\t\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t\\t\\t\\t\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\t\\t\\t\\t\\tvec4 envColor = textureCubeUV(envMap, reflectVec, uRoughness);\\n\\t\\t\\t\\t\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\t\\t\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\t\\t\\t\\t\\treflectVec = normalize( reflectVec );\\n\\t\\t\\t\\t\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\t\\t\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t\\t\\t\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t\\t\\t\\t\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\t\\t\\t\\t\\treflectVec = normalize( reflectVec );\\n\\t\\t\\t\\t\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\t\\t\\t\\t\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t\\t\\t\\t\\t\\t#else\\n\\t\\t\\t\\t\\t\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t\\t\\t\\t\\t\\t#endif\\n\\t\\t\\t\\t\\t\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\t\\t\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t\\t\\t\\t\\t\\t#endif\\n\\t\\t\\t\\t\\t#endif\\n\\t\\t\\t\\t\\t#ifdef USE_ENVMAP\\n\\t\\t\\t\\t\\t\\tgl_FragColor = envColor;\\n\\t\\t\\t\\t\\t#else\\n\\t\\t\\t\\t\\t\\tgl_FragColor = vec4(1., 1., 1., 1.);\\n\\t\\t\\t\\t\\t#endif\\n\\t\\t\\t\\t\\t#include <tonemapping_fragment>\\n\\t\\t\\t\\t\\t#include <encodings_fragment>\\n\\t\\t\\t\\t}\\n\\t\\t\\t\", side : three_Side.DoubleSide, depthWrite : false, depthTest : true, blending : three_Blending.NoBlending});\n\t\tthis.uRoughness = uRoughness;\n\t\tthis.uFlipEnvMap = uFlipEnvMap;\n\t\tthis.uEnvMap = uEnvMap;\n\t\tuRoughness.value = roughness;\n\t}\n}\nvar three_Uniform = require(\"three\").Uniform;\nvar Three = require(\"three\");\nvar three_Side = require(\"three\");\nvar three_Blending = require(\"three\");\nvar three_BufferGeometry = require(\"three\").BufferGeometry;\nvar three_BoxGeometry = require(\"three\").BoxGeometry;\nvar three_PerspectiveCamera = require(\"three\").PerspectiveCamera;\nvar three_MeshPhysicalMaterial = require(\"three\").MeshPhysicalMaterial;\nvar three_WebGLRenderer = require(\"three\").WebGLRenderer;\nvar three_TextureEncoding = require(\"three\");\nvar three_ToneMapping = require(\"three\");\nvar three_Vector4 = require(\"three\").Vector4;\nclass rendering_RenderTargetStore {\n\tstatic acquire(this1,uid,width,height,options,alwaysSyncOptions) {\n\t\tif(alwaysSyncOptions == null) {\n\t\t\talwaysSyncOptions = false;\n\t\t}\n\t\tlet target = this1.h[uid];\n\t\tlet needsNew = target == null;\n\t\tif(alwaysSyncOptions && !needsNew) {\n\t\t\tneedsNew = options.depthBuffer != target.depthBuffer || options.stencilBuffer != target.stencilBuffer || options.depthTexture != target.depthTexture || (options.wrapS != null && target.texture.wrapS != options.wrapS || options.wrapT != null && target.texture.wrapT != options.wrapT || options.magFilter != null && target.texture.magFilter != options.magFilter || options.minFilter != null && target.texture.minFilter != options.minFilter || options.format != null && target.texture.format != options.format || options.type != null && target.texture.type != options.type || options.anisotropy != null && target.texture.anisotropy != options.anisotropy || options.msaaSamples != null && target.samples != options.msaaSamples);\n\t\t}\n\t\tif(needsNew) {\n\t\t\tif(target != null) {\n\t\t\t\ttarget.dispose();\n\t\t\t}\n\t\t\tif(options.msaaSamples > 0) {\n\t\t\t\tlet _ = new three_WebGLMultisampleRenderTarget(width,height,options);\n\t\t\t\t_.samples = options.msaaSamples;\n\t\t\t\ttarget = _;\n\t\t\t} else {\n\t\t\t\ttarget = new three_WebGLRenderTarget(width,height,options);\n\t\t\t}\n\t\t\tthis1.h[uid] = target;\n\t\t} else {\n\t\t\ttarget.texture.generateMipmaps = options.generateMipmaps;\n\t\t\ttarget.texture.encoding = options.encoding;\n\t\t\tif(width != target.width || height != target.height) {\n\t\t\t\ttarget.setSize(width,height);\n\t\t\t}\n\t\t}\n\t\treturn target;\n\t}\n}\nvar three_WebGLRenderTarget = require(\"three\").WebGLRenderTarget;\nvar three_WebGLMultisampleRenderTarget = require(\"three\").WebGLMultisampleRenderTarget;\nvar three_TextureFilter = require(\"three\");\nvar three_TextureDataType = require(\"three\");\nvar three_Scene = require(\"three\").Scene;\nvar three_DirectionalLight = require(\"three\").DirectionalLight;\nvar three_AmbientLight = require(\"three\").AmbientLight;\nvar three_OrthographicCamera = require(\"three\").OrthographicCamera;\nvar three_BufferAttribute = require(\"three\").BufferAttribute;\nclass mesh_ClipSpaceTriangle extends three_Mesh {\n\tconstructor(material) {\n\t\tsuper(mesh_ClipSpaceTriangle.globalGeom,material);\n\t\tthis.frustumCulled = false;\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\t}\n}\nclass rendering_FragmentRenderer {\n\tconstructor(renderer) {\n\t\tthis._oldViewport = new three_Vector4();\n\t\tthis.renderer = renderer;\n\t}\n\trender(target,material,clearColor,viewport) {\n\t\tthis.renderer.setRenderTarget(target);\n\t\tlet restoreViewport = false;\n\t\tif(viewport != null) {\n\t\t\trestoreViewport = true;\n\t\t\tthis.renderer.getViewport(this._oldViewport);\n\t\t\tthis.renderer.setViewport(viewport.x,viewport.y,viewport.z,viewport.w);\n\t\t}\n\t\trendering_FragmentRenderer.rttMesh.material = material;\n\t\tif(clearColor != null) {\n\t\t\tthis.renderer.setClearColor(clearColor);\n\t\t\tthis.renderer.clear(true,false,false);\n\t\t}\n\t\tthis.renderer.render(rendering_FragmentRenderer.rttScene,rendering_FragmentRenderer.rttCamera);\n\t\tif(restoreViewport) {\n\t\t\tthis.renderer.setViewport(this._oldViewport.x,this._oldViewport.y,this._oldViewport.z,this._oldViewport.w);\n\t\t}\n\t}\n}\nclass Vec3Data {\n\tconstructor(x,y,z) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n}\nclass Vec4Data {\n\tconstructor(x,y,z,w) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n}\nvar three_InterleavedBuffer = require(\"three\").InterleavedBuffer;\nvar three_InterleavedBufferAttribute = require(\"three\").InterleavedBufferAttribute;\nvar three_Points = require(\"three\").Points;\nclass rendering_PostProcess {\n\tconstructor(renderer) {\n\t\tthis._blitBasicMaterial = new three_MeshBasicMaterial({ color : 16777215});\n\t\tthis.copyShader = new rendering_CopyShader();\n\t\tthis.renderer = renderer;\n\t\tthis.gl = renderer.getContext();\n\t\tthis.fragmentRenderer = new rendering_FragmentRenderer(renderer);\n\t\tthis.renderTargetStore = new haxe_ds_StringMap();\n\t}\n\tblitViaBasicMaterial(source,target) {\n\t\tthis._blitBasicMaterial.map = source;\n\t\tthis.fragmentRenderer.render(target,this._blitBasicMaterial,16711935);\n\t}\n\tresize(uid,source,width,height) {\n\t\tlet target = rendering_RenderTargetStore.acquire(this.renderTargetStore,\"resize.\" + uid,width,height,{ wrapS : source.wrapS, wrapT : source.wrapT, magFilter : source.magFilter, minFilter : source.minFilter, format : source.format, type : source.type, anisotropy : source.anisotropy, generateMipmaps : source.generateMipmaps, encoding : source.encoding, depthBuffer : false, stencilBuffer : false, depthTexture : null});\n\t\tthis.copyShader.setParams(source,1.);\n\t\tthis.fragmentRenderer.render(target,this.copyShader);\n\t\treturn target.texture;\n\t}\n\tblur(uid,source,kernel_yFraction,sigma,downsampleIterations) {\n\t\tif(downsampleIterations == null) {\n\t\t\tdownsampleIterations = 0;\n\t\t}\n\t\tif(sigma == null) {\n\t\t\tsigma = 0.5;\n\t\t}\n\t\tif(kernel_yFraction == 0) {\n\t\t\treturn source;\n\t\t}\n\t\tlet blurInput = source;\n\t\tlet _g = 0;\n\t\twhile(_g < downsampleIterations) {\n\t\t\tlet w = Math.pow(2,Math.floor(Math.log(blurInput.image.width * 0.5) / 0.6931471805599453)) | 0;\n\t\t\tlet h = Math.pow(2,Math.floor(Math.log(blurInput.image.height * 0.5) / 0.6931471805599453)) | 0;\n\t\t\tblurInput = this.resize(\"blur.\" + _g++ + \".\" + uid,blurInput,w,h);\n\t\t\tif(w <= 1 && h <= 1) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tlet width = blurInput.image.width;\n\t\tlet height = blurInput.image.height;\n\t\tlet targetOptions = { wrapS : source.wrapS, wrapT : source.wrapT, encoding : source.encoding, generateMipmaps : source.generateMipmaps, anisotropy : source.anisotropy, type : source.type, format : source.format, minFilter : source.minFilter, magFilter : source.magFilter};\n\t\tlet blurXTarget = rendering_RenderTargetStore.acquire(this.renderTargetStore,\"blurX.\" + uid,width,height,targetOptions);\n\t\tlet blurXYTarget = rendering_RenderTargetStore.acquire(this.renderTargetStore,\"blurXY.\" + uid,width,height,targetOptions);\n\t\tlet kernelY_texels = kernel_yFraction * blurInput.image.height;\n\t\tlet kernelX_texels = kernel_yFraction * (1 / (source.image.width / source.image.height)) * blurInput.image.width;\n\t\tlet tmp = this.fragmentRenderer;\n\t\tlet kernel = kernelX_texels;\n\t\tlet width1 = blurInput.image.width;\n\t\tlet height1 = blurInput.image.height;\n\t\tkernel = shaders_Blur1D.nearestBestKernel(kernelX_texels);\n\t\tlet key = \"\" + kernel + \"@\" + 1. + \"@\" + 0. + \"@\" + sigma;\n\t\tlet instance = shaders_Blur1D.instances.h[key];\n\t\tif(instance == null) {\n\t\t\tinstance = new shaders_Blur1D(this.gl,kernel,sigma,1.,0.,true);\n\t\t\tshaders_Blur1D.instances.h[key] = instance;\n\t\t}\n\t\tinstance.uTexture.value = blurInput;\n\t\tinstance.uTexelSize.value.set(1 / width1,1 / height1);\n\t\ttmp.render(blurXTarget,instance);\n\t\tlet tmp1 = this.fragmentRenderer;\n\t\tlet kernel1 = kernelY_texels;\n\t\tlet texture = blurXTarget.texture;\n\t\tlet width2 = blurXTarget.width;\n\t\tlet height2 = blurXTarget.height;\n\t\tkernel1 = shaders_Blur1D.nearestBestKernel(kernelY_texels);\n\t\tlet key1 = \"\" + kernel1 + \"@\" + 0. + \"@\" + 1. + \"@\" + sigma;\n\t\tlet instance1 = shaders_Blur1D.instances.h[key1];\n\t\tif(instance1 == null) {\n\t\t\tinstance1 = new shaders_Blur1D(this.gl,kernel1,sigma,0.,1.,true);\n\t\t\tshaders_Blur1D.instances.h[key1] = instance1;\n\t\t}\n\t\tinstance1.uTexture.value = texture;\n\t\tinstance1.uTexelSize.value.set(1 / width2,1 / height2);\n\t\ttmp1.render(blurXYTarget,instance1);\n\t\treturn blurXYTarget.texture;\n\t}\n}\nclass haxe_ds_StringMap {\n\tconstructor() {\n\t\tthis.h = Object.create(null);\n\t}\n}\nvar three_SphereGeometry = require(\"three\").SphereGeometry;\nvar three_Color = require(\"three\").Color;\nfunction Main_main() {\n\twindow.document.body.appendChild(Main_canvas);\n\tMain_scene.add(new three_AmbientLight(16777215,0.2));\n\tMain_scene.add(Main_particles);\n\tMain_scene.add(Main_sphere);\n\tMain_scene.add(Main_background);\n\tMain_camera.position.z = 2;\n\tMain_camera.position.y = 1;\n\tMain_environmentManager.setEnvironmentMapPath(\"assets/env/venice_sunset_2k.rgbd.png\",function(env) {\n\t\tMain_environmentManager.environmentSun.visible = false;\n\t},function(error) {\n\t\t$global.console.error(error);\n\t});\n\tGUI_init();\n\tMain_animationFrame(window.performance.now());\n}\nfunction Main_animationFrame(time_ms) {\n\tlet time_s = time_ms / 1000;\n\tlet dt_ms = Main_animationFrame_lastTime_ms > 0 ? time_ms - Main_animationFrame_lastTime_ms : 0.0;\n\tMain_animationFrame_lastTime_ms = time_ms;\n\tMain_uTime_s.value = time_s;\n\tlet gl = Main_renderer.getContext();\n\tlet x = window.innerWidth;\n\tlet y = window.innerHeight;\n\tlet b = Main_pixelRatio;\n\tlet x1 = Math.floor(x * b);\n\tlet y1 = Math.floor(y * b);\n\tif(!(x1 == gl.drawingBufferWidth && y1 == gl.drawingBufferHeight)) {\n\t\tMain_canvas.width = Math.floor(x1);\n\t\tMain_canvas.height = Math.floor(y1);\n\t}\n\tlet newAspect = x1 / y1;\n\tif(Main_camera.aspect != newAspect) {\n\t\tMain_camera.aspect = newAspect;\n\t\tMain_camera.updateProjectionMatrix();\n\t}\n\tMain_update(time_s,dt_ms / 1000);\n\tlet usePostProcess = Main_bloomEnabled && Main_bloomAlpha > 0;\n\tlet mainRenderTarget = usePostProcess ? rendering_RenderTargetStore.acquire(Main_renderTargetStore,\"main\",x1,y1,{ magFilter : three_TextureFilter.LinearFilter, minFilter : three_TextureFilter.LinearFilter, depthBuffer : true, type : three_TextureDataType.HalfFloatType, encoding : three_TextureEncoding.LinearEncoding, msaaSamples : 4}) : null;\n\tlet _toneMapping = Main_renderer.toneMapping;\n\tif(usePostProcess) {\n\t\tMain_renderer.toneMapping = three_ToneMapping.NoToneMapping;\n\t}\n\tMain_renderer.setRenderTarget(mainRenderTarget);\n\tMain_renderer.setViewport(0,0,x1,y1);\n\tMain_renderer.clear(true,true,true);\n\tMain_renderer.render(Main_scene,Main_camera);\n\tif(Main_bloomAlpha > 0 && Main_bloomEnabled) {\n\t\tlet blurredMainLinearTexture = Main_postProcess.blur(\"mainBlurred\",mainRenderTarget.texture,Main_bloomBlurRadius,Main_bloomSigma,Main_bloomBlurDownsampleIterations);\n\t\tshaders_BloomBlend.instance.uTexture.value = blurredMainLinearTexture;\n\t\tshaders_BloomBlend.instance.uBoomAlpha.value = Main_bloomAlpha;\n\t\tshaders_BloomBlend.instance.uBoomExponent.value = Main_bloomExponent;\n\t\tMain_fragmentRenderer.render(mainRenderTarget,shaders_BloomBlend.instance);\n\t}\n\tif(usePostProcess) {\n\t\tMain_renderer.toneMapping = _toneMapping;\n\t\tMain_postProcess.blitViaBasicMaterial(mainRenderTarget.texture,null);\n\t}\n\twindow.requestAnimationFrame(Main_animationFrame);\n}\nfunction Main_update(time_s,dt_s) {\n\tlet _this = Main_arcBallControl;\n\t_this.angleAroundY.step(dt_s);\n\t_this.angleAroundXZ.step(dt_s);\n\t_this.radius.step(dt_s);\n\t_this.position.x = _this.radius.value * Math.sin(_this.angleAroundY.value) * Math.cos(_this.angleAroundXZ.value);\n\t_this.position.z = _this.radius.value * Math.cos(_this.angleAroundY.value) * Math.cos(_this.angleAroundXZ.value);\n\t_this.position.y = _this.radius.value * Math.sin(_this.angleAroundXZ.value);\n\tlet angle = _this.angleAroundY.value;\n\tlet sa = Math.sin(angle * 0.5);\n\tlet x = 0 * sa;\n\tlet y = 1 * sa;\n\tlet z = 0 * sa;\n\tlet w = Math.cos(angle * 0.5);\n\tlet angle1 = -_this.angleAroundXZ.value;\n\tlet sa1 = Math.sin(angle1 * 0.5);\n\tlet x1 = 1 * sa1;\n\tlet y1 = 0 * sa1;\n\tlet z1 = 0 * sa1;\n\tlet w1 = Math.cos(angle1 * 0.5);\n\tlet this1 = _this.orientation;\n\tthis1.x = x * w1 + y * z1 - z * y1 + w * x1;\n\tthis1.y = -x * z1 + y * w1 + z * x1 + w * y1;\n\tthis1.z = x * y1 - y * x1 + z * w1 + w * z1;\n\tthis1.w = -x * x1 - y * y1 - z * z1 + w * w1;\n\tMain_arcBallControl.applyToCamera(Main_camera);\n}\nclass Reflect {\n\tstatic field(o,field) {\n\t\ttry {\n\t\t\treturn o[field];\n\t\t} catch( _g ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\tstatic fields(o) {\n\t\tlet a = [];\n\t\tif(o != null) {\n\t\t\tlet hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\t\tfor( var f in o ) {\n\t\t\tif(f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o,f)) {\n\t\t\t\ta.push(f);\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n}\nclass Std {\n\tstatic parseInt(x) {\n\t\tif(x != null) {\n\t\t\tlet _g = 0;\n\t\t\tlet _g1 = x.length;\n\t\t\twhile(_g < _g1) {\n\t\t\t\tlet i = _g++;\n\t\t\t\tlet c = x.charCodeAt(i);\n\t\t\t\tif(c <= 8 || c >= 14 && c != 32 && c != 45) {\n\t\t\t\t\tlet nc = x.charCodeAt(i + 1);\n\t\t\t\t\tlet v = parseInt(x,nc == 120 || nc == 88 ? 16 : 10);\n\t\t\t\t\tif(isNaN(v)) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn v;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\nfunction Structure_extendAny(base,extendWidth) {\n\tlet extended = { };\n\tif(base != null) {\n\t\tlet _g = 0;\n\t\tlet _g1 = Reflect.fields(base);\n\t\twhile(_g < _g1.length) {\n\t\t\tlet field = _g1[_g];\n\t\t\t++_g;\n\t\t\textended[field] = Reflect.field(base,field);\n\t\t}\n\t}\n\tif(extendWidth != null) {\n\t\tlet _g = 0;\n\t\tlet _g1 = Reflect.fields(extendWidth);\n\t\twhile(_g < _g1.length) {\n\t\t\tlet field = _g1[_g];\n\t\t\t++_g;\n\t\t\textended[field] = Reflect.field(extendWidth,field);\n\t\t}\n\t}\n\treturn extended;\n}\nclass Vec2Data {\n\tconstructor(x,y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n}\nclass animator_Spring {\n\tconstructor(initialValue,target,strength,damping,velocity,onUpdate) {\n\t\tif(velocity == null) {\n\t\t\tvelocity = 0.0;\n\t\t}\n\t\tif(damping == null) {\n\t\t\tdamping = 18;\n\t\t}\n\t\tif(strength == null) {\n\t\t\tstrength = 80;\n\t\t}\n\t\tthis.minEnergyThreshold = 1e-5;\n\t\tthis.value = initialValue;\n\t\tthis.target = target == null ? initialValue : target;\n\t\tthis.strength = strength;\n\t\tthis.damping = damping;\n\t\tthis.velocity = velocity;\n\t\tthis.onUpdate = onUpdate;\n\t}\n\tstep(dt_s) {\n\t\tlet V0 = this.velocity;\n\t\tlet X0 = this.value - this.target;\n\t\tif(X0 == 0 && V0 == 0 || dt_s == 0) {\n\t\t\treturn;\n\t\t}\n\t\tlet k = this.strength;\n\t\tlet b = this.damping;\n\t\tif(0.5 * V0 * V0 + 0.5 * k * X0 * X0 < this.minEnergyThreshold) {\n\t\t\tthis.velocity = 0;\n\t\t\tthis.value = this.target;\n\t\t} else {\n\t\t\tlet critical = k * 4 - b * b;\n\t\t\tif(critical > 0) {\n\t\t\t\tlet q = 0.5 * Math.sqrt(critical);\n\t\t\t\tlet B = (b * X0 * 0.5 + V0) / q;\n\t\t\t\tlet m = Math.exp(-b * 0.5 * dt_s);\n\t\t\t\tlet c = Math.cos(q * dt_s);\n\t\t\t\tlet s = Math.sin(q * dt_s);\n\t\t\t\tthis.velocity = m * ((B * q - 0.5 * X0 * b) * c + (-X0 * q - 0.5 * b * B) * s);\n\t\t\t\tthis.value = m * (X0 * c + B * s) + this.target;\n\t\t\t} else if(critical < 0) {\n\t\t\t\tlet u = 0.5 * Math.sqrt(-critical);\n\t\t\t\tlet p = -0.5 * b + u;\n\t\t\t\tlet n = -0.5 * b - u;\n\t\t\t\tlet B = -(n * X0 - V0) / (2 * u);\n\t\t\t\tlet A = X0 - B;\n\t\t\t\tlet ep = Math.exp(p * dt_s);\n\t\t\t\tlet en = Math.exp(n * dt_s);\n\t\t\t\tthis.velocity = A * n * en + B * p * ep;\n\t\t\t\tthis.value = A * en + B * ep + this.target;\n\t\t\t} else {\n\t\t\t\tlet w = Math.sqrt(k);\n\t\t\t\tlet B = V0 + w * X0;\n\t\t\t\tlet e = Math.exp(-w * dt_s);\n\t\t\t\tthis.velocity = (B - w * (X0 + B * dt_s)) * e;\n\t\t\t\tthis.value = (X0 + B * dt_s) * e + this.target;\n\t\t\t}\n\t\t}\n\t\tif(this.onUpdate != null) {\n\t\t\tthis.onUpdate(this.value,this.velocity);\n\t\t}\n\t}\n\tforceCompletion(v) {\n\t\tif(v != null) {\n\t\t\tthis.target = v;\n\t\t}\n\t\tthis.value = this.target;\n\t\tthis.velocity = 0;\n\t\tif(this.onUpdate != null) {\n\t\t\tthis.onUpdate(this.value,this.velocity);\n\t\t}\n\t}\n}\nclass app_event_KeyboardEvent {\n}\nclass app_event_PointerEvent {\n\tconstructor(pointerId,pointerType,isPrimary,button,buttons,x,y,width,height,viewWidth,viewHeight,pressure,tangentialPressure,tiltX,tiltY,twist) {\n\t\tthis.pointerId = pointerId;\n\t\tthis.pointerType = pointerType;\n\t\tthis.isPrimary = isPrimary;\n\t\tthis.button = button;\n\t\tthis.buttons = buttons;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.viewWidth = viewWidth;\n\t\tthis.viewHeight = viewHeight;\n\t\tthis.pressure = pressure;\n\t\tthis.tangentialPressure = tangentialPressure;\n\t\tthis.tiltX = tiltX;\n\t\tthis.tiltY = tiltY;\n\t\tthis.twist = twist;\n\t}\n}\nclass app_event_WheelEvent {\n\tconstructor(deltaX,deltaY,deltaZ,x,y,altKey,ctrlKey,metaKey,shiftKey,nativeEvent) {\n\t\tthis.deltaX = deltaX;\n\t\tthis.deltaY = deltaY;\n\t\tthis.deltaZ = deltaZ;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.altKey = altKey;\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.nativeEvent = nativeEvent;\n\t}\n}\nclass haxe_io_Path {\n\tconstructor(path) {\n\t\tswitch(path) {\n\t\tcase \".\":case \"..\":\n\t\t\tthis.dir = path;\n\t\t\tthis.file = \"\";\n\t\t\treturn;\n\t\t}\n\t\tlet c1 = path.lastIndexOf(\"/\");\n\t\tlet c2 = path.lastIndexOf(\"\\\\\");\n\t\tif(c1 < c2) {\n\t\t\tthis.dir = HxOverrides.substr(path,0,c2);\n\t\t\tpath = HxOverrides.substr(path,c2 + 1,null);\n\t\t\tthis.backslash = true;\n\t\t} else if(c2 < c1) {\n\t\t\tthis.dir = HxOverrides.substr(path,0,c1);\n\t\t\tpath = HxOverrides.substr(path,c1 + 1,null);\n\t\t} else {\n\t\t\tthis.dir = null;\n\t\t}\n\t\tlet cp = path.lastIndexOf(\".\");\n\t\tif(cp != -1) {\n\t\t\tthis.ext = HxOverrides.substr(path,cp + 1,null);\n\t\t\tthis.file = HxOverrides.substr(path,0,cp);\n\t\t} else {\n\t\t\tthis.ext = null;\n\t\t\tthis.file = path;\n\t\t}\n\t}\n\ttoString() {\n\t\treturn (this.dir == null ? \"\" : this.dir + (this.backslash ? \"\\\\\" : \"/\")) + this.file + (this.ext == null ? \"\" : \".\" + this.ext);\n\t}\n\tstatic withoutDirectory(path) {\n\t\tlet s = new haxe_io_Path(path);\n\t\ts.dir = null;\n\t\treturn s.toString();\n\t}\n\tstatic extension(path) {\n\t\tlet s = new haxe_io_Path(path);\n\t\tif(s.ext == null) {\n\t\t\treturn \"\";\n\t\t}\n\t\treturn s.ext;\n\t}\n}\nclass haxe_iterators_ArrayIterator {\n\tconstructor(array) {\n\t\tthis.current = 0;\n\t\tthis.array = array;\n\t}\n\thasNext() {\n\t\treturn this.current < this.array.length;\n\t}\n\tnext() {\n\t\treturn this.array[this.current++];\n\t}\n}\nclass material_CustomPhysicalMaterial extends three_ShaderMaterial {\n\tconstructor(additionalUniforms,parameters) {\n\t\tlet tmp = Structure_extendAny(Three.ShaderLib.physical.uniforms,additionalUniforms);\n\t\tsuper(Structure_extendAny({ defines : { \"STANDARD\" : \"\", \"PHYSICAL\" : \"\"}, uniforms : tmp, vertexShader : Three.ShaderLib.physical.vertexShader, fragmentShader : Three.ShaderLib.physical.fragmentShader, fog : true},parameters));\n\t\tthis.color = new three_Color(16777215);\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\t\tthis.map = null;\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\t\tthis.emissive = new three_Color(0);\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\t\tthis.normalMa = null;\n\t\tthis.normalMapType = three_NormalMapTypes.TangentSpaceNormalMap;\n\t\tthis.normalScale = new three_Vector2(1,1);\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\t\tthis.roughnessMap = null;\n\t\tthis.metalnessMap = null;\n\t\tthis.alphaMap = null;\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\t\tthis.refractionRatio = 0.98;\n\t\tthis.wireframeLinecap = \"round\";\n\t\tthis.wireframeLinejoin = \"round\";\n\t\tthis.vertexTangents = false;\n\t\tthis.isMeshStandardMaterial = true;\n\t\tthis.clearcoat = 0.0;\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new three_Vector2(1,1);\n\t\tthis.clearcoatNormalMap = null;\n\t\tthis.reflectivity = 0.5;\n\t\tthis.sheen = null;\n\t\tthis.transparency = 0.0;\n\t\tthis.transmission = 0.;\n\t\tthis.ior = 1.3;\n\t\tthis.isMeshPhysicalMaterial = true;\n\t}\n}\nclass rendering_CopyShader extends three_RawShaderMaterial {\n\tconstructor() {\n\t\tlet uTexture = new three_Uniform(null);\n\t\tlet uOpacity = new three_Uniform(1.);\n\t\tsuper({ uniforms : { uTexture : uTexture, uOpacity : uOpacity}, vertexShader : \"\\n\\t\\t\\t\\tattribute vec2 position;\\n\\t\\t\\t\\tvarying vec2 vUv;\\n\\t\\t\\t\\tvoid main() {\\n\\t\\t\\t\\t\\tvUv = position * 0.5 + 0.5;\\n\\t\\t\\t\\t\\tgl_Position = vec4(position, 0., 1.);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\", fragmentShader : \"\\n\\t\\t\\t\\tprecision highp float;\\n\\t\\t\\t\\tuniform sampler2D uTexture;\\n\\t\\t\\t\\tuniform float uOpacity;\\n\\t\\t\\t\\tvarying vec2 vUv;\\n\\n\\t\\t\\t\\tvoid main() {\\n\\t\\t\\t\\t\\tgl_FragColor = texture2D(uTexture, vUv);\\n\\t\\t\\t\\t\\tgl_FragColor.a *= uOpacity;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\", side : three_Side.DoubleSide, depthWrite : false, depthTest : false, fog : false, lights : false, toneMapped : false, blending : three_Blending.NoBlending});\n\t\tthis.uTexture = uTexture;\n\t\tthis.uOpacity = uOpacity;\n\t}\n\tsetParams(texture,opacity) {\n\t\tthis.uTexture.value = texture;\n\t\tthis.uOpacity.value = opacity;\n\t}\n}\nclass shaders_BloomBlend extends three_RawShaderMaterial {\n\tconstructor() {\n\t\tlet uTexture = new three_Uniform(null);\n\t\tlet uBoomAlpha = new three_Uniform(0.1);\n\t\tlet uBoomExponent = new three_Uniform(1.);\n\t\tsuper({ uniforms : { uTexture : uTexture, uBoomAlpha : uBoomAlpha, uBoomExponent : uBoomExponent}, vertexShader : \"\\n\\t\\t\\t\\tattribute vec2 position;\\n\\n\\t\\t\\t\\tvarying vec2 vUv;\\n\\n\\t\\t\\t\\tvoid main() {\\n\\t\\t\\t\\t\\tvUv = position * 0.5 + 0.5;\\n\\t\\t\\t\\t\\tgl_Position = vec4(position, 0., 1.);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\", fragmentShader : \"\\n\\t\\t\\t\\tprecision highp float;\\n\\n\\t\\t\\t\\tuniform sampler2D uTexture;\\n\\t\\t\\t\\tuniform float uBoomAlpha;\\n\\t\\t\\t\\tuniform float uBoomExponent;\\n\\n\\t\\t\\t\\tvarying vec2 vUv;\\n\\n\\t\\t\\t\\tvoid main() {\\n\\t\\t\\t\\t\\tgl_FragColor = texture2D(uTexture, vUv);\\n\\t\\t\\t\\t\\tgl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(uBoomExponent));\\n\\t\\t\\t\\t\\tgl_FragColor.a *= uBoomAlpha;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\", side : three_Side.DoubleSide, blending : three_Blending.AdditiveBlending});\n\t\tthis.uTexture = uTexture;\n\t\tthis.uBoomAlpha = uBoomAlpha;\n\t\tthis.uBoomExponent = uBoomExponent;\n\t}\n}\nclass shaders_Blur1D extends three_RawShaderMaterial {\n\tconstructor(ctx,kernel,truncationSigma,directionX,directionY,linearSampling) {\n\t\tlet uTexture = new three_Uniform(null);\n\t\tlet uTexelSize = new three_Uniform(new three_Vector2(1,1));\n\t\tlet shaderParts = shaders_Blur1D.generateShaderParts(ctx,kernel,truncationSigma,directionX,directionY,linearSampling);\n\t\tlet tmp = \"\\n\\t\\t\\t\\tprecision \" + \"mediump\" + \" float;\\n\\t\\t\\t\\tattribute vec2 position;\\n\\n\\t\\t\\t\\tuniform vec2 invResolution;\\n\\n\\t\\t\\t\\t\\n\" + shaderParts.varyingDeclarations.join(\"\\n\") + \"\\n\\n\\t\\t\\t\\tconst vec2 madd = vec2(0.5, 0.5);\\n\\n\\t\\t\\t\\tvoid main() {\\n\\t\\t\\t\\t\\tvec2 texelCoord = (position * madd + madd);\\n\\n\\t\\t\\t\\t\\t\\n\" + shaderParts.varyingValues.join(\"\\n\") + \"\\n\\n\\t\\t\\t\\t\\tgl_Position = vec4(position, 0.0, 1.);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\";\n\t\tlet tmp1 = \"\\n\\t\\t\\t\\tprecision \" + \"mediump\" + \" float;\\n\\t\\t\\t\\tuniform sampler2D texture;\\n\\n\\t\\t\\t\\t\\n\" + shaderParts.fragmentDeclarations.join(\"\\n\") + \"\\n\\n\\t\\t\\t\\t\\n\" + shaderParts.varyingDeclarations.join(\"\\n\") + \"\\n\\n\\t\\t\\t\\tvoid main() {\\n\\t\\t\\t\\t\\t\\n\" + shaderParts.fragmentVariables.join(\"\\n\") + \"\\n\\n\\t\\t\\t\\t\\tvec4 blend = vec4(0.0);\\n\\t\\t\\t\\t\\t\\n\" + shaderParts.textureSamples.join(\"\\n\") + \";\\n\\t\\t\\t\\t\\tgl_FragColor = blend;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\";\n\t\tsuper({ uniforms : { texture : uTexture, invResolution : uTexelSize}, vertexShader : tmp, fragmentShader : tmp1});\n\t\tthis.uTexture = uTexture;\n\t\tthis.uTexelSize = uTexelSize;\n\t\tthis.kernel = kernel;\n\t\tthis.directionX = directionX;\n\t\tthis.directionY = directionY;\n\t}\n\tstatic generateShaderParts(ctx,kernel,truncationSigma,directionX,directionY,linearSampling) {\n\t\tlet N = shaders_Blur1D.nearestBestKernel(kernel);\n\t\tlet centerIndex = (N - 1) / 2;\n\t\tlet offsets = [];\n\t\tlet weights = [];\n\t\tlet totalWeight = 0.0;\n\t\tlet _g = 0;\n\t\twhile(_g < N) {\n\t\t\tlet i = _g++;\n\t\t\tlet w = shaders_Blur1D.gaussianWeight(i / (N - 1) * 2.0 - 1,truncationSigma);\n\t\t\toffsets[i] = i - centerIndex;\n\t\t\tweights[i] = w;\n\t\t\ttotalWeight += w;\n\t\t}\n\t\tlet _g1 = 0;\n\t\tlet _g2 = weights.length;\n\t\twhile(_g1 < _g2) weights[_g1++] /= totalWeight;\n\t\tif(linearSampling) {\n\t\t\tlet lerpSampleOffsets = [];\n\t\t\tlet lerpSampleWeights = [];\n\t\t\tlet i = 0;\n\t\t\twhile(i < N) {\n\t\t\t\tlet A = weights[i];\n\t\t\t\tlet leftOffset = offsets[i];\n\t\t\t\tif(i + 1 < N) {\n\t\t\t\t\tlet B = weights[i + 1];\n\t\t\t\t\tlerpSampleOffsets.push(leftOffset + B / (A + B));\n\t\t\t\t\tlerpSampleWeights.push(A + B);\n\t\t\t\t} else {\n\t\t\t\t\tlerpSampleOffsets.push(leftOffset);\n\t\t\t\t\tlerpSampleWeights.push(A);\n\t\t\t\t}\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t\toffsets = lerpSampleOffsets;\n\t\t\tweights = lerpSampleWeights;\n\t\t}\n\t\tlet maxVaryingRows = ctx.getParameter(36348);\n\t\tlet varyingCount = Math.min(offsets.length,maxVaryingRows) | 0;\n\t\tlet _g3 = [];\n\t\tlet _g4 = 0;\n\t\twhile(_g4 < varyingCount) _g3.push(\"varying vec2 sampleCoord\" + _g4++ + \";\");\n\t\tlet _g5 = [];\n\t\tlet _g6 = 0;\n\t\twhile(_g6 < varyingCount) {\n\t\t\tlet i = _g6++;\n\t\t\t_g5.push(\"sampleCoord\" + i + \" = texelCoord + vec2(\" + shaders_Blur1D.glslFloat(offsets[i] * directionX) + \", \" + shaders_Blur1D.glslFloat(offsets[i] * directionY) + \") * invResolution;\");\n\t\t}\n\t\tlet _g7 = [];\n\t\tlet _g8 = varyingCount;\n\t\tlet _g9 = offsets.length;\n\t\twhile(_g8 < _g9) {\n\t\t\tlet i = _g8++;\n\t\t\t_g7.push(\"vec2 sampleCoord\" + i + \" = sampleCoord0 + vec2(\" + shaders_Blur1D.glslFloat((offsets[i] - offsets[0]) * directionX) + \", \" + shaders_Blur1D.glslFloat((offsets[i] - offsets[0]) * directionY) + \") * invResolution;\");\n\t\t}\n\t\tlet _g10 = [];\n\t\tlet _g11 = 0;\n\t\tlet _g12 = offsets.length;\n\t\twhile(_g11 < _g12) {\n\t\t\tlet i = _g11++;\n\t\t\t_g10.push(\"blend += texture2D(texture, sampleCoord\" + i + \") * \" + shaders_Blur1D.glslFloat(weights[i]) + \";\");\n\t\t}\n\t\treturn { varyingDeclarations : _g3, varyingValues : _g5, fragmentDeclarations : varyingCount < offsets.length ? [\"uniform vec2 invResolution;\"] : [\"\"], fragmentVariables : _g7, textureSamples : _g10};\n\t}\n\tstatic nearestBestKernel(idealKernel) {\n\t\tlet v = Math.round(idealKernel);\n\t\tif(v % 2 != 0 && Math.floor(v / 2) % 2 == 0 && v > 0) {\n\t\t\treturn Math.max(v,3) | 0;\n\t\t}\n\t\tlet k = v - 1;\n\t\tif(k % 2 != 0 && Math.floor(k / 2) % 2 == 0 && k > 0) {\n\t\t\treturn Math.max(k,3) | 0;\n\t\t}\n\t\tlet k1 = v + 1;\n\t\tif(k1 % 2 != 0 && Math.floor(k1 / 2) % 2 == 0 && k1 > 0) {\n\t\t\treturn Math.max(k1,3) | 0;\n\t\t}\n\t\tlet k2 = v - 2;\n\t\tif(k2 % 2 != 0 && Math.floor(k2 / 2) % 2 == 0 && k2 > 0) {\n\t\t\treturn Math.max(k2,3) | 0;\n\t\t}\n\t\tlet k3 = v + 2;\n\t\tif(k3 % 2 != 0 && Math.floor(k3 / 2) % 2 == 0 && k3 > 0) {\n\t\t\treturn Math.max(k3,3) | 0;\n\t\t}\n\t\treturn Math.max(v,3) | 0;\n\t}\n\tstatic gaussianWeight(x,truncationSigma) {\n\t\treturn 1.0 / (Math.sqrt(2.0 * Math.PI) * truncationSigma) * Math.exp(-(x * x / (2.0 * truncationSigma * truncationSigma)));\n\t}\n\tstatic glslFloat(f) {\n\t\tlet s = f == null ? \"null\" : \"\" + f;\n\t\tif(s.indexOf(\".\") == -1) {\n\t\t\ts += \".\";\n\t\t}\n\t\treturn s;\n\t}\n}\nvar three_Mapping = require(\"three\");\nvar three_MeshBasicMaterial = require(\"three\").MeshBasicMaterial;\nvar three_NormalMapTypes = require(\"three\");\nvar three_PixelFormat = require(\"three\");\nvar three_TextureLoader = require(\"three\").TextureLoader;\nvar three_Vector2 = require(\"three\").Vector2;\nvar three_Vector3 = require(\"three\").Vector3;\nvar three_examples_jsm_loaders_rgbeloader_RGBELoader = require(\"three/examples/jsm/loaders/RGBELoader\").RGBELoader;\nvar tool_PMREMGeneratorInternal = require(\"three\").PMREMGenerator;\nclass tool_IBLGenerator extends tool_PMREMGeneratorInternal {\n\tconstructor(renderer) {\n\t\tsuper(renderer);\n\t}\n\t_allocateTargets(equirectangular) {\n\t\tlet params = { magFilter : three_TextureFilter.NearestFilter, minFilter : three_TextureFilter.NearestFilter, generateMipmaps : false, type : three_TextureDataType.UnsignedByteType, format : three_PixelFormat.RGBEFormat, encoding : this._isLDR(equirectangular) ? equirectangular.encoding : three_TextureEncoding.RGBDEncoding, depthBuffer : false, stencilBuffer : false};\n\t\tlet cubeUVRenderTarget = this._createRenderTarget(params);\n\t\tcubeUVRenderTarget.depthBuffer = equirectangular != null ? false : true;\n\t\tthis._pingPongRenderTarget = this._createRenderTarget(params);\n\t\treturn cubeUVRenderTarget;\n\t}\n\t_isLDR(texture) {\n\t\tif(texture == null || texture.type != three_TextureDataType.UnsignedByteType) {\n\t\t\treturn false;\n\t\t}\n\t\tif(!(texture.encoding == three_TextureEncoding.LinearEncoding || texture.encoding == three_TextureEncoding.sRGBEncoding)) {\n\t\t\treturn texture.encoding == three_TextureEncoding.GammaEncoding;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\t_createRenderTarget(params) {\n\t\tlet cubeUVRenderTarget = new three_WebGLRenderTarget(3 * tool_IBLGenerator.SIZE_MAX,3 * tool_IBLGenerator.SIZE_MAX,params);\n\t\tcubeUVRenderTarget.texture.mapping = three_Mapping.CubeUVReflectionMapping;\n\t\tcubeUVRenderTarget.texture.name = \"PMREM.cubeUv\";\n\t\tcubeUVRenderTarget.scissorTest = true;\n\t\treturn cubeUVRenderTarget;\n\t}\n}\nif(typeof(performance) != \"undefined\" ? typeof(performance.now) == \"function\" : false) {\n\tHxOverrides.now = performance.now.bind(performance);\n}\n{\n}\nvar GUI_gui = new dat_$gui_GUI({ closed : false});\ncontrol_ArcBallControl.defaults = { strength : 700, damping : 100, dragSpeed : 6, angleAroundY : 0, angleAroundXZ : 0, radius : 1, zoomSpeed : 1};\nmesh_ClipSpaceTriangle.globalGeom = (function($this) {\n\tvar $r;\n\tlet buffer = new three_BufferGeometry();\n\tlet triangle = new Float32Array([-1,-1,3,-1,-1,3]);\n\tlet uv = new Float32Array(triangle.map(function(v) {\n\t\treturn v * 0.5 + 0.5;\n\t}));\n\tbuffer.setAttribute(\"position\",new three_BufferAttribute(triangle,2));\n\tbuffer.setAttribute(\"uv\",new three_BufferAttribute(uv,2));\n\t$r = buffer;\n\treturn $r;\n}(this));\nrendering_FragmentRenderer.rttScene = new three_Scene();\nrendering_FragmentRenderer.rttCamera = new three_OrthographicCamera(-1,1,1,-1,0,1);\nrendering_FragmentRenderer.rttMesh = (function($this) {\n\tvar $r;\n\tlet mesh = new mesh_ClipSpaceTriangle(null);\n\trendering_FragmentRenderer.rttScene.add(mesh);\n\t$r = mesh;\n\treturn $r;\n}(this));\nvar Main_pixelRatio = Math.min(window.devicePixelRatio,1);\nvar Main_overrideTransmissionFramebuffer = false;\nvar Main_scene = new three_Scene();\nvar Main_camera = new three_PerspectiveCamera(100,1,0.0001,10);\nvar Main_canvas = (function($this) {\n\tvar $r;\n\tlet _ = window.document.createElement(\"canvas\");\n\t_.style.position = \"absolute\";\n\t_.style.zIndex = \"-1\";\n\t_.style.top = \"0\";\n\t_.style.left = \"0\";\n\t_.style.width = \"100%\";\n\t_.style.height = \"100%\";\n\t$r = _;\n\treturn $r;\n}(this));\nvar Main_renderer = (function($this) {\n\tvar $r;\n\tlet _ = new three_WebGLRenderer({ canvas : Main_canvas, antialias : true, powerPreference : \"high-performance\"});\n\t_.autoClear = false;\n\t_.autoClearColor = false;\n\t_.autoClearDepth = false;\n\t_.shadowMap.enabled = false;\n\t_.outputEncoding = three_TextureEncoding.sRGBEncoding;\n\t_.toneMapping = three_ToneMapping.ACESFilmicToneMapping;\n\t_.toneMappingExposure = 0.2;\n\t_.physicallyCorrectLights = true;\n\tlet _getTransmissionRenderTarget = _.getTransmissionRenderTarget;\n\tlet viewport = new three_Vector4();\n\t_.getTransmissionRenderTarget = function() {\n\t\tif(!Main_overrideTransmissionFramebuffer) {\n\t\t\treturn _getTransmissionRenderTarget();\n\t\t}\n\t\t_.getCurrentViewport(viewport);\n\t\treturn rendering_RenderTargetStore.acquire(Main_renderTargetStore,\"transmission\",viewport.width,viewport.height,{ magFilter : three_TextureFilter.LinearFilter, minFilter : three_TextureFilter.LinearMipmapLinearFilter, depthBuffer : true, type : three_TextureDataType.HalfFloatType, encoding : three_TextureEncoding.LinearEncoding, generateMipmaps : true, msaaSamples : 4});\n\t};\n\t$r = _;\n\treturn $r;\n}(this));\nvar Main_gl = Main_renderer.getContext();\nvar Main_eventManager = new app_InteractionEventsManager(Main_canvas);\nvar Main_arcBallControl = new control_ArcBallControl({ interactionEventsManager : Main_eventManager, radius : 1.9, dragSpeed : 4., zoomSpeed : 1.});\nvar Main_uTime_s = new three_Uniform(0.0);\nvar Main_environmentManager = new EnvironmentManager(Main_renderer,Main_scene);\nvar Main_background = new rendering_Background();\nvar Main_fragmentRenderer = new rendering_FragmentRenderer(Main_renderer);\nvar Main_renderTargetStore = new haxe_ds_StringMap();\nvar Main_postProcess = new rendering_PostProcess(Main_renderer);\nvar Main_bloomEnabled = false;\nvar Main_bloomAlpha = 0.39;\nvar Main_bloomExponent = 2.2;\nvar Main_bloomSigma = 0.38;\nvar Main_bloomBlurRadius = 0.027;\nvar Main_bloomBlurDownsampleIterations = 1;\nvar Main_sphere = (function($this) {\n\tvar $r;\n\tlet _ = new three_Mesh(new three_SphereGeometry(1,80,80),new three_MeshPhysicalMaterial({ roughness : 0.0, color : 16777215, transmission : 0.9, attenuationTint : new three_Color(23039), attenuationDistance : 1.7, clearcoat : 0.9}));\n\t_.material.thickness = 1.8;\n\t$r = _;\n\treturn $r;\n}(this));\nvar Main_cube = new three_Mesh(new three_BoxGeometry(0.4,0.4,0.4),new three_MeshPhysicalMaterial({ color : 11206570, emissive : 16777215, emissiveIntensity : 30}));\nvar Main_particles = (function($this) {\n\tvar $r;\n\tlet geomArrayBuffer = new Float32Array(70000);\n\t{\n\t\tlet _g = 0;\n\t\twhile(_g < 10000) {\n\t\t\tlet x = Math.random();\n\t\t\tlet y = Math.random();\n\t\t\tlet z = Math.random();\n\t\t\tlet x1 = Math.random();\n\t\t\tlet y1 = Math.random();\n\t\t\tlet z1 = Math.random();\n\t\t\tlet offset = _g++ * 7;\n\t\t\tgeomArrayBuffer[offset] = x;\n\t\t\tgeomArrayBuffer[1 + offset] = y;\n\t\t\tgeomArrayBuffer[2 + offset] = z;\n\t\t\tlet i = offset + 3;\n\t\t\tgeomArrayBuffer[i] = x1;\n\t\t\tgeomArrayBuffer[1 + i] = y1;\n\t\t\tgeomArrayBuffer[2 + i] = z1;\n\t\t\tgeomArrayBuffer[3 + i] = 1.0;\n\t\t}\n\t}\n\tlet interleavedBuffer = new three_InterleavedBuffer(geomArrayBuffer,7);\n\tlet particleGeom = new three_BufferGeometry();\n\tparticleGeom.setAttribute(\"position\",new three_InterleavedBufferAttribute(interleavedBuffer,3,0));\n\tparticleGeom.setAttribute(\"special\",new three_InterleavedBufferAttribute(interleavedBuffer,4,3));\n\tlet m = new _$Main_StarsMaterial({ height : 0.25, winding : 7., windingExponent : 1.6, bulgeWinding : 0.8, bulgeWindingExponent : 1.6, armSpread : 1.9, armSpreadExponent : -0.1});\n\tlet _ = new three_Points(particleGeom,m);\n\t_.onBeforeRender = function(renderer,scene,camera,geometry,material,group) {\n\t\tlet rt = renderer.getRenderTarget();\n\t\tm.pointScale.value = (rt != null ? rt.height : Main_gl.drawingBufferHeight) * 0.005;\n\t};\n\t$r = _;\n\treturn $r;\n}(this));\nvar Main_animationFrame_lastTime_ms = -1.0;\nshaders_BloomBlend.instance = new shaders_BloomBlend();\nshaders_Blur1D.instances = new haxe_ds_StringMap();\ntool_IBLGenerator.LOD_MAX = 8;\ntool_IBLGenerator.SIZE_MAX = Math.pow(2,tool_IBLGenerator.LOD_MAX);\nMain_main();\n})(typeof window != \"undefined\" ? window : typeof global != \"undefined\" ? global : typeof self != \"undefined\" ? self : this);\n"],
  "mappings": "2lCAae,YAAS,EAAO,EAAa,IACpC,GAAc,EAAM,QAAQ,eAAe,WAE3C,EAAI,KAAK,MAAM,EAAM,GACrB,EAAI,KAAK,MAAM,EAAM,GACrB,EAAI,KAAK,MAAM,EAAM,GACrB,GAAI,EAAM,EACV,GAAI,KAAK,MAAM,EAAM,GACrB,GAAI,EAAM,EAAE,QAAQ,GACpB,GAAI,EAAM,EAAE,QAAQ,MAEtB,GAAgB,IAAgB,kBAAsB,IAAgB,eAAiB,QACrF,IAAM,EAAM,IAAI,SAAS,IACtB,GAAI,OAAS,MACZ,IAAM,SAEP,IAAM,OACR,IAAI,IAAgB,gBAClB,OAAS,EAAI,IAAM,EAAI,IAAM,EAAI,IACnC,GAAI,IAAgB,iBAClB,QAAU,EAAI,IAAM,EAAI,IAAM,EAAI,IAAM,GAAI,IAC9C,GAAI,IAAgB,YAClB,KAAO,EAAM,IAAI,SAAS,IAC5B,GAAI,IAAgB,kBAClB,IAAM,EAAI,IAAM,EAAI,IAAM,EAAI,IAChC,GAAI,IAAgB,mBAClB,IAAM,EAAI,IAAM,EAAI,IAAM,EAAI,IAAM,GAAI,IAC1C,GAAI,IAAgB,gBAClB,MAAQ,EAAI,MAAQ,EAAI,MAAQ,EAAI,IACtC,GAAI,IAAgB,iBAClB,MAAQ,EAAI,MAAQ,EAAI,MAAQ,EAAI,MAAQ,GAAI,IAClD,GAAI,IAAgB,gBAClB,MAAQ,GAAI,MAAQ,GAAI,MAAQ,GAAI,IACtC,GAAI,IAAgB,iBAClB,MAAQ,GAAI,MAAQ,GAAI,MAAQ,GAAI,MAAQ,GAAI,UAGlD,iBCrCT,GAAM,IAAW,MAAM,UAAU,QAC3B,GAAY,MAAM,UAAU,MAQ5B,EAAS,OACN,UAEC,SAAS,EAAQ,aAClB,KAAK,GAAU,KAAK,UAAW,GAAI,SAAS,EAAK,IAC9C,GAAO,KAAK,SAAS,GAAO,OAAO,KAAK,GAAO,KAChD,QAAQ,SAAS,EAAK,CACpB,KAAK,YAAY,EAAI,QACjB,GAAO,EAAI,KAEpB,KAAK,QACN,MAEI,YAGC,SAAS,EAAQ,aACpB,KAAK,GAAU,KAAK,UAAW,GAAI,SAAS,EAAK,IAC9C,GAAO,KAAK,SAAS,GAAO,OAAO,KAAK,GAAO,KAChD,QAAQ,SAAS,EAAK,CACrB,KAAK,YAAY,EAAO,QACnB,GAAO,EAAI,KAEpB,KAAK,QACN,MAEI,WAGA,UAAW,IACZ,GAAS,GAAU,KAAK,iBACvB,WAAW,QACZ,GAAO,GAAU,KAAK,WACjB,EAAI,EAAO,OAAS,EAAG,GAAK,EAAG,MAC/B,CAAC,EAAO,GAAG,MAAM,KAAM,UAEzB,GAAK,UAIV,SAAS,EAAK,EAAK,EAAO,IAC1B,EAAC,MAID,IAAY,EAAI,SAAW,EAAI,UAAY,KACzC,QAAQ,EAAK,WACR,EAAI,SAAW,EAAI,OAAS,EAAG,IACpC,GAAA,OACA,EAAA,WACC,EAAM,EAAG,EAAI,EAAI,OAAQ,EAAM,EAAG,OACjC,IAAO,IAAO,EAAI,KAAK,EAAO,EAAI,GAAM,KAAS,KAAK,yBAKjD,MAAO,MACZ,EAAI,KAAK,EAAO,EAAI,IAAM,MAAS,KAAK,qBAO3C,SAAS,EAAK,YACR,EAAK,aAIR,SAAS,EAAM,EAAW,EAAiB,IAC/C,GAAA,aAEG,WAAW,IACV,GAAM,KACN,GAAO,uBACM,GACP,KACL,GAAiB,EAAK,MAAM,EAAK,OAGlC,IAAU,GAAmB,CAAC,eAEvB,KACH,WAAW,GAAS,GAE1B,MACG,MAAM,EAAK,cAKb,SAAS,EAAK,OACjB,GAAI,QAAgB,EAAI,UACrB,GAAU,KAAK,gBAGX,SAAS,EAAK,OAClB,KAAQ,eAGT,SAAS,EAAK,OACb,KAAQ,0HAGV,SAAS,EAAK,OACZ,OAAM,aAGN,MAAM,SAAW,SAAS,EAAK,OAC/B,GAAI,cAAgB,gBAGnB,SAAS,EAAK,OACf,KAAQ,OAAO,aAGd,SAAS,EAAK,OACf,KAAQ,EAAM,YAGb,SAAS,EAAK,OACf,KAAQ,EAAM,cAGZ,SAAS,EAAK,OAChB,KAAQ,IAAS,IAAQ,eAGtB,SAAS,EAAK,OACjB,aAAe,YCvIpB,GAAkB,CAEtB,QACU,EAAO,qBACF,gBACK,MACR,SAAS,EAAU,IACjB,GAAO,EAAS,MAAM,4CACxB,KAAS,KACJ,GAGF,OACE,UACF,SACH,KACA,EAAK,GAAG,WAAa,EAAK,GAAG,WAC7B,EAAK,GAAG,WAAa,EAAK,GAAG,WAC7B,EAAK,GAAG,WAAa,EAAK,GAAG,WAAY,WAIxC,iBAGK,MACN,SAAS,EAAU,IACjB,GAAO,EAAS,MAAM,2BACxB,KAAS,KACJ,GAGF,OACE,UACF,SAAS,KAAO,EAAK,GAAG,WAAY,WAItC,YAGA,MACD,SAAS,EAAU,IACjB,GAAO,EAAS,MAAM,kDACxB,KAAS,KACJ,GAGF,OACE,QACJ,WAAW,EAAK,MAChB,WAAW,EAAK,MAChB,WAAW,EAAK,YAIhB,aAGC,MACF,SAAS,EAAU,IACjB,GAAO,EAAS,MAAM,8DACxB,KAAS,KACJ,GAGF,OACE,QACJ,WAAW,EAAK,MAChB,WAAW,EAAK,MAChB,WAAW,EAAK,MAChB,WAAW,EAAK,YAIhB,MAMb,QACU,EAAO,qBAEF,KAEN,MACG,SAAS,EAAU,OAChB,OACE,UACF,iBACW,cAIb,SAAS,EAAO,OACd,GAAM,QASrB,QACU,EAAO,oBACF,WACA,MACH,SAAS,EAAU,OACnB,GAAS,SAAW,EACf,GAGF,OACE,QACJ,EAAS,KACT,EAAS,KACT,EAAS,WAIT,SAAS,EAAO,OACd,CAAC,EAAM,EAAG,EAAM,EAAG,EAAM,gBAIxB,MACJ,SAAS,EAAU,OACnB,GAAS,SAAW,EAAU,GAC3B,OACE,QACJ,EAAS,KACT,EAAS,KACT,EAAS,KACT,EAAS,WAIT,SAAS,EAAO,OACd,CAAC,EAAM,EAAG,EAAM,EAAG,EAAM,EAAG,EAAM,OAOjD,QACU,EAAO,qBACF,UAED,MACF,SAAS,EAAU,OACnB,GAAO,SAAS,EAAS,IAC3B,EAAO,SAAS,EAAS,IACzB,EAAO,SAAS,EAAS,IACzB,EAAO,SAAS,EAAS,GAClB,OACE,QACJ,EAAS,IACT,EAAS,IACT,EAAS,IACT,EAAS,GAGT,UAGF,SAAS,EAAO,OACd,GACF,EAAM,IACN,EAAM,IACN,EAAM,IACN,EAAM,aAKN,MACD,SAAS,EAAU,OACnB,GAAO,SAAS,EAAS,IAC3B,EAAO,SAAS,EAAS,IACzB,EAAO,SAAS,EAAS,GAClB,OACE,QACJ,EAAS,IACT,EAAS,IACT,EAAS,GAGT,UAGF,SAAS,EAAO,OACd,GACF,EAAM,IACN,EAAM,IACN,EAAM,cAKL,MACF,SAAS,EAAU,OACnB,GAAO,SAAS,EAAS,IAC3B,EAAO,SAAS,EAAS,IACzB,EAAO,SAAS,EAAS,IACzB,EAAO,SAAS,EAAS,GAClB,OACE,QACJ,EAAS,IACT,EAAS,IACT,EAAS,IACT,EAAS,GAGT,UAGF,SAAS,EAAO,OACd,GACF,EAAM,IACN,EAAM,IACN,EAAM,IACN,EAAM,aAKN,MACD,SAAS,EAAU,OACnB,GAAO,SAAS,EAAS,IAC3B,EAAO,SAAS,EAAS,IACzB,EAAO,SAAS,EAAS,GAClB,OACE,QACJ,EAAS,IACT,EAAS,IACT,EAAS,GAGT,UAGF,SAAS,EAAO,OACd,GACF,EAAM,IACN,EAAM,IACN,EAAM,QAQjB,GAAA,OACA,GAAA,OAEE,GAAY,UAAW,IAChB,MAEL,GAAW,UAAU,OAAS,EAAI,EAAO,QAAQ,WAAa,UAAU,YACvE,KAAK,GAAiB,SAAS,EAAQ,IACxC,EAAO,OAAO,YACT,KAAK,EAAO,YAAa,SAAS,EAAY,EAAgB,OAC1D,EAAW,KAAK,GAErB,KAAa,IAAS,KAAW,aACxB,MACJ,eAAiB,KACjB,WAAa,EACb,EAAO,QAIX,EAAO,QAIX,IC3RL,GAAA,OAEE,GAAY,YACJ,SAAS,EAAG,EAAG,EAAG,IACtB,GAAK,KAAK,MAAM,EAAI,IAAM,EAE1B,EAAI,EAAI,GAAK,KAAK,MAAM,EAAI,IAC5B,GAAI,EAAK,GAAM,GACf,GAAI,EAAK,GAAO,EAAI,GACpB,GAAI,EAAK,GAAQ,GAAM,GAAK,GAE5B,GAAI,CACR,CAAC,EAAG,GAAG,IACP,CAAC,GAAG,EAAG,IACP,CAAC,GAAG,EAAG,IACP,CAAC,GAAG,GAAG,GACP,CAAC,GAAG,GAAG,GACP,CAAC,EAAG,GAAG,KACP,SAEK,GACF,GAAE,GAAK,MACP,GAAE,GAAK,MACP,GAAE,GAAK,iBAIF,SAAS,EAAG,EAAG,EAAG,IACtB,GAAM,KAAK,IAAI,EAAG,EAAG,GACrB,EAAM,KAAK,IAAI,EAAG,EAAG,GACrB,GAAQ,EAAM,EAChB,GAAA,OACA,GAAA,UAEA,IAAQ,KACN,GAAQ,aAEL,GACF,MACA,IACA,SAIH,KAAM,KACH,GAAI,GAAK,GACT,AAAI,IAAM,KACX,EAAK,GAAI,GAAK,MAEd,EAAK,GAAI,GAAK,OAEf,EACD,GAAI,QACD,GAGA,GACF,GAAI,MACJ,KACA,EAAM,iBAID,SAAS,EAAG,EAAG,EAAG,IACxB,GAAM,KAAK,mBAAmB,EAAG,EAAG,YAClC,KAAK,mBAAmB,EAAK,EAAG,KAChC,KAAK,mBAAmB,EAAK,EAAG,GAC/B,sBAGW,SAAS,EAAK,EAAgB,OACxC,IAAQ,EAAiB,EAAM,wBAGrB,SAAS,EAAK,EAAgB,EAAO,OAChD,IAAU,IAAe,EAAiB,GAAM,EAAM,CAAE,MAAQ,mxCCtErE,GAAA,UAAA,aACU,oBACP,QAAU,GAAU,MAAM,KAAM,WAEjC,KAAK,UAAY,QACb,IAAI,OAAM,4CAGb,QAAQ,EAAI,KAAK,QAAQ,GAAK,+CAG1B,OACF,IAAc,2CAGT,OACL,IAAc,KAAM,wCAGhB,OACJ,MAAK,QAAQ,WAAW,MAAM,eAIzC,YAA4B,EAAQ,EAAW,EAAmB,QACzD,eAAe,EAAQ,EAAW,KAClC,UAAW,OACV,MAAK,QAAQ,QAAU,MAClB,KAAK,QAAQ,OAGhB,eAAe,KAAM,EAAW,GAE/B,KAAK,QAAQ,SAGjB,SAAS,EAAG,CACX,KAAK,QAAQ,QAAU,WACnB,eAAe,KAAM,EAAW,QACjC,QAAQ,MAAQ,YAGlB,QAAQ,GAAa,KAKhC,YAA4B,EAAQ,EAAW,QACtC,eAAe,EAAQ,EAAW,KAClC,UAAW,OACV,MAAK,QAAQ,QAAU,MAClB,KAAK,QAAQ,OAGhB,eAAe,MAEd,KAAK,QAAQ,SAGjB,SAAS,EAAG,CACX,KAAK,QAAQ,QAAU,WACnB,eAAe,WAChB,QAAQ,MAAQ,YAGlB,QAAQ,GAAa,KAMhC,GAAM,eAAiB,SAAS,EAAO,EAAW,EAAmB,IAC/D,EAAM,QAAQ,QAAU,QACpB,QAAQ,GAAa,GAAK,mBAAmB,EAAM,QAAQ,IAAK,WAC7D,EAAM,QAAQ,QAAU,QAC1B,OAAO,EAAM,QAAS,GAAK,WAAW,EAAM,QAAQ,EAAG,EAAM,QAAQ,EAAG,EAAM,QAAQ,cAEvF,IAAI,OAAM,0BAIpB,GAAM,eAAiB,SAAS,EAAO,IAC/B,GAAS,GAAK,WAAW,EAAM,EAAG,EAAM,EAAG,EAAM,KAEhD,OAAO,EAAM,QAClB,GACK,EAAO,IACP,EAAO,IAIT,EAAO,MAAM,EAAO,GAEd,EAAO,YAAY,EAAM,QAAQ,OACpC,QAAQ,EAAI,KAFZ,QAAQ,EAAI,EAAO,GAM7B,GAAM,WAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,KAEzD,GAAmB,GAAM,UAAW,IAAK,GACzC,GAAmB,GAAM,UAAW,IAAK,GACzC,GAAmB,GAAM,UAAW,IAAK,GAEzC,GAAmB,GAAM,UAAW,KACpC,GAAmB,GAAM,UAAW,KACpC,GAAmB,GAAM,UAAW,KAEpC,OAAO,eAAe,GAAM,UAAW,IAAK,KACrC,UAAW,OACP,MAAK,QAAQ,OAGjB,SAAS,EAAG,MACV,QAAQ,EAAI,KAIrB,OAAO,eAAe,GAAM,UAAW,MAAO,KACvC,UAAW,OACV,MAAK,QAAQ,QAAU,aACpB,QAAQ,IAAM,GAAK,WAAW,KAAK,EAAG,KAAK,EAAG,KAAK,QACnD,QAAQ,MAAQ,OAGhB,KAAK,QAAQ,SAGjB,SAAS,EAAG,MACV,QAAQ,MAAQ,WAChB,QAAQ,IAAM,QCjIjB,IAAA,UAAA,YACQ,EAAQ,EAAU,iBACvB,aAAe,EAAO,QAMtB,WAAa,SAAS,cAAc,YAMpC,OAAS,OAMT,SAAW,OAOX,WAAa,YAOb,iBAAmB,mDAWjB,EAAK,aACP,WAAa,EACX,4CAYM,EAAK,aACb,iBAAmB,EACjB,sCAQA,EAAU,aACZ,OAAO,KAAK,UAAY,EACzB,KAAK,iBACF,WAAW,KAAK,KAAM,QAGxB,gBACE,uCAQE,OACF,MAAK,OAAO,KAAK,iDAQV,OACP,0CAMI,OACJ,MAAK,eAAiB,KAAK,oBCzGhC,GAAY,YACJ,CAAC,sBACA,CAAC,QAAS,YAAa,YAAa,UAAW,4BAC5C,CAAC,YAGb,GAAgB,GACtB,EAAO,KAAK,GAAW,SAAS,EAAG,EAAG,GAC7B,KAAK,EAAG,SAAS,EAAG,IACX,GAAK,MAIvB,GAAM,IAAmB,kBAEzB,YAA0B,EAAK,IACzB,IAAQ,KAAO,EAAO,YAAY,SAC7B,MAGH,GAAQ,EAAI,MAAM,UAEnB,GAAO,OAAO,GAMZ,EALE,WAAW,EAAM,IAY5B,GAAM,GAAM,gBAOM,SAAS,EAAM,EAAY,CACrC,IAAS,QAAa,EAAK,QAAU,WAEpC,cAAgB,EAAa,UAAW,OACpC,IACL,UAAW,KAGV,MAAM,cAAgB,EAAa,OAAS,SAC5C,MAAM,gBAAkB,EAAa,OAAS,SAC9C,aAAe,EAAa,KAAO,uBAS1B,SAAS,EAAM,EAAK,EAAM,IACpC,GAAW,EACX,EAAa,EAEb,EAAO,YAAY,OACR,IAGX,EAAO,YAAY,OACV,MAGR,MAAM,SAAW,WAElB,MACG,MAAM,KAAO,IACb,MAAM,MAAQ,GAEjB,MACG,MAAM,IAAM,IACZ,MAAM,OAAS,cAUb,SAAS,EAAM,EAAW,EAAM,EAAK,IACxC,GAAS,GAAQ,GACjB,GAAY,GAAc,MAC5B,CAAC,QACG,IAAI,OAAM,cAAgB,EAAY,sBAExC,IAAM,SAAS,YAAY,WACzB,QACD,kBAEK,IAAU,EAAO,GAAK,EAAO,SAAW,EACxC,GAAU,EAAO,GAAK,EAAO,SAAW,KAC1C,eAAe,EAAW,EAAO,SAAW,GAC9C,EAAO,YAAc,GAAM,OAAQ,EAAO,YAAc,EACxD,aAIO,GAAO,GAAO,GAAO,EAAG,gBAGhC,qBAEK,IAAO,GAAI,mBAAqB,GAAI,eACnC,SAAS,EAAQ,YACV,WACH,UACD,YACE,WACD,WACA,gBACC,YAEP,EAAW,EAAO,SAAW,GAChC,EAAO,WAAY,OACnB,EAAO,QAAS,EAAO,OACvB,EAAO,SAAU,EAAO,QACxB,EAAO,QAAS,EAAO,4BAKrB,UAAU,EAAW,EAAO,SAAW,GAAO,EAAO,YAAc,aAItE,SAAS,GAAK,KAChB,cAAc,UAUf,SAAS,EAAM,EAAO,EAAM,EAAS,IACnC,GAAO,GAAW,SACpB,GAAK,mBACF,iBAAiB,EAAO,EAAM,GAC1B,EAAK,eACT,YAAY,KAAO,EAAO,GAE1B,UAUD,SAAS,EAAM,EAAO,EAAM,EAAS,IACrC,GAAO,GAAW,SACpB,GAAK,sBACF,oBAAoB,EAAO,EAAM,GAC7B,EAAK,eACT,YAAY,KAAO,EAAO,GAE1B,YAQC,SAAS,EAAM,EAAW,IAC9B,EAAK,YAAc,SAChB,UAAY,UACR,EAAK,YAAc,EAAW,IACjC,GAAU,EAAK,UAAU,MAAM,MACjC,EAAQ,QAAQ,KAAe,OACzB,KAAK,KACR,UAAY,EAAQ,KAAK,KAAK,QAAQ,OAAQ,IAAI,QAAQ,OAAQ,WAGpE,gBAQI,SAAS,EAAM,EAAW,IACjC,KACE,EAAK,YAAc,IAChB,gBAAgB,aAChB,IACC,GAAU,EAAK,UAAU,MAAM,MAC/B,EAAQ,EAAQ,QAAQ,GAC1B,IAAU,OACJ,OAAO,EAAO,KACjB,UAAY,EAAQ,KAAK,aAI7B,UAAY,aAEZ,aAGC,SAAS,EAAM,EAAW,OAC3B,IAAI,QAAO,aAAe,EAAY,cAAc,KAAK,EAAK,YAAc,aAO3E,SAAS,EAAM,IACjB,GAAQ,iBAAiB,SAExB,IAAiB,EAAM,sBAC5B,GAAiB,EAAM,uBACvB,GAAiB,EAAM,iBACvB,GAAiB,EAAM,kBACvB,GAAiB,EAAM,kBAOhB,SAAS,EAAM,IAClB,GAAQ,iBAAiB,SAExB,IAAiB,EAAM,qBAC5B,GAAiB,EAAM,wBACvB,GAAiB,EAAM,gBACvB,GAAiB,EAAM,mBACvB,GAAiB,EAAM,mBAOhB,SAAS,EAAI,IAClB,GAAO,EACL,EAAS,CAAE,KAAM,EAAG,IAAK,MAC3B,EAAK,kBAEE,MAAQ,EAAK,aACb,KAAO,EAAK,YACZ,EAAK,mBACL,SAEJ,aAQC,SAAS,EAAM,OAChB,KAAS,SAAS,eAAkB,GAAK,MAAQ,EAAK,QCtQ3D,GAAA,SAAA,EAAA,oBACQ,EAAQ,EAAU,4EACtB,EAAQ,IAER,EAAA,IACD,OAAS,EAAK,aAEd,WAAa,SAAS,cAAc,WACpC,WAAW,aAAa,OAAQ,yBAEjB,GACZ,SAAS,CAAC,EAAM,iBAGpB,KAAK,EAAK,WAAY,SAAU,GAAU,MAEzC,WAAW,YAAY,EAAK,cAG5B,8DAGE,EAAG,IACJ,GAAA,GAAA,EAAA,UAAA,WAAA,OAAA,eAAA,EAAA,WAAA,WAAA,MAAA,KAAA,KAA0B,SAC5B,MAAK,uBACF,iBAAiB,KAAK,KAAM,KAAK,iBAEnC,OAAS,KAAK,WACZ,yCAGO,OACV,MAAK,aAAe,SACjB,WAAW,aAAa,UAAW,gBACnC,WAAW,QAAU,QACrB,OAAS,UAET,WAAW,QAAU,QACrB,OAAS,yGAtCY,ICI1B,GAAA,SAAA,EAAA,oBACQ,EAAQ,EAAU,EAAM,4EAC5B,EAAQ,IAEV,GAAU,EAER,GAAA,OAMD,SAAW,SAAS,cAAc,UAEnC,EAAO,QAAQ,IAAU,IACrB,IAAM,KACL,KAAK,GAAS,SAAS,GAAS,IACjC,IAAW,QAEP,YAGL,KAAK,GAAS,SAAS,GAAO,GAAK,IAClC,IAAM,SAAS,cAAc,aAC/B,UAAY,MACZ,aAAa,QAAS,OACpB,SAAS,YAAY,QAIxB,kBAED,KAAK,EAAK,SAAU,SAAU,UAAW,IACrC,IAAe,KAAK,QAAQ,KAAK,eAAe,SAChD,SAAS,QAGZ,WAAW,YAAY,EAAK,wDAG1B,EAAG,IACJ,GAAA,GAAA,EAAA,UAAA,WAAA,OAAA,eAAA,EAAA,WAAA,WAAA,MAAA,KAAA,KAA0B,SAE5B,MAAK,uBACF,iBAAiB,KAAK,KAAM,KAAK,YAEjC,yCAGO,OACV,GAAI,SAAS,KAAK,UAAkB,WACnC,SAAS,MAAQ,KAAK,iHAnDA,ICJzB,GAAA,SAAA,EAAA,oBACQ,EAAQ,EAAU,4EACtB,EAAQ,IAER,EAAA,eAEc,GACZ,SAAS,EAAM,QAAQ,oBAGb,CACZ,EAAM,oBACF,iBAAiB,KAAK,EAAO,EAAM,qBAIxC,QAAU,SAAS,cAAc,WACjC,QAAQ,aAAa,OAAQ,UAE9B,KAAK,EAAK,QAAS,QAAS,MAC5B,KAAK,EAAK,QAAS,SAAU,MAC7B,KAAK,EAAK,QAAS,OAAQ,MAC3B,KAAK,EAAK,QAAS,UAAW,SAAS,GAAG,CACxC,GAAE,UAAY,SACX,WAIJ,kBAEA,WAAW,YAAY,EAAK,6DAGnB,OAGT,GAAI,SAAS,KAAK,gBAChB,QAAQ,MAAQ,KAAK,iHArCD,ICR/B,YAAqB,EAAG,IAChB,GAAK,EAAE,iBACT,GAAG,QAAQ,KAAO,GACb,EAAG,OAAS,EAAG,QAAQ,KAAO,EAGhC,KAeH,IAAA,SAAA,EAAA,oBACQ,EAAQ,EAAU,EAAQ,4EAC9B,EAAQ,IAER,GAAU,GAAU,YAErB,MAAQ,GAAQ,MAChB,MAAQ,GAAQ,MAChB,OAAS,GAAQ,KAElB,EAAO,YAAY,EAAK,QACtB,EAAK,eAAiB,IACnB,cAAgB,IAGhB,cAAgB,KAAK,IAAI,GAAI,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI,EAAK,eAAiB,KAAK,OAAS,KAGhG,cAAgB,EAAK,SAGvB,YAAc,GAAY,EAAK,6DAG7B,EAAG,IACN,GAAK,QAEL,MAAK,QAAU,QAAa,EAAK,KAAK,QACnC,KAAK,MACD,KAAK,QAAU,QAAa,EAAK,KAAK,UAC1C,KAAK,OAGR,KAAK,SAAW,QAAa,EAAK,KAAK,QAAW,MAC/C,KAAK,MAAM,EAAK,KAAK,QAAU,KAAK,gGAGrB,+BAUpB,EAAU,aACP,MAAQ,EACN,iCAUL,EAAU,aACP,MAAQ,EACN,kCAaJ,EAAW,aACT,OAAS,OACT,cAAgB,OAChB,YAAc,GAAY,GACxB,YA9EoB,ICpB/B,YAAwB,EAAO,EAAU,IACjC,GAAQ,KAAK,IAAI,GAAI,SACpB,MAAK,MAAM,EAAQ,GAAS,KAiB/B,IAAA,SAAA,EAAA,oBACQ,EAAQ,EAAU,EAAQ,4EAC9B,EAAQ,EAAU,MAEnB,sBAAwB,MAEvB,IAAA,EAMF,GAAA,oBAEgB,IACZ,IAAY,WAAW,GAAM,QAAQ,OACtC,EAAO,MAAM,QACV,SAAS,iBAIC,CACd,GAAM,qBACF,iBAAiB,KAAK,GAAO,GAAM,yBAI3B,kBAIG,GAAG,IAChB,IAAO,GAAQ,GAAE,WACjB,SAAS,GAAM,WAAa,GAAO,GAAM,kBAEvC,GAAE,qBAGS,GACf,OAAO,OAAQ,YAAa,MAC5B,OAAO,OAAQ,UAAW,qBAIX,GAAG,GAClB,KAAK,OAAQ,YAAa,MAC1B,KAAK,OAAQ,UAAW,OACpB,GAAE,iBAGP,QAAU,SAAS,cAAc,WACjC,QAAQ,aAAa,OAAQ,UAI9B,KAAK,EAAK,QAAS,SAAU,MAC7B,KAAK,EAAK,QAAS,OAAQ,MAC3B,KAAK,EAAK,QAAS,YAAa,MAChC,KAAK,EAAK,QAAS,UAAW,SAAS,GAAG,CAExC,GAAE,UAAY,QACV,sBAAwB,QACzB,UACC,sBAAwB,aAK7B,kBAEA,WAAW,YAAY,EAAK,6DAGnB,aACT,QAAQ,MAAQ,KAAK,sBAAwB,KAAK,WAAa,GAAe,KAAK,WAAY,KAAK,kHA1E3E,ICpBlC,YAAa,EAAG,EAAI,EAAI,EAAI,EAAI,OACvB,GAAM,GAAK,GAAQ,IAAI,GAAO,GAAK,OAmBtC,IAAA,SAAA,EAAA,oBACQ,EAAQ,EAAU,EAAK,EAAK,GAAM,6EACtC,EAAQ,EAAU,CAAE,IAAK,EAAK,IAAK,EAAK,KAAM,MAE9C,GAAA,MAED,aAAe,SAAS,cAAc,UACtC,aAAe,SAAS,cAAc,SAEvC,KAAK,GAAK,aAAc,YAAa,MACrC,KAAK,GAAK,aAAc,aAAc,MAEtC,SAAS,GAAK,aAAc,YAC5B,SAAS,GAAK,aAAc,yBAEX,GAAG,UACb,cAAc,SAEnB,KAAK,OAAQ,YAAa,MAC1B,KAAK,OAAQ,UAAW,OAEhB,gBAGO,GAAG,IACpB,oBAEI,IAAS,GAAM,aAAa,kCAE5B,SACJ,GAAI,GAAE,QAAS,GAAO,KAAM,GAAO,MAAO,GAAM,MAAO,GAAM,QAGxD,gBAGY,GACf,OAAO,OAAQ,YAAa,MAC5B,OAAO,OAAQ,UAAW,IAC1B,GAAM,qBACF,iBAAiB,KAAK,GAAO,GAAM,wBAIvB,GAAG,CACnB,GAAE,QAAQ,SAAW,MACrB,KAAK,OAAQ,YAAa,MAC1B,KAAK,OAAQ,WAAY,OACjB,iBAGO,GAAG,IAChB,IAAU,GAAE,QAAQ,GAAG,QACvB,GAAS,GAAM,aAAa,2BAE5B,SACJ,GAAI,GAAS,GAAO,KAAM,GAAO,MAAO,GAAM,MAAO,GAAM,qBAIzC,GAChB,OAAO,OAAQ,YAAa,MAC5B,OAAO,OAAQ,WAAY,IAC3B,GAAM,qBACF,iBAAiB,KAAK,GAAO,GAAM,sBAIxC,mBAEA,aAAa,YAAY,GAAK,iBAC9B,WAAW,YAAY,GAAK,mEAGnB,IACR,GAAO,MAAK,WAAa,KAAK,OAAU,MAAK,MAAQ,KAAK,mBAC3D,aAAa,MAAM,MAAQ,EAAM,IAAM,yGA5EX,ICZ/B,GAAA,SAAA,EAAA,oBACQ,EAAQ,EAAU,EAAM,4EAC5B,EAAQ,IAER,GAAA,WAED,SAAW,SAAS,cAAc,SAClC,SAAS,UAAY,IAAS,OAAY,OAAS,IAEpD,KAAK,EAAK,SAAU,QAAS,SAAS,GAAG,WACzC,oBACI,OACC,OAGL,SAAS,EAAK,SAAU,YAEvB,WAAW,YAAY,EAAK,qDAG5B,CACD,KAAK,iBACF,WAAW,KAAK,WAElB,WAAW,KAAK,KAAK,QACtB,KAAK,uBACF,iBAAiB,KAAK,KAAM,KAAK,mBA1BX,ICA3B,GAAA,SAAA,EAAA,oBACQ,EAAQ,EAAU,4EACtB,EAAQ,MAET,QAAU,GAAI,IAAM,EAAK,cACzB,OAAS,GAAI,IAAM,MAElB,GAAA,IAED,WAAa,SAAS,cAAc,SAErC,eAAe,EAAK,WAAY,MAE/B,WAAa,SAAS,cAAc,SACpC,WAAW,UAAY,aAEvB,mBAAqB,SAAS,cAAc,SAC5C,mBAAmB,UAAY,qBAE/B,aAAe,SAAS,cAAc,SACtC,aAAa,UAAY,eACzB,oBAAsB,eAEtB,WAAa,SAAS,cAAc,SACpC,WAAW,UAAY,aAEvB,YAAc,SAAS,cAAc,SACrC,YAAY,UAAY,cAExB,QAAU,SAAS,cAAc,WACjC,QAAQ,KAAO,SACf,mBAAqB,eAEtB,KAAK,EAAK,QAAS,UAAW,SAAS,GAAG,CACxC,GAAE,UAAY,OACT,KAAK,UAIZ,KAAK,EAAK,QAAS,OAAQ,MAE3B,KAAK,EAAK,WAAY,YAAa,UAAkB,GAEpD,SAAS,KAAM,QACf,KAAK,OAAQ,UAAW,UAAkB,GACrC,YAAY,EAAM,WAAY,cAIpC,KAAK,EAAK,WAAY,aAAc,UAAkB,GAErD,SAAS,KAAM,QACf,KAAK,OAAQ,WAAY,UAAkB,GACtC,YAAY,EAAM,WAAY,eAIlC,IAAa,SAAS,cAAc,SAEnC,OAAO,EAAK,WAAW,MAAO,OAC5B,eACC,gBACC,sBACQ,iBACN,kCAGN,OAAO,EAAK,aAAa,MAAO,UAC3B,iBACH,cACC,cACA,EAAK,oBAAuB,GAAK,QAAQ,EAAI,GAAM,OAAS,kBACzD,2CACG,cACN,MAGH,OAAO,EAAK,WAAW,MAAO,UACzB,iBACH,cACC,kBACK,wBACL,MAGH,OAAO,EAAK,mBAAmB,MAAO,OACpC,eACC,eACA,6BACK,cACJ,sBACD,cAGH,OAAO,GAAW,MAAO,OACvB,cACC,kBACI,YAGC,GAAY,MAAO,gBAAiB,UAE5C,OAAO,EAAK,YAAY,MAAO,OAC7B,cACC,eACA,wBACA,qBACE,eACL,YACE,WAGG,EAAK,eAEV,OAAO,EAAK,QAAQ,MAAO,SACvB,iBAEE,eAGJ,cACC,aACI,kBACA,EAAK,mBAAqB,sBAGpC,KAAK,EAAK,mBAAoB,YAAa,MAC3C,KAAK,EAAK,mBAAoB,aAAc,MAE5C,KAAK,EAAK,aAAc,YAAa,MACrC,KAAK,EAAK,aAAc,aAAc,MAEtC,KAAK,EAAK,YAAa,YAAa,MACpC,KAAK,EAAK,YAAa,aAAc,gBAEtB,GAAG,IACd,MACF,KAAK,OAAQ,YAAa,MAC1B,KAAK,OAAQ,YAAa,MAC1B,KAAK,OAAQ,UAAW,MACxB,KAAK,OAAQ,WAAY,gBAGX,GAAG,IAChB,MACD,KAAK,OAAQ,YAAa,MAC1B,KAAK,OAAQ,YAAa,MAC1B,KAAK,OAAQ,UAAW,MACxB,KAAK,OAAQ,WAAY,iBAGV,GACf,OAAO,OAAQ,YAAa,MAC5B,OAAO,OAAQ,YAAa,MAC5B,OAAO,OAAQ,UAAW,MAC1B,OAAO,OAAQ,WAAY,sBAIb,GACd,OAAO,OAAQ,YAAa,MAC5B,OAAO,OAAQ,YAAa,MAC5B,OAAO,OAAQ,UAAW,MAC1B,OAAO,OAAQ,WAAY,sBAIf,IACV,IAAI,GAAU,KAAK,OACrB,KAAM,MACF,QAAQ,QAAU,KAClB,SAAS,EAAM,QAAQ,oBAExB,MAAQ,EAAM,QAAQ,wBAIX,CACd,EAAM,oBACF,iBAAiB,KAAK,EAAO,EAAM,QAAQ,gBAIhD,mBAAmB,YAAY,MAC/B,WAAW,YAAY,EAAK,gBAC5B,WAAW,YAAY,EAAK,sBAC5B,WAAW,YAAY,EAAK,eAC5B,YAAY,YAAY,EAAK,cAE7B,WAAW,YAAY,EAAK,WAC5B,WAAW,YAAY,EAAK,cAE5B,4BAEU,GAAG,CACZ,GAAE,KAAK,QAAQ,WAAa,OAAQ,oBAElC,IAAY,EAAM,mBAAmB,2BACb,GAAE,SAAW,GAAE,QAAQ,IAAO,GAApD,GAJQ,GAIR,QAAS,GAJD,GAIC,QACb,GAAK,IAAU,GAAU,MAAS,IAAU,MAAQ,GAAU,MAC9D,GAAI,EAAK,IAAU,GAAU,KAAQ,IAAU,OAAS,GAAU,WAElE,IAAI,KACF,EACK,GAAI,OACT,GAGF,GAAI,KACF,EACK,GAAI,OACT,KAGA,QAAQ,EAAI,KACZ,QAAQ,EAAI,KAEZ,SAAS,EAAM,QAAQ,cAGtB,eAGK,GAAG,CACX,GAAE,KAAK,QAAQ,WAAa,OAAQ,oBAElC,IAAY,EAAM,YAAY,2BACf,GAAE,SAAW,GAAE,QAAQ,IAAO,GAA3C,GAJO,GAIP,QACJ,GAAI,EAAK,IAAU,GAAU,KAAQ,IAAU,OAAS,GAAU,WAElE,IAAI,KACF,EACK,GAAI,OACT,KAGA,QAAQ,EAAI,GAAI,MAEhB,SAAS,EAAM,QAAQ,cAEtB,8DAIK,IACR,GAAI,GAAU,KAAK,eAErB,IAAM,GAAO,IACX,GAAW,KAIR,KAAK,GAAM,WAAY,SAAS,GAAW,IAC5C,CAAC,EAAO,YAAY,EAAE,MAAe,CAAC,EAAO,YAAY,KAAK,QAAQ,QAAQ,MAChF,EAAE,MAAe,KAAK,QAAQ,QAAQ,aAC3B,GACJ,IAER,MAIC,KACK,OAAO,KAAK,QAAQ,QAAS,KAIjC,OAAO,KAAK,OAAO,QAAS,KAAK,QAAQ,cAE3C,OAAO,EAAI,KAEV,GAAQ,KAAK,QAAQ,EAAI,IAAO,KAAK,QAAQ,EAAI,GAAO,IAAM,EAC9D,GAAQ,IAAM,IAEb,OAAO,KAAK,aAAa,MAAO,YACzB,IAAM,KAAK,QAAQ,EAAI,EAAI,eAC5B,IAAO,GAAI,KAAK,QAAQ,GAAK,EAAI,qBAC3B,KAAK,OAAO,qBACrB,KAAK,oBAAsB,OAAS,EAAO,IAAM,EAAO,IAAM,EAAO,WAG1E,WAAW,MAAM,UAAa,GAAI,KAAK,QAAQ,EAAI,KAAO,IAAM,UAEhE,OAAO,EAAI,OACX,OAAO,EAAI,KAED,KAAK,mBAAoB,OAAQ,OAAQ,KAAK,OAAO,oBAE/D,QAAQ,MAAQ,KAAK,QAAQ,aAE3B,OAAO,KAAK,QAAQ,MAAO,iBACf,KAAK,QAAQ,oBACvB,OAAS,EAAO,IAAM,EAAO,IAAM,EAAO,eACrC,KAAK,mBAAqB,QAAU,GAAQ,IAAM,GAAQ,IAAM,GAAQ,gBArS5D,IA0SxB,GAAU,CAAC,QAAS,MAAO,WAAY,OAAQ,IAErD,YAAwB,EAAM,EAAG,EAAG,EAAG,GAChC,MAAM,WAAa,KACjB,KAAK,GAAS,SAAS,EAAQ,GAC/B,MAAM,SAAW,eAAiB,EAAS,mBAAqB,EAAI,KAAO,EAAI,QAAU,EAAI,aAItG,YAAqB,EAAM,GACpB,MAAM,WAAa,KACnB,MAAM,SAAW,uIACjB,MAAM,SAAW,oIACjB,MAAM,SAAW,+HACjB,MAAM,SAAW,gIACjB,MAAM,SAAW,0HCpUxB,GAAM,IAAM,MACJ,SAAS,EAAK,EAAO,IACnB,GAAM,GAAS,SACf,EAAO,EAAI,cAAc,UAC1B,KAAO,aACP,IAAM,eACN,KAAO,IACR,qBAAqB,QAAQ,GAAG,YAAY,WAG1C,SAAS,EAAY,EAAO,IAC5B,GAAM,GAAS,SACf,EAAW,SAAS,cAAc,WAC/B,KAAO,aACP,UAAY,KACf,GAAO,EAAI,qBAAqB,QAAQ,MAC1C,GACG,YAAY,SACV,GAAP,KC/BA,GAAA;;;;;;;;;;;;;;;;;;;;QCqBA,GAAoB,SAAS,EAAQ,EAAU,IAC7C,GAAe,EAAO,SAGxB,GAAO,QAAQ,UAAU,KAAO,EAAO,SAAS,UAAU,IACrD,GAAI,IAAiB,EAAQ,EAAU,UAAU,IAItD,EAAO,SAAS,GAEd,EAAO,SAAS,UAAU,KAAO,EAAO,SAAS,UAAU,IAEzD,EAAO,SAAS,UAAU,IACrB,GAAI,IAAuB,EAAQ,EAC1B,UAAU,GAAI,UAAU,GAAI,UAAU,IAGjD,GAAI,IAAuB,EAAQ,EAAU,UAAU,GAAI,UAAU,IAI1E,EAAO,SAAS,UAAU,IACrB,GAAI,IAAoB,EAAQ,EACrB,CAAE,IAAK,UAAU,GAAI,IAAK,UAAU,GAAI,KAAM,UAAU,KAErE,GAAI,IAAoB,EAAQ,EAAU,CAAE,IAAK,UAAU,GAAI,IAAK,UAAU,KAGnF,EAAO,SAAS,GACX,GAAI,IAAiB,EAAQ,GAGlC,EAAO,WAAW,GACb,GAAI,IAAmB,EAAQ,EAAU,IAG9C,EAAO,UAAU,GACZ,GAAI,IAAkB,EAAQ,GAGhC,MCjDT,YAA+B,EAAU,YAC5B,EAAU,IAAO,IAG9B,GAAA,IAAe,OAAO,uBAClB,OAAO,6BACP,OAAO,0BACP,OAAO,wBACP,OAAO,yBACP,GCNE,GAAA,UAAA,aACU,iBACP,kBAAoB,SAAS,cAAc,SACzC,OAAO,KAAK,kBAAkB,MAAO,iBACzB,sBACZ,OACC,UACG,cACD,eACC,mBACS,iCACN,0BAGV,eAAe,KAAK,wBACnB,kBAAkB,MAAM,SAAW,aAEnC,WAAa,SAAS,cAAc,SAClC,OAAO,KAAK,WAAW,MAAO,UACzB,gBACD,cACD,eACC,mBACS,kEACN,0DAIL,KAAK,YAAY,KAAK,4BACtB,KAAK,YAAY,KAAK,eAEzB,GAAQ,OACV,KAAK,KAAK,kBAAmB,QAAS,UAAW,GAC7C,kDAIH,IACC,GAAQ,UAET,kBAAkB,MAAM,QAAU,aAElC,WAAW,MAAM,QAAU,aAC3B,WAAW,MAAM,QAAU,OAE3B,WAAW,MAAM,gBAAkB,kBAEnC,WAEE,MAAM,UAAW,GAChB,kBAAkB,MAAM,QAAU,IAClC,WAAW,MAAM,QAAU,IAC3B,WAAW,MAAM,gBAAkB,2CAOtC,IACC,GAAQ,KAER,EAAO,YAAW,GAChB,WAAW,MAAM,QAAU,SAC3B,kBAAkB,MAAM,QAAU,SAEpC,OAAO,EAAM,WAAY,sBAAuB,KAChD,OAAO,EAAM,WAAY,gBAAiB,KAC1C,OAAO,EAAM,WAAY,iBAAkB,MAG7C,KAAK,KAAK,WAAY,sBAAuB,KAC7C,KAAK,KAAK,WAAY,gBAAiB,KACvC,KAAK,KAAK,WAAY,iBAAkB,QAEvC,kBAAkB,MAAM,QAAU,OAElC,WAAW,MAAM,QAAU,OAC3B,WAAW,MAAM,gBAAkB,6CAGjC,MACF,WAAW,MAAM,KAAO,OAAO,WAAa,EAAI,EAAI,SAAS,KAAK,YAAc,EAAI,UACpF,WAAW,MAAM,IAAM,OAAO,YAAc,EAAI,EAAI,UAAU,KAAK,YAAc,EAAI;GCtE9F,GAAI,OAAO,IAGX,GAAM,IAAgB,KAEhB,GAAgB,GAGhB,GAAsB,GAEtB,GAA8B,UAE9B,GAA0B,UAAW,IACrC,OACK,CAAC,CAAC,OAAO,mBACT,EAAP,OACO,OAIP,GAAA,OAGA,GAAkB,GAGlB,GAAA,OAGA,GAAO,GAGL,GAAe,GA2Bf,GAAM,WAAS,EAAM,IACnB,GAAQ,KAEV,EAAS,GAAQ,QAMhB,WAAa,SAAS,cAAc,YACpC,KAAO,SAAS,cAAc,WAC9B,WAAW,YAAY,KAAK,QAE7B,SAAS,KAAK,WAAY,SAMzB,UAAY,QAEZ,cAAgB,QAMhB,oBAAsB,QAoBtB,uCAAyC,QAEzC,YAAc,KAGV,EAAO,SAAS,EAAQ,YACnB,aACD,SACJ,EAAI,kBAGJ,EAAO,SAAS,EAAQ,WACpB,EAAO,mBACR,EAAO,YAGd,EAAO,YAAY,EAAO,QAMtB,KAAO,CAAE,OAAQ,IAJpB,EAAO,WACF,KAAK,OAAS,EAAO,QAM5B,EAAO,YAAY,EAAO,SAAW,EAAO,aACjC,KAAK,QAIb,UAAY,EAAO,YAAY,EAAO,SAAW,EAAO,UAE3D,EAAO,WAAa,EAAO,YAAY,EAAO,gBACzC,WAAa,OAMlB,GACF,IACA,aAAa,QAAQ,GAAoB,KAAM,cAAgB,OAE7D,EAAA,OACA,GAAA,iBAEG,iBAAiB,aAOZ,KACD,UAAW,OACP,GAAO,oBAIN,KACL,UAAW,OACP,GAAO,uBAQP,KACJ,UAAW,OACP,GAAO,uBAQN,KACL,UAAW,OACP,GAAO,oBAQV,KACD,UAAW,OACV,GAAM,OACD,EAAM,UAAU,OAGlB,EAAO,KAAK,YAGhB,SAAS,GAAG,CACX,EAAM,SACF,UAAU,OAAS,KAElB,KAAK,OAAS,MAEF,QACf,iBAQH,KACA,UAAW,OACP,GAAO,WAEX,SAAS,GAAG,GACR,MAAQ,MACN,EAAO,WASd,KACC,UAAW,OACP,GAAO,UAEX,SAAS,GAAG,GAER,KAAO,GACV,QACO,UAAY,EAAO,eAS1B,KACD,UAAW,OACP,GAAO,YAEX,SAAS,GAAG,GACR,OAAS,GACZ,EAAO,SACL,SAAS,EAAM,KAAM,EAAI,gBAEzB,YAAY,EAAM,KAAM,EAAI,mBAK7B,WAED,EAAM,kBACF,cAAc,UAAY,GAAI,EAAI,UAAY,EAAI,oBASxD,KACC,UAAW,OACP,GAAO,uBASD,KAEV,UAAW,OACP,QAEJ,SAAS,GAAM,CACd,OACgB,GACd,KACE,KAAK,OAAQ,SAAU,KAEvB,OAAO,OAAQ,SAAU,gBAElB,QAAQ,GAAoB,EAAO,WAAY,SAOlE,EAAO,YAAY,EAAO,QAAS,SAChC,OAAS,EAAO,QAAU,KAE3B,SAAS,KAAK,WAAY,EAAI,cAC9B,eAAe,KAAK,WAAY,IAGhC,IACE,EAAiB,GACb,gBAAkB,MAElB,IAAW,aAAa,QAAQ,GAAoB,KAAM,QAE5D,OACK,KAAO,KAAK,MAAM,UAK1B,cAAgB,SAAS,cAAc,YACvC,cAAc,UAAY,EAAI,cAC/B,SAAS,KAAK,cAAe,EAAI,oBACjC,EAAO,cACL,SAAS,KAAK,cAAe,EAAI,sBAChC,WAAW,aAAa,KAAK,cAAe,KAAK,WAAW,WAAW,QAExE,SAAS,KAAK,cAAe,EAAI,yBAChC,WAAW,YAAY,KAAK,kBAG/B,KAAK,KAAK,cAAe,QAAS,UAAW,GACzC,OAAS,CAAC,EAAM,aAGnB,CACD,EAAO,SAAW,WACb,OAAS,OAGZ,IAAe,SAAS,eAAe,EAAO,QAChD,SAAS,GAAc,sBAEhB,GAAO,EAAO,OAEnB,IAAe,SAAS,GAAG,WAC7B,mBACI,OAAS,CAAC,EAAM,OACf,MAGL,SAAS,KAAK,KAAM,EAAI,gBAExB,SAAS,GAAU,WACnB,KAAK,GAAU,QAAS,IAEvB,EAAO,cACL,OAAS,IAId,EAAO,WACL,GAAO,YAAY,EAAO,SACxB,SACmB,SAAS,cAAc,SACxC,SAAS,GAAoB,MAC7B,SAAS,GAAoB,EAAI,qCAC5B,KAAK,YAAY,OACR,OAID,YAAY,KAAK,cAGhC,SAAS,KAAK,WAAY,EAAI,mBAK/B,KAAK,WACC,EAAO,EAAO,aAItB,gBAAkB,UAAW,GAC1B,uBAGJ,KAAK,OAAQ,SAAU,KAAK,mBAC5B,KAAK,KAAK,KAAM,sBAAuB,KAAK,mBAC5C,KAAK,KAAK,KAAM,gBAAiB,KAAK,mBACtC,KAAK,KAAK,KAAM,iBAAkB,KAAK,sBACtC,WAED,EAAO,cACO,QAGG,UAAW,CAC1B,IAA0B,aAAa,QAAQ,GAAoB,EAAO,cAAgB,qBAC/E,QAAQ,GAAoB,EAAO,OAAQ,KAAK,UAAU,EAAM,wBAK5E,6BAA+B,eAEd,IACd,IAAO,EAAM,aACd,OAAS,IACP,MAAM,UAAW,IACjB,OAAS,IAIb,EAAO,cAKd,GAAI,WAAa,UAAW,IACnB,CAAC,KACD,KAAK,GAAc,SAAS,EAAK,GAClC,WAAW,MAAM,QAAU,GAAO,OAAS,MAInD,GAAI,iBAAmB,IACvB,GAAI,2BAA6B,KACjC,GAAI,WAAa,OACjB,GAAI,qBAAuB,KAC3B,GAAI,eAAiB,qBACrB,GAAI,aAAe,SACnB,GAAI,mBAAqB,eACzB,GAAI,gBAAkB,YACtB,GAAI,mBAAqB,eACzB,GAAI,WAAa,OAEjB,GAAI,cAAgB,IACpB,GAAI,YAAc,iBAClB,GAAI,UAAY,gBAEhB,GAAI,gBAAkB,SAAS,EAAG,CAC5B,SAAS,cAAc,OAAS,QACjC,GAAE,QAAU,IAAiB,EAAE,UAAY,QACxC,cAGR,EAAI,KAAK,OAAQ,UAAW,GAAI,gBAAiB,IAEjD,EAAO,OACL,GAAI,UAGJ,KAyBO,SAAS,EAAQ,EAAU,OACvB,IACL,KACA,EACA,EACA,aACe,MAAM,UAAU,MAAM,KAAK,UAAW,eAyB/C,SAAS,EAAQ,EAAU,OAC5B,IACL,KACA,EACA,EACA,OACS,aAUL,SAAS,EAAY,MAEtB,KAAK,YAAY,EAAW,WAC5B,cAAc,OAAO,KAAK,cAAc,QAAQ,GAAa,MAC5D,GAAQ,OACP,MAAM,UAAW,GAChB,sBASD,UAAW,IACd,KAAK,YACD,IAAI,OACR,8GAKA,KAAK,cACY,YAAY,KAAK,eAGhC,GAAQ,OACP,KAAK,KAAK,UAAW,SAAS,EAAW,GACxC,aAAa,OAGjB,OAAO,OAAQ,UAAW,GAAI,gBAAiB,OAEnC,iBAWP,SAAS,EAAM,IAGpB,KAAK,UAAU,KAAU,YACrB,IAAI,OAAM,sDACF,EAAO,QAGjB,GAAe,CAAE,KAAM,EAAM,OAAQ,QAK9B,UAAY,KAAK,UAG1B,KAAK,WACF,KAAK,cACL,KAAK,QAAQ,OAEL,OAAS,KAAK,KAAK,QAAQ,GAAM,SAGjC,KAAO,KAAK,KAAK,QAAQ,OAGlC,GAAM,GAAI,IAAI,QACf,UAAU,GAAQ,KAEjB,GAAK,GAAO,KAAM,EAAI,qBACxB,SAAS,EAAI,UACV,gBAQK,SAAS,EAAQ,MACxB,KAAK,YAAY,EAAO,WAAW,qBAEjC,MAAK,UAAU,EAAO,MAGzB,KAAK,WACF,KAAK,cACL,KAAK,QAAQ,EAAO,aAClB,MAAK,KAAK,QAAQ,EAAO,SAGlB,MAEV,GAAQ,OAEP,KAAK,EAAO,UAAW,SAAS,EAAW,GACzC,aAAa,OAGf,MAAM,UAAW,GAChB,mBAOJ,UAAW,MACV,OAAS,UAMT,UAAW,MACX,OAAS,SAMV,UAAW,MACV,WAAW,MAAM,QAAU,aAM5B,UAAW,MACV,WAAW,MAAM,QAAU,aAIxB,UAAW,IAEb,GAAO,KAAK,aACd,EAAK,WAAY,IACb,GAAM,EAAI,UAAU,EAAK,MAAM,IACjC,EAAI,IAED,KAAK,EAAK,KAAK,WAAY,SAAS,EAAM,CACzC,EAAK,WAAa,IAAS,EAAK,gBAC/B,EAAI,UAAU,MAInB,OAAO,YAAc,EAAM,GAAsB,KAC/C,SAAS,EAAK,WAAY,GAAI,kBAC7B,KAAK,MAAM,OAAS,OAAO,YAAc,EAAM,GAAsB,SAEtE,YAAY,EAAK,WAAY,GAAI,kBAChC,KAAK,MAAM,OAAS,QAIzB,EAAK,mBACA,MAAM,UAAW,GACjB,gBAAgB,MAAM,OAAS,EAAK,KAAK,aAAe,OAI7D,EAAK,kBACF,cAAc,MAAM,MAAQ,EAAK,MAAQ,yBAI/B,EAAO,SAAS,UAAW,MAAO,YAAe,aAY1D,UAAW,IACf,EAAO,YAAY,SACL,GAAI,OACN,WAAW,UAAY,IAGnC,KAAK,YACD,IAAI,OAAM,qDAGZ,GAAQ,OAEP,KAAK,MAAM,UAAU,MAAM,KAAK,WAAY,SAAS,EAAQ,CAC9D,EAAM,oBAAoB,SAAW,MAC3B,GAEV,EAAM,oBAAoB,QAAQ,KAAY,MAC1C,oBAAoB,KAAK,KAI/B,KAAK,cAEE,KAAM,KAAK,gBAQf,UAAW,QACd,GAAM,KACH,EAAI,UACH,EAAI,aAEL,kBAQM,UAAW,IAClB,GAAW,KAAK,cACb,OAAS,KAAK,OAGnB,KAAK,oBAAoB,OAAS,MAC3B,OAAS,KAAK,OAElB,EAAS,eACH,WAAa,MAGf,WAAW,KAAK,QAAU,GAAiB,SAG7C,QAAU,KACZ,KAAK,KAAK,UAAW,SAAS,EAAS,EAAK,GACxC,QAAQ,GAAO,EAAQ,kBAG3B,QAGH,UAAW,CACV,KAAK,KAAK,kBACR,KAAK,WAAa,SAGpB,KAAK,WAAW,KAAK,QAAU,GAAiB,SAClC,KAAM,SACpB,uCAGC,SAAS,EAAY,CACtB,KAAK,KAAK,kBAER,KAAK,WAAa,QAClB,KAAK,WAAW,IAA+B,GAAiB,KAAM,UAGxE,KAAK,WAAW,GAAc,GAAiB,WAC/C,OAAS,KACE,KAAM,EAAY,SAC7B,uCAGC,SAAS,EAAK,GACb,KAAK,KAAK,cAAe,SAAS,EAAY,CAE9C,KAAK,UAAU,KAAK,cAGN,GAAO,KAAK,UAAW,KAF7B,SAAS,EAAW,cAM7B,EAAW,oBACF,iBAAiB,KAAK,EAAY,EAAW,aAEzD,QAEI,KAAK,KAAK,UAAW,SAAS,EAAQ,GACpC,OAAO,KAGX,MACgB,KAAK,UAAW,YAI/B,SAAS,EAAY,IACrB,GAAO,KAAK,YAAY,SAAW,OACpC,YAAY,KAAK,GAClB,MACa,KAAK,4BAIT,UAAW,GACjB,KAAK,KAAK,cAAe,SAAS,EAAY,GACxC,oBAEN,KAAK,KAAK,UAAW,SAAS,EAAQ,GACpC,qBAef,YAAgB,EAAK,EAAQ,EAAU,IAC/B,GAAK,SAAS,cAAc,YAC9B,MACC,YAAY,GAGb,IACE,KAAK,aAAa,EAAI,KAEtB,KAAK,YAAY,KAEnB,WACG,EAGT,YAAyB,EAAK,GACxB,OAAO,OAAQ,SAAU,EAAI,iBAE7B,EAAI,gCACF,OAAO,OAAQ,SAAU,EAAI,8BAIrC,YAA4B,EAAK,EAAU,IACnC,GAAM,EAAI,gBAAgB,EAAI,gBAAgB,eAEhD,IACE,UAAY,EAAI,MAAQ,MAExB,UAAY,EAAI,MAIxB,YAA2B,EAAK,EAAI,EAAY,MACnC,KAAO,IACP,MAAQ,IAEZ,OAAO,EAA+C,SAKlD,SAAS,GAAS,IACrB,UAAU,OAAS,EAAG,IAClB,IAAc,EAAW,KAAK,4BACzB,SAEJ,GACL,EACA,EAAW,OACX,EAAW,SACX,QACU,eACK,CAAC,EAAO,QAAQ,iBAK/B,EAAO,QAAQ,KAAY,EAAO,SAAS,IAAU,IACjD,IAAc,EAAW,KAAK,4BACzB,SAEJ,GACL,EACA,EAAW,OACX,EAAW,SACX,QACU,eACK,CAAC,aAWhB,SAAS,GAAM,UACR,KAAK,kBAAkB,kBAAkB,UAAY,GACzD,UAOD,UAAW,UACN,MAAM,OAAO,GACjB,UAOD,UAAW,UACN,MAAM,OAAO,GACjB,KAKP,YAAsB,IAAwB,IAC1C,GAAM,GAAI,IAAoB,EAAW,OAAQ,EAAW,SAChE,CAAE,IAAK,EAAW,MAAO,IAAK,EAAW,MAAO,KAAM,EAAW,WAE5D,KAAK,CAAC,gBAAiB,WAAY,iBAAkB,OAAQ,MAAO,OAAQ,SAAS,EAAQ,IAC5F,IAAK,EAAW,GAChB,GAAK,EAAI,KACJ,GAAU,EAAI,GAAU,UAAW,IACtC,IAAO,MAAM,UAAU,MAAM,KAAK,qBACrC,MAAM,EAAK,IACP,GAAG,MAAM,EAAY,SAI5B,SAAS,EAAI,gBACN,WAAW,aAAa,EAAI,WAAY,EAAW,WAAW,2BAChE,YAAsB,IAAqB,IAC9C,GAAI,SAAS,GAAU,IAEvB,EAAO,SAAS,EAAW,QAAU,EAAO,SAAS,EAAW,OAAQ,IAIpE,IAAU,EAAW,KAAK,kBAAkB,kBAAkB,UAC9D,GAAe,EAAW,MAAM,YAAY,QAAQ,GAAc,KAE7D,YACL,IAAgB,GACpB,EACA,EAAW,OACX,EAAW,SACX,QACU,EAAW,KAAK,+BACX,CAAC,EAAW,MAAO,EAAW,MAAO,EAAW,oBAGnD,KAAK,IACf,IAAc,GAAc,SAEzB,SAGF,OAGE,IAAM,EAAO,QAAQ,EAAG,EAAW,OACnC,IAAM,EAAO,QAAQ,EAAG,EAAW,SACzC,AAAI,aAAsB,OAC3B,KAAK,EAAI,QAAS,UAAW,GAC3B,UAAU,EAAW,WAAY,aAGnC,KAAK,EAAW,WAAY,QAAS,SAAS,EAAG,GACjD,qBAEC,AAAI,YAAsB,OAC3B,KAAK,EAAI,QAAS,UAAW,GAC3B,UAAU,EAAW,SAAU,aAGjC,KAAK,EAAI,YAAa,UAAW,GAC/B,SAAS,EAAW,SAAU,aAGhC,KAAK,EAAI,WAAY,UAAW,GAC9B,YAAY,EAAW,SAAU,YAE9B,YAAsB,QAC3B,SAAS,EAAI,WACN,cAAgB,EAAO,QAAQ,SAAS,EAAK,UACnD,MAAM,gBAAkB,EAAW,QAAQ,WACvC,GACN,EAAW,iBAEH,mBAGF,SAAW,EAAO,QAAQ,SAAS,EAAK,OAC7C,GAAI,UAAU,iBAAmB,EAAW,iBAC3B,EAAI,UAAW,IAG7B,GACN,EAAW,UAGhB,YAA0B,EAAK,EAAY,IAEnC,GAAO,EAAI,UAIX,EAAe,EAAK,oBAAoB,QAAQ,EAAW,WAG7D,IAAiB,GAAI,IAEnB,GAAgB,EAAK,uCAAuC,MAI5D,IAAkB,WACJ,KACX,uCAAuC,GAC1C,KAIU,EAAW,UAAY,EAGjC,EAAK,MAAQ,EAAK,KAAK,WAAY,IAC/B,GAAY,EAAK,KAAK,WAGxB,GAAA,UAEA,EAAU,EAAI,WACP,EAAU,EAAI,gBACd,EAAU,OAEV,EAAU,mBAOjB,GAAO,IAAiB,GAAO,GAAc,EAAW,YAAc,OAAW,IAE7E,IAAQ,GAAO,GAAc,EAAW,YAGnC,aAAe,KACf,SAAS,OAM5B,YAAa,EAAK,EAAQ,EAAU,EAAQ,IACtC,EAAO,KAAc,YACjB,IAAI,OAAJ,WAAqB,EAArB,sBAAiD,EAAjD,QAGJ,GAAA,UAEA,EAAO,QACI,GAAI,IAAgB,EAAQ,OACpC,IACC,GAAc,CAAC,EAAQ,GAAU,OAAO,EAAO,eACxC,GAAkB,MAAM,EAAK,GAGxC,EAAO,iBAAkB,QACpB,OAAS,EAAO,OAAO,SAGf,EAAK,KAElB,SAAS,EAAW,WAAY,QAE9B,IAAO,SAAS,cAAc,UAChC,SAAS,GAAM,oBACd,UAAY,EAAW,YAEtB,IAAY,SAAS,cAAc,UAC/B,YAAY,OACZ,YAAY,EAAW,eAE3B,IAAK,GAAO,EAAK,GAAW,EAAO,iBAErC,SAAS,GAAI,GAAI,sBACjB,YAAsB,MACpB,SAAS,GAAI,WAEb,SAAS,GAAb,GAAwB,EAAW,gBAGnB,EAAK,GAAI,KAEvB,cAAc,KAAK,GAEhB,EAGT,YAA6B,EAAK,EAAK,OAE9B,UAAS,SAAS,KAAO,IAAM,EAGxC,YAAyB,EAAK,EAAM,EAAa,IACzC,GAAM,SAAS,cAAc,YAC/B,UAAY,IACZ,MAAQ,IACR,gBAAgB,YAAY,GAC5B,MACE,gBAAgB,cAAgB,EAAI,gBAAgB,OAAS,GAIrE,YAAyB,EAAK,EAAS,GAC7B,MAAM,QAAU,EAAI,gBAAkB,QAAU,OAG1D,YAAqB,EAAK,IAClB,GAAM,EAAI,WAAa,SAAS,cAAc,QAEhD,SAAS,EAAI,WAAY,cAEzB,KAAK,aAAa,EAAK,EAAI,KAAK,cAEhC,SAAS,EAAK,eAEZ,GAAQ,SAAS,cAAc,UAC/B,UAAY,WACd,SAAS,EAAO,mBAGd,GAAS,SAAS,cAAc,UAC/B,UAAY,SACf,SAAS,EAAQ,YACjB,SAAS,EAAQ,WAEf,GAAU,SAAS,cAAc,UAC/B,UAAY,QAChB,SAAS,EAAS,YAClB,SAAS,EAAS,cAEhB,GAAU,SAAS,cAAc,UAC/B,UAAY,WAChB,SAAS,EAAS,YAClB,SAAS,EAAS,aAEhB,IAAS,EAAI,gBAAkB,SAAS,cAAc,aAExD,EAAI,MAAQ,EAAI,KAAK,aAChB,KAAK,EAAI,KAAK,WAAY,SAAS,GAAO,GAAK,IACpC,EAAK,GAAK,KAAQ,EAAI,aAGxB,EAAK,GAA6B,MAGhD,KAAK,GAAQ,SAAU,UAAW,QAC3B,IAAQ,EAAG,GAAQ,EAAI,gBAAgB,OAAQ,OAClD,gBAAgB,IAAO,UAAY,EAAI,gBAAgB,IAAO,QAGhE,OAAS,KAAK,UAGhB,YAAY,MACZ,YAAY,KACZ,YAAY,KACZ,YAAY,KACZ,YAAY,GAEZ,GAAwB,IACpB,IAAU,SAAS,eAAe,oBAClC,GAAuB,SAAS,eAAe,oBAC/C,GAAc,SAAS,eAAe,sBAEhC,MAAM,QAAU,QAExB,aAAa,QAAQ,GAAoB,EAAK,cAAgB,WAC3C,aAAa,UAAW,cAG/B,EAAK,MAGjB,KAAK,GAAsB,SAAU,UAAW,GAC9C,gBAAkB,CAAC,EAAI,mBACX,EAAK,SAInB,IAAyB,SAAS,eAAe,wBAEnD,KAAK,GAAwB,UAAW,SAAS,GAAG,CAClD,GAAE,SAAY,IAAE,QAAU,IAAM,GAAE,UAAY,QAClC,WAId,KAAK,EAAO,QAAS,UAAW,IACX,UAAY,KAAK,UAAU,EAAI,gBAAiB,OAAW,MACpE,UACS,WACA,aAGrB,KAAK,EAAQ,QAAS,UAAW,GAC/B,WAGF,KAAK,EAAS,QAAS,UAAW,IAC9B,IAAa,OAAO,4BACtB,MACE,OAAO,QAIX,KAAK,EAAS,QAAS,UAAW,GAChC,WAMR,YAAyB,EAAK,IACxB,GAAA,SAEA,gBAAkB,SAAS,cAAc,SAEtC,OAAO,EAAI,gBAAgB,MAAO,OAEhC,iBACK,cACJ,eACA,qBACE,wBAKE,EAAG,UACb,mBAEE,OAAS,EAAU,EAAE,UACrB,aACM,EAAE,QAEL,eAGW,GACd,YAAY,EAAI,cAAe,GAAI,cACnC,OAAO,OAAQ,YAAa,KAC5B,OAAO,OAAQ,UAAW,cAGb,EAAG,UAClB,mBAEQ,EAAE,UAER,SAAS,EAAI,cAAe,GAAI,cAChC,KAAK,OAAQ,YAAa,KAC1B,KAAK,OAAQ,UAAW,GAErB,KAGL,KAAK,EAAI,gBAAiB,YAAa,KACvC,KAAK,EAAI,cAAe,YAAa,KAErC,WAAW,aAAa,EAAI,gBAAiB,EAAI,WAAW,mBAGlE,YAAkB,EAAK,EAAG,GACpB,WAAW,MAAM,MAAQ,EAAI,KAG7B,EAAI,YAAc,EAAI,cACpB,WAAW,MAAM,MAAQ,EAAI,MAE/B,EAAI,kBACF,cAAc,MAAM,MAAQ,EAAI,MAIxC,YAA0B,EAAK,EAAkB,IACzC,GAAW,YAGV,KAAK,EAAI,oBAAqB,SAAS,EAAK,EAAO,IAClD,GAAc,GAGd,GACJ,EAAI,uCAAuC,KAGtC,KAAK,GAAe,SAAS,GAAY,GAAU,GAC5C,IAAY,EAAmB,GAAW,aAAe,GAAW,eAIzE,GAAS,IAGb,EAGT,YAA8B,EAAK,QACxB,GAAQ,EAAG,EAAQ,EAAI,gBAAgB,OAAQ,IAClD,EAAI,gBAAgB,GAAO,QAAU,EAAI,WACvC,gBAAgB,cAAgB,GAK1C,YAAwB,EAAiB,CACnC,EAAgB,SAAW,MACP,KAAK,OAAQ,UAAW,IAC7B,OAIZ,KAAK,EAAiB,SAAS,EAAG,GACrC,kBC91CC,GAAM,IAAQ,OACZ,QACD,aACK,IAGA,GAAc,YACb,qBACO,oBACD,oBACA,oBACA,uBACG,0BACG,sBACJ,mBACH,IAGN,GAAM,CAAE,IAAK,GAEb,GAAM,CAAE,IAAK,IAEb,GAAM,GAEnB,GAAe,wKCtDf,oBAKA,AAAC,UAAU,EAAQ,GAAS,CAC3B,MAAO,KAAY,UAAY,MAAO,KAAW,YAAc,GAAQ,IACvE,MAAO,SAAW,YAAc,OAAO,IAAM,OAAO,CAAC,WAAY,IAChE,GAAS,MAAO,aAAe,YAAc,WAAa,GAAU,KAAM,GAAQ,EAAO,MAAQ,OAChG,GAAO,SAAU,EAAS,CAAE,aAE9B,GAAM,IAAW,SACX,GAAQ,CACb,KAAM,EACN,OAAQ,EACR,MAAO,EACP,OAAQ,EACR,MAAO,EACP,IAAK,GAEA,GAAQ,CACb,OAAQ,EACR,IAAK,EACL,UAAW,EACX,aAAc,GAET,GAAe,EACf,EAAe,EACf,GAAgB,EAChB,GAAoB,EACpB,GAAiB,EACjB,GAAe,EACf,GAAmB,EACnB,GAAe,EACf,GAAY,EACZ,GAAW,EACX,GAAa,EACb,GAAc,EACd,GAAgB,EAChB,GAAa,EACb,GAAiB,EACjB,GAAmB,EACnB,GAAsB,EACtB,GAAmB,EACnB,GAAiB,EACjB,GAAc,IACd,GAAmB,IACnB,GAA0B,IAC1B,EAAc,IACd,GAAc,IACd,GAAa,IACb,GAAY,IACZ,GAAiB,IACjB,GAAyB,IACzB,GAAiB,IACjB,GAAyB,IACzB,GAAiB,IACjB,GAAyB,IACzB,GAAiB,IACjB,GAAyB,IACzB,GAAyB,IACzB,GAAa,EACb,GAAc,EACd,GAAY,EACZ,GAAiB,EACjB,GAAa,EACb,GAAoB,EACpB,GAAe,EACf,GAAgB,EAChB,GAAoB,EACpB,GAAe,EACf,GAAe,EACf,GAAgB,EAChB,GAAoB,EACpB,GAAsB,EACtB,GAAoB,EACpB,GAAwB,EACxB,GAAoB,EACpB,GAAY,IACZ,GAAwB,IACxB,GAAwB,IACxB,GAAmC,IACnC,GAAmC,IACnC,GAA0B,IAC1B,GAA0B,IAC1B,GAAiB,IACjB,GAAsB,KACtB,GAAyB,KACzB,GAAgB,KAChB,GAA6B,KAC7B,GAA6B,KAC7B,GAA4B,KAC5B,GAA4B,KAC5B,GAAe,KACf,GAA4B,KAC5B,GAA4B,KAC5B,GAA2B,KAC3B,GAA2B,KAC3B,GAAmB,KACnB,GAAW,KACX,GAAY,KACZ,GAAoB,KACpB,EAAU,KACV,EAAkB,KAClB,EAAY,KACZ,EAAgB,KAChB,EAAwB,KACxB,EAAwB,KACxB,GAAuB,KACvB,GAAqB,KACrB,GAAc,KACd,GAAY,KACZ,GAAa,KACb,GAAkB,KAClB,GAAuB,KACvB,GAAa,GACb,GAAc,KACd,GAAqB,KACrB,GAAY,KACZ,GAAmB,KACnB,GAAW,KACX,GAAkB,KAClB,GAAmB,KACnB,GAAoB,KACpB,EAAuB,MACvB,EAAwB,MACxB,EAAwB,MACxB,EAAwB,MACxB,GAA0B,MAC1B,GAA0B,MAC1B,GAA2B,MAC3B,GAA2B,MAC3B,GAAkB,MAClB,EAAkB,MAClB,GAAuB,MACvB,GAAuB,MACvB,GAAuB,MACvB,GAAuB,MACvB,GAAuB,MACvB,GAAuB,MACvB,GAAuB,MACvB,GAAuB,MACvB,GAAuB,MACvB,GAAwB,MACxB,GAAwB,MACxB,GAAwB,MACxB,GAAyB,MACzB,GAAyB,MACzB,GAAyB,MACzB,GAAmB,MACnB,GAA+B,MAC/B,GAA+B,MAC/B,GAA+B,MAC/B,GAA+B,MAC/B,GAA+B,MAC/B,GAA+B,MAC/B,GAA+B,MAC/B,GAA+B,MAC/B,GAAgC,MAChC,GAAgC,MAChC,GAAgC,MAChC,GAAiC,MACjC,GAAiC,MACjC,GAAiC,MACjC,GAAW,KACX,GAAa,KACb,GAAe,KACf,GAAsB,KACtB,GAAoB,KACpB,GAAoB,KACpB,GAAsB,KACtB,GAAkB,KAClB,GAAmB,KACnB,GAA2B,KAC3B,GAA6B,KAC7B,GAAoB,EACpB,GAAwB,EACxB,GAAsB,EACtB,GAAiB,IACjB,GAAe,KACf,GAAgB,KAChB,GAAe,KACf,GAAiB,KACjB,GAAgB,KAChB,GAAiB,KACjB,GAAe,KACf,GAAoB,KACpB,GAAmB,KACnB,GAAwB,EACxB,GAAuB,EACvB,GAAgB,EAChB,GAAgB,KAChB,GAAmB,KACnB,GAAqB,KACrB,GAAqB,KACrB,GAAyB,MACzB,GAAyB,MACzB,GAAkB,KAClB,GAAmB,IACnB,GAAkB,IAClB,GAAmB,IACnB,GAAuB,IACvB,GAAqB,IACrB,GAAsB,IACtB,GAA0B,IAC1B,GAAoB,IACpB,GAAkB,MAClB,GAAmB,MACnB,GAAkB,MAClB,GAAkB,MAClB,GAAmB,MACnB,GAAkB,MAClB,GAAkB,MAClB,GAAmB,MACnB,GAAkB,MAClB,GAAQ,MACR,GAAQ,SAKd,QAAsB,CACrB,iBAAiB,EAAM,EAAU,CAChC,AAAI,KAAK,aAAe,QAAW,MAAK,WAAa,IACrD,GAAM,GAAY,KAAK,WAEvB,AAAI,EAAU,KAAU,QACvB,GAAU,GAAQ,IAGf,EAAU,GAAM,QAAQ,KAAc,IACzC,EAAU,GAAM,KAAK,GAIvB,iBAAiB,EAAM,EAAU,CAChC,GAAI,KAAK,aAAe,OAAW,MAAO,GAC1C,GAAM,GAAY,KAAK,WACvB,MAAO,GAAU,KAAU,QAAa,EAAU,GAAM,QAAQ,KAAc,GAG/E,oBAAoB,EAAM,EAAU,CACnC,GAAI,KAAK,aAAe,OAAW,OAEnC,GAAM,GAAgB,AADJ,KAAK,WACS,GAEhC,GAAI,IAAkB,OAAW,CAChC,GAAM,GAAQ,EAAc,QAAQ,GAEpC,AAAI,IAAU,IACb,EAAc,OAAO,EAAO,IAK/B,cAAc,EAAO,CACpB,GAAI,KAAK,aAAe,OAAW,OAEnC,GAAM,GAAgB,AADJ,KAAK,WACS,EAAM,MAEtC,GAAI,IAAkB,OAAW,CAChC,EAAM,OAAS,KAEf,GAAM,GAAQ,EAAc,MAAM,GAElC,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,IACxC,EAAM,GAAG,KAAK,KAAM,GAGrB,EAAM,OAAS,OAMlB,GAAI,IAAQ,QACN,GAAU,KAAK,GAAK,IACpB,GAAU,IAAM,KAAK,GAErB,GAAO,GAEb,OAAS,GAAI,EAAG,EAAI,IAAK,IACxB,GAAK,GAAM,GAAI,GAAK,IAAM,IAAM,EAAE,SAAS,IAG5C,GAAM,IAAgB,MAAO,SAAW,aAAe,cAAgB,QAEvE,aAAwB,CACvB,GAAI,GACH,MAAO,QAAO,aAAa,cAK5B,GAAM,GAAK,KAAK,SAAW,WAAa,EAClC,EAAK,KAAK,SAAW,WAAa,EAClC,EAAK,KAAK,SAAW,WAAa,EAClC,EAAK,KAAK,SAAW,WAAa,EAGxC,MAAO,AAFM,IAAK,EAAK,KAAQ,GAAK,GAAM,EAAI,KAAQ,GAAK,GAAM,GAAK,KAAQ,GAAK,GAAM,GAAK,KAAQ,IAAM,GAAK,EAAK,KAAQ,GAAK,GAAM,EAAI,KAAQ,IAAM,GAAK,GAAM,GAAK,GAAO,IAAQ,GAAK,GAAM,GAAK,KAAQ,IAAM,GAAK,EAAK,GAAO,KAAQ,GAAK,GAAM,EAAI,KAAQ,IAAM,GAAK,GAAM,GAAK,KAAQ,GAAK,GAAM,GAAK,KAAQ,GAAK,EAAK,KAAQ,GAAK,GAAM,EAAI,KAAQ,GAAK,GAAM,GAAK,KAAQ,GAAK,GAAM,GAAK,MAEnY,cAGb,YAAe,EAAO,EAAK,EAAK,CAC/B,MAAO,MAAK,IAAI,EAAK,KAAK,IAAI,EAAK,IAKpC,YAAyB,EAAG,EAAG,CAC9B,MAAQ,GAAI,EAAI,GAAK,EAItB,YAAmB,EAAG,EAAI,EAAI,EAAI,EAAI,CACrC,MAAO,GAAM,GAAI,GAAO,GAAK,GAAO,GAAK,GAI1C,YAAqB,EAAG,EAAG,EAAO,CACjC,MAAI,KAAM,EACD,GAAQ,GAAM,GAAI,GAEnB,EAKT,YAAc,EAAG,EAAG,EAAG,CACtB,MAAQ,GAAI,GAAK,EAAI,EAAI,EAI1B,YAAc,EAAG,EAAG,EAAQ,EAAI,CAC/B,MAAO,IAAK,EAAG,EAAG,EAAI,KAAK,IAAI,CAAC,EAAS,IAI1C,YAAkB,EAAG,EAAS,EAAG,CAChC,MAAO,GAAS,KAAK,IAAI,GAAgB,EAAG,EAAS,GAAK,GAI3D,YAAoB,EAAG,EAAK,EAAK,CAChC,MAAI,IAAK,EAAY,EACjB,GAAK,EAAY,EACrB,GAAK,GAAI,GAAQ,GAAM,GAChB,EAAI,EAAK,GAAI,EAAI,IAGzB,YAAsB,EAAG,EAAK,EAAK,CAClC,MAAI,IAAK,EAAY,EACjB,GAAK,EAAY,EACrB,GAAK,GAAI,GAAQ,GAAM,GAChB,EAAI,EAAI,EAAK,GAAK,GAAI,EAAI,IAAM,KAIxC,YAAiB,EAAK,EAAM,CAC3B,MAAO,GAAM,KAAK,MAAM,KAAK,SAAY,GAAO,EAAM,IAIvD,YAAmB,EAAK,EAAM,CAC7B,MAAO,GAAM,KAAK,SAAY,GAAO,GAItC,YAAyB,EAAO,CAC/B,MAAO,GAAS,IAAM,KAAK,UAI5B,YAAsB,EAAG,CACxB,MAAI,KAAM,QAAW,IAAQ,EAAI,YAEjC,GAAQ,GAAQ,MAAQ,WAChB,IAAQ,GAAK,WAGtB,YAAkB,EAAS,CAC1B,MAAO,GAAU,GAGlB,YAAkB,EAAS,CAC1B,MAAO,GAAU,GAGlB,YAAsB,EAAO,CAC5B,MAAQ,GAAQ,EAAQ,IAAO,GAAK,IAAU,EAG/C,YAAwB,EAAO,CAC9B,MAAO,MAAK,IAAI,EAAG,KAAK,KAAK,KAAK,IAAI,GAAS,KAAK,MAGrD,YAAyB,EAAO,CAC/B,MAAO,MAAK,IAAI,EAAG,KAAK,MAAM,KAAK,IAAI,GAAS,KAAK,MAGtD,YAAsC,EAAG,EAAG,EAAG,EAAG,EAAO,CAKxD,GAAM,GAAM,KAAK,IACX,EAAM,KAAK,IACX,EAAK,EAAI,EAAI,GACb,EAAK,EAAI,EAAI,GACb,EAAM,EAAK,GAAI,GAAK,GACpB,EAAM,EAAK,GAAI,GAAK,GACpB,EAAO,EAAK,GAAI,GAAK,GACrB,EAAO,EAAK,GAAI,GAAK,GACrB,EAAO,EAAK,GAAI,GAAK,GACrB,EAAO,EAAK,GAAI,GAAK,GAE3B,OAAQ,OACF,MACJ,EAAE,IAAI,EAAK,EAAK,EAAK,EAAM,EAAK,EAAM,EAAK,GAC3C,UAEI,MACJ,EAAE,IAAI,EAAK,EAAM,EAAK,EAAK,EAAK,EAAM,EAAK,GAC3C,UAEI,MACJ,EAAE,IAAI,EAAK,EAAM,EAAK,EAAM,EAAK,EAAK,EAAK,GAC3C,UAEI,MACJ,EAAE,IAAI,EAAK,EAAK,EAAK,EAAM,EAAK,EAAM,EAAK,GAC3C,UAEI,MACJ,EAAE,IAAI,EAAK,EAAM,EAAK,EAAK,EAAK,EAAM,EAAK,GAC3C,UAEI,MACJ,EAAE,IAAI,EAAK,EAAM,EAAK,EAAM,EAAK,EAAK,EAAK,GAC3C,cAGA,QAAQ,KAAK,kFAAoF,IAIpG,GAAI,IAAyB,OAAO,OAAO,CAC1C,UAAW,KACX,QAAS,GACT,QAAS,GACT,aAAc,GACd,MAAO,GACP,gBAAiB,GACjB,UAAW,GACX,YAAa,GACb,KAAM,GACN,KAAM,GACN,SAAU,GACV,WAAY,GACZ,aAAc,GACd,QAAS,GACT,UAAW,GACX,gBAAiB,GACjB,aAAc,GACd,SAAU,GACV,SAAU,GACV,aAAc,GACd,eAAgB,GAChB,gBAAiB,GACjB,6BAA8B,KAG/B,QAAc,CACb,YAAY,EAAI,EAAG,EAAI,EAAG,CACzB,KAAK,EAAI,EACT,KAAK,EAAI,KAGN,QAAQ,CACX,MAAO,MAAK,KAGT,OAAM,EAAO,CAChB,KAAK,EAAI,KAGN,SAAS,CACZ,MAAO,MAAK,KAGT,QAAO,EAAO,CACjB,KAAK,EAAI,EAGV,IAAI,EAAG,EAAG,CACT,YAAK,EAAI,EACT,KAAK,EAAI,EACF,KAGR,UAAU,EAAQ,CACjB,YAAK,EAAI,EACT,KAAK,EAAI,EACF,KAGR,KAAK,EAAG,CACP,YAAK,EAAI,EACF,KAGR,KAAK,EAAG,CACP,YAAK,EAAI,EACF,KAGR,aAAa,EAAO,EAAO,CAC1B,OAAQ,OACF,GACJ,KAAK,EAAI,EACT,UAEI,GACJ,KAAK,EAAI,EACT,cAGA,KAAM,IAAI,OAAM,0BAA4B,GAG9C,MAAO,MAGR,aAAa,EAAO,CACnB,OAAQ,OACF,GACJ,MAAO,MAAK,MAER,GACJ,MAAO,MAAK,UAGZ,KAAM,IAAI,OAAM,0BAA4B,IAI/C,OAAQ,CACP,MAAO,IAAI,MAAK,YAAY,KAAK,EAAG,KAAK,GAG1C,KAAK,EAAG,CACP,YAAK,EAAI,EAAE,EACX,KAAK,EAAI,EAAE,EACJ,KAGR,IAAI,EAAG,EAAG,CACT,MAAI,KAAM,OACT,SAAQ,KAAK,yFACN,KAAK,WAAW,EAAG,IAG3B,MAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACL,MAGR,UAAU,EAAG,CACZ,YAAK,GAAK,EACV,KAAK,GAAK,EACH,KAGR,WAAW,EAAG,EAAG,CAChB,YAAK,EAAI,EAAE,EAAI,EAAE,EACjB,KAAK,EAAI,EAAE,EAAI,EAAE,EACV,KAGR,gBAAgB,EAAG,EAAG,CACrB,YAAK,GAAK,EAAE,EAAI,EAChB,KAAK,GAAK,EAAE,EAAI,EACT,KAGR,IAAI,EAAG,EAAG,CACT,MAAI,KAAM,OACT,SAAQ,KAAK,yFACN,KAAK,WAAW,EAAG,IAG3B,MAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACL,MAGR,UAAU,EAAG,CACZ,YAAK,GAAK,EACV,KAAK,GAAK,EACH,KAGR,WAAW,EAAG,EAAG,CAChB,YAAK,EAAI,EAAE,EAAI,EAAE,EACjB,KAAK,EAAI,EAAE,EAAI,EAAE,EACV,KAGR,SAAS,EAAG,CACX,YAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACL,KAGR,eAAe,EAAQ,CACtB,YAAK,GAAK,EACV,KAAK,GAAK,EACH,KAGR,OAAO,EAAG,CACT,YAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACL,KAGR,aAAa,EAAQ,CACpB,MAAO,MAAK,eAAe,EAAI,GAGhC,aAAa,EAAG,CACf,GAAM,GAAI,KAAK,EACZ,EAAI,KAAK,EACN,EAAI,EAAE,SACZ,YAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GACjC,KAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAC1B,KAGR,IAAI,EAAG,CACN,YAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GAC5B,KAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GACrB,KAGR,IAAI,EAAG,CACN,YAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GAC5B,KAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GACrB,KAGR,MAAM,EAAK,EAAK,CAEf,YAAK,EAAI,KAAK,IAAI,EAAI,EAAG,KAAK,IAAI,EAAI,EAAG,KAAK,IAC9C,KAAK,EAAI,KAAK,IAAI,EAAI,EAAG,KAAK,IAAI,EAAI,EAAG,KAAK,IACvC,KAGR,YAAY,EAAQ,EAAQ,CAC3B,YAAK,EAAI,KAAK,IAAI,EAAQ,KAAK,IAAI,EAAQ,KAAK,IAChD,KAAK,EAAI,KAAK,IAAI,EAAQ,KAAK,IAAI,EAAQ,KAAK,IACzC,KAGR,YAAY,EAAK,EAAK,CACrB,GAAM,GAAS,KAAK,SACpB,MAAO,MAAK,aAAa,GAAU,GAAG,eAAe,KAAK,IAAI,EAAK,KAAK,IAAI,EAAK,KAGlF,OAAQ,CACP,YAAK,EAAI,KAAK,MAAM,KAAK,GACzB,KAAK,EAAI,KAAK,MAAM,KAAK,GAClB,KAGR,MAAO,CACN,YAAK,EAAI,KAAK,KAAK,KAAK,GACxB,KAAK,EAAI,KAAK,KAAK,KAAK,GACjB,KAGR,OAAQ,CACP,YAAK,EAAI,KAAK,MAAM,KAAK,GACzB,KAAK,EAAI,KAAK,MAAM,KAAK,GAClB,KAGR,aAAc,CACb,YAAK,EAAI,KAAK,EAAI,EAAI,KAAK,KAAK,KAAK,GAAK,KAAK,MAAM,KAAK,GAC1D,KAAK,EAAI,KAAK,EAAI,EAAI,KAAK,KAAK,KAAK,GAAK,KAAK,MAAM,KAAK,GACnD,KAGR,QAAS,CACR,YAAK,EAAI,CAAC,KAAK,EACf,KAAK,EAAI,CAAC,KAAK,EACR,KAGR,IAAI,EAAG,CACN,MAAO,MAAK,EAAI,EAAE,EAAI,KAAK,EAAI,EAAE,EAGlC,MAAM,EAAG,CACR,MAAO,MAAK,EAAI,EAAE,EAAI,KAAK,EAAI,EAAE,EAGlC,UAAW,CACV,MAAO,MAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAGxC,QAAS,CACR,MAAO,MAAK,KAAK,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,GAGlD,iBAAkB,CACjB,MAAO,MAAK,IAAI,KAAK,GAAK,KAAK,IAAI,KAAK,GAGzC,WAAY,CACX,MAAO,MAAK,aAAa,KAAK,UAAY,GAG3C,OAAQ,CAGP,MADc,MAAK,MAAM,CAAC,KAAK,EAAG,CAAC,KAAK,GAAK,KAAK,GAInD,WAAW,EAAG,CACb,MAAO,MAAK,KAAK,KAAK,kBAAkB,IAGzC,kBAAkB,EAAG,CACpB,GAAM,GAAK,KAAK,EAAI,EAAE,EACnB,EAAK,KAAK,EAAI,EAAE,EACnB,MAAO,GAAK,EAAK,EAAK,EAGvB,oBAAoB,EAAG,CACtB,MAAO,MAAK,IAAI,KAAK,EAAI,EAAE,GAAK,KAAK,IAAI,KAAK,EAAI,EAAE,GAGrD,UAAU,EAAQ,CACjB,MAAO,MAAK,YAAY,eAAe,GAGxC,KAAK,EAAG,EAAO,CACd,YAAK,GAAM,GAAE,EAAI,KAAK,GAAK,EAC3B,KAAK,GAAM,GAAE,EAAI,KAAK,GAAK,EACpB,KAGR,YAAY,EAAI,EAAI,EAAO,CAC1B,YAAK,EAAI,EAAG,EAAK,GAAG,EAAI,EAAG,GAAK,EAChC,KAAK,EAAI,EAAG,EAAK,GAAG,EAAI,EAAG,GAAK,EACzB,KAGR,OAAO,EAAG,CACT,MAAO,GAAE,IAAM,KAAK,GAAK,EAAE,IAAM,KAAK,EAGvC,UAAU,EAAO,EAAS,EAAG,CAC5B,YAAK,EAAI,EAAM,GACf,KAAK,EAAI,EAAM,EAAS,GACjB,KAGR,QAAQ,EAAQ,GAAI,EAAS,EAAG,CAC/B,SAAM,GAAU,KAAK,EACrB,EAAM,EAAS,GAAK,KAAK,EAClB,EAGR,oBAAoB,EAAW,EAAO,EAAQ,CAC7C,MAAI,KAAW,QACd,QAAQ,KAAK,uEAGd,KAAK,EAAI,EAAU,KAAK,GACxB,KAAK,EAAI,EAAU,KAAK,GACjB,KAGR,aAAa,EAAQ,EAAO,CAC3B,GAAM,GAAI,KAAK,IAAI,GAChB,EAAI,KAAK,IAAI,GACV,EAAI,KAAK,EAAI,EAAO,EACpB,EAAI,KAAK,EAAI,EAAO,EAC1B,YAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAO,EAChC,KAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAO,EACzB,KAGR,QAAS,CACR,YAAK,EAAI,KAAK,SACd,KAAK,EAAI,KAAK,SACP,OAGN,OAAO,WAAY,CACpB,KAAM,MAAK,EACX,KAAM,MAAK,GAKb,GAAQ,UAAU,UAAY,GAE9B,QAAc,CACb,aAAc,CACb,KAAK,SAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAErC,UAAU,OAAS,GACtB,QAAQ,MAAM,iFAIhB,IAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,CAChD,GAAM,GAAK,KAAK,SAChB,SAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACD,KAGR,UAAW,CACV,YAAK,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1B,KAGR,KAAK,EAAG,CACP,GAAM,GAAK,KAAK,SACV,EAAK,EAAE,SACb,SAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACJ,KAGR,aAAa,EAAO,EAAO,EAAO,CACjC,SAAM,qBAAqB,KAAM,GACjC,EAAM,qBAAqB,KAAM,GACjC,EAAM,qBAAqB,KAAM,GAC1B,KAGR,eAAe,EAAG,CACjB,GAAM,GAAK,EAAE,SACb,YAAK,IAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,KAC7D,KAGR,SAAS,EAAG,CACX,MAAO,MAAK,iBAAiB,KAAM,GAGpC,YAAY,EAAG,CACd,MAAO,MAAK,iBAAiB,EAAG,MAGjC,iBAAiB,EAAG,EAAG,CACtB,GAAM,GAAK,EAAE,SACP,EAAK,EAAE,SACP,EAAK,KAAK,SACV,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACZ,SAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACtC,EAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACtC,EAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACtC,EAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACtC,EAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACtC,EAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACtC,EAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACtC,EAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACtC,EAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAC/B,KAGR,eAAe,EAAG,CACjB,GAAM,GAAK,KAAK,SAChB,SAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACF,KAGR,aAAc,CACb,GAAM,GAAK,KAAK,SACV,EAAI,EAAG,GACV,EAAI,EAAG,GACP,EAAI,EAAG,GACP,EAAI,EAAG,GACP,EAAI,EAAG,GACP,EAAI,EAAG,GACP,EAAI,EAAG,GACP,EAAI,EAAG,GACP,EAAI,EAAG,GACV,MAAO,GAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAG5E,QAAS,CACR,GAAM,GAAK,KAAK,SACb,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,GAAI,IAAQ,EAAG,MAAO,MAAK,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACvD,GAAM,GAAS,EAAI,EACnB,SAAG,GAAK,EAAM,EACd,EAAG,GAAM,GAAM,EAAM,EAAM,GAAO,EAClC,EAAG,GAAM,GAAM,EAAM,EAAM,GAAO,EAClC,EAAG,GAAK,EAAM,EACd,EAAG,GAAM,GAAM,EAAM,EAAM,GAAO,EAClC,EAAG,GAAM,GAAM,EAAM,EAAM,GAAO,EAClC,EAAG,GAAK,EAAM,EACd,EAAG,GAAM,GAAM,EAAM,EAAM,GAAO,EAClC,EAAG,GAAM,GAAM,EAAM,EAAM,GAAO,EAC3B,KAGR,WAAY,CACX,GAAI,GACE,EAAI,KAAK,SACf,SAAM,EAAE,GACR,EAAE,GAAK,EAAE,GACT,EAAE,GAAK,EACP,EAAM,EAAE,GACR,EAAE,GAAK,EAAE,GACT,EAAE,GAAK,EACP,EAAM,EAAE,GACR,EAAE,GAAK,EAAE,GACT,EAAE,GAAK,EACA,KAGR,gBAAgB,EAAS,CACxB,MAAO,MAAK,eAAe,GAAS,SAAS,YAG9C,mBAAmB,EAAG,CACrB,GAAM,GAAI,KAAK,SACf,SAAE,GAAK,EAAE,GACT,EAAE,GAAK,EAAE,GACT,EAAE,GAAK,EAAE,GACT,EAAE,GAAK,EAAE,GACT,EAAE,GAAK,EAAE,GACT,EAAE,GAAK,EAAE,GACT,EAAE,GAAK,EAAE,GACT,EAAE,GAAK,EAAE,GACT,EAAE,GAAK,EAAE,GACF,KAGR,eAAe,EAAI,EAAI,EAAI,EAAI,EAAU,EAAI,EAAI,CAChD,GAAM,GAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GACnB,YAAK,IAAI,EAAK,EAAG,EAAK,EAAG,CAAC,EAAM,GAAI,EAAK,EAAI,GAAM,EAAK,EAAI,CAAC,EAAK,EAAG,EAAK,EAAG,CAAC,EAAM,EAAC,EAAI,EAAK,EAAI,GAAM,EAAK,EAAI,EAAG,EAAG,GAChH,KAGR,MAAM,EAAI,EAAI,CACb,GAAM,GAAK,KAAK,SAChB,SAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACF,KAGR,OAAO,EAAO,CACb,GAAM,GAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GACb,EAAK,KAAK,SACV,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACZ,SAAG,GAAK,EAAI,EAAM,EAAI,EACtB,EAAG,GAAK,EAAI,EAAM,EAAI,EACtB,EAAG,GAAK,EAAI,EAAM,EAAI,EACtB,EAAG,GAAK,CAAC,EAAI,EAAM,EAAI,EACvB,EAAG,GAAK,CAAC,EAAI,EAAM,EAAI,EACvB,EAAG,GAAK,CAAC,EAAI,EAAM,EAAI,EAChB,KAGR,UAAU,EAAI,EAAI,CACjB,GAAM,GAAK,KAAK,SAChB,SAAG,IAAM,EAAK,EAAG,GACjB,EAAG,IAAM,EAAK,EAAG,GACjB,EAAG,IAAM,EAAK,EAAG,GACjB,EAAG,IAAM,EAAK,EAAG,GACjB,EAAG,IAAM,EAAK,EAAG,GACjB,EAAG,IAAM,EAAK,EAAG,GACV,KAGR,OAAO,EAAQ,CACd,GAAM,GAAK,KAAK,SACV,EAAK,EAAO,SAElB,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,GAAI,EAAG,KAAO,EAAG,GAAI,MAAO,GAG7B,MAAO,GAGR,UAAU,EAAO,EAAS,EAAG,CAC5B,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,KAAK,SAAS,GAAK,EAAM,EAAI,GAG9B,MAAO,MAGR,QAAQ,EAAQ,GAAI,EAAS,EAAG,CAC/B,GAAM,GAAK,KAAK,SAChB,SAAM,GAAU,EAAG,GACnB,EAAM,EAAS,GAAK,EAAG,GACvB,EAAM,EAAS,GAAK,EAAG,GACvB,EAAM,EAAS,GAAK,EAAG,GACvB,EAAM,EAAS,GAAK,EAAG,GACvB,EAAM,EAAS,GAAK,EAAG,GACvB,EAAM,EAAS,GAAK,EAAG,GACvB,EAAM,EAAS,GAAK,EAAG,GACvB,EAAM,EAAS,GAAK,EAAG,GAChB,EAGR,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,UAAU,KAAK,WAK/C,GAAQ,UAAU,UAAY,GAE9B,YAAkB,EAAO,CACxB,GAAI,EAAM,SAAW,EAAG,MAAO,KAC/B,GAAI,GAAM,EAAM,GAEhB,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,EAAE,EAC1C,AAAI,EAAM,GAAK,GAAK,GAAM,EAAM,IAGjC,MAAO,GAGR,GAAM,IAAe,CACpB,UACA,WACA,kBACA,WACA,YACA,WACA,YACA,aACA,cAGD,YAAuB,EAAM,EAAQ,CACpC,MAAO,IAAI,IAAa,GAAM,GAG/B,YAAyB,EAAM,CAC9B,MAAO,UAAS,gBAAgB,+BAAgC,GAkBjE,YAAoB,EAAK,EAAO,EAAG,CAClC,GAAI,GAAK,WAAa,EACpB,EAAK,WAAa,EAEpB,OAAS,GAAI,EAAG,EAAI,EAAI,EAAI,OAAQ,IACnC,EAAK,EAAI,WAAW,GACpB,EAAK,KAAK,KAAK,EAAK,EAAI,YACxB,EAAK,KAAK,KAAK,EAAK,EAAI,YAGzB,SAAK,KAAK,KAAK,EAAK,IAAO,GAAI,YAAc,KAAK,KAAK,EAAK,IAAO,GAAI,YACvE,EAAK,KAAK,KAAK,EAAK,IAAO,GAAI,YAAc,KAAK,KAAK,EAAK,IAAO,GAAI,YAChE,WAAc,SAAU,GAAO,KAAO,GAG9C,GAAI,IAEJ,QAAiB,OACT,YAAW,EAAO,CAKxB,GAJI,UAAU,KAAK,EAAM,MAIrB,MAAO,oBAAqB,YAC/B,MAAO,GAAM,IAGd,GAAI,GAEJ,GAAI,YAAiB,mBACpB,EAAS,MACH,CACN,AAAI,KAAY,QAAW,IAAU,GAAgB,WACrD,GAAQ,MAAQ,EAAM,MACtB,GAAQ,OAAS,EAAM,OAEvB,GAAM,GAAU,GAAQ,WAAW,MAEnC,AAAI,YAAiB,WACpB,EAAQ,aAAa,EAAO,EAAG,GAE/B,EAAQ,UAAU,EAAO,EAAG,EAAG,EAAM,MAAO,EAAM,QAGnD,EAAS,GAGV,MAAI,GAAO,MAAQ,MAAQ,EAAO,OAAS,KAC1C,SAAQ,KAAK,8EAA+E,GACrF,EAAO,UAAU,aAAc,KAE/B,EAAO,UAAU,cAM3B,GAAI,IAAY,EAEhB,gBAAsB,GAAgB,CACrC,YAAY,EAAQ,GAAQ,cAAe,EAAU,GAAQ,gBAAiB,EAAQ,GAAqB,EAAQ,GAAqB,EAAY,GAAc,EAAY,GAA0B,EAAS,GAAY,EAAO,GAAkB,EAAa,EAAG,EAAW,GAAgB,CAChS,QACA,OAAO,eAAe,KAAM,KAAM,CACjC,MAAO,OAER,KAAK,KAAO,KACZ,KAAK,KAAO,GACZ,KAAK,MAAQ,EACb,KAAK,QAAU,GACf,KAAK,QAAU,EACf,KAAK,MAAQ,EACb,KAAK,MAAQ,EACb,KAAK,UAAY,EACjB,KAAK,UAAY,EACjB,KAAK,WAAa,EAClB,KAAK,OAAS,EACd,KAAK,eAAiB,KACtB,KAAK,KAAO,EACZ,KAAK,OAAS,GAAI,IAAQ,EAAG,GAC7B,KAAK,OAAS,GAAI,IAAQ,EAAG,GAC7B,KAAK,OAAS,GAAI,IAAQ,EAAG,GAC7B,KAAK,SAAW,EAChB,KAAK,iBAAmB,GACxB,KAAK,OAAS,GAAI,IAClB,KAAK,gBAAkB,GACvB,KAAK,iBAAmB,GACxB,KAAK,MAAQ,GACb,KAAK,gBAAkB,EAMvB,KAAK,SAAW,EAChB,KAAK,SAAW,GAChB,KAAK,QAAU,EACf,KAAK,SAAW,KAChB,KAAK,sBAAwB,GAG9B,cAAe,CACd,KAAK,OAAO,eAAe,KAAK,OAAO,EAAG,KAAK,OAAO,EAAG,KAAK,OAAO,EAAG,KAAK,OAAO,EAAG,KAAK,SAAU,KAAK,OAAO,EAAG,KAAK,OAAO,GAGlI,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,MAGpC,KAAK,EAAQ,CACZ,YAAK,KAAO,EAAO,KACnB,KAAK,MAAQ,EAAO,MACpB,KAAK,QAAU,EAAO,QAAQ,MAAM,GACpC,KAAK,QAAU,EAAO,QACtB,KAAK,MAAQ,EAAO,MACpB,KAAK,MAAQ,EAAO,MACpB,KAAK,UAAY,EAAO,UACxB,KAAK,UAAY,EAAO,UACxB,KAAK,WAAa,EAAO,WACzB,KAAK,OAAS,EAAO,OACrB,KAAK,eAAiB,EAAO,eAC7B,KAAK,KAAO,EAAO,KACnB,KAAK,OAAO,KAAK,EAAO,QACxB,KAAK,OAAO,KAAK,EAAO,QACxB,KAAK,OAAO,KAAK,EAAO,QACxB,KAAK,SAAW,EAAO,SACvB,KAAK,iBAAmB,EAAO,iBAC/B,KAAK,OAAO,KAAK,EAAO,QACxB,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,iBAAmB,EAAO,iBAC/B,KAAK,MAAQ,EAAO,MACpB,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,SAAW,EAAO,SACvB,KAAK,SAAW,KAAK,MAAM,KAAK,UAAU,EAAO,WAC1C,KAGR,OAAO,EAAM,CACZ,GAAM,GAAe,IAAS,QAAa,MAAO,IAAS,SAE3D,GAAI,CAAC,GAAgB,EAAK,SAAS,KAAK,QAAU,OACjD,MAAO,GAAK,SAAS,KAAK,MAG3B,GAAM,GAAS,CACd,SAAU,CACT,QAAS,IACT,KAAM,UACN,UAAW,kBAEZ,KAAM,KAAK,KACX,KAAM,KAAK,KACX,QAAS,KAAK,QACd,OAAQ,CAAC,KAAK,OAAO,EAAG,KAAK,OAAO,GACpC,OAAQ,CAAC,KAAK,OAAO,EAAG,KAAK,OAAO,GACpC,OAAQ,CAAC,KAAK,OAAO,EAAG,KAAK,OAAO,GACpC,SAAU,KAAK,SACf,KAAM,CAAC,KAAK,MAAO,KAAK,OACxB,OAAQ,KAAK,OACb,KAAM,KAAK,KACX,SAAU,KAAK,SACf,UAAW,KAAK,UAChB,UAAW,KAAK,UAChB,WAAY,KAAK,WACjB,MAAO,KAAK,MACZ,iBAAkB,KAAK,iBACvB,gBAAiB,KAAK,iBAGvB,GAAI,KAAK,QAAU,OAAW,CAE7B,GAAM,GAAQ,KAAK,MAMnB,GAJI,EAAM,OAAS,QAClB,GAAM,KAAO,MAGV,CAAC,GAAgB,EAAK,OAAO,EAAM,QAAU,OAAW,CAC3D,GAAI,GAEJ,GAAI,MAAM,QAAQ,GAAQ,CAEzB,EAAM,GAEN,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,IAExC,AAAI,EAAM,GAAG,cACZ,EAAI,KAAK,GAAe,EAAM,GAAG,QAEjC,EAAI,KAAK,GAAe,EAAM,SAKhC,GAAM,GAAe,GAGtB,EAAK,OAAO,EAAM,MAAQ,CACzB,KAAM,EAAM,KACZ,IAAK,GAIP,EAAO,MAAQ,EAAM,KAGtB,MAAI,MAAK,UAAU,KAAK,YAAc,MAAM,GAAO,SAAW,KAAK,UAE9D,GACJ,GAAK,SAAS,KAAK,MAAQ,GAGrB,EAGR,SAAU,CACT,KAAK,cAAc,CAClB,KAAM,YAIR,YAAY,EAAI,CACf,GAAI,KAAK,UAAY,GAAW,MAAO,GAGvC,GAFA,EAAG,aAAa,KAAK,QAEjB,EAAG,EAAI,GAAK,EAAG,EAAI,EACtB,OAAQ,KAAK,WACP,IACJ,EAAG,EAAI,EAAG,EAAI,KAAK,MAAM,EAAG,GAC5B,UAEI,IACJ,EAAG,EAAI,EAAG,EAAI,EAAI,EAAI,EACtB,UAEI,IACJ,AAAI,KAAK,IAAI,KAAK,MAAM,EAAG,GAAK,KAAO,EACtC,EAAG,EAAI,KAAK,KAAK,EAAG,GAAK,EAAG,EAE5B,EAAG,EAAI,EAAG,EAAI,KAAK,MAAM,EAAG,GAG7B,MAIH,GAAI,EAAG,EAAI,GAAK,EAAG,EAAI,EACtB,OAAQ,KAAK,WACP,IACJ,EAAG,EAAI,EAAG,EAAI,KAAK,MAAM,EAAG,GAC5B,UAEI,IACJ,EAAG,EAAI,EAAG,EAAI,EAAI,EAAI,EACtB,UAEI,IACJ,AAAI,KAAK,IAAI,KAAK,MAAM,EAAG,GAAK,KAAO,EACtC,EAAG,EAAI,KAAK,KAAK,EAAG,GAAK,EAAG,EAE5B,EAAG,EAAI,EAAG,EAAI,KAAK,MAAM,EAAG,GAG7B,MAIH,MAAI,MAAK,OACR,GAAG,EAAI,EAAI,EAAG,GAGR,KAGJ,aAAY,EAAO,CACtB,AAAI,IAAU,IAAM,KAAK,WAK3B,GAAQ,cAAgB,OACxB,GAAQ,gBAAkB,GAC1B,GAAQ,UAAU,UAAY,GAE9B,YAAwB,EAAO,CAC9B,MAAI,OAAO,mBAAqB,aAAe,YAAiB,mBAAoB,MAAO,oBAAsB,aAAe,YAAiB,oBAAqB,MAAO,cAAgB,aAAe,YAAiB,aAErN,GAAW,WAAW,GAEzB,EAAM,KAEF,CACN,KAAM,MAAM,UAAU,MAAM,KAAK,EAAM,MACvC,MAAO,EAAM,MACb,OAAQ,EAAM,OACd,KAAM,EAAM,KAAK,YAAY,MAG9B,SAAQ,KAAK,+CACN,IAKV,QAAc,CACb,YAAY,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,CACvC,KAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,KAGN,QAAQ,CACX,MAAO,MAAK,KAGT,OAAM,EAAO,CAChB,KAAK,EAAI,KAGN,SAAS,CACZ,MAAO,MAAK,KAGT,QAAO,EAAO,CACjB,KAAK,EAAI,EAGV,IAAI,EAAG,EAAG,EAAG,EAAG,CACf,YAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,EACF,KAGR,UAAU,EAAQ,CACjB,YAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,EACF,KAGR,KAAK,EAAG,CACP,YAAK,EAAI,EACF,KAGR,KAAK,EAAG,CACP,YAAK,EAAI,EACF,KAGR,KAAK,EAAG,CACP,YAAK,EAAI,EACF,KAGR,KAAK,EAAG,CACP,YAAK,EAAI,EACF,KAGR,aAAa,EAAO,EAAO,CAC1B,OAAQ,OACF,GACJ,KAAK,EAAI,EACT,UAEI,GACJ,KAAK,EAAI,EACT,UAEI,GACJ,KAAK,EAAI,EACT,UAEI,GACJ,KAAK,EAAI,EACT,cAGA,KAAM,IAAI,OAAM,0BAA4B,GAG9C,MAAO,MAGR,aAAa,EAAO,CACnB,OAAQ,OACF,GACJ,MAAO,MAAK,MAER,GACJ,MAAO,MAAK,MAER,GACJ,MAAO,MAAK,MAER,GACJ,MAAO,MAAK,UAGZ,KAAM,IAAI,OAAM,0BAA4B,IAI/C,OAAQ,CACP,MAAO,IAAI,MAAK,YAAY,KAAK,EAAG,KAAK,EAAG,KAAK,EAAG,KAAK,GAG1D,KAAK,EAAG,CACP,YAAK,EAAI,EAAE,EACX,KAAK,EAAI,EAAE,EACX,KAAK,EAAI,EAAE,EACX,KAAK,EAAI,EAAE,IAAM,OAAY,EAAE,EAAI,EAC5B,KAGR,IAAI,EAAG,EAAG,CACT,MAAI,KAAM,OACT,SAAQ,KAAK,yFACN,KAAK,WAAW,EAAG,IAG3B,MAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACL,MAGR,UAAU,EAAG,CACZ,YAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACH,KAGR,WAAW,EAAG,EAAG,CAChB,YAAK,EAAI,EAAE,EAAI,EAAE,EACjB,KAAK,EAAI,EAAE,EAAI,EAAE,EACjB,KAAK,EAAI,EAAE,EAAI,EAAE,EACjB,KAAK,EAAI,EAAE,EAAI,EAAE,EACV,KAGR,gBAAgB,EAAG,EAAG,CACrB,YAAK,GAAK,EAAE,EAAI,EAChB,KAAK,GAAK,EAAE,EAAI,EAChB,KAAK,GAAK,EAAE,EAAI,EAChB,KAAK,GAAK,EAAE,EAAI,EACT,KAGR,IAAI,EAAG,EAAG,CACT,MAAI,KAAM,OACT,SAAQ,KAAK,yFACN,KAAK,WAAW,EAAG,IAG3B,MAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACL,MAGR,UAAU,EAAG,CACZ,YAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACH,KAGR,WAAW,EAAG,EAAG,CAChB,YAAK,EAAI,EAAE,EAAI,EAAE,EACjB,KAAK,EAAI,EAAE,EAAI,EAAE,EACjB,KAAK,EAAI,EAAE,EAAI,EAAE,EACjB,KAAK,EAAI,EAAE,EAAI,EAAE,EACV,KAGR,SAAS,EAAG,CACX,YAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACL,KAGR,eAAe,EAAQ,CACtB,YAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACH,KAGR,aAAa,EAAG,CACf,GAAM,GAAI,KAAK,EACZ,EAAI,KAAK,EACT,EAAI,KAAK,EACT,EAAI,KAAK,EACN,EAAI,EAAE,SACZ,YAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAAM,EAClD,KAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAAM,EAClD,KAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAAM,EAAI,EAAE,IAAM,EACnD,KAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAAM,EAAI,EAAE,IAAM,EAC5C,KAGR,aAAa,EAAQ,CACpB,MAAO,MAAK,eAAe,EAAI,GAGhC,2BAA2B,EAAG,CAG7B,KAAK,EAAI,EAAI,KAAK,KAAK,EAAE,GACzB,GAAM,GAAI,KAAK,KAAK,EAAI,EAAE,EAAI,EAAE,GAEhC,MAAI,GAAI,KACP,MAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,GAET,MAAK,EAAI,EAAE,EAAI,EACf,KAAK,EAAI,EAAE,EAAI,EACf,KAAK,EAAI,EAAE,EAAI,GAGT,KAGR,+BAA+B,EAAG,CAGjC,GAAI,GAAO,EAAG,EAAG,EAEX,EAAU,IAEhB,EAAW,GAEX,EAAK,EAAE,SACJ,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,IAEZ,GAAI,KAAK,IAAI,EAAM,GAAO,GAAW,KAAK,IAAI,EAAM,GAAO,GAAW,KAAK,IAAI,EAAM,GAAO,EAAS,CAIpG,GAAI,KAAK,IAAI,EAAM,GAAO,GAAY,KAAK,IAAI,EAAM,GAAO,GAAY,KAAK,IAAI,EAAM,GAAO,GAAY,KAAK,IAAI,EAAM,EAAM,EAAM,GAAK,EAEzI,YAAK,IAAI,EAAG,EAAG,EAAG,GACX,KAIR,EAAQ,KAAK,GACb,GAAM,GAAM,GAAM,GAAK,EACjB,EAAM,GAAM,GAAK,EACjB,EAAM,GAAM,GAAK,EACjB,EAAM,GAAM,GAAO,EACnB,EAAM,GAAM,GAAO,EACnB,EAAM,GAAM,GAAO,EAEzB,MAAI,GAAK,GAAM,EAAK,EAEnB,AAAI,EAAK,EACR,GAAI,EACJ,EAAI,WACJ,EAAI,YAEJ,GAAI,KAAK,KAAK,GACd,EAAI,EAAK,EACT,EAAI,EAAK,GAEJ,AAAI,EAAK,EAEf,AAAI,EAAK,EACR,GAAI,WACJ,EAAI,EACJ,EAAI,YAEJ,GAAI,KAAK,KAAK,GACd,EAAI,EAAK,EACT,EAAI,EAAK,GAIV,AAAI,EAAK,EACR,GAAI,WACJ,EAAI,WACJ,EAAI,GAEJ,GAAI,KAAK,KAAK,GACd,EAAI,EAAK,EACT,EAAI,EAAK,GAIX,KAAK,IAAI,EAAG,EAAG,EAAG,GACX,KAIR,GAAI,GAAI,KAAK,KAAM,GAAM,GAAQ,GAAM,GAAQ,GAAM,GAAQ,GAAM,GAAQ,GAAM,GAAQ,GAAM,IAE/F,MAAI,MAAK,IAAI,GAAK,MAAO,GAAI,GAG7B,KAAK,EAAK,GAAM,GAAO,EACvB,KAAK,EAAK,GAAM,GAAO,EACvB,KAAK,EAAK,GAAM,GAAO,EACvB,KAAK,EAAI,KAAK,KAAM,GAAM,EAAM,EAAM,GAAK,GACpC,KAGR,IAAI,EAAG,CACN,YAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GAC5B,KAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GAC5B,KAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GAC5B,KAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GACrB,KAGR,IAAI,EAAG,CACN,YAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GAC5B,KAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GAC5B,KAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GAC5B,KAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GACrB,KAGR,MAAM,EAAK,EAAK,CAEf,YAAK,EAAI,KAAK,IAAI,EAAI,EAAG,KAAK,IAAI,EAAI,EAAG,KAAK,IAC9C,KAAK,EAAI,KAAK,IAAI,EAAI,EAAG,KAAK,IAAI,EAAI,EAAG,KAAK,IAC9C,KAAK,EAAI,KAAK,IAAI,EAAI,EAAG,KAAK,IAAI,EAAI,EAAG,KAAK,IAC9C,KAAK,EAAI,KAAK,IAAI,EAAI,EAAG,KAAK,IAAI,EAAI,EAAG,KAAK,IACvC,KAGR,YAAY,EAAQ,EAAQ,CAC3B,YAAK,EAAI,KAAK,IAAI,EAAQ,KAAK,IAAI,EAAQ,KAAK,IAChD,KAAK,EAAI,KAAK,IAAI,EAAQ,KAAK,IAAI,EAAQ,KAAK,IAChD,KAAK,EAAI,KAAK,IAAI,EAAQ,KAAK,IAAI,EAAQ,KAAK,IAChD,KAAK,EAAI,KAAK,IAAI,EAAQ,KAAK,IAAI,EAAQ,KAAK,IACzC,KAGR,YAAY,EAAK,EAAK,CACrB,GAAM,GAAS,KAAK,SACpB,MAAO,MAAK,aAAa,GAAU,GAAG,eAAe,KAAK,IAAI,EAAK,KAAK,IAAI,EAAK,KAGlF,OAAQ,CACP,YAAK,EAAI,KAAK,MAAM,KAAK,GACzB,KAAK,EAAI,KAAK,MAAM,KAAK,GACzB,KAAK,EAAI,KAAK,MAAM,KAAK,GACzB,KAAK,EAAI,KAAK,MAAM,KAAK,GAClB,KAGR,MAAO,CACN,YAAK,EAAI,KAAK,KAAK,KAAK,GACxB,KAAK,EAAI,KAAK,KAAK,KAAK,GACxB,KAAK,EAAI,KAAK,KAAK,KAAK,GACxB,KAAK,EAAI,KAAK,KAAK,KAAK,GACjB,KAGR,OAAQ,CACP,YAAK,EAAI,KAAK,MAAM,KAAK,GACzB,KAAK,EAAI,KAAK,MAAM,KAAK,GACzB,KAAK,EAAI,KAAK,MAAM,KAAK,GACzB,KAAK,EAAI,KAAK,MAAM,KAAK,GAClB,KAGR,aAAc,CACb,YAAK,EAAI,KAAK,EAAI,EAAI,KAAK,KAAK,KAAK,GAAK,KAAK,MAAM,KAAK,GAC1D,KAAK,EAAI,KAAK,EAAI,EAAI,KAAK,KAAK,KAAK,GAAK,KAAK,MAAM,KAAK,GAC1D,KAAK,EAAI,KAAK,EAAI,EAAI,KAAK,KAAK,KAAK,GAAK,KAAK,MAAM,KAAK,GAC1D,KAAK,EAAI,KAAK,EAAI,EAAI,KAAK,KAAK,KAAK,GAAK,KAAK,MAAM,KAAK,GACnD,KAGR,QAAS,CACR,YAAK,EAAI,CAAC,KAAK,EACf,KAAK,EAAI,CAAC,KAAK,EACf,KAAK,EAAI,CAAC,KAAK,EACf,KAAK,EAAI,CAAC,KAAK,EACR,KAGR,IAAI,EAAG,CACN,MAAO,MAAK,EAAI,EAAE,EAAI,KAAK,EAAI,EAAE,EAAI,KAAK,EAAI,EAAE,EAAI,KAAK,EAAI,EAAE,EAGhE,UAAW,CACV,MAAO,MAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAG5E,QAAS,CACR,MAAO,MAAK,KAAK,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,GAGtF,iBAAkB,CACjB,MAAO,MAAK,IAAI,KAAK,GAAK,KAAK,IAAI,KAAK,GAAK,KAAK,IAAI,KAAK,GAAK,KAAK,IAAI,KAAK,GAG/E,WAAY,CACX,MAAO,MAAK,aAAa,KAAK,UAAY,GAG3C,UAAU,EAAQ,CACjB,MAAO,MAAK,YAAY,eAAe,GAGxC,KAAK,EAAG,EAAO,CACd,YAAK,GAAM,GAAE,EAAI,KAAK,GAAK,EAC3B,KAAK,GAAM,GAAE,EAAI,KAAK,GAAK,EAC3B,KAAK,GAAM,GAAE,EAAI,KAAK,GAAK,EAC3B,KAAK,GAAM,GAAE,EAAI,KAAK,GAAK,EACpB,KAGR,YAAY,EAAI,EAAI,EAAO,CAC1B,YAAK,EAAI,EAAG,EAAK,GAAG,EAAI,EAAG,GAAK,EAChC,KAAK,EAAI,EAAG,EAAK,GAAG,EAAI,EAAG,GAAK,EAChC,KAAK,EAAI,EAAG,EAAK,GAAG,EAAI,EAAG,GAAK,EAChC,KAAK,EAAI,EAAG,EAAK,GAAG,EAAI,EAAG,GAAK,EACzB,KAGR,OAAO,EAAG,CACT,MAAO,GAAE,IAAM,KAAK,GAAK,EAAE,IAAM,KAAK,GAAK,EAAE,IAAM,KAAK,GAAK,EAAE,IAAM,KAAK,EAG3E,UAAU,EAAO,EAAS,EAAG,CAC5B,YAAK,EAAI,EAAM,GACf,KAAK,EAAI,EAAM,EAAS,GACxB,KAAK,EAAI,EAAM,EAAS,GACxB,KAAK,EAAI,EAAM,EAAS,GACjB,KAGR,QAAQ,EAAQ,GAAI,EAAS,EAAG,CAC/B,SAAM,GAAU,KAAK,EACrB,EAAM,EAAS,GAAK,KAAK,EACzB,EAAM,EAAS,GAAK,KAAK,EACzB,EAAM,EAAS,GAAK,KAAK,EAClB,EAGR,oBAAoB,EAAW,EAAO,EAAQ,CAC7C,MAAI,KAAW,QACd,QAAQ,KAAK,uEAGd,KAAK,EAAI,EAAU,KAAK,GACxB,KAAK,EAAI,EAAU,KAAK,GACxB,KAAK,EAAI,EAAU,KAAK,GACxB,KAAK,EAAI,EAAU,KAAK,GACjB,KAGR,QAAS,CACR,YAAK,EAAI,KAAK,SACd,KAAK,EAAI,KAAK,SACd,KAAK,EAAI,KAAK,SACd,KAAK,EAAI,KAAK,SACP,OAGN,OAAO,WAAY,CACpB,KAAM,MAAK,EACX,KAAM,MAAK,EACX,KAAM,MAAK,EACX,KAAM,MAAK,GAKb,GAAQ,UAAU,UAAY,GAQ9B,gBAAgC,GAAgB,CAC/C,YAAY,EAAO,EAAQ,EAAU,GAAI,CACxC,QACA,KAAK,MAAQ,EACb,KAAK,OAAS,EACd,KAAK,MAAQ,EACb,KAAK,QAAU,GAAI,IAAQ,EAAG,EAAG,EAAO,GACxC,KAAK,YAAc,GACnB,KAAK,SAAW,GAAI,IAAQ,EAAG,EAAG,EAAO,GACzC,KAAK,QAAU,GAAI,IAAQ,OAAW,EAAQ,QAAS,EAAQ,MAAO,EAAQ,MAAO,EAAQ,UAAW,EAAQ,UAAW,EAAQ,OAAQ,EAAQ,KAAM,EAAQ,WAAY,EAAQ,UACrL,KAAK,QAAQ,sBAAwB,GACrC,KAAK,QAAQ,MAAQ,CACpB,MAAO,EACP,OAAQ,EACR,MAAO,GAER,KAAK,QAAQ,gBAAkB,EAAQ,kBAAoB,OAAY,EAAQ,gBAAkB,GACjG,KAAK,QAAQ,eAAiB,EAAQ,iBAAmB,OAAY,EAAQ,eAAiB,KAC9F,KAAK,QAAQ,UAAY,EAAQ,YAAc,OAAY,EAAQ,UAAY,GAC/E,KAAK,YAAc,EAAQ,cAAgB,OAAY,EAAQ,YAAc,GAC7E,KAAK,cAAgB,EAAQ,gBAAkB,OAAY,EAAQ,cAAgB,GACnF,KAAK,aAAe,EAAQ,eAAiB,OAAY,EAAQ,aAAe,KAGjF,WAAW,EAAS,CACnB,EAAQ,MAAQ,CACf,MAAO,KAAK,MACZ,OAAQ,KAAK,OACb,MAAO,KAAK,OAEb,KAAK,QAAU,EAGhB,QAAQ,EAAO,EAAQ,EAAQ,EAAG,CACjC,AAAI,MAAK,QAAU,GAAS,KAAK,SAAW,GAAU,KAAK,QAAU,IACpE,MAAK,MAAQ,EACb,KAAK,OAAS,EACd,KAAK,MAAQ,EACb,KAAK,QAAQ,MAAM,MAAQ,EAC3B,KAAK,QAAQ,MAAM,OAAS,EAC5B,KAAK,QAAQ,MAAM,MAAQ,EAC3B,KAAK,WAGN,KAAK,SAAS,IAAI,EAAG,EAAG,EAAO,GAC/B,KAAK,QAAQ,IAAI,EAAG,EAAG,EAAO,GAG/B,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,MAGpC,KAAK,EAAQ,CACZ,YAAK,MAAQ,EAAO,MACpB,KAAK,OAAS,EAAO,OACrB,KAAK,MAAQ,EAAO,MACpB,KAAK,SAAS,KAAK,EAAO,UAC1B,KAAK,QAAU,EAAO,QAAQ,QAC9B,KAAK,QAAQ,MAAQ,IAAK,KAAK,QAAQ,OAGvC,KAAK,YAAc,EAAO,YAC1B,KAAK,cAAgB,EAAO,cAC5B,KAAK,aAAe,EAAO,aACpB,KAGR,SAAU,CACT,KAAK,cAAc,CAClB,KAAM,aAMT,GAAkB,UAAU,oBAAsB,GAElD,gBAAyC,GAAkB,CAC1D,YAAY,EAAO,EAAQ,EAAO,CACjC,MAAM,EAAO,GACb,GAAM,GAAU,KAAK,QACrB,KAAK,QAAU,GAEf,OAAS,GAAI,EAAG,EAAI,EAAO,IAC1B,KAAK,QAAQ,GAAK,EAAQ,QAI5B,QAAQ,EAAO,EAAQ,EAAQ,EAAG,CACjC,GAAI,KAAK,QAAU,GAAS,KAAK,SAAW,GAAU,KAAK,QAAU,EAAO,CAC3E,KAAK,MAAQ,EACb,KAAK,OAAS,EACd,KAAK,MAAQ,EAEb,OAAS,GAAI,EAAG,EAAK,KAAK,QAAQ,OAAQ,EAAI,EAAI,IACjD,KAAK,QAAQ,GAAG,MAAM,MAAQ,EAC9B,KAAK,QAAQ,GAAG,MAAM,OAAS,EAC/B,KAAK,QAAQ,GAAG,MAAM,MAAQ,EAG/B,KAAK,UAGN,YAAK,SAAS,IAAI,EAAG,EAAG,EAAO,GAC/B,KAAK,QAAQ,IAAI,EAAG,EAAG,EAAO,GACvB,KAGR,KAAK,EAAQ,CACZ,KAAK,UACL,KAAK,MAAQ,EAAO,MACpB,KAAK,OAAS,EAAO,OACrB,KAAK,MAAQ,EAAO,MACpB,KAAK,SAAS,IAAI,EAAG,EAAG,KAAK,MAAO,KAAK,QACzC,KAAK,QAAQ,IAAI,EAAG,EAAG,KAAK,MAAO,KAAK,QACxC,KAAK,YAAc,EAAO,YAC1B,KAAK,cAAgB,EAAO,cAC5B,KAAK,aAAe,EAAO,aAC3B,KAAK,QAAQ,OAAS,EAEtB,OAAS,GAAI,EAAG,EAAK,EAAO,QAAQ,OAAQ,EAAI,EAAI,IACnD,KAAK,QAAQ,GAAK,EAAO,QAAQ,GAAG,QAGrC,MAAO,OAKT,GAA2B,UAAU,6BAA+B,GAEpE,gBAA2C,GAAkB,CAC5D,YAAY,EAAO,EAAQ,EAAS,CACnC,MAAM,EAAO,EAAQ,GACrB,KAAK,QAAU,EAGhB,KAAK,EAAQ,CACZ,aAAM,KAAK,KAAK,KAAM,GACtB,KAAK,QAAU,EAAO,QACf,MAKT,GAA6B,UAAU,+BAAiC,GAExE,QAAiB,CAChB,YAAY,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,CACvC,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,QAGJ,OAAM,EAAI,EAAI,EAAI,EAAG,CAC3B,eAAQ,KAAK,wGACN,EAAG,iBAAiB,EAAI,EAAI,SAG7B,WAAU,EAAK,EAAW,EAAM,EAAY,EAAM,EAAY,EAAG,CAEvE,GAAI,GAAK,EAAK,EAAa,GACzB,EAAK,EAAK,EAAa,GACvB,EAAK,EAAK,EAAa,GACvB,EAAK,EAAK,EAAa,GACnB,EAAK,EAAK,EAAa,GAC1B,EAAK,EAAK,EAAa,GACvB,EAAK,EAAK,EAAa,GACvB,EAAK,EAAK,EAAa,GAE1B,GAAI,IAAM,EAAG,CACZ,EAAI,EAAY,GAAK,EACrB,EAAI,EAAY,GAAK,EACrB,EAAI,EAAY,GAAK,EACrB,EAAI,EAAY,GAAK,EACrB,OAGD,GAAI,IAAM,EAAG,CACZ,EAAI,EAAY,GAAK,EACrB,EAAI,EAAY,GAAK,EACrB,EAAI,EAAY,GAAK,EACrB,EAAI,EAAY,GAAK,EACrB,OAGD,GAAI,IAAO,GAAM,IAAO,GAAM,IAAO,GAAM,IAAO,EAAI,CACrD,GAAI,GAAI,EAAI,EACN,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAM,GAAO,EAAI,EAAI,GACrB,EAAS,EAAI,EAAM,EAEtB,GAAI,EAAS,OAAO,QAAS,CAC5B,GAAM,GAAM,KAAK,KAAK,GACnB,EAAM,KAAK,MAAM,EAAK,EAAM,GAC/B,EAAI,KAAK,IAAI,EAAI,GAAO,EACxB,EAAI,KAAK,IAAI,EAAI,GAAO,EAGzB,GAAM,GAAO,EAAI,EAMjB,GALA,EAAK,EAAK,EAAI,EAAK,EACnB,EAAK,EAAK,EAAI,EAAK,EACnB,EAAK,EAAK,EAAI,EAAK,EACnB,EAAK,EAAK,EAAI,EAAK,EAEf,IAAM,EAAI,EAAG,CAChB,GAAM,GAAI,EAAI,KAAK,KAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAC3D,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,GAIR,EAAI,GAAa,EACjB,EAAI,EAAY,GAAK,EACrB,EAAI,EAAY,GAAK,EACrB,EAAI,EAAY,GAAK,QAGf,yBAAwB,EAAK,EAAW,EAAM,EAAY,EAAM,EAAY,CAClF,GAAM,GAAK,EAAK,GACV,EAAK,EAAK,EAAa,GACvB,EAAK,EAAK,EAAa,GACvB,EAAK,EAAK,EAAa,GACvB,EAAK,EAAK,GACV,EAAK,EAAK,EAAa,GACvB,EAAK,EAAK,EAAa,GACvB,EAAK,EAAK,EAAa,GAC7B,SAAI,GAAa,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACpD,EAAI,EAAY,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACxD,EAAI,EAAY,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACxD,EAAI,EAAY,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACjD,KAGJ,IAAI,CACP,MAAO,MAAK,MAGT,GAAE,EAAO,CACZ,KAAK,GAAK,EAEV,KAAK,uBAGF,IAAI,CACP,MAAO,MAAK,MAGT,GAAE,EAAO,CACZ,KAAK,GAAK,EAEV,KAAK,uBAGF,IAAI,CACP,MAAO,MAAK,MAGT,GAAE,EAAO,CACZ,KAAK,GAAK,EAEV,KAAK,uBAGF,IAAI,CACP,MAAO,MAAK,MAGT,GAAE,EAAO,CACZ,KAAK,GAAK,EAEV,KAAK,oBAGN,IAAI,EAAG,EAAG,EAAG,EAAG,CACf,YAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EAEV,KAAK,oBAEE,KAGR,OAAQ,CACP,MAAO,IAAI,MAAK,YAAY,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,IAG7D,KAAK,EAAY,CAChB,YAAK,GAAK,EAAW,EACrB,KAAK,GAAK,EAAW,EACrB,KAAK,GAAK,EAAW,EACrB,KAAK,GAAK,EAAW,EAErB,KAAK,oBAEE,KAGR,aAAa,EAAO,EAAQ,CAC3B,GAAI,CAAE,IAAS,EAAM,SACpB,KAAM,IAAI,OAAM,oGAGjB,GAAM,GAAI,EAAM,GACb,EAAI,EAAM,GACV,EAAI,EAAM,GACV,EAAQ,EAAM,OAIX,EAAM,KAAK,IACX,EAAM,KAAK,IACX,EAAK,EAAI,EAAI,GACb,EAAK,EAAI,EAAI,GACb,EAAK,EAAI,EAAI,GACb,EAAK,EAAI,EAAI,GACb,EAAK,EAAI,EAAI,GACb,EAAK,EAAI,EAAI,GAEnB,OAAQ,OACF,MACJ,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,UAEI,MACJ,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,UAEI,MACJ,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,UAEI,MACJ,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,UAEI,MACJ,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,UAEI,MACJ,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,KAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,cAGA,QAAQ,KAAK,mEAAqE,GAGpF,MAAI,KAAW,IAAO,KAAK,oBACpB,KAGR,iBAAiB,EAAM,EAAO,CAG7B,GAAM,GAAY,EAAQ,EACvB,EAAI,KAAK,IAAI,GAChB,YAAK,GAAK,EAAK,EAAI,EACnB,KAAK,GAAK,EAAK,EAAI,EACnB,KAAK,GAAK,EAAK,EAAI,EACnB,KAAK,GAAK,KAAK,IAAI,GAEnB,KAAK,oBAEE,KAGR,sBAAsB,EAAG,CAGxB,GAAM,GAAK,EAAE,SACV,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,IACT,EAAQ,EAAM,EAAM,EAEvB,GAAI,EAAQ,EAAG,CACd,GAAM,GAAI,GAAM,KAAK,KAAK,EAAQ,GAClC,KAAK,GAAK,IAAO,EACjB,KAAK,GAAM,GAAM,GAAO,EACxB,KAAK,GAAM,GAAM,GAAO,EACxB,KAAK,GAAM,GAAM,GAAO,UACd,EAAM,GAAO,EAAM,EAAK,CAClC,GAAM,GAAI,EAAM,KAAK,KAAK,EAAM,EAAM,EAAM,GAC5C,KAAK,GAAM,GAAM,GAAO,EACxB,KAAK,GAAK,IAAO,EACjB,KAAK,GAAM,GAAM,GAAO,EACxB,KAAK,GAAM,GAAM,GAAO,UACd,EAAM,EAAK,CACrB,GAAM,GAAI,EAAM,KAAK,KAAK,EAAM,EAAM,EAAM,GAC5C,KAAK,GAAM,GAAM,GAAO,EACxB,KAAK,GAAM,GAAM,GAAO,EACxB,KAAK,GAAK,IAAO,EACjB,KAAK,GAAM,GAAM,GAAO,MAClB,CACN,GAAM,GAAI,EAAM,KAAK,KAAK,EAAM,EAAM,EAAM,GAC5C,KAAK,GAAM,GAAM,GAAO,EACxB,KAAK,GAAM,GAAM,GAAO,EACxB,KAAK,GAAM,GAAM,GAAO,EACxB,KAAK,GAAK,IAAO,EAGlB,YAAK,oBAEE,KAGR,mBAAmB,EAAO,EAAK,CAE9B,GAAI,GAAI,EAAM,IAAI,GAAO,EAEzB,MAAI,GAAI,OAAO,QAEd,GAAI,EAEJ,AAAI,KAAK,IAAI,EAAM,GAAK,KAAK,IAAI,EAAM,GACtC,MAAK,GAAK,CAAC,EAAM,EACjB,KAAK,GAAK,EAAM,EAChB,KAAK,GAAK,EACV,KAAK,GAAK,GAEV,MAAK,GAAK,EACV,KAAK,GAAK,CAAC,EAAM,EACjB,KAAK,GAAK,EAAM,EAChB,KAAK,GAAK,IAIX,MAAK,GAAK,EAAM,EAAI,EAAI,EAAI,EAAM,EAAI,EAAI,EAC1C,KAAK,GAAK,EAAM,EAAI,EAAI,EAAI,EAAM,EAAI,EAAI,EAC1C,KAAK,GAAK,EAAM,EAAI,EAAI,EAAI,EAAM,EAAI,EAAI,EAC1C,KAAK,GAAK,GAGJ,KAAK,YAGb,QAAQ,EAAG,CACV,MAAO,GAAI,KAAK,KAAK,KAAK,IAAI,GAAM,KAAK,IAAI,GAAI,GAAI,KAGtD,cAAc,EAAG,EAAM,CACtB,GAAM,GAAQ,KAAK,QAAQ,GAC3B,GAAI,IAAU,EAAG,MAAO,MACxB,GAAM,GAAI,KAAK,IAAI,EAAG,EAAO,GAC7B,YAAK,MAAM,EAAG,GACP,KAGR,UAAW,CACV,MAAO,MAAK,IAAI,EAAG,EAAG,EAAG,GAG1B,QAAS,CAER,MAAO,MAAK,YAGb,WAAY,CACX,YAAK,IAAM,GACX,KAAK,IAAM,GACX,KAAK,IAAM,GAEX,KAAK,oBAEE,KAGR,IAAI,EAAG,CACN,MAAO,MAAK,GAAK,EAAE,GAAK,KAAK,GAAK,EAAE,GAAK,KAAK,GAAK,EAAE,GAAK,KAAK,GAAK,EAAE,GAGvE,UAAW,CACV,MAAO,MAAK,GAAK,KAAK,GAAK,KAAK,GAAK,KAAK,GAAK,KAAK,GAAK,KAAK,GAAK,KAAK,GAAK,KAAK,GAGnF,QAAS,CACR,MAAO,MAAK,KAAK,KAAK,GAAK,KAAK,GAAK,KAAK,GAAK,KAAK,GAAK,KAAK,GAAK,KAAK,GAAK,KAAK,GAAK,KAAK,IAG7F,WAAY,CACX,GAAI,GAAI,KAAK,SAEb,MAAI,KAAM,EACT,MAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,GAEV,GAAI,EAAI,EACR,KAAK,GAAK,KAAK,GAAK,EACpB,KAAK,GAAK,KAAK,GAAK,EACpB,KAAK,GAAK,KAAK,GAAK,EACpB,KAAK,GAAK,KAAK,GAAK,GAGrB,KAAK,oBAEE,KAGR,SAAS,EAAG,EAAG,CACd,MAAI,KAAM,OACT,SAAQ,KAAK,0GACN,KAAK,oBAAoB,EAAG,IAG7B,KAAK,oBAAoB,KAAM,GAGvC,YAAY,EAAG,CACd,MAAO,MAAK,oBAAoB,EAAG,MAGpC,oBAAoB,EAAG,EAAG,CAEzB,GAAM,GAAM,EAAE,GACX,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACL,EAAM,EAAE,GACX,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACX,YAAK,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EACpD,KAAK,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EACpD,KAAK,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EACpD,KAAK,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAEpD,KAAK,oBAEE,KAGR,MAAM,EAAI,EAAG,CACZ,GAAI,IAAM,EAAG,MAAO,MACpB,GAAI,IAAM,EAAG,MAAO,MAAK,KAAK,GAC9B,GAAM,GAAI,KAAK,GACZ,EAAI,KAAK,GACT,EAAI,KAAK,GACT,EAAI,KAAK,GAER,EAAe,EAAI,EAAG,GAAK,EAAI,EAAG,GAAK,EAAI,EAAG,GAAK,EAAI,EAAG,GAY9D,GAVA,AAAI,EAAe,EAClB,MAAK,GAAK,CAAC,EAAG,GACd,KAAK,GAAK,CAAC,EAAG,GACd,KAAK,GAAK,CAAC,EAAG,GACd,KAAK,GAAK,CAAC,EAAG,GACd,EAAe,CAAC,GAEhB,KAAK,KAAK,GAGP,GAAgB,EACnB,YAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACH,KAGR,GAAM,GAAkB,EAAM,EAAe,EAE7C,GAAI,GAAmB,OAAO,QAAS,CACtC,GAAM,GAAI,EAAI,EACd,YAAK,GAAK,EAAI,EAAI,EAAI,KAAK,GAC3B,KAAK,GAAK,EAAI,EAAI,EAAI,KAAK,GAC3B,KAAK,GAAK,EAAI,EAAI,EAAI,KAAK,GAC3B,KAAK,GAAK,EAAI,EAAI,EAAI,KAAK,GAC3B,KAAK,YAEL,KAAK,oBAEE,KAGR,GAAM,GAAe,KAAK,KAAK,GACzB,EAAY,KAAK,MAAM,EAAc,GACrC,EAAS,KAAK,IAAK,GAAI,GAAK,GAAa,EAC5C,EAAS,KAAK,IAAI,EAAI,GAAa,EACtC,YAAK,GAAK,EAAI,EAAS,KAAK,GAAK,EACjC,KAAK,GAAK,EAAI,EAAS,KAAK,GAAK,EACjC,KAAK,GAAK,EAAI,EAAS,KAAK,GAAK,EACjC,KAAK,GAAK,EAAI,EAAS,KAAK,GAAK,EAEjC,KAAK,oBAEE,KAGR,iBAAiB,EAAI,EAAI,EAAG,CAC3B,KAAK,KAAK,GAAI,MAAM,EAAI,GAGzB,QAAS,CAIR,GAAM,GAAK,KAAK,SACV,EAAU,KAAK,KAAK,EAAI,GACxB,EAAS,KAAK,KAAK,GACnB,EAAK,EAAI,KAAK,GAAK,KAAK,SACxB,EAAK,EAAI,KAAK,GAAK,KAAK,SAC9B,MAAO,MAAK,IAAI,EAAU,KAAK,IAAI,GAAK,EAAS,KAAK,IAAI,GAAK,EAAS,KAAK,IAAI,GAAK,EAAU,KAAK,IAAI,IAG1G,OAAO,EAAY,CAClB,MAAO,GAAW,KAAO,KAAK,IAAM,EAAW,KAAO,KAAK,IAAM,EAAW,KAAO,KAAK,IAAM,EAAW,KAAO,KAAK,GAGtH,UAAU,EAAO,EAAS,EAAG,CAC5B,YAAK,GAAK,EAAM,GAChB,KAAK,GAAK,EAAM,EAAS,GACzB,KAAK,GAAK,EAAM,EAAS,GACzB,KAAK,GAAK,EAAM,EAAS,GAEzB,KAAK,oBAEE,KAGR,QAAQ,EAAQ,GAAI,EAAS,EAAG,CAC/B,SAAM,GAAU,KAAK,GACrB,EAAM,EAAS,GAAK,KAAK,GACzB,EAAM,EAAS,GAAK,KAAK,GACzB,EAAM,EAAS,GAAK,KAAK,GAClB,EAGR,oBAAoB,EAAW,EAAO,CACrC,YAAK,GAAK,EAAU,KAAK,GACzB,KAAK,GAAK,EAAU,KAAK,GACzB,KAAK,GAAK,EAAU,KAAK,GACzB,KAAK,GAAK,EAAU,KAAK,GAClB,KAGR,UAAU,EAAU,CACnB,YAAK,kBAAoB,EAClB,KAGR,mBAAoB,GAIrB,GAAW,UAAU,aAAe,GAEpC,OAAc,CACb,YAAY,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,CAChC,KAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,EAGV,IAAI,EAAG,EAAG,EAAG,CACZ,MAAI,KAAM,QAAW,GAAI,KAAK,GAE9B,KAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,EACF,KAGR,UAAU,EAAQ,CACjB,YAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,EACF,KAGR,KAAK,EAAG,CACP,YAAK,EAAI,EACF,KAGR,KAAK,EAAG,CACP,YAAK,EAAI,EACF,KAGR,KAAK,EAAG,CACP,YAAK,EAAI,EACF,KAGR,aAAa,EAAO,EAAO,CAC1B,OAAQ,OACF,GACJ,KAAK,EAAI,EACT,UAEI,GACJ,KAAK,EAAI,EACT,UAEI,GACJ,KAAK,EAAI,EACT,cAGA,KAAM,IAAI,OAAM,0BAA4B,GAG9C,MAAO,MAGR,aAAa,EAAO,CACnB,OAAQ,OACF,GACJ,MAAO,MAAK,MAER,GACJ,MAAO,MAAK,MAER,GACJ,MAAO,MAAK,UAGZ,KAAM,IAAI,OAAM,0BAA4B,IAI/C,OAAQ,CACP,MAAO,IAAI,MAAK,YAAY,KAAK,EAAG,KAAK,EAAG,KAAK,GAGlD,KAAK,EAAG,CACP,YAAK,EAAI,EAAE,EACX,KAAK,EAAI,EAAE,EACX,KAAK,EAAI,EAAE,EACJ,KAGR,IAAI,EAAG,EAAG,CACT,MAAI,KAAM,OACT,SAAQ,KAAK,yFACN,KAAK,WAAW,EAAG,IAG3B,MAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACL,MAGR,UAAU,EAAG,CACZ,YAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACH,KAGR,WAAW,EAAG,EAAG,CAChB,YAAK,EAAI,EAAE,EAAI,EAAE,EACjB,KAAK,EAAI,EAAE,EAAI,EAAE,EACjB,KAAK,EAAI,EAAE,EAAI,EAAE,EACV,KAGR,gBAAgB,EAAG,EAAG,CACrB,YAAK,GAAK,EAAE,EAAI,EAChB,KAAK,GAAK,EAAE,EAAI,EAChB,KAAK,GAAK,EAAE,EAAI,EACT,KAGR,IAAI,EAAG,EAAG,CACT,MAAI,KAAM,OACT,SAAQ,KAAK,yFACN,KAAK,WAAW,EAAG,IAG3B,MAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACL,MAGR,UAAU,EAAG,CACZ,YAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACH,KAGR,WAAW,EAAG,EAAG,CAChB,YAAK,EAAI,EAAE,EAAI,EAAE,EACjB,KAAK,EAAI,EAAE,EAAI,EAAE,EACjB,KAAK,EAAI,EAAE,EAAI,EAAE,EACV,KAGR,SAAS,EAAG,EAAG,CACd,MAAI,KAAM,OACT,SAAQ,KAAK,mGACN,KAAK,gBAAgB,EAAG,IAGhC,MAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACL,MAGR,eAAe,EAAQ,CACtB,YAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACH,KAGR,gBAAgB,EAAG,EAAG,CACrB,YAAK,EAAI,EAAE,EAAI,EAAE,EACjB,KAAK,EAAI,EAAE,EAAI,EAAE,EACjB,KAAK,EAAI,EAAE,EAAI,EAAE,EACV,KAGR,WAAW,EAAO,CACjB,MAAM,IAAS,EAAM,SACpB,QAAQ,MAAM,+FAGR,KAAK,gBAAgB,GAAc,aAAa,IAGxD,eAAe,EAAM,EAAO,CAC3B,MAAO,MAAK,gBAAgB,GAAc,iBAAiB,EAAM,IAGlE,aAAa,EAAG,CACf,GAAM,GAAI,KAAK,EACZ,EAAI,KAAK,EACT,EAAI,KAAK,EACN,EAAI,EAAE,SACZ,YAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EACtC,KAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EACtC,KAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAC/B,KAGR,kBAAkB,EAAG,CACpB,MAAO,MAAK,aAAa,GAAG,YAG7B,aAAa,EAAG,CACf,GAAM,GAAI,KAAK,EACZ,EAAI,KAAK,EACT,EAAI,KAAK,EACN,EAAI,EAAE,SACN,EAAI,EAAK,GAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAAM,EAAI,EAAE,KACnD,YAAK,EAAK,GAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,KAAO,EACpD,KAAK,EAAK,GAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,KAAO,EACpD,KAAK,EAAK,GAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAAM,EAAI,EAAE,KAAO,EAC9C,KAGR,gBAAgB,EAAG,CAClB,GAAM,GAAI,KAAK,EACZ,EAAI,KAAK,EACT,EAAI,KAAK,EACN,EAAK,EAAE,EACV,EAAK,EAAE,EACP,EAAK,EAAE,EACP,EAAK,EAAE,EAEJ,EAAK,EAAK,EAAI,EAAK,EAAI,EAAK,EAC5B,EAAK,EAAK,EAAI,EAAK,EAAI,EAAK,EAC5B,EAAK,EAAK,EAAI,EAAK,EAAI,EAAK,EAC5B,EAAK,CAAC,EAAK,EAAI,EAAK,EAAI,EAAK,EAEnC,YAAK,EAAI,EAAK,EAAK,EAAK,CAAC,EAAK,EAAK,CAAC,EAAK,EAAK,CAAC,EAC/C,KAAK,EAAI,EAAK,EAAK,EAAK,CAAC,EAAK,EAAK,CAAC,EAAK,EAAK,CAAC,EAC/C,KAAK,EAAI,EAAK,EAAK,EAAK,CAAC,EAAK,EAAK,CAAC,EAAK,EAAK,CAAC,EACxC,KAGR,QAAQ,EAAQ,CACf,MAAO,MAAK,aAAa,EAAO,oBAAoB,aAAa,EAAO,kBAGzE,UAAU,EAAQ,CACjB,MAAO,MAAK,aAAa,EAAO,yBAAyB,aAAa,EAAO,aAG9E,mBAAmB,EAAG,CAGrB,GAAM,GAAI,KAAK,EACZ,EAAI,KAAK,EACT,EAAI,KAAK,EACN,EAAI,EAAE,SACZ,YAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EACtC,KAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EACtC,KAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAAM,EAChC,KAAK,YAGb,OAAO,EAAG,CACT,YAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACL,KAGR,aAAa,EAAQ,CACpB,MAAO,MAAK,eAAe,EAAI,GAGhC,IAAI,EAAG,CACN,YAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GAC5B,KAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GAC5B,KAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GACrB,KAGR,IAAI,EAAG,CACN,YAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GAC5B,KAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GAC5B,KAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAE,GACrB,KAGR,MAAM,EAAK,EAAK,CAEf,YAAK,EAAI,KAAK,IAAI,EAAI,EAAG,KAAK,IAAI,EAAI,EAAG,KAAK,IAC9C,KAAK,EAAI,KAAK,IAAI,EAAI,EAAG,KAAK,IAAI,EAAI,EAAG,KAAK,IAC9C,KAAK,EAAI,KAAK,IAAI,EAAI,EAAG,KAAK,IAAI,EAAI,EAAG,KAAK,IACvC,KAGR,YAAY,EAAQ,EAAQ,CAC3B,YAAK,EAAI,KAAK,IAAI,EAAQ,KAAK,IAAI,EAAQ,KAAK,IAChD,KAAK,EAAI,KAAK,IAAI,EAAQ,KAAK,IAAI,EAAQ,KAAK,IAChD,KAAK,EAAI,KAAK,IAAI,EAAQ,KAAK,IAAI,EAAQ,KAAK,IACzC,KAGR,YAAY,EAAK,EAAK,CACrB,GAAM,GAAS,KAAK,SACpB,MAAO,MAAK,aAAa,GAAU,GAAG,eAAe,KAAK,IAAI,EAAK,KAAK,IAAI,EAAK,KAGlF,OAAQ,CACP,YAAK,EAAI,KAAK,MAAM,KAAK,GACzB,KAAK,EAAI,KAAK,MAAM,KAAK,GACzB,KAAK,EAAI,KAAK,MAAM,KAAK,GAClB,KAGR,MAAO,CACN,YAAK,EAAI,KAAK,KAAK,KAAK,GACxB,KAAK,EAAI,KAAK,KAAK,KAAK,GACxB,KAAK,EAAI,KAAK,KAAK,KAAK,GACjB,KAGR,OAAQ,CACP,YAAK,EAAI,KAAK,MAAM,KAAK,GACzB,KAAK,EAAI,KAAK,MAAM,KAAK,GACzB,KAAK,EAAI,KAAK,MAAM,KAAK,GAClB,KAGR,aAAc,CACb,YAAK,EAAI,KAAK,EAAI,EAAI,KAAK,KAAK,KAAK,GAAK,KAAK,MAAM,KAAK,GAC1D,KAAK,EAAI,KAAK,EAAI,EAAI,KAAK,KAAK,KAAK,GAAK,KAAK,MAAM,KAAK,GAC1D,KAAK,EAAI,KAAK,EAAI,EAAI,KAAK,KAAK,KAAK,GAAK,KAAK,MAAM,KAAK,GACnD,KAGR,QAAS,CACR,YAAK,EAAI,CAAC,KAAK,EACf,KAAK,EAAI,CAAC,KAAK,EACf,KAAK,EAAI,CAAC,KAAK,EACR,KAGR,IAAI,EAAG,CACN,MAAO,MAAK,EAAI,EAAE,EAAI,KAAK,EAAI,EAAE,EAAI,KAAK,EAAI,EAAE,EAIjD,UAAW,CACV,MAAO,MAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAG1D,QAAS,CACR,MAAO,MAAK,KAAK,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,GAGpE,iBAAkB,CACjB,MAAO,MAAK,IAAI,KAAK,GAAK,KAAK,IAAI,KAAK,GAAK,KAAK,IAAI,KAAK,GAG5D,WAAY,CACX,MAAO,MAAK,aAAa,KAAK,UAAY,GAG3C,UAAU,EAAQ,CACjB,MAAO,MAAK,YAAY,eAAe,GAGxC,KAAK,EAAG,EAAO,CACd,YAAK,GAAM,GAAE,EAAI,KAAK,GAAK,EAC3B,KAAK,GAAM,GAAE,EAAI,KAAK,GAAK,EAC3B,KAAK,GAAM,GAAE,EAAI,KAAK,GAAK,EACpB,KAGR,YAAY,EAAI,EAAI,EAAO,CAC1B,YAAK,EAAI,EAAG,EAAK,GAAG,EAAI,EAAG,GAAK,EAChC,KAAK,EAAI,EAAG,EAAK,GAAG,EAAI,EAAG,GAAK,EAChC,KAAK,EAAI,EAAG,EAAK,GAAG,EAAI,EAAG,GAAK,EACzB,KAGR,MAAM,EAAG,EAAG,CACX,MAAI,KAAM,OACT,SAAQ,KAAK,6FACN,KAAK,aAAa,EAAG,IAGtB,KAAK,aAAa,KAAM,GAGhC,aAAa,EAAG,EAAG,CAClB,GAAM,GAAK,EAAE,EACV,EAAK,EAAE,EACP,EAAK,EAAE,EACJ,EAAK,EAAE,EACV,EAAK,EAAE,EACP,EAAK,EAAE,EACV,YAAK,EAAI,EAAK,EAAK,EAAK,EACxB,KAAK,EAAI,EAAK,EAAK,EAAK,EACxB,KAAK,EAAI,EAAK,EAAK,EAAK,EACjB,KAGR,gBAAgB,EAAG,CAClB,GAAM,GAAc,EAAE,WACtB,GAAI,IAAgB,EAAG,MAAO,MAAK,IAAI,EAAG,EAAG,GAC7C,GAAM,GAAS,EAAE,IAAI,MAAQ,EAC7B,MAAO,MAAK,KAAK,GAAG,eAAe,GAGpC,eAAe,EAAa,CAC3B,UAAU,KAAK,MAAM,gBAAgB,GAE9B,KAAK,IAAI,IAGjB,QAAQ,EAAQ,CAGf,MAAO,MAAK,IAAI,GAAU,KAAK,GAAQ,eAAe,EAAI,KAAK,IAAI,KAGpE,QAAQ,EAAG,CACV,GAAM,GAAc,KAAK,KAAK,KAAK,WAAa,EAAE,YAClD,GAAI,IAAgB,EAAG,MAAO,MAAK,GAAK,EACxC,GAAM,GAAQ,KAAK,IAAI,GAAK,EAE5B,MAAO,MAAK,KAAK,GAAM,EAAO,GAAI,IAGnC,WAAW,EAAG,CACb,MAAO,MAAK,KAAK,KAAK,kBAAkB,IAGzC,kBAAkB,EAAG,CACpB,GAAM,GAAK,KAAK,EAAI,EAAE,EACnB,EAAK,KAAK,EAAI,EAAE,EAChB,EAAK,KAAK,EAAI,EAAE,EACnB,MAAO,GAAK,EAAK,EAAK,EAAK,EAAK,EAGjC,oBAAoB,EAAG,CACtB,MAAO,MAAK,IAAI,KAAK,EAAI,EAAE,GAAK,KAAK,IAAI,KAAK,EAAI,EAAE,GAAK,KAAK,IAAI,KAAK,EAAI,EAAE,GAG9E,iBAAiB,EAAG,CACnB,MAAO,MAAK,uBAAuB,EAAE,OAAQ,EAAE,IAAK,EAAE,OAGvD,uBAAuB,EAAQ,EAAK,EAAO,CAC1C,GAAM,GAAe,KAAK,IAAI,GAAO,EACrC,YAAK,EAAI,EAAe,KAAK,IAAI,GACjC,KAAK,EAAI,KAAK,IAAI,GAAO,EACzB,KAAK,EAAI,EAAe,KAAK,IAAI,GAC1B,KAGR,mBAAmB,EAAG,CACrB,MAAO,MAAK,yBAAyB,EAAE,OAAQ,EAAE,MAAO,EAAE,GAG3D,yBAAyB,EAAQ,EAAO,EAAG,CAC1C,YAAK,EAAI,EAAS,KAAK,IAAI,GAC3B,KAAK,EAAI,EACT,KAAK,EAAI,EAAS,KAAK,IAAI,GACpB,KAGR,sBAAsB,EAAG,CACxB,GAAM,GAAI,EAAE,SACZ,YAAK,EAAI,EAAE,IACX,KAAK,EAAI,EAAE,IACX,KAAK,EAAI,EAAE,IACJ,KAGR,mBAAmB,EAAG,CACrB,GAAM,GAAK,KAAK,oBAAoB,EAAG,GAAG,SACpC,EAAK,KAAK,oBAAoB,EAAG,GAAG,SACpC,EAAK,KAAK,oBAAoB,EAAG,GAAG,SAC1C,YAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,EACF,KAGR,oBAAoB,EAAG,EAAO,CAC7B,MAAO,MAAK,UAAU,EAAE,SAAU,EAAQ,GAG3C,qBAAqB,EAAG,EAAO,CAC9B,MAAO,MAAK,UAAU,EAAE,SAAU,EAAQ,GAG3C,OAAO,EAAG,CACT,MAAO,GAAE,IAAM,KAAK,GAAK,EAAE,IAAM,KAAK,GAAK,EAAE,IAAM,KAAK,EAGzD,UAAU,EAAO,EAAS,EAAG,CAC5B,YAAK,EAAI,EAAM,GACf,KAAK,EAAI,EAAM,EAAS,GACxB,KAAK,EAAI,EAAM,EAAS,GACjB,KAGR,QAAQ,EAAQ,GAAI,EAAS,EAAG,CAC/B,SAAM,GAAU,KAAK,EACrB,EAAM,EAAS,GAAK,KAAK,EACzB,EAAM,EAAS,GAAK,KAAK,EAClB,EAGR,oBAAoB,EAAW,EAAO,EAAQ,CAC7C,MAAI,KAAW,QACd,QAAQ,KAAK,uEAGd,KAAK,EAAI,EAAU,KAAK,GACxB,KAAK,EAAI,EAAU,KAAK,GACxB,KAAK,EAAI,EAAU,KAAK,GACjB,KAGR,QAAS,CACR,YAAK,EAAI,KAAK,SACd,KAAK,EAAI,KAAK,SACd,KAAK,EAAI,KAAK,SACP,KAGR,iBAAkB,CAEjB,GAAM,GAAK,MAAK,SAAW,IAAO,EAC5B,EAAI,KAAK,SAAW,KAAK,GAAK,EAC9B,EAAI,KAAK,KAAK,EAAI,GAAK,GAC7B,YAAK,EAAI,EAAI,KAAK,IAAI,GACtB,KAAK,EAAI,EAAI,KAAK,IAAI,GACtB,KAAK,EAAI,EACF,OAGN,OAAO,WAAY,CACpB,KAAM,MAAK,EACX,KAAM,MAAK,EACX,KAAM,MAAK,GAKb,EAAQ,UAAU,UAAY,GAE9B,GAAM,IAAyB,GAAI,GAE7B,GAA6B,GAAI,IAEvC,QAAW,CACV,YAAY,EAAM,GAAI,GAAQ,IAAW,IAAW,KAAY,EAAM,GAAI,GAAQ,KAAW,KAAW,MAAY,CACnH,KAAK,IAAM,EACX,KAAK,IAAM,EAGZ,IAAI,EAAK,EAAK,CACb,YAAK,IAAI,KAAK,GACd,KAAK,IAAI,KAAK,GACP,KAGR,aAAa,EAAO,CACnB,GAAI,GAAO,IACP,EAAO,IACP,EAAO,IACP,EAAO,KACP,EAAO,KACP,EAAO,KAEX,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,GAAK,EAAG,CAChD,GAAM,GAAI,EAAM,GACV,EAAI,EAAM,EAAI,GACd,EAAI,EAAM,EAAI,GACpB,AAAI,EAAI,GAAM,GAAO,GACjB,EAAI,GAAM,GAAO,GACjB,EAAI,GAAM,GAAO,GACjB,EAAI,GAAM,GAAO,GACjB,EAAI,GAAM,GAAO,GACjB,EAAI,GAAM,GAAO,GAGtB,YAAK,IAAI,IAAI,EAAM,EAAM,GACzB,KAAK,IAAI,IAAI,EAAM,EAAM,GAClB,KAGR,uBAAuB,EAAW,CACjC,GAAI,GAAO,IACP,EAAO,IACP,EAAO,IACP,EAAO,KACP,EAAO,KACP,EAAO,KAEX,OAAS,GAAI,EAAG,EAAI,EAAU,MAAO,EAAI,EAAG,IAAK,CAChD,GAAM,GAAI,EAAU,KAAK,GACnB,EAAI,EAAU,KAAK,GACnB,EAAI,EAAU,KAAK,GACzB,AAAI,EAAI,GAAM,GAAO,GACjB,EAAI,GAAM,GAAO,GACjB,EAAI,GAAM,GAAO,GACjB,EAAI,GAAM,GAAO,GACjB,EAAI,GAAM,GAAO,GACjB,EAAI,GAAM,GAAO,GAGtB,YAAK,IAAI,IAAI,EAAM,EAAM,GACzB,KAAK,IAAI,IAAI,EAAM,EAAM,GAClB,KAGR,cAAc,EAAQ,CACrB,KAAK,YAEL,OAAS,GAAI,EAAG,EAAK,EAAO,OAAQ,EAAI,EAAI,IAC3C,KAAK,cAAc,EAAO,IAG3B,MAAO,MAGR,qBAAqB,EAAQ,EAAM,CAClC,GAAM,GAAW,GAAU,KAAK,GAAM,eAAe,IAErD,YAAK,IAAI,KAAK,GAAQ,IAAI,GAC1B,KAAK,IAAI,KAAK,GAAQ,IAAI,GACnB,KAGR,cAAc,EAAQ,CACrB,YAAK,YACE,KAAK,eAAe,GAG5B,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,MAGpC,KAAK,EAAK,CACT,YAAK,IAAI,KAAK,EAAI,KAClB,KAAK,IAAI,KAAK,EAAI,KACX,KAGR,WAAY,CACX,YAAK,IAAI,EAAI,KAAK,IAAI,EAAI,KAAK,IAAI,EAAI,IACvC,KAAK,IAAI,EAAI,KAAK,IAAI,EAAI,KAAK,IAAI,EAAI,KAChC,KAGR,SAAU,CAET,MAAO,MAAK,IAAI,EAAI,KAAK,IAAI,GAAK,KAAK,IAAI,EAAI,KAAK,IAAI,GAAK,KAAK,IAAI,EAAI,KAAK,IAAI,EAGpF,UAAU,EAAQ,CACjB,MAAO,MAAK,UAAY,EAAO,IAAI,EAAG,EAAG,GAAK,EAAO,WAAW,KAAK,IAAK,KAAK,KAAK,eAAe,IAGpG,QAAQ,EAAQ,CACf,MAAO,MAAK,UAAY,EAAO,IAAI,EAAG,EAAG,GAAK,EAAO,WAAW,KAAK,IAAK,KAAK,KAGhF,cAAc,EAAO,CACpB,YAAK,IAAI,IAAI,GACb,KAAK,IAAI,IAAI,GACN,KAGR,eAAe,EAAQ,CACtB,YAAK,IAAI,IAAI,GACb,KAAK,IAAI,IAAI,GACN,KAGR,eAAe,EAAQ,CACtB,YAAK,IAAI,UAAU,CAAC,GACpB,KAAK,IAAI,UAAU,GACZ,KAGR,eAAe,EAAQ,CAGtB,EAAO,kBAAkB,GAAO,IAChC,GAAM,GAAW,EAAO,SAExB,AAAI,IAAa,QACZ,GAAS,cAAgB,MAC5B,EAAS,qBAGV,GAAO,KAAK,EAAS,aAErB,GAAO,aAAa,EAAO,aAE3B,KAAK,MAAM,KAGZ,GAAM,GAAW,EAAO,SAExB,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,EAAI,EAAG,IAC3C,KAAK,eAAe,EAAS,IAG9B,MAAO,MAGR,cAAc,EAAO,CACpB,MAAO,IAAM,EAAI,KAAK,IAAI,GAAK,EAAM,EAAI,KAAK,IAAI,GAAK,EAAM,EAAI,KAAK,IAAI,GAAK,EAAM,EAAI,KAAK,IAAI,GAAK,EAAM,EAAI,KAAK,IAAI,GAAK,EAAM,EAAI,KAAK,IAAI,GAGnJ,YAAY,EAAK,CAChB,MAAO,MAAK,IAAI,GAAK,EAAI,IAAI,GAAK,EAAI,IAAI,GAAK,KAAK,IAAI,GAAK,KAAK,IAAI,GAAK,EAAI,IAAI,GAAK,EAAI,IAAI,GAAK,KAAK,IAAI,GAAK,KAAK,IAAI,GAAK,EAAI,IAAI,GAAK,EAAI,IAAI,GAAK,KAAK,IAAI,EAGrK,aAAa,EAAO,EAAQ,CAG3B,MAAO,GAAO,IAAK,GAAM,EAAI,KAAK,IAAI,GAAM,MAAK,IAAI,EAAI,KAAK,IAAI,GAAK,GAAM,EAAI,KAAK,IAAI,GAAM,MAAK,IAAI,EAAI,KAAK,IAAI,GAAK,GAAM,EAAI,KAAK,IAAI,GAAM,MAAK,IAAI,EAAI,KAAK,IAAI,IAG3K,cAAc,EAAK,CAElB,MAAO,IAAI,IAAI,EAAI,KAAK,IAAI,GAAK,EAAI,IAAI,EAAI,KAAK,IAAI,GAAK,EAAI,IAAI,EAAI,KAAK,IAAI,GAAK,EAAI,IAAI,EAAI,KAAK,IAAI,GAAK,EAAI,IAAI,EAAI,KAAK,IAAI,GAAK,EAAI,IAAI,EAAI,KAAK,IAAI,GAG/J,iBAAiB,EAAQ,CAExB,YAAK,WAAW,EAAO,OAAQ,IAExB,GAAU,kBAAkB,EAAO,SAAW,EAAO,OAAS,EAAO,OAG7E,gBAAgB,EAAO,CAGtB,GAAI,GAAK,EAET,MAAI,GAAM,OAAO,EAAI,EACpB,GAAM,EAAM,OAAO,EAAI,KAAK,IAAI,EAChC,EAAM,EAAM,OAAO,EAAI,KAAK,IAAI,GAEhC,GAAM,EAAM,OAAO,EAAI,KAAK,IAAI,EAChC,EAAM,EAAM,OAAO,EAAI,KAAK,IAAI,GAGjC,AAAI,EAAM,OAAO,EAAI,EACpB,IAAO,EAAM,OAAO,EAAI,KAAK,IAAI,EACjC,GAAO,EAAM,OAAO,EAAI,KAAK,IAAI,GAEjC,IAAO,EAAM,OAAO,EAAI,KAAK,IAAI,EACjC,GAAO,EAAM,OAAO,EAAI,KAAK,IAAI,GAGlC,AAAI,EAAM,OAAO,EAAI,EACpB,IAAO,EAAM,OAAO,EAAI,KAAK,IAAI,EACjC,GAAO,EAAM,OAAO,EAAI,KAAK,IAAI,GAEjC,IAAO,EAAM,OAAO,EAAI,KAAK,IAAI,EACjC,GAAO,EAAM,OAAO,EAAI,KAAK,IAAI,GAG3B,GAAO,CAAC,EAAM,UAAY,GAAO,CAAC,EAAM,SAGhD,mBAAmB,EAAU,CAC5B,GAAI,KAAK,UACR,MAAO,GAIR,KAAK,UAAU,IAEf,GAAS,WAAW,KAAK,IAAK,IAG9B,GAAM,WAAW,EAAS,EAAG,IAE7B,GAAM,WAAW,EAAS,EAAG,IAE7B,GAAM,WAAW,EAAS,EAAG,IAG7B,GAAI,WAAW,GAAO,IAEtB,GAAI,WAAW,GAAO,IAEtB,GAAI,WAAW,GAAO,IAKtB,GAAI,GAAO,CAAC,EAAG,CAAC,GAAI,EAAG,GAAI,EAAG,EAAG,CAAC,GAAI,EAAG,GAAI,EAAG,EAAG,CAAC,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,CAAC,GAAI,EAAG,GAAI,EAAG,EAAG,CAAC,GAAI,EAAG,GAAI,EAAG,EAAG,CAAC,GAAI,EAAG,CAAC,GAAI,EAAG,GAAI,EAAG,EAAG,CAAC,GAAI,EAAG,GAAI,EAAG,EAAG,CAAC,GAAI,EAAG,GAAI,EAAG,GAS3K,MAPI,CAAC,GAAW,EAAM,GAAO,GAAO,GAAO,KAK3C,GAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE5B,CAAC,GAAW,EAAM,GAAO,GAAO,GAAO,KACnC,GAKR,IAAgB,aAAa,GAAK,IAElC,EAAO,CAAC,GAAgB,EAAG,GAAgB,EAAG,GAAgB,GACvD,GAAW,EAAM,GAAO,GAAO,GAAO,KAG9C,WAAW,EAAO,EAAQ,CACzB,MAAO,GAAO,KAAK,GAAO,MAAM,KAAK,IAAK,KAAK,KAGhD,gBAAgB,EAAO,CAGtB,MAAO,AAFc,IAAU,KAAK,GAAO,MAAM,KAAK,IAAK,KAAK,KAE5C,IAAI,GAAO,SAGhC,kBAAkB,EAAQ,CACzB,YAAK,UAAU,EAAO,QACtB,EAAO,OAAS,KAAK,QAAQ,IAAW,SAAW,GAC5C,EAGR,UAAU,EAAK,CACd,YAAK,IAAI,IAAI,EAAI,KACjB,KAAK,IAAI,IAAI,EAAI,KAEb,KAAK,WAAW,KAAK,YAClB,KAGR,MAAM,EAAK,CACV,YAAK,IAAI,IAAI,EAAI,KACjB,KAAK,IAAI,IAAI,EAAI,KACV,KAGR,aAAa,EAAQ,CAEpB,MAAI,MAAK,UAAkB,KAE3B,IAAQ,GAAG,IAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAG,KAAK,IAAI,GAAG,aAAa,GAGhE,GAAQ,GAAG,IAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAG,KAAK,IAAI,GAAG,aAAa,GAGhE,GAAQ,GAAG,IAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAG,KAAK,IAAI,GAAG,aAAa,GAGhE,GAAQ,GAAG,IAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAG,KAAK,IAAI,GAAG,aAAa,GAGhE,GAAQ,GAAG,IAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAG,KAAK,IAAI,GAAG,aAAa,GAGhE,GAAQ,GAAG,IAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAG,KAAK,IAAI,GAAG,aAAa,GAGhE,GAAQ,GAAG,IAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAG,KAAK,IAAI,GAAG,aAAa,GAGhE,GAAQ,GAAG,IAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAG,KAAK,IAAI,GAAG,aAAa,GAGhE,KAAK,cAAc,IACZ,MAGR,UAAU,EAAQ,CACjB,YAAK,IAAI,IAAI,GACb,KAAK,IAAI,IAAI,GACN,KAGR,OAAO,EAAK,CACX,MAAO,GAAI,IAAI,OAAO,KAAK,MAAQ,EAAI,IAAI,OAAO,KAAK,MAKzD,GAAK,UAAU,OAAS,GACxB,GAAM,IAAU,CAAc,GAAI,GAAwB,GAAI,GAAwB,GAAI,GAAwB,GAAI,GAAwB,GAAI,GAAwB,GAAI,GAAwB,GAAI,GAAwB,GAAI,IAEhO,GAAyB,GAAI,GAE7B,GAAsB,GAAI,IAG1B,GAAqB,GAAI,GAEzB,GAAqB,GAAI,GAEzB,GAAqB,GAAI,GAGzB,GAAmB,GAAI,GAEvB,GAAmB,GAAI,GAEvB,GAAmB,GAAI,GAEvB,GAAuB,GAAI,GAE3B,GAAwB,GAAI,GAE5B,GAA+B,GAAI,GAEnC,GAAyB,GAAI,GAEnC,YAAoB,EAAM,EAAI,EAAI,EAAI,EAAS,CAC9C,OAAS,GAAI,EAAG,EAAI,EAAK,OAAS,EAAG,GAAK,EAAG,GAAK,EAAG,CACpD,GAAU,UAAU,EAAM,GAG1B,GAAM,GAAI,EAAQ,EAAI,KAAK,IAAI,GAAU,GAAK,EAAQ,EAAI,KAAK,IAAI,GAAU,GAAK,EAAQ,EAAI,KAAK,IAAI,GAAU,GAE3G,EAAK,EAAG,IAAI,IACZ,EAAK,EAAG,IAAI,IACZ,EAAK,EAAG,IAAI,IAElB,GAAI,KAAK,IAAI,CAAC,KAAK,IAAI,EAAI,EAAI,GAAK,KAAK,IAAI,EAAI,EAAI,IAAO,EAG3D,MAAO,GAIT,MAAO,GAGR,GAAM,IAAsB,GAAI,IAE1B,GAAqB,GAAI,GAEzB,GAAgC,GAAI,GAEpC,GAAwB,GAAI,GAElC,QAAa,CACZ,YAAY,EAAS,GAAI,GAAW,EAAS,GAAI,CAChD,KAAK,OAAS,EACd,KAAK,OAAS,EAGf,IAAI,EAAQ,EAAQ,CACnB,YAAK,OAAO,KAAK,GACjB,KAAK,OAAS,EACP,KAGR,cAAc,EAAQ,EAAgB,CACrC,GAAM,GAAS,KAAK,OAEpB,AAAI,IAAmB,OACtB,EAAO,KAAK,GAEZ,GAAO,cAAc,GAAQ,UAAU,GAGxC,GAAI,GAAc,EAElB,OAAS,GAAI,EAAG,EAAK,EAAO,OAAQ,EAAI,EAAI,IAC3C,EAAc,KAAK,IAAI,EAAa,EAAO,kBAAkB,EAAO,KAGrE,YAAK,OAAS,KAAK,KAAK,GACjB,KAGR,KAAK,EAAQ,CACZ,YAAK,OAAO,KAAK,EAAO,QACxB,KAAK,OAAS,EAAO,OACd,KAGR,SAAU,CACT,MAAO,MAAK,OAAS,EAGtB,WAAY,CACX,YAAK,OAAO,IAAI,EAAG,EAAG,GACtB,KAAK,OAAS,GACP,KAGR,cAAc,EAAO,CACpB,MAAO,GAAM,kBAAkB,KAAK,SAAW,KAAK,OAAS,KAAK,OAGnE,gBAAgB,EAAO,CACtB,MAAO,GAAM,WAAW,KAAK,QAAU,KAAK,OAG7C,iBAAiB,EAAQ,CACxB,GAAM,GAAY,KAAK,OAAS,EAAO,OACvC,MAAO,GAAO,OAAO,kBAAkB,KAAK,SAAW,EAAY,EAGpE,cAAc,EAAK,CAClB,MAAO,GAAI,iBAAiB,MAG7B,gBAAgB,EAAO,CACtB,MAAO,MAAK,IAAI,EAAM,gBAAgB,KAAK,UAAY,KAAK,OAG7D,WAAW,EAAO,EAAQ,CACzB,GAAM,GAAgB,KAAK,OAAO,kBAAkB,GACpD,SAAO,KAAK,GAER,EAAgB,KAAK,OAAS,KAAK,QACtC,GAAO,IAAI,KAAK,QAAQ,YACxB,EAAO,eAAe,KAAK,QAAQ,IAAI,KAAK,SAGtC,EAGR,eAAe,EAAQ,CACtB,MAAI,MAAK,UAER,GAAO,YACA,GAGR,GAAO,IAAI,KAAK,OAAQ,KAAK,QAC7B,EAAO,eAAe,KAAK,QACpB,GAGR,aAAa,EAAQ,CACpB,YAAK,OAAO,aAAa,GACzB,KAAK,OAAS,KAAK,OAAS,EAAO,oBAC5B,KAGR,UAAU,EAAQ,CACjB,YAAK,OAAO,IAAI,GACT,KAGR,cAAc,EAAO,CAEpB,GAAS,WAAW,EAAO,KAAK,QAEhC,GAAM,GAAW,GAAS,WAE1B,GAAI,EAAW,KAAK,OAAS,KAAK,OAAQ,CACzC,GAAM,GAAS,KAAK,KAAK,GACnB,EAAqB,GAAS,KAAK,QAAU,GAInD,KAAK,OAAO,IAAI,GAAS,eAAe,EAAoB,IAC5D,KAAK,QAAU,EAGhB,MAAO,MAGR,MAAM,EAAQ,CAKb,UAAiB,WAAW,EAAO,OAAQ,KAAK,QAAQ,YAAY,eAAe,EAAO,QAE1F,KAAK,cAAc,GAAM,KAAK,EAAO,QAAQ,IAAI,KACjD,KAAK,cAAc,GAAM,KAAK,EAAO,QAAQ,IAAI,KAC1C,KAGR,OAAO,EAAQ,CACd,MAAO,GAAO,OAAO,OAAO,KAAK,SAAW,EAAO,SAAW,KAAK,OAGpE,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,OAKrC,GAAM,IAAyB,GAAI,GAE7B,GAA0B,GAAI,GAE9B,GAAuB,GAAI,GAE3B,GAAqB,GAAI,GAEzB,GAAsB,GAAI,GAE1B,GAAsB,GAAI,GAE1B,GAAyB,GAAI,GAEnC,QAAU,CACT,YAAY,EAAS,GAAI,GAAW,EAAY,GAAI,GAAQ,EAAG,EAAG,IAAK,CACtE,KAAK,OAAS,EACd,KAAK,UAAY,EAGlB,IAAI,EAAQ,EAAW,CACtB,YAAK,OAAO,KAAK,GACjB,KAAK,UAAU,KAAK,GACb,KAGR,KAAK,EAAK,CACT,YAAK,OAAO,KAAK,EAAI,QACrB,KAAK,UAAU,KAAK,EAAI,WACjB,KAGR,GAAG,EAAG,EAAQ,CACb,MAAO,GAAO,KAAK,KAAK,WAAW,eAAe,GAAG,IAAI,KAAK,QAG/D,OAAO,EAAG,CACT,YAAK,UAAU,KAAK,GAAG,IAAI,KAAK,QAAQ,YACjC,KAGR,OAAO,EAAG,CACT,YAAK,OAAO,KAAK,KAAK,GAAG,EAAG,KACrB,KAGR,oBAAoB,EAAO,EAAQ,CAClC,EAAO,WAAW,EAAO,KAAK,QAC9B,GAAM,GAAoB,EAAO,IAAI,KAAK,WAE1C,MAAI,GAAoB,EAChB,EAAO,KAAK,KAAK,QAGlB,EAAO,KAAK,KAAK,WAAW,eAAe,GAAmB,IAAI,KAAK,QAG/E,gBAAgB,EAAO,CACtB,MAAO,MAAK,KAAK,KAAK,kBAAkB,IAGzC,kBAAkB,EAAO,CACxB,GAAM,GAAoB,GAAU,WAAW,EAAO,KAAK,QAAQ,IAAI,KAAK,WAG5E,MAAI,GAAoB,EAChB,KAAK,OAAO,kBAAkB,GAGtC,IAAU,KAAK,KAAK,WAAW,eAAe,GAAmB,IAAI,KAAK,QAEnE,GAAU,kBAAkB,IAGpC,oBAAoB,EAAI,EAAI,EAAoB,EAAwB,CAOvE,GAAW,KAAK,GAAI,IAAI,GAAI,eAAe,IAE3C,GAAQ,KAAK,GAAI,IAAI,GAAI,YAEzB,GAAM,KAAK,KAAK,QAAQ,IAAI,IAE5B,GAAM,GAAY,EAAG,WAAW,GAAM,GAChC,EAAM,CAAC,KAAK,UAAU,IAAI,IAE1B,EAAK,GAAM,IAAI,KAAK,WAEpB,EAAK,CAAC,GAAM,IAAI,IAEhB,EAAI,GAAM,WAEV,EAAM,KAAK,IAAI,EAAI,EAAM,GAC3B,EAAI,EAAI,EAAS,EAErB,GAAI,EAAM,EAMT,GAJA,EAAK,EAAM,EAAK,EAChB,EAAK,EAAM,EAAK,EAChB,EAAS,EAAY,EAEjB,GAAM,EACT,GAAI,GAAM,CAAC,EACV,GAAI,GAAM,EAAQ,CAGjB,GAAM,GAAS,EAAI,EACnB,GAAM,EACN,GAAM,EACN,EAAU,EAAM,GAAK,EAAM,EAAK,EAAI,GAAM,EAAM,GAAM,EAAK,EAAK,EAAI,GAAM,MAG1E,GAAK,EACL,EAAK,KAAK,IAAI,EAAG,CAAE,GAAM,EAAK,IAC9B,EAAU,CAAC,EAAK,EAAK,EAAM,GAAK,EAAI,GAAM,MAI3C,GAAK,CAAC,EACN,EAAK,KAAK,IAAI,EAAG,CAAE,GAAM,EAAK,IAC9B,EAAU,CAAC,EAAK,EAAK,EAAM,GAAK,EAAI,GAAM,MAG3C,AAAI,IAAM,CAAC,EAEV,GAAK,KAAK,IAAI,EAAG,CAAE,EAAC,EAAM,EAAY,IACtC,EAAK,EAAK,EAAI,CAAC,EAAY,KAAK,IAAI,KAAK,IAAI,CAAC,EAAW,CAAC,GAAK,GAC/D,EAAU,CAAC,EAAK,EAAK,EAAM,GAAK,EAAI,GAAM,GACpC,AAAI,GAAM,EAEhB,GAAK,EACL,EAAK,KAAK,IAAI,KAAK,IAAI,CAAC,EAAW,CAAC,GAAK,GACzC,EAAU,EAAM,GAAK,EAAI,GAAM,GAG/B,GAAK,KAAK,IAAI,EAAG,CAAE,GAAM,EAAY,IACrC,EAAK,EAAK,EAAI,EAAY,KAAK,IAAI,KAAK,IAAI,CAAC,EAAW,CAAC,GAAK,GAC9D,EAAU,CAAC,EAAK,EAAK,EAAM,GAAK,EAAI,GAAM,OAK5C,GAAK,EAAM,EAAI,CAAC,EAAY,EAC5B,EAAK,KAAK,IAAI,EAAG,CAAE,GAAM,EAAK,IAC9B,EAAU,CAAC,EAAK,EAAK,EAAM,GAAK,EAAI,GAAM,EAG3C,MAAI,IACH,EAAmB,KAAK,KAAK,WAAW,eAAe,GAAI,IAAI,KAAK,QAGjE,GACH,EAAuB,KAAK,IAAS,eAAe,GAAI,IAAI,IAGtD,EAGR,gBAAgB,EAAQ,EAAQ,CAC/B,GAAU,WAAW,EAAO,OAAQ,KAAK,QAEzC,GAAM,GAAM,GAAU,IAAI,KAAK,WAEzB,EAAK,GAAU,IAAI,IAAa,EAAM,EACtC,EAAU,EAAO,OAAS,EAAO,OACvC,GAAI,EAAK,EAAS,MAAO,MACzB,GAAM,GAAM,KAAK,KAAK,EAAU,GAE1B,EAAK,EAAM,EAEX,EAAK,EAAM,EAEjB,MAAI,GAAK,GAAK,EAAK,EAAU,KAIzB,EAAK,EAAU,KAAK,GAAG,EAAI,GAExB,KAAK,GAAG,EAAI,GAGpB,iBAAiB,EAAQ,CACxB,MAAO,MAAK,kBAAkB,EAAO,SAAW,EAAO,OAAS,EAAO,OAGxE,gBAAgB,EAAO,CACtB,GAAM,GAAc,EAAM,OAAO,IAAI,KAAK,WAE1C,GAAI,IAAgB,EAEnB,MAAI,GAAM,gBAAgB,KAAK,UAAY,EACnC,EAID,KAGR,GAAM,GAAI,CAAE,MAAK,OAAO,IAAI,EAAM,QAAU,EAAM,UAAY,EAE9D,MAAO,IAAK,EAAI,EAAI,KAGrB,eAAe,EAAO,EAAQ,CAC7B,GAAM,GAAI,KAAK,gBAAgB,GAE/B,MAAI,KAAM,KACF,KAGD,KAAK,GAAG,EAAG,GAGnB,gBAAgB,EAAO,CAEtB,GAAM,GAAc,EAAM,gBAAgB,KAAK,QAQ/C,MANI,KAAgB,GAMhB,AAFgB,EAAM,OAAO,IAAI,KAAK,WAExB,EAAc,EAQjC,aAAa,EAAK,EAAQ,CACzB,GAAI,GAAM,EAAM,EAAO,EAAO,EAAO,EAC/B,EAAU,EAAI,KAAK,UAAU,EAChC,EAAU,EAAI,KAAK,UAAU,EAC7B,EAAU,EAAI,KAAK,UAAU,EAC1B,EAAS,KAAK,OAoCpB,MAlCA,AAAI,IAAW,EACd,GAAQ,GAAI,IAAI,EAAI,EAAO,GAAK,EAChC,EAAQ,GAAI,IAAI,EAAI,EAAO,GAAK,GAEhC,GAAQ,GAAI,IAAI,EAAI,EAAO,GAAK,EAChC,EAAQ,GAAI,IAAI,EAAI,EAAO,GAAK,GAGjC,AAAI,GAAW,EACd,GAAS,GAAI,IAAI,EAAI,EAAO,GAAK,EACjC,EAAS,GAAI,IAAI,EAAI,EAAO,GAAK,GAEjC,GAAS,GAAI,IAAI,EAAI,EAAO,GAAK,EACjC,EAAS,GAAI,IAAI,EAAI,EAAO,GAAK,GAG9B,EAAO,GAAS,EAAQ,GAGxB,IAAQ,GAAQ,IAAS,IAAM,GAAO,GACtC,GAAQ,GAAQ,IAAS,IAAM,GAAO,GAE1C,AAAI,GAAW,EACd,GAAS,GAAI,IAAI,EAAI,EAAO,GAAK,EACjC,EAAS,GAAI,IAAI,EAAI,EAAO,GAAK,GAEjC,GAAS,GAAI,IAAI,EAAI,EAAO,GAAK,EACjC,EAAS,GAAI,IAAI,EAAI,EAAO,GAAK,GAG9B,EAAO,GAAS,EAAQ,IACxB,IAAQ,GAAQ,IAAS,IAAM,GAAO,GACtC,GAAQ,GAAQ,IAAS,IAAM,GAAO,GAEtC,EAAO,GAAU,KACd,KAAK,GAAG,GAAQ,EAAI,EAAO,EAAM,GAGzC,cAAc,EAAK,CAClB,MAAO,MAAK,aAAa,EAAK,MAAe,KAG9C,kBAAkB,EAAG,EAAG,EAAG,EAAiB,EAAQ,CAGnD,GAAO,WAAW,EAAG,GAErB,GAAO,WAAW,EAAG,GAErB,GAAU,aAAa,GAAQ,IAO/B,GAAI,GAAM,KAAK,UAAU,IAAI,IACzB,EAEJ,GAAI,EAAM,EAAG,CACZ,GAAI,EAAiB,MAAO,MAC5B,EAAO,UACG,EAAM,EAChB,EAAO,GACP,EAAM,CAAC,MAEP,OAAO,MAGR,GAAM,WAAW,KAAK,OAAQ,GAE9B,GAAM,GAAS,EAAO,KAAK,UAAU,IAAI,GAAO,aAAa,GAAO,KAEpE,GAAI,EAAS,EACZ,MAAO,MAGR,GAAM,GAAS,EAAO,KAAK,UAAU,IAAI,GAAO,MAAM,KAOtD,GALI,EAAS,GAKT,EAAS,EAAS,EACrB,MAAO,MAIR,GAAM,GAAM,CAAC,EAAO,GAAM,IAAI,IAG9B,MAAI,GAAM,EACF,KAID,KAAK,GAAG,EAAM,EAAK,GAG3B,aAAa,EAAS,CACrB,YAAK,OAAO,aAAa,GACzB,KAAK,UAAU,mBAAmB,GAC3B,KAGR,OAAO,EAAK,CACX,MAAO,GAAI,OAAO,OAAO,KAAK,SAAW,EAAI,UAAU,OAAO,KAAK,WAGpE,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,OAKrC,QAAc,CACb,aAAc,CACb,KAAK,SAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE1D,UAAU,OAAS,GACtB,QAAQ,MAAM,iFAIhB,IAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,CACnF,GAAM,GAAK,KAAK,SAChB,SAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,IAAM,EACT,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,IAAM,EACT,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,IAAM,EACT,EAAG,IAAM,EACF,KAGR,UAAW,CACV,YAAK,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,KAGR,OAAQ,CACP,MAAO,IAAI,MAAU,UAAU,KAAK,UAGrC,KAAK,EAAG,CACP,GAAM,GAAK,KAAK,SACV,EAAK,EAAE,SACb,SAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACX,EAAG,IAAM,EAAG,IACZ,EAAG,IAAM,EAAG,IACZ,EAAG,IAAM,EAAG,IACZ,EAAG,IAAM,EAAG,IACZ,EAAG,IAAM,EAAG,IACZ,EAAG,IAAM,EAAG,IACL,KAGR,aAAa,EAAG,CACf,GAAM,GAAK,KAAK,SACb,EAAK,EAAE,SACV,SAAG,IAAM,EAAG,IACZ,EAAG,IAAM,EAAG,IACZ,EAAG,IAAM,EAAG,IACL,KAGR,eAAe,EAAG,CACjB,GAAM,GAAK,EAAE,SACb,YAAK,IAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GACnF,KAGR,aAAa,EAAO,EAAO,EAAO,CACjC,SAAM,oBAAoB,KAAM,GAChC,EAAM,oBAAoB,KAAM,GAChC,EAAM,oBAAoB,KAAM,GACzB,KAGR,UAAU,EAAO,EAAO,EAAO,CAC9B,YAAK,IAAI,EAAM,EAAG,EAAM,EAAG,EAAM,EAAG,EAAG,EAAM,EAAG,EAAM,EAAG,EAAM,EAAG,EAAG,EAAM,EAAG,EAAM,EAAG,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GACrG,KAGR,gBAAgB,EAAG,CAElB,GAAM,GAAK,KAAK,SACV,EAAK,EAAE,SAEP,EAAS,EAAI,GAAM,oBAAoB,EAAG,GAAG,SAE7C,EAAS,EAAI,GAAM,oBAAoB,EAAG,GAAG,SAE7C,EAAS,EAAI,GAAM,oBAAoB,EAAG,GAAG,SAEnD,SAAG,GAAK,EAAG,GAAK,EAChB,EAAG,GAAK,EAAG,GAAK,EAChB,EAAG,GAAK,EAAG,GAAK,EAChB,EAAG,GAAK,EACR,EAAG,GAAK,EAAG,GAAK,EAChB,EAAG,GAAK,EAAG,GAAK,EAChB,EAAG,GAAK,EAAG,GAAK,EAChB,EAAG,GAAK,EACR,EAAG,GAAK,EAAG,GAAK,EAChB,EAAG,GAAK,EAAG,GAAK,EAChB,EAAG,IAAM,EAAG,IAAM,EAClB,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACF,KAGR,sBAAsB,EAAO,CAC5B,AAAM,GAAS,EAAM,SACpB,QAAQ,MAAM,yGAGf,GAAM,GAAK,KAAK,SACV,EAAI,EAAM,EACb,EAAI,EAAM,EACV,EAAI,EAAM,EACP,EAAI,KAAK,IAAI,GAChB,EAAI,KAAK,IAAI,GACV,EAAI,KAAK,IAAI,GAChB,EAAI,KAAK,IAAI,GACV,EAAI,KAAK,IAAI,GAChB,EAAI,KAAK,IAAI,GAEhB,GAAI,EAAM,QAAU,MAAO,CAC1B,GAAM,GAAK,EAAI,EACZ,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACZ,EAAG,GAAK,EAAI,EACZ,EAAG,GAAK,CAAC,EAAI,EACb,EAAG,GAAK,EACR,EAAG,GAAK,EAAK,EAAK,EAClB,EAAG,GAAK,EAAK,EAAK,EAClB,EAAG,GAAK,CAAC,EAAI,EACb,EAAG,GAAK,EAAK,EAAK,EAClB,EAAG,GAAK,EAAK,EAAK,EAClB,EAAG,IAAM,EAAI,UACH,EAAM,QAAU,MAAO,CACjC,GAAM,GAAK,EAAI,EACZ,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACZ,EAAG,GAAK,EAAK,EAAK,EAClB,EAAG,GAAK,EAAK,EAAI,EACjB,EAAG,GAAK,EAAI,EACZ,EAAG,GAAK,EAAI,EACZ,EAAG,GAAK,EAAI,EACZ,EAAG,GAAK,CAAC,EACT,EAAG,GAAK,EAAK,EAAI,EACjB,EAAG,GAAK,EAAK,EAAK,EAClB,EAAG,IAAM,EAAI,UACH,EAAM,QAAU,MAAO,CACjC,GAAM,GAAK,EAAI,EACZ,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACZ,EAAG,GAAK,EAAK,EAAK,EAClB,EAAG,GAAK,CAAC,EAAI,EACb,EAAG,GAAK,EAAK,EAAK,EAClB,EAAG,GAAK,EAAK,EAAK,EAClB,EAAG,GAAK,EAAI,EACZ,EAAG,GAAK,EAAK,EAAK,EAClB,EAAG,GAAK,CAAC,EAAI,EACb,EAAG,GAAK,EACR,EAAG,IAAM,EAAI,UACH,EAAM,QAAU,MAAO,CACjC,GAAM,GAAK,EAAI,EACZ,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACZ,EAAG,GAAK,EAAI,EACZ,EAAG,GAAK,EAAK,EAAI,EACjB,EAAG,GAAK,EAAK,EAAI,EACjB,EAAG,GAAK,EAAI,EACZ,EAAG,GAAK,EAAK,EAAI,EACjB,EAAG,GAAK,EAAK,EAAI,EACjB,EAAG,GAAK,CAAC,EACT,EAAG,GAAK,EAAI,EACZ,EAAG,IAAM,EAAI,UACH,EAAM,QAAU,MAAO,CACjC,GAAM,GAAK,EAAI,EACZ,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACZ,EAAG,GAAK,EAAI,EACZ,EAAG,GAAK,EAAK,EAAK,EAClB,EAAG,GAAK,EAAK,EAAI,EACjB,EAAG,GAAK,EACR,EAAG,GAAK,EAAI,EACZ,EAAG,GAAK,CAAC,EAAI,EACb,EAAG,GAAK,CAAC,EAAI,EACb,EAAG,GAAK,EAAK,EAAI,EACjB,EAAG,IAAM,EAAK,EAAK,UACT,EAAM,QAAU,MAAO,CACjC,GAAM,GAAK,EAAI,EACZ,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACZ,EAAG,GAAK,EAAI,EACZ,EAAG,GAAK,CAAC,EACT,EAAG,GAAK,EAAI,EACZ,EAAG,GAAK,EAAK,EAAI,EACjB,EAAG,GAAK,EAAI,EACZ,EAAG,GAAK,EAAK,EAAI,EACjB,EAAG,GAAK,EAAK,EAAI,EACjB,EAAG,GAAK,EAAI,EACZ,EAAG,IAAM,EAAK,EAAI,EAInB,SAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,IAAM,EAET,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACF,KAGR,2BAA2B,EAAG,CAC7B,MAAO,MAAK,QAAQ,GAAO,EAAG,IAG/B,OAAO,EAAK,EAAQ,EAAI,CACvB,GAAM,GAAK,KAAK,SAEhB,UAAG,WAAW,EAAK,GAEf,GAAG,aAAe,GAErB,IAAG,EAAI,GAGR,GAAG,YAEH,GAAG,aAAa,EAAI,IAEhB,GAAG,aAAe,GAErB,CAAI,KAAK,IAAI,EAAG,KAAO,EACtB,GAAG,GAAK,KAER,GAAG,GAAK,KAGT,GAAG,YAEH,GAAG,aAAa,EAAI,KAGrB,GAAG,YAEH,GAAG,aAAa,GAAI,IAEpB,EAAG,GAAK,GAAG,EACX,EAAG,GAAK,GAAG,EACX,EAAG,GAAK,GAAG,EACX,EAAG,GAAK,GAAG,EACX,EAAG,GAAK,GAAG,EACX,EAAG,GAAK,GAAG,EACX,EAAG,GAAK,GAAG,EACX,EAAG,GAAK,GAAG,EACX,EAAG,IAAM,GAAG,EACL,KAGR,SAAS,EAAG,EAAG,CACd,MAAI,KAAM,OACT,SAAQ,KAAK,oGACN,KAAK,iBAAiB,EAAG,IAG1B,KAAK,iBAAiB,KAAM,GAGpC,YAAY,EAAG,CACd,MAAO,MAAK,iBAAiB,EAAG,MAGjC,iBAAiB,EAAG,EAAG,CACtB,GAAM,GAAK,EAAE,SACP,EAAK,EAAE,SACP,EAAK,KAAK,SACV,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,IACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,IACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,IACT,EAAM,EAAG,IACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,IACT,EAAM,EAAG,IACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,IACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,GAAM,EAAG,GACT,EAAM,EAAG,IACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,IACT,GAAM,EAAG,IACN,GAAM,EAAG,GACZ,GAAM,EAAG,GACT,GAAM,EAAG,IACT,GAAM,EAAG,IACZ,SAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAClD,EAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAClD,EAAG,GAAK,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,EAAM,GAClD,EAAG,IAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,EAAM,GACnD,EAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAClD,EAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAClD,EAAG,GAAK,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,EAAM,GAClD,EAAG,IAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,EAAM,GACnD,EAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAClD,EAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAClD,EAAG,IAAM,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,EAAM,GACnD,EAAG,IAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,EAAM,GACnD,EAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAClD,EAAG,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAClD,EAAG,IAAM,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,EAAM,GACnD,EAAG,IAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,EAAM,GAC5C,KAGR,eAAe,EAAG,CACjB,GAAM,GAAK,KAAK,SAChB,SAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,KAAO,EACV,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,KAAO,EACV,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,KAAO,EACV,EAAG,KAAO,EACV,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,KAAO,EACV,EAAG,KAAO,EACH,KAGR,aAAc,CACb,GAAM,GAAK,KAAK,SACV,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,IACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,IACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,IACT,EAAM,EAAG,IACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,IACT,EAAM,EAAG,IAGZ,MAAO,GAAO,EAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAAO,EAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAAO,EAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAAO,EAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAGrd,WAAY,CACX,GAAM,GAAK,KAAK,SACZ,EACJ,SAAM,EAAG,GACT,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EACR,EAAM,EAAG,GACT,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EACR,EAAM,EAAG,GACT,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EACR,EAAM,EAAG,GACT,EAAG,GAAK,EAAG,IACX,EAAG,IAAM,EACT,EAAM,EAAG,GACT,EAAG,GAAK,EAAG,IACX,EAAG,IAAM,EACT,EAAM,EAAG,IACT,EAAG,IAAM,EAAG,IACZ,EAAG,IAAM,EACF,KAGR,YAAY,EAAG,EAAG,EAAG,CACpB,GAAM,GAAK,KAAK,SAEhB,MAAI,GAAE,UACL,GAAG,IAAM,EAAE,EACX,EAAG,IAAM,EAAE,EACX,EAAG,IAAM,EAAE,GAEX,GAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,GAGH,KAGR,QAAS,CAER,GAAM,GAAK,KAAK,SACbzG,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EACtD,GAAI,IAAQ,EAAG,MAAO,MAAK,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5E,GAAM,GAAS,EAAI,EACnB,SAAG,GAAK,EAAM,EACd,EAAG,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EACtH,EAAG,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EACtH,EAAG,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EACtH,EAAG,GAAK,EAAM,EACd,EAAG,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EACtH,EAAG,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EACtH,EAAG,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EACtH,EAAG,GAAK,EAAM,EACd,EAAG,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EACtH,EAAG,IAAO,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EACvH,EAAG,IAAO,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EACvH,EAAG,IAAM,EAAM,EACf,EAAG,IAAO,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EACvH,EAAG,IAAO,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EACvH,EAAG,IAAO,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAChH,KAGR,MAAM,EAAG,CACR,GAAM,GAAK,KAAK,SACV,EAAI,EAAE,EACT,EAAI,EAAE,EACN,EAAI,EAAE,EACT,SAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,KAAO,EACV,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,KAAO,EACH,KAGR,mBAAoB,CACnB,GAAM,GAAK,KAAK,SACV,EAAW,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAG,GACtD,EAAW,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAG,GACtD,EAAW,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAG,IAAM,EAAG,IAC7D,MAAO,MAAK,KAAK,KAAK,IAAI,EAAU,EAAU,IAG/C,gBAAgB,EAAG,EAAG,EAAG,CACxB,YAAK,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,KAGR,cAAc,EAAO,CACpB,GAAM,GAAI,KAAK,IAAI,GAChB,EAAI,KAAK,IAAI,GAChB,YAAK,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAChD,KAGR,cAAc,EAAO,CACpB,GAAM,GAAI,KAAK,IAAI,GAChB,EAAI,KAAK,IAAI,GAChB,YAAK,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAChD,KAGR,cAAc,EAAO,CACpB,GAAM,GAAI,KAAK,IAAI,GAChB,EAAI,KAAK,IAAI,GAChB,YAAK,IAAI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAChD,KAGR,iBAAiB,EAAM,EAAO,CAE7B,GAAM,GAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GACb,EAAI,EAAI,EACR,EAAI,EAAK,EACZ,EAAI,EAAK,EACT,EAAI,EAAK,EACN,EAAK,EAAI,EACZ,EAAK,EAAI,EACZ,YAAK,IAAI,EAAK,EAAI,EAAG,EAAK,EAAI,EAAI,EAAG,EAAK,EAAI,EAAI,EAAG,EAAG,EAAK,EAAI,EAAI,EAAG,EAAK,EAAI,EAAG,EAAK,EAAI,EAAI,EAAG,EAAG,EAAK,EAAI,EAAI,EAAG,EAAK,EAAI,EAAI,EAAG,EAAI,EAAI,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3J,KAGR,UAAU,EAAG,EAAG,EAAG,CAClB,YAAK,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,KAGR,UAAU,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,CACjC,YAAK,IAAI,EAAG,EAAI,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,EAAI,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GACrD,KAGR,QAAQ,EAAU,EAAY,EAAO,CACpC,GAAM,GAAK,KAAK,SACV,EAAI,EAAW,GAClB,EAAI,EAAW,GACf,EAAI,EAAW,GACf,EAAI,EAAW,GACZ,EAAK,EAAI,EACZ,EAAK,EAAI,EACT,EAAK,EAAI,EACN,EAAK,EAAI,EACZ,EAAK,EAAI,EACT,EAAK,EAAI,EACN,EAAK,EAAI,EACZ,EAAK,EAAI,EACT,EAAK,EAAI,EACN,EAAK,EAAI,EACZ,EAAK,EAAI,EACT,EAAK,EAAI,EACN,EAAK,EAAM,EACd,EAAK,EAAM,EACX,EAAK,EAAM,EACd,SAAG,GAAM,GAAK,GAAK,IAAO,EAC1B,EAAG,GAAM,GAAK,GAAM,EACpB,EAAG,GAAM,GAAK,GAAM,EACpB,EAAG,GAAK,EACR,EAAG,GAAM,GAAK,GAAM,EACpB,EAAG,GAAM,GAAK,GAAK,IAAO,EAC1B,EAAG,GAAM,GAAK,GAAM,EACpB,EAAG,GAAK,EACR,EAAG,GAAM,GAAK,GAAM,EACpB,EAAG,GAAM,GAAK,GAAM,EACpB,EAAG,IAAO,GAAK,GAAK,IAAO,EAC3B,EAAG,IAAM,EACT,EAAG,IAAM,EAAS,EAClB,EAAG,IAAM,EAAS,EAClB,EAAG,IAAM,EAAS,EAClB,EAAG,IAAM,EACF,KAGR,UAAU,EAAU,EAAY,EAAO,CACtC,GAAM,GAAK,KAAK,SAEZ,EAAK,GAAM,IAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAI,SAElC,EAAK,GAAM,IAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAI,SAEpC,EAAK,GAAM,IAAI,EAAG,GAAI,EAAG,GAAI,EAAG,KAAK,SAI3C,AAAI,AADQ,KAAK,cACP,GAAG,GAAK,CAAC,GACnB,EAAS,EAAI,EAAG,IAChB,EAAS,EAAI,EAAG,IAChB,EAAS,EAAI,EAAG,IAEhB,GAAM,KAAK,MAEX,GAAM,GAAQ,EAAI,EACZ,EAAQ,EAAI,EACZ,EAAQ,EAAI,EAClB,UAAM,SAAS,IAAM,EACrB,GAAM,SAAS,IAAM,EACrB,GAAM,SAAS,IAAM,EACrB,GAAM,SAAS,IAAM,EACrB,GAAM,SAAS,IAAM,EACrB,GAAM,SAAS,IAAM,EACrB,GAAM,SAAS,IAAM,EACrB,GAAM,SAAS,IAAM,EACrB,GAAM,SAAS,KAAO,EACtB,EAAW,sBAAsB,IACjC,EAAM,EAAI,EACV,EAAM,EAAI,EACV,EAAM,EAAI,EACH,KAGR,gBAAgB,EAAM,EAAO,EAAK,EAAQ,EAAM,EAAK,CACpD,AAAI,IAAQ,QACX,QAAQ,KAAK,wGAGd,GAAM,GAAK,KAAK,SACV,EAAI,EAAI,EAAQ,GAAQ,GACxB,EAAI,EAAI,EAAQ,GAAM,GACtB,EAAK,GAAQ,GAAS,GAAQ,GAC9B,EAAK,GAAM,GAAW,GAAM,GAC5B,EAAI,CAAE,GAAM,GAAS,GAAM,GAC3B,EAAI,GAAK,EAAM,EAAQ,GAAM,GACnC,SAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,IAAM,EACT,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,IAAM,EACT,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,IAAM,GACT,EAAG,IAAM,EACF,KAGR,iBAAiB,EAAM,EAAO,EAAK,EAAQ,EAAM,EAAK,CACrD,GAAM,GAAK,KAAK,SACV,EAAI,EAAO,GAAQ,GACnB,EAAI,EAAO,GAAM,GACjB,EAAI,EAAO,GAAM,GACjB,EAAK,GAAQ,GAAQ,EACrB,EAAK,GAAM,GAAU,EACrB,EAAK,GAAM,GAAQ,EACzB,SAAG,GAAK,EAAI,EACZ,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,IAAM,CAAC,EACV,EAAG,GAAK,EACR,EAAG,GAAK,EAAI,EACZ,EAAG,GAAK,EACR,EAAG,IAAM,CAAC,EACV,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,IAAM,GAAK,EACd,EAAG,IAAM,CAAC,EACV,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,IAAM,EACT,EAAG,IAAM,EACF,KAGR,OAAO,EAAQ,CACd,GAAM,GAAK,KAAK,SACV,EAAK,EAAO,SAElB,OAAS,GAAI,EAAG,EAAI,GAAI,IACvB,GAAI,EAAG,KAAO,EAAG,GAAI,MAAO,GAG7B,MAAO,GAGR,UAAU,EAAO,EAAS,EAAG,CAC5B,OAAS,GAAI,EAAG,EAAI,GAAI,IACvB,KAAK,SAAS,GAAK,EAAM,EAAI,GAG9B,MAAO,MAGR,QAAQ,EAAQ,GAAI,EAAS,EAAG,CAC/B,GAAM,GAAK,KAAK,SAChB,SAAM,GAAU,EAAG,GACnB,EAAM,EAAS,GAAK,EAAG,GACvB,EAAM,EAAS,GAAK,EAAG,GACvB,EAAM,EAAS,GAAK,EAAG,GACvB,EAAM,EAAS,GAAK,EAAG,GACvB,EAAM,EAAS,GAAK,EAAG,GACvB,EAAM,EAAS,GAAK,EAAG,GACvB,EAAM,EAAS,GAAK,EAAG,GACvB,EAAM,EAAS,GAAK,EAAG,GACvB,EAAM,EAAS,GAAK,EAAG,GACvB,EAAM,EAAS,IAAM,EAAG,IACxB,EAAM,EAAS,IAAM,EAAG,IACxB,EAAM,EAAS,IAAM,EAAG,IACxB,EAAM,EAAS,IAAM,EAAG,IACxB,EAAM,EAAS,IAAM,EAAG,IACxB,EAAM,EAAS,IAAM,EAAG,IACjB,GAKT,GAAQ,UAAU,UAAY,GAE9B,GAAM,IAAqB,GAAI,GAEzB,GAAqB,GAAI,IAEzB,GAAqB,GAAI,GAAQ,EAAG,EAAG,GAEvC,GAAoB,GAAI,GAAQ,EAAG,EAAG,GAEtC,GAAkB,GAAI,GAEtB,GAAkB,GAAI,GAEtB,GAAkB,GAAI,GAEtB,GAAyB,GAAI,IAE7B,GAA6B,GAAI,IAEvC,QAAY,CACX,YAAY,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,EAAQ,GAAM,aAAc,CAC5D,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,OAAS,KAGX,IAAI,CACP,MAAO,MAAK,MAGT,GAAE,EAAO,CACZ,KAAK,GAAK,EAEV,KAAK,uBAGF,IAAI,CACP,MAAO,MAAK,MAGT,GAAE,EAAO,CACZ,KAAK,GAAK,EAEV,KAAK,uBAGF,IAAI,CACP,MAAO,MAAK,MAGT,GAAE,EAAO,CACZ,KAAK,GAAK,EAEV,KAAK,uBAGF,QAAQ,CACX,MAAO,MAAK,UAGT,OAAM,EAAO,CAChB,KAAK,OAAS,EAEd,KAAK,oBAGN,IAAI,EAAG,EAAG,EAAG,EAAQ,KAAK,OAAQ,CACjC,YAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,OAAS,EAEd,KAAK,oBAEE,KAGR,OAAQ,CACP,MAAO,IAAI,MAAK,YAAY,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,QAG7D,KAAK,EAAO,CACX,YAAK,GAAK,EAAM,GAChB,KAAK,GAAK,EAAM,GAChB,KAAK,GAAK,EAAM,GAChB,KAAK,OAAS,EAAM,OAEpB,KAAK,oBAEE,KAGR,sBAAsB,EAAG,EAAQ,KAAK,OAAQ,EAAS,GAAM,CAE5D,GAAM,GAAK,EAAE,SACP,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,IAEZ,OAAQ,OACF,MACJ,KAAK,GAAK,KAAK,KAAK,GAAM,EAAK,GAAI,IAEnC,AAAI,KAAK,IAAI,GAAO,SACnB,MAAK,GAAK,KAAK,MAAM,CAAC,EAAK,GAC3B,KAAK,GAAK,KAAK,MAAM,CAAC,EAAK,IAE3B,MAAK,GAAK,KAAK,MAAM,EAAK,GAC1B,KAAK,GAAK,GAGX,UAEI,MACJ,KAAK,GAAK,KAAK,KAAK,CAAC,GAAM,EAAK,GAAI,IAEpC,AAAI,KAAK,IAAI,GAAO,SACnB,MAAK,GAAK,KAAK,MAAM,EAAK,GAC1B,KAAK,GAAK,KAAK,MAAM,EAAK,IAE1B,MAAK,GAAK,KAAK,MAAM,CAAC,EAAK,GAC3B,KAAK,GAAK,GAGX,UAEI,MACJ,KAAK,GAAK,KAAK,KAAK,GAAM,EAAK,GAAI,IAEnC,AAAI,KAAK,IAAI,GAAO,SACnB,MAAK,GAAK,KAAK,MAAM,CAAC,EAAK,GAC3B,KAAK,GAAK,KAAK,MAAM,CAAC,EAAK,IAE3B,MAAK,GAAK,EACV,KAAK,GAAK,KAAK,MAAM,EAAK,IAG3B,UAEI,MACJ,KAAK,GAAK,KAAK,KAAK,CAAC,GAAM,EAAK,GAAI,IAEpC,AAAI,KAAK,IAAI,GAAO,SACnB,MAAK,GAAK,KAAK,MAAM,EAAK,GAC1B,KAAK,GAAK,KAAK,MAAM,EAAK,IAE1B,MAAK,GAAK,EACV,KAAK,GAAK,KAAK,MAAM,CAAC,EAAK,IAG5B,UAEI,MACJ,KAAK,GAAK,KAAK,KAAK,GAAM,EAAK,GAAI,IAEnC,AAAI,KAAK,IAAI,GAAO,SACnB,MAAK,GAAK,KAAK,MAAM,CAAC,EAAK,GAC3B,KAAK,GAAK,KAAK,MAAM,CAAC,EAAK,IAE3B,MAAK,GAAK,EACV,KAAK,GAAK,KAAK,MAAM,EAAK,IAG3B,UAEI,MACJ,KAAK,GAAK,KAAK,KAAK,CAAC,GAAM,EAAK,GAAI,IAEpC,AAAI,KAAK,IAAI,GAAO,SACnB,MAAK,GAAK,KAAK,MAAM,EAAK,GAC1B,KAAK,GAAK,KAAK,MAAM,EAAK,IAE1B,MAAK,GAAK,KAAK,MAAM,CAAC,EAAK,GAC3B,KAAK,GAAK,GAGX,cAGA,QAAQ,KAAK,uEAAyE,GAGxF,YAAK,OAAS,EACV,IAAW,IAAM,KAAK,oBACnB,KAGR,kBAAkB,EAAG,EAAO,EAAQ,CACnC,UAAU,2BAA2B,GAE9B,KAAK,sBAAsB,GAAW,EAAO,GAGrD,eAAe,EAAG,EAAQ,KAAK,OAAQ,CACtC,MAAO,MAAK,IAAI,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,GAGhC,QAAQ,EAAU,CAEjB,UAAc,aAAa,MAEpB,KAAK,kBAAkB,GAAe,GAG9C,OAAO,EAAO,CACb,MAAO,GAAM,KAAO,KAAK,IAAM,EAAM,KAAO,KAAK,IAAM,EAAM,KAAO,KAAK,IAAM,EAAM,SAAW,KAAK,OAGtG,UAAU,EAAO,CAChB,YAAK,GAAK,EAAM,GAChB,KAAK,GAAK,EAAM,GAChB,KAAK,GAAK,EAAM,GACZ,EAAM,KAAO,QAAW,MAAK,OAAS,EAAM,IAEhD,KAAK,oBAEE,KAGR,QAAQ,EAAQ,GAAI,EAAS,EAAG,CAC/B,SAAM,GAAU,KAAK,GACrB,EAAM,EAAS,GAAK,KAAK,GACzB,EAAM,EAAS,GAAK,KAAK,GACzB,EAAM,EAAS,GAAK,KAAK,OAClB,EAGR,UAAU,EAAgB,CACzB,MAAI,GACI,EAAe,IAAI,KAAK,GAAI,KAAK,GAAI,KAAK,IAE1C,GAAI,GAAQ,KAAK,GAAI,KAAK,GAAI,KAAK,IAI5C,UAAU,EAAU,CACnB,YAAK,kBAAoB,EAClB,KAGR,mBAAoB,GAIrB,GAAM,UAAU,QAAU,GAC1B,GAAM,aAAe,MACrB,GAAM,eAAiB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAE3D,QAAa,CACZ,aAAc,CACb,KAAK,KAAO,EAAI,EAGjB,IAAI,EAAS,CACZ,KAAK,KAAO,GAAK,EAAU,EAG5B,OAAO,EAAS,CACf,KAAK,MAAQ,GAAK,EAAU,EAG7B,WAAY,CACX,KAAK,KAAO,WAAa,EAG1B,OAAO,EAAS,CACf,KAAK,MAAQ,GAAK,EAAU,EAG7B,QAAQ,EAAS,CAChB,KAAK,MAAQ,CAAE,IAAK,EAAU,GAG/B,YAAa,CACZ,KAAK,KAAO,EAGb,KAAK,EAAQ,CACZ,MAAQ,MAAK,KAAO,EAAO,OAAU,GAKvC,GAAI,IAAc,EAEZ,GAAqB,GAAI,GAEzB,GAAmB,GAAI,IAEvB,GAAqB,GAAI,IAEzB,GAAuB,GAAI,GAE3B,GAA2B,GAAI,GAE/B,GAAwB,GAAI,GAE5B,GAA6B,GAAI,IAEjC,GAAsB,GAAI,GAAQ,EAAG,EAAG,GAExC,GAAsB,GAAI,GAAQ,EAAG,EAAG,GAExC,GAAsB,GAAI,GAAQ,EAAG,EAAG,GAExC,GAAc,CACnB,KAAM,SAED,GAAgB,CACrB,KAAM,WAGP,gBAAuB,GAAgB,CACtC,aAAc,CACb,QACA,OAAO,eAAe,KAAM,KAAM,CACjC,MAAO,OAER,KAAK,KAAO,KACZ,KAAK,KAAO,GACZ,KAAK,KAAO,WACZ,KAAK,OAAS,KACd,KAAK,SAAW,GAChB,KAAK,GAAK,GAAS,UAAU,QAC7B,GAAM,GAAW,GAAI,GACf,EAAW,GAAI,IACf,EAAa,GAAI,IACjB,EAAQ,GAAI,GAAQ,EAAG,EAAG,GAEhC,YAA4B,CAC3B,EAAW,aAAa,EAAU,IAGnC,YAA8B,CAC7B,EAAS,kBAAkB,EAAY,OAAW,IAGnD,EAAS,UAAU,GAEnB,EAAW,UAAU,GAErB,OAAO,iBAAiB,KAAM,CAC7B,SAAU,CACT,aAAc,GACd,WAAY,GACZ,MAAO,GAER,SAAU,CACT,aAAc,GACd,WAAY,GACZ,MAAO,GAER,WAAY,CACX,aAAc,GACd,WAAY,GACZ,MAAO,GAER,MAAO,CACN,aAAc,GACd,WAAY,GACZ,MAAO,GAER,gBAAiB,CAChB,MAAO,GAAI,KAEZ,aAAc,CACb,MAAO,GAAI,OAGb,KAAK,OAAS,GAAI,IAClB,KAAK,YAAc,GAAI,IACvB,KAAK,iBAAmB,GAAS,wBACjC,KAAK,uBAAyB,GAC9B,KAAK,OAAS,GAAI,IAClB,KAAK,QAAU,GACf,KAAK,WAAa,GAClB,KAAK,cAAgB,GACrB,KAAK,cAAgB,GACrB,KAAK,YAAc,EACnB,KAAK,WAAa,GAClB,KAAK,SAAW,GAGjB,gBAAiB,EAEjB,eAAgB,EAEhB,aAAa,EAAQ,CACpB,AAAI,KAAK,kBAAkB,KAAK,eAChC,KAAK,OAAO,YAAY,GACxB,KAAK,OAAO,UAAU,KAAK,SAAU,KAAK,WAAY,KAAK,OAG5D,gBAAgB,EAAG,CAClB,YAAK,WAAW,YAAY,GACrB,KAGR,yBAAyB,EAAM,EAAO,CAErC,KAAK,WAAW,iBAAiB,EAAM,GAGxC,qBAAqB,EAAO,CAC3B,KAAK,WAAW,aAAa,EAAO,IAGrC,sBAAsB,EAAG,CAExB,KAAK,WAAW,sBAAsB,GAGvC,0BAA0B,EAAG,CAE5B,KAAK,WAAW,KAAK,GAGtB,aAAa,EAAM,EAAO,CAGzB,UAAI,iBAAiB,EAAM,GAE3B,KAAK,WAAW,SAAS,IAClB,KAGR,kBAAkB,EAAM,EAAO,CAI9B,UAAI,iBAAiB,EAAM,GAE3B,KAAK,WAAW,YAAY,IACrB,KAGR,QAAQ,EAAO,CACd,MAAO,MAAK,aAAa,GAAQ,GAGlC,QAAQ,EAAO,CACd,MAAO,MAAK,aAAa,GAAQ,GAGlC,QAAQ,EAAO,CACd,MAAO,MAAK,aAAa,GAAQ,GAGlC,gBAAgB,EAAM,EAAU,CAG/B,UAAM,KAAK,GAAM,gBAAgB,KAAK,YAEtC,KAAK,SAAS,IAAI,GAAM,eAAe,IAChC,KAGR,WAAW,EAAU,CACpB,MAAO,MAAK,gBAAgB,GAAQ,GAGrC,WAAW,EAAU,CACpB,MAAO,MAAK,gBAAgB,GAAQ,GAGrC,WAAW,EAAU,CACpB,MAAO,MAAK,gBAAgB,GAAQ,GAGrC,aAAa,EAAQ,CACpB,MAAO,GAAO,aAAa,KAAK,aAGjC,aAAa,EAAQ,CACpB,MAAO,GAAO,aAAa,GAAM,KAAK,KAAK,aAAa,UAGzD,OAAO,EAAG,EAAG,EAAG,CAEf,AAAI,EAAE,UACL,GAAQ,KAAK,GAEb,GAAQ,IAAI,EAAG,EAAG,GAGnB,GAAM,GAAS,KAAK,OACpB,KAAK,kBAAkB,GAAM,IAE7B,GAAY,sBAAsB,KAAK,aAEvC,AAAI,KAAK,UAAY,KAAK,QACzB,GAAM,OAAO,GAAa,GAAS,KAAK,IAExC,GAAM,OAAO,GAAS,GAAa,KAAK,IAGzC,KAAK,WAAW,sBAAsB,IAElC,GACH,IAAM,gBAAgB,EAAO,aAE7B,GAAI,sBAAsB,IAE1B,KAAK,WAAW,YAAY,GAAI,WAIlC,IAAI,EAAQ,CACX,GAAI,UAAU,OAAS,EAAG,CACzB,OAAS,GAAI,EAAG,EAAI,UAAU,OAAQ,IACrC,KAAK,IAAI,UAAU,IAGpB,MAAO,MAGR,MAAI,KAAW,KACd,SAAQ,MAAM,kEAAoE,GAC3E,MAGR,CAAI,GAAU,EAAO,WAChB,GAAO,SAAW,MACrB,EAAO,OAAO,OAAO,GAGtB,EAAO,OAAS,KAChB,KAAK,SAAS,KAAK,GACnB,EAAO,cAAc,KAErB,QAAQ,MAAM,gEAAiE,GAGzE,MAGR,OAAO,EAAQ,CACd,GAAI,UAAU,OAAS,EAAG,CACzB,OAAS,GAAI,EAAG,EAAI,UAAU,OAAQ,IACrC,KAAK,OAAO,UAAU,IAGvB,MAAO,MAGR,GAAM,GAAQ,KAAK,SAAS,QAAQ,GAEpC,MAAI,KAAU,IACb,GAAO,OAAS,KAChB,KAAK,SAAS,OAAO,EAAO,GAC5B,EAAO,cAAc,KAGf,KAGR,kBAAmB,CAClB,GAAM,GAAS,KAAK,OAEpB,MAAI,KAAW,MACd,EAAO,OAAO,MAGR,KAGR,OAAQ,CACP,OAAS,GAAI,EAAG,EAAI,KAAK,SAAS,OAAQ,IAAK,CAC9C,GAAM,GAAS,KAAK,SAAS,GAC7B,EAAO,OAAS,KAChB,EAAO,cAAc,IAGtB,YAAK,SAAS,OAAS,EAChB,KAGR,OAAO,EAAQ,CAEd,YAAK,kBAAkB,GAAM,IAE7B,GAAM,KAAK,KAAK,aAAa,SAEzB,EAAO,SAAW,MACrB,GAAO,OAAO,kBAAkB,GAAM,IAEtC,GAAM,SAAS,EAAO,OAAO,cAG9B,EAAO,aAAa,IACpB,KAAK,IAAI,GACT,EAAO,kBAAkB,GAAO,IACzB,KAGR,cAAc,EAAI,CACjB,MAAO,MAAK,oBAAoB,KAAM,GAGvC,gBAAgB,EAAM,CACrB,MAAO,MAAK,oBAAoB,OAAQ,GAGzC,oBAAoB,EAAM,EAAO,CAChC,GAAI,KAAK,KAAU,EAAO,MAAO,MAEjC,OAAS,GAAI,EAAG,EAAI,KAAK,SAAS,OAAQ,EAAI,EAAG,IAAK,CAErD,GAAM,GAAS,AADD,KAAK,SAAS,GACP,oBAAoB,EAAM,GAE/C,GAAI,IAAW,OACd,MAAO,IAOV,iBAAiB,EAAQ,CACxB,YAAK,kBAAkB,GAAM,IACtB,EAAO,sBAAsB,KAAK,aAG1C,mBAAmB,EAAQ,CAC1B,YAAK,kBAAkB,GAAM,IAC7B,KAAK,YAAY,UAAU,GAAa,EAAQ,IACzC,EAGR,cAAc,EAAQ,CACrB,YAAK,kBAAkB,GAAM,IAC7B,KAAK,YAAY,UAAU,GAAa,GAAe,GAChD,EAGR,kBAAkB,EAAQ,CACzB,KAAK,kBAAkB,GAAM,IAC7B,GAAM,GAAI,KAAK,YAAY,SAC3B,MAAO,GAAO,IAAI,EAAE,GAAI,EAAE,GAAI,EAAE,KAAK,YAGtC,SAAU,EAEV,SAAS,EAAU,CAClB,EAAS,MACT,GAAM,GAAW,KAAK,SAEtB,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,EAAI,EAAG,IAC3C,EAAS,GAAG,SAAS,GAIvB,gBAAgB,EAAU,CACzB,GAAI,KAAK,UAAY,GAAO,OAC5B,EAAS,MACT,GAAM,GAAW,KAAK,SAEtB,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,EAAI,EAAG,IAC3C,EAAS,GAAG,gBAAgB,GAI9B,kBAAkB,EAAU,CAC3B,GAAM,GAAS,KAAK,OAEpB,AAAI,IAAW,MACd,GAAS,GACT,EAAO,kBAAkB,IAI3B,cAAe,CACd,KAAK,OAAO,QAAQ,KAAK,SAAU,KAAK,WAAY,KAAK,OACzD,KAAK,uBAAyB,GAG/B,kBAAkB,EAAO,CACxB,AAAI,KAAK,kBAAkB,KAAK,eAE5B,MAAK,wBAA0B,IAClC,CAAI,KAAK,SAAW,KACnB,KAAK,YAAY,KAAK,KAAK,QAE3B,KAAK,YAAY,iBAAiB,KAAK,OAAO,YAAa,KAAK,QAGjE,KAAK,uBAAyB,GAC9B,EAAQ,IAIT,GAAM,GAAW,KAAK,SAEtB,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,EAAI,EAAG,IAC3C,EAAS,GAAG,kBAAkB,GAIhC,kBAAkB,EAAe,EAAgB,CAChD,GAAM,GAAS,KAAK,OAepB,GAbI,IAAkB,IAAQ,IAAW,MACxC,EAAO,kBAAkB,GAAM,IAG5B,KAAK,kBAAkB,KAAK,eAEhC,AAAI,KAAK,SAAW,KACnB,KAAK,YAAY,KAAK,KAAK,QAE3B,KAAK,YAAY,iBAAiB,KAAK,OAAO,YAAa,KAAK,QAI7D,IAAmB,GAAM,CAC5B,GAAM,GAAW,KAAK,SAEtB,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,EAAI,EAAG,IAC3C,EAAS,GAAG,kBAAkB,GAAO,KAKxC,OAAO,EAAM,CAEZ,GAAM,GAAe,IAAS,QAAa,MAAO,IAAS,SACrD,EAAS,GAIf,AAAI,GAEH,GAAO,CACN,WAAY,GACZ,UAAW,GACX,SAAU,GACV,OAAQ,GACR,OAAQ,GACR,UAAW,GACX,WAAY,IAEb,EAAO,SAAW,CACjB,QAAS,IACT,KAAM,SACN,UAAW,oBAKb,GAAM,GAAS,GACf,EAAO,KAAO,KAAK,KACnB,EAAO,KAAO,KAAK,KACf,KAAK,OAAS,IAAI,GAAO,KAAO,KAAK,MACrC,KAAK,aAAe,IAAM,GAAO,WAAa,IAC9C,KAAK,gBAAkB,IAAM,GAAO,cAAgB,IACpD,KAAK,UAAY,IAAO,GAAO,QAAU,IACzC,KAAK,gBAAkB,IAAO,GAAO,cAAgB,IACrD,KAAK,cAAgB,GAAG,GAAO,YAAc,KAAK,aAClD,KAAK,UAAU,KAAK,YAAc,MAAM,GAAO,SAAW,KAAK,UACnE,EAAO,OAAS,KAAK,OAAO,KAC5B,EAAO,OAAS,KAAK,OAAO,UACxB,KAAK,mBAAqB,IAAO,GAAO,iBAAmB,IAE3D,KAAK,iBACR,GAAO,KAAO,gBACd,EAAO,MAAQ,KAAK,MACpB,EAAO,eAAiB,KAAK,eAAe,SACxC,KAAK,gBAAkB,MAAM,GAAO,cAAgB,KAAK,cAAc,WAI5E,WAAmB,EAAS,EAAS,CACpC,MAAI,GAAQ,EAAQ,QAAU,QAC7B,GAAQ,EAAQ,MAAQ,EAAQ,OAAO,IAGjC,EAAQ,KAGhB,GAAI,KAAK,QACR,AAAI,KAAK,YACR,CAAI,KAAK,WAAW,QACnB,EAAO,WAAa,KAAK,WAAW,SAC1B,KAAK,WAAW,WAC1B,GAAO,WAAa,KAAK,WAAW,OAAO,GAAM,OAI/C,KAAK,aAAe,KAAK,YAAY,WACxC,GAAO,YAAc,KAAK,YAAY,OAAO,GAAM,cAE1C,KAAK,QAAU,KAAK,QAAU,KAAK,SAAU,CACvD,EAAO,SAAW,EAAU,EAAK,WAAY,KAAK,UAClD,GAAM,GAAa,KAAK,SAAS,WAEjC,GAAI,IAAe,QAAa,EAAW,SAAW,OAAW,CAChE,GAAM,GAAS,EAAW,OAE1B,GAAI,MAAM,QAAQ,GACjB,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,IAAK,CAC9C,GAAM,GAAQ,EAAO,GACrB,EAAU,EAAK,OAAQ,OAGxB,GAAU,EAAK,OAAQ,IAe1B,GAVI,KAAK,eACR,GAAO,SAAW,KAAK,SACvB,EAAO,WAAa,KAAK,WAAW,UAEhC,KAAK,WAAa,QACrB,GAAU,EAAK,UAAW,KAAK,UAC/B,EAAO,SAAW,KAAK,SAAS,OAI9B,KAAK,WAAa,OACrB,GAAI,MAAM,QAAQ,KAAK,UAAW,CACjC,GAAM,GAAQ,GAEd,OAAS,GAAI,EAAG,EAAI,KAAK,SAAS,OAAQ,EAAI,EAAG,IAChD,EAAM,KAAK,EAAU,EAAK,UAAW,KAAK,SAAS,KAGpD,EAAO,SAAW,MAElB,GAAO,SAAW,EAAU,EAAK,UAAW,KAAK,UAKnD,GAAI,KAAK,SAAS,OAAS,EAAG,CAC7B,EAAO,SAAW,GAElB,OAAS,GAAI,EAAG,EAAI,KAAK,SAAS,OAAQ,IACzC,EAAO,SAAS,KAAK,KAAK,SAAS,GAAG,OAAO,GAAM,QAKrD,GAAI,KAAK,WAAW,OAAS,EAAG,CAC/B,EAAO,WAAa,GAEpB,OAAS,GAAI,EAAG,EAAI,KAAK,WAAW,OAAQ,IAAK,CAChD,GAAM,GAAY,KAAK,WAAW,GAClC,EAAO,WAAW,KAAK,EAAU,EAAK,WAAY,KAIpD,GAAI,EAAc,CACjB,GAAM,GAAa,EAAiB,EAAK,YACnC,EAAY,EAAiB,EAAK,WAClC,EAAW,EAAiB,EAAK,UACjC,EAAS,EAAiB,EAAK,QAC/B,EAAS,EAAiB,EAAK,QAC/B,EAAY,EAAiB,EAAK,WAClC,EAAa,EAAiB,EAAK,YACzC,AAAI,EAAW,OAAS,GAAG,GAAO,WAAa,GAC3C,EAAU,OAAS,GAAG,GAAO,UAAY,GACzC,EAAS,OAAS,GAAG,GAAO,SAAW,GACvC,EAAO,OAAS,GAAG,GAAO,OAAS,GACnC,EAAO,OAAS,GAAG,GAAO,OAAS,GACnC,EAAU,OAAS,GAAG,GAAO,UAAY,GACzC,EAAW,OAAS,GAAG,GAAO,WAAa,GAGhD,SAAO,OAAS,EACT,EAIP,WAA0B,EAAO,CAChC,GAAM,GAAS,GAEf,OAAW,KAAO,GAAO,CACxB,GAAM,GAAO,EAAM,GACnB,MAAO,GAAK,SACZ,EAAO,KAAK,GAGb,MAAO,IAIT,MAAM,EAAW,CAChB,MAAO,IAAI,MAAK,cAAc,KAAK,KAAM,GAG1C,KAAK,EAAQ,EAAY,GAAM,CAmB9B,GAlBA,KAAK,KAAO,EAAO,KACnB,KAAK,GAAG,KAAK,EAAO,IACpB,KAAK,SAAS,KAAK,EAAO,UAC1B,KAAK,SAAS,MAAQ,EAAO,SAAS,MACtC,KAAK,WAAW,KAAK,EAAO,YAC5B,KAAK,MAAM,KAAK,EAAO,OACvB,KAAK,OAAO,KAAK,EAAO,QACxB,KAAK,YAAY,KAAK,EAAO,aAC7B,KAAK,iBAAmB,EAAO,iBAC/B,KAAK,uBAAyB,EAAO,uBACrC,KAAK,OAAO,KAAO,EAAO,OAAO,KACjC,KAAK,QAAU,EAAO,QACtB,KAAK,WAAa,EAAO,WACzB,KAAK,cAAgB,EAAO,cAC5B,KAAK,cAAgB,EAAO,cAC5B,KAAK,YAAc,EAAO,YAC1B,KAAK,SAAW,KAAK,MAAM,KAAK,UAAU,EAAO,WAE7C,IAAc,GACjB,OAAS,GAAI,EAAG,EAAI,EAAO,SAAS,OAAQ,IAAK,CAChD,GAAM,GAAQ,EAAO,SAAS,GAC9B,KAAK,IAAI,EAAM,SAIjB,MAAO,OAKT,GAAS,UAAY,GAAI,GAAQ,EAAG,EAAG,GACvC,GAAS,wBAA0B,GACnC,GAAS,UAAU,WAAa,GAEhC,GAAM,IAAqB,GAAI,GAEzB,GAAqB,GAAI,GAEzB,GAAqB,GAAI,GAEzB,GAAqB,GAAI,GAEzB,GAAoB,GAAI,GAExB,GAAoB,GAAI,GAExB,GAAoB,GAAI,GAExB,GAAoB,GAAI,GAExB,GAAoB,GAAI,GAExB,GAAoB,GAAI,GAE9B,QAAe,CACd,YAAY,EAAI,GAAI,GAAW,EAAI,GAAI,GAAW,EAAI,GAAI,GAAW,CACpE,KAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,QAGH,WAAU,EAAG,EAAG,EAAG,EAAQ,CACjC,EAAO,WAAW,EAAG,GAErB,GAAM,WAAW,EAAG,GAEpB,EAAO,MAAM,IACb,GAAM,GAAiB,EAAO,WAE9B,MAAI,GAAiB,EACb,EAAO,eAAe,EAAI,KAAK,KAAK,IAGrC,EAAO,IAAI,EAAG,EAAG,SAKlB,cAAa,EAAO,EAAG,EAAG,EAAG,EAAQ,CAC3C,GAAM,WAAW,EAAG,GAEpB,GAAM,WAAW,EAAG,GAEpB,GAAM,WAAW,EAAO,GAExB,GAAM,GAAQ,GAAM,IAAI,IAElB,EAAQ,GAAM,IAAI,IAElB,EAAQ,GAAM,IAAI,IAElB,EAAQ,GAAM,IAAI,IAElB,EAAQ,GAAM,IAAI,IAElB,EAAQ,EAAQ,EAAQ,EAAQ,EAEtC,GAAI,IAAU,EAGb,MAAO,GAAO,IAAI,GAAI,GAAI,IAG3B,GAAM,GAAW,EAAI,EACf,EAAK,GAAQ,EAAQ,EAAQ,GAAS,EACtC,EAAK,GAAQ,EAAQ,EAAQ,GAAS,EAE5C,MAAO,GAAO,IAAI,EAAI,EAAI,EAAG,EAAG,SAG1B,eAAc,EAAO,EAAG,EAAG,EAAG,CACpC,YAAK,aAAa,EAAO,EAAG,EAAG,EAAG,IAC3B,GAAM,GAAK,GAAK,GAAM,GAAK,GAAK,GAAM,EAAI,GAAM,GAAK,QAGtD,OAAM,EAAO,EAAI,EAAI,EAAI,EAAK,EAAK,EAAK,EAAQ,CACtD,YAAK,aAAa,EAAO,EAAI,EAAI,EAAI,IACrC,EAAO,IAAI,EAAG,GACd,EAAO,gBAAgB,EAAK,GAAM,GAClC,EAAO,gBAAgB,EAAK,GAAM,GAClC,EAAO,gBAAgB,EAAK,GAAM,GAC3B,QAGD,eAAc,EAAG,EAAG,EAAG,EAAW,CACxC,UAAM,WAAW,EAAG,GAEpB,GAAM,WAAW,EAAG,GAGb,GAAM,MAAM,IAAO,IAAI,GAAa,EAG5C,IAAI,EAAG,EAAG,EAAG,CACZ,YAAK,EAAE,KAAK,GACZ,KAAK,EAAE,KAAK,GACZ,KAAK,EAAE,KAAK,GACL,KAGR,wBAAwB,EAAQ,EAAI,EAAI,EAAI,CAC3C,YAAK,EAAE,KAAK,EAAO,IACnB,KAAK,EAAE,KAAK,EAAO,IACnB,KAAK,EAAE,KAAK,EAAO,IACZ,KAGR,2BAA2B,EAAW,EAAI,EAAI,EAAI,CACjD,YAAK,EAAE,oBAAoB,EAAW,GACtC,KAAK,EAAE,oBAAoB,EAAW,GACtC,KAAK,EAAE,oBAAoB,EAAW,GAC/B,KAGR,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,MAGpC,KAAK,EAAU,CACd,YAAK,EAAE,KAAK,EAAS,GACrB,KAAK,EAAE,KAAK,EAAS,GACrB,KAAK,EAAE,KAAK,EAAS,GACd,KAGR,SAAU,CACT,UAAM,WAAW,KAAK,EAAG,KAAK,GAE9B,GAAM,WAAW,KAAK,EAAG,KAAK,GAEvB,GAAM,MAAM,IAAO,SAAW,GAGtC,YAAY,EAAQ,CACnB,MAAO,GAAO,WAAW,KAAK,EAAG,KAAK,GAAG,IAAI,KAAK,GAAG,eAAe,EAAI,GAGzE,UAAU,EAAQ,CACjB,MAAO,IAAS,UAAU,KAAK,EAAG,KAAK,EAAG,KAAK,EAAG,GAGnD,SAAS,EAAQ,CAChB,MAAO,GAAO,sBAAsB,KAAK,EAAG,KAAK,EAAG,KAAK,GAG1D,aAAa,EAAO,EAAQ,CAC3B,MAAO,IAAS,aAAa,EAAO,KAAK,EAAG,KAAK,EAAG,KAAK,EAAG,GAG7D,MAAM,EAAO,EAAK,EAAK,EAAK,EAAQ,CACnC,MAAO,IAAS,MAAM,EAAO,KAAK,EAAG,KAAK,EAAG,KAAK,EAAG,EAAK,EAAK,EAAK,GAGrE,cAAc,EAAO,CACpB,MAAO,IAAS,cAAc,EAAO,KAAK,EAAG,KAAK,EAAG,KAAK,GAG3D,cAAc,EAAW,CACxB,MAAO,IAAS,cAAc,KAAK,EAAG,KAAK,EAAG,KAAK,EAAG,GAGvD,cAAc,EAAK,CAClB,MAAO,GAAI,mBAAmB,MAG/B,oBAAoB,EAAG,EAAQ,CAC9B,GAAM,GAAI,KAAK,EACZ,EAAI,KAAK,EACT,EAAI,KAAK,EACR,EAAG,EAMP,GAAK,WAAW,EAAG,GAEnB,GAAK,WAAW,EAAG,GAEnB,GAAK,WAAW,EAAG,GAEnB,GAAM,GAAK,GAAK,IAAI,IAEd,EAAK,GAAK,IAAI,IAEpB,GAAI,GAAM,GAAK,GAAM,EAEpB,MAAO,GAAO,KAAK,GAGpB,GAAK,WAAW,EAAG,GAEnB,GAAM,GAAK,GAAK,IAAI,IAEd,EAAK,GAAK,IAAI,IAEpB,GAAI,GAAM,GAAK,GAAM,EAEpB,MAAO,GAAO,KAAK,GAGpB,GAAM,GAAK,EAAK,EAAK,EAAK,EAE1B,GAAI,GAAM,GAAK,GAAM,GAAK,GAAM,EAC/B,SAAI,EAAM,GAAK,GAER,EAAO,KAAK,GAAG,gBAAgB,GAAM,GAG7C,GAAK,WAAW,EAAG,GAEnB,GAAM,GAAK,GAAK,IAAI,IAEd,EAAK,GAAK,IAAI,IAEpB,GAAI,GAAM,GAAK,GAAM,EAEpB,MAAO,GAAO,KAAK,GAGpB,GAAM,GAAK,EAAK,EAAK,EAAK,EAE1B,GAAI,GAAM,GAAK,GAAM,GAAK,GAAM,EAC/B,SAAI,EAAM,GAAK,GAER,EAAO,KAAK,GAAG,gBAAgB,GAAM,GAG7C,GAAM,GAAK,EAAK,EAAK,EAAK,EAE1B,GAAI,GAAM,GAAK,EAAK,GAAM,GAAK,EAAK,GAAM,EACzC,UAAK,WAAW,EAAG,GAEnB,EAAK,GAAK,GAAO,GAAK,EAAM,GAAK,IAE1B,EAAO,KAAK,GAAG,gBAAgB,GAAM,GAI7C,GAAM,GAAQ,EAAK,GAAK,EAAK,GAE7B,SAAI,EAAK,EACT,EAAI,EAAK,EACF,EAAO,KAAK,GAAG,gBAAgB,GAAM,GAAG,gBAAgB,GAAM,GAGtE,OAAO,EAAU,CAChB,MAAO,GAAS,EAAE,OAAO,KAAK,IAAM,EAAS,EAAE,OAAO,KAAK,IAAM,EAAS,EAAE,OAAO,KAAK,IAK1F,GAAI,IAAa,EAEjB,gBAAuB,GAAgB,CACtC,aAAc,CACb,QACA,OAAO,eAAe,KAAM,KAAM,CACjC,MAAO,OAER,KAAK,KAAO,KACZ,KAAK,KAAO,GACZ,KAAK,KAAO,WACZ,KAAK,IAAM,GACX,KAAK,SAAW,GAChB,KAAK,KAAO,GACZ,KAAK,aAAe,GACpB,KAAK,QAAU,EACf,KAAK,OAAS,GACd,KAAK,YAAc,GACnB,KAAK,SAAW,GAChB,KAAK,SAAW,GAChB,KAAK,cAAgB,GACrB,KAAK,cAAgB,KACrB,KAAK,cAAgB,KACrB,KAAK,mBAAqB,KAC1B,KAAK,UAAY,GACjB,KAAK,UAAY,GACjB,KAAK,WAAa,GAClB,KAAK,iBAAmB,IACxB,KAAK,YAAc,GACnB,KAAK,WAAa,EAClB,KAAK,gBAAkB,IACvB,KAAK,YAAc,GACnB,KAAK,aAAe,GACpB,KAAK,aAAe,GACpB,KAAK,aAAe,GACpB,KAAK,eAAiB,KACtB,KAAK,iBAAmB,GACxB,KAAK,YAAc,GACnB,KAAK,WAAa,KAClB,KAAK,WAAa,GAClB,KAAK,UAAY,KAEjB,KAAK,cAAgB,GACrB,KAAK,oBAAsB,EAC3B,KAAK,mBAAqB,EAC1B,KAAK,UAAY,GACjB,KAAK,gBAAkB,GACvB,KAAK,mBAAqB,GAC1B,KAAK,QAAU,GACf,KAAK,WAAa,GAClB,KAAK,SAAW,GAChB,KAAK,QAAU,EACf,KAAK,WAAa,KAGf,YAAY,CACf,MAAO,MAAK,cAGT,WAAU,EAAO,CACpB,AAAI,KAAK,WAAa,GAAM,EAAQ,GACnC,KAAK,UAGN,KAAK,WAAa,EAGnB,SAAU,EAEV,gBAAiB,EAEjB,iBAAkB,EAElB,uBAAwB,CACvB,MAAO,MAAK,gBAAgB,WAG7B,UAAU,EAAQ,CACjB,GAAI,IAAW,OAEf,OAAW,KAAO,GAAQ,CACzB,GAAM,GAAW,EAAO,GAExB,GAAI,IAAa,OAAW,CAC3B,QAAQ,KAAK,oBAAuB,EAAM,6BAC1C,SAID,GAAI,IAAQ,UAAW,CACtB,QAAQ,KAAK,SAAW,KAAK,KAAO,sEACpC,KAAK,YAAc,IAAa,GAChC,SAGD,GAAM,GAAe,KAAK,GAE1B,GAAI,IAAiB,OAAW,CAC/B,QAAQ,KAAK,SAAW,KAAK,KAAO,MAAS,EAAM,yCACnD,SAGD,AAAI,GAAgB,EAAa,QAChC,EAAa,IAAI,GACX,AAAI,GAAgB,EAAa,WAAa,GAAY,EAAS,UACzE,EAAa,KAAK,GAElB,KAAK,GAAO,GAKf,OAAO,EAAM,CACZ,GAAM,GAAS,IAAS,QAAa,MAAO,IAAS,SAErD,AAAI,GACH,GAAO,CACN,SAAU,GACV,OAAQ,KAIV,GAAM,GAAO,CACZ,SAAU,CACT,QAAS,IACT,KAAM,WACN,UAAW,oBAIb,EAAK,KAAO,KAAK,KACjB,EAAK,KAAO,KAAK,KACb,KAAK,OAAS,IAAI,GAAK,KAAO,KAAK,MACnC,KAAK,OAAS,KAAK,MAAM,SAAS,GAAK,MAAQ,KAAK,MAAM,UAC1D,KAAK,YAAc,QAAW,GAAK,UAAY,KAAK,WACpD,KAAK,YAAc,QAAW,GAAK,UAAY,KAAK,WACpD,KAAK,QAAU,QAAW,GAAK,MAAQ,KAAK,OAC5C,KAAK,WAAa,KAAK,UAAU,SAAS,GAAK,UAAY,KAAK,UAAU,UAC1E,KAAK,iBAAmB,QAAW,GAAK,eAAiB,KAAK,gBAC9D,KAAK,UAAY,KAAK,SAAS,SAAS,GAAK,SAAW,KAAK,SAAS,UACtE,KAAK,mBAAqB,KAAK,oBAAsB,GAAG,GAAK,kBAAoB,KAAK,mBACtF,KAAK,UAAY,KAAK,SAAS,SAAS,GAAK,SAAW,KAAK,SAAS,UACtE,KAAK,oBAAsB,QAAW,GAAK,kBAAoB,KAAK,mBACpE,KAAK,cAAgB,KAAK,aAAa,SAAS,GAAK,aAAe,KAAK,aAAa,UACtF,KAAK,YAAc,QAAW,GAAK,UAAY,KAAK,WACpD,KAAK,YAAc,QAAW,GAAK,UAAY,KAAK,WACpD,KAAK,qBAAuB,QAAW,GAAK,mBAAqB,KAAK,oBAEtE,KAAK,cAAgB,KAAK,aAAa,WAC1C,GAAK,aAAe,KAAK,aAAa,OAAO,GAAM,MAGhD,KAAK,uBAAyB,KAAK,sBAAsB,WAC5D,GAAK,sBAAwB,KAAK,sBAAsB,OAAO,GAAM,MAGlE,KAAK,oBAAsB,KAAK,mBAAmB,WACtD,GAAK,mBAAqB,KAAK,mBAAmB,OAAO,GAAM,KAC/D,EAAK,qBAAuB,KAAK,qBAAqB,WAGnD,KAAK,KAAO,KAAK,IAAI,WAAW,GAAK,IAAM,KAAK,IAAI,OAAO,GAAM,MACjE,KAAK,QAAU,KAAK,OAAO,WAAW,GAAK,OAAS,KAAK,OAAO,OAAO,GAAM,MAC7E,KAAK,UAAY,KAAK,SAAS,WAAW,GAAK,SAAW,KAAK,SAAS,OAAO,GAAM,MAErF,KAAK,UAAY,KAAK,SAAS,WAClC,GAAK,SAAW,KAAK,SAAS,OAAO,GAAM,KAC3C,EAAK,kBAAoB,KAAK,mBAG3B,KAAK,OAAS,KAAK,MAAM,WAC5B,GAAK,MAAQ,KAAK,MAAM,OAAO,GAAM,KACrC,EAAK,eAAiB,KAAK,gBAGxB,KAAK,SAAW,KAAK,QAAQ,WAChC,GAAK,QAAU,KAAK,QAAQ,OAAO,GAAM,KACzC,EAAK,UAAY,KAAK,WAGnB,KAAK,WAAa,KAAK,UAAU,WACpC,GAAK,UAAY,KAAK,UAAU,OAAO,GAAM,KAC7C,EAAK,cAAgB,KAAK,cAC1B,EAAK,YAAc,KAAK,YAAY,WAGjC,KAAK,iBAAmB,KAAK,gBAAgB,WAChD,GAAK,gBAAkB,KAAK,gBAAgB,OAAO,GAAM,KACzD,EAAK,kBAAoB,KAAK,kBAC9B,EAAK,iBAAmB,KAAK,kBAG1B,KAAK,cAAgB,KAAK,aAAa,WAAW,GAAK,aAAe,KAAK,aAAa,OAAO,GAAM,MACrG,KAAK,cAAgB,KAAK,aAAa,WAAW,GAAK,aAAe,KAAK,aAAa,OAAO,GAAM,MACrG,KAAK,aAAe,KAAK,YAAY,WAAW,GAAK,YAAc,KAAK,YAAY,OAAO,GAAM,MACjG,KAAK,aAAe,KAAK,YAAY,WAAW,GAAK,YAAc,KAAK,YAAY,OAAO,GAAM,MACjG,KAAK,sBAAwB,KAAK,qBAAqB,WAAW,GAAK,qBAAuB,KAAK,qBAAqB,OAAO,GAAM,MACrI,KAAK,iBAAmB,KAAK,gBAAgB,WAAW,GAAK,gBAAkB,KAAK,gBAAgB,OAAO,GAAM,MAEjH,KAAK,QAAU,KAAK,OAAO,WAC9B,GAAK,OAAS,KAAK,OAAO,OAAO,GAAM,KACnC,KAAK,UAAY,QAAW,GAAK,QAAU,KAAK,UAGjD,KAAK,kBAAoB,QAAW,GAAK,gBAAkB,KAAK,iBAChE,KAAK,eAAiB,QAAW,GAAK,aAAe,KAAK,cAC1D,KAAK,kBAAoB,QAAW,GAAK,gBAAkB,KAAK,iBAEhE,KAAK,aAAe,KAAK,YAAY,WACxC,GAAK,YAAc,KAAK,YAAY,OAAO,GAAM,MAG9C,KAAK,eAAiB,QAAW,GAAK,aAAe,KAAK,cAC1D,KAAK,iBAAmB,KAAK,gBAAgB,WAAW,GAAK,gBAAkB,KAAK,gBAAgB,OAAO,GAAM,MACjH,KAAK,YAAc,QAAW,GAAK,UAAY,KAAK,WACpD,KAAK,cAAgB,KAAK,aAAa,WAAW,GAAK,aAAe,KAAK,aAAa,OAAO,GAAM,MACrG,KAAK,sBAAwB,QAAW,GAAK,oBAAsB,KAAK,qBACxE,KAAK,kBAAoB,QAAW,GAAK,gBAAkB,KAAK,gBAAgB,UAChF,KAAK,OAAS,QAAW,GAAK,KAAO,KAAK,MAC1C,KAAK,aAAe,MAAM,GAAK,WAAa,KAAK,YACjD,KAAK,kBAAoB,QAAW,GAAK,gBAAkB,KAAK,iBAChE,KAAK,WAAa,IAAgB,GAAK,SAAW,KAAK,UACvD,KAAK,OAAS,IAAW,GAAK,KAAO,KAAK,MAC1C,KAAK,cAAc,GAAK,aAAe,IACvC,KAAK,QAAU,GAAG,GAAK,QAAU,KAAK,SACtC,KAAK,SAAW,IAAY,GAAK,OAAS,KAAK,QAC/C,KAAK,cAAgB,IAAM,GAAK,YAAc,KAAK,aACvD,EAAK,UAAY,KAAK,UACtB,EAAK,UAAY,KAAK,UACtB,EAAK,WAAa,KAAK,WACvB,EAAK,WAAa,KAAK,WACvB,EAAK,aAAe,KAAK,aACzB,EAAK,iBAAmB,KAAK,iBAC7B,EAAK,YAAc,KAAK,YACxB,EAAK,WAAa,KAAK,WACvB,EAAK,gBAAkB,KAAK,gBAC5B,EAAK,YAAc,KAAK,YACxB,EAAK,aAAe,KAAK,aACzB,EAAK,aAAe,KAAK,aAErB,KAAK,UAAY,KAAK,WAAa,GAAG,GAAK,SAAW,KAAK,UAC3D,KAAK,gBAAkB,IAAM,GAAK,cAAgB,IAClD,KAAK,sBAAwB,GAAG,GAAK,oBAAsB,KAAK,qBAChE,KAAK,qBAAuB,GAAG,GAAK,mBAAqB,KAAK,oBAC9D,KAAK,WAAa,KAAK,YAAc,GAAG,GAAK,UAAY,KAAK,WAC9D,KAAK,WAAa,QAAW,GAAK,SAAW,KAAK,UAClD,KAAK,UAAY,QAAW,GAAK,QAAU,KAAK,SAChD,KAAK,QAAU,QAAW,GAAK,MAAQ,KAAK,OAC5C,KAAK,YAAc,IAAM,GAAK,UAAY,IAC1C,KAAK,UAAY,GAAG,GAAK,UAAY,KAAK,WAC1C,KAAK,kBAAoB,IAAM,GAAK,gBAAkB,KAAK,iBAC3D,KAAK,qBAAuB,IAAM,GAAK,mBAAqB,KAAK,oBACjE,KAAK,YAAc,IAAM,GAAK,UAAY,KAAK,WAC/C,KAAK,mBAAqB,GAAG,GAAK,mBAAqB,KAAK,oBAC5D,KAAK,mBAAqB,SAAS,GAAK,iBAAmB,KAAK,kBAChE,KAAK,oBAAsB,SAAS,GAAK,kBAAoB,KAAK,mBAClE,KAAK,cAAgB,IAAM,GAAK,YAAc,KAAK,aACnD,KAAK,UAAY,IAAO,GAAK,QAAU,IACvC,KAAK,aAAe,IAAO,GAAK,WAAa,IAC7C,KAAK,UAAU,KAAK,YAAc,MAAM,GAAK,SAAW,KAAK,UAEjE,WAA0B,EAAO,CAChC,GAAM,GAAS,GAEf,OAAW,KAAO,GAAO,CACxB,GAAM,GAAO,EAAM,GACnB,MAAO,GAAK,SACZ,EAAO,KAAK,GAGb,MAAO,GAGR,GAAI,EAAQ,CACX,GAAM,GAAW,EAAiB,EAAK,UACjC,EAAS,EAAiB,EAAK,QACrC,AAAI,EAAS,OAAS,GAAG,GAAK,SAAW,GACrC,EAAO,OAAS,GAAG,GAAK,OAAS,GAGtC,MAAO,GAGR,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,MAGpC,KAAK,EAAQ,CACZ,KAAK,KAAO,EAAO,KACnB,KAAK,IAAM,EAAO,IAClB,KAAK,SAAW,EAAO,SACvB,KAAK,KAAO,EAAO,KACnB,KAAK,aAAe,EAAO,aAC3B,KAAK,QAAU,EAAO,QACtB,KAAK,OAAS,EAAO,OACrB,KAAK,YAAc,EAAO,YAC1B,KAAK,SAAW,EAAO,SACvB,KAAK,SAAW,EAAO,SACvB,KAAK,cAAgB,EAAO,cAC5B,KAAK,cAAgB,EAAO,cAC5B,KAAK,cAAgB,EAAO,cAC5B,KAAK,mBAAqB,EAAO,mBACjC,KAAK,UAAY,EAAO,UACxB,KAAK,UAAY,EAAO,UACxB,KAAK,WAAa,EAAO,WACzB,KAAK,iBAAmB,EAAO,iBAC/B,KAAK,YAAc,EAAO,YAC1B,KAAK,WAAa,EAAO,WACzB,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,YAAc,EAAO,YAC1B,KAAK,aAAe,EAAO,aAC3B,KAAK,aAAe,EAAO,aAC3B,KAAK,aAAe,EAAO,aAC3B,GAAM,GAAY,EAAO,eACrB,EAAY,KAEhB,GAAI,IAAc,KAAM,CACvB,GAAM,GAAI,EAAU,OACpB,EAAY,GAAI,OAAM,GAEtB,OAAS,GAAI,EAAG,IAAM,EAAG,EAAE,EAC1B,EAAU,GAAK,EAAU,GAAG,QAI9B,YAAK,eAAiB,EACtB,KAAK,iBAAmB,EAAO,iBAC/B,KAAK,YAAc,EAAO,YAC1B,KAAK,WAAa,EAAO,WACzB,KAAK,WAAa,EAAO,WACzB,KAAK,UAAY,EAAO,UACxB,KAAK,cAAgB,EAAO,cAC5B,KAAK,oBAAsB,EAAO,oBAClC,KAAK,mBAAqB,EAAO,mBACjC,KAAK,UAAY,EAAO,UACxB,KAAK,UAAY,EAAO,UACxB,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,mBAAqB,EAAO,mBACjC,KAAK,QAAU,EAAO,QACtB,KAAK,WAAa,EAAO,WACzB,KAAK,SAAW,KAAK,MAAM,KAAK,UAAU,EAAO,WAC1C,KAGR,SAAU,CACT,KAAK,cAAc,CAClB,KAAM,eAIJ,aAAY,EAAO,CACtB,AAAI,IAAU,IAAM,KAAK,WAK3B,GAAS,UAAU,WAAa,GAEhC,GAAM,IAAiB,CACtB,UAAa,SACb,aAAgB,SAChB,KAAQ,MACR,WAAc,QACd,MAAS,SACT,MAAS,SACT,OAAU,SACV,MAAS,EACT,eAAkB,SAClB,KAAQ,IACR,WAAc,QACd,MAAS,SACT,UAAa,SACb,UAAa,QACb,WAAc,QACd,UAAa,SACb,MAAS,SACT,eAAkB,QAClB,SAAY,SACZ,QAAW,SACX,KAAQ,MACR,SAAY,IACZ,SAAY,MACZ,cAAiB,SACjB,SAAY,SACZ,UAAa,MACb,SAAY,SACZ,UAAa,SACb,YAAe,QACf,eAAkB,QAClB,WAAc,SACd,WAAc,SACd,QAAW,QACX,WAAc,SACd,aAAgB,QAChB,cAAiB,QACjB,cAAiB,QACjB,cAAiB,QACjB,cAAiB,MACjB,WAAc,QACd,SAAY,SACZ,YAAe,MACf,QAAW,QACX,QAAW,QACX,WAAc,QACd,UAAa,SACb,YAAe,SACf,YAAe,QACf,QAAW,SACX,UAAa,SACb,WAAc,SACd,KAAQ,SACR,UAAa,SACb,KAAQ,QACR,MAAS,MACT,YAAe,SACf,KAAQ,QACR,SAAY,SACZ,QAAW,SACX,UAAa,SACb,OAAU,QACV,MAAS,SACT,MAAS,SACT,SAAY,SACZ,cAAiB,SACjB,UAAa,QACb,aAAgB,SAChB,UAAa,SACb,WAAc,SACd,UAAa,SACb,qBAAwB,SACxB,UAAa,SACb,WAAc,QACd,UAAa,SACb,UAAa,SACb,YAAe,SACf,cAAiB,QACjB,aAAgB,QAChB,eAAkB,QAClB,eAAkB,QAClB,eAAkB,SAClB,YAAe,SACf,KAAQ,MACR,UAAa,QACb,MAAS,SACT,QAAW,SACX,OAAU,QACV,iBAAoB,QACpB,WAAc,IACd,aAAgB,SAChB,aAAgB,QAChB,eAAkB,QAClB,gBAAmB,QACnB,kBAAqB,MACrB,gBAAmB,QACnB,gBAAmB,SACnB,aAAgB,QAChB,UAAa,SACb,UAAa,SACb,SAAY,SACZ,YAAe,SACf,KAAQ,IACR,QAAW,SACX,MAAS,QACT,UAAa,QACb,OAAU,SACV,UAAa,SACb,OAAU,SACV,cAAiB,SACjB,UAAa,SACb,cAAiB,SACjB,cAAiB,SACjB,WAAc,SACd,UAAa,SACb,KAAQ,SACR,KAAQ,SACR,KAAQ,SACR,WAAc,SACd,OAAU,QACV,cAAiB,QACjB,IAAO,SACP,UAAa,SACb,UAAa,QACb,YAAe,QACf,OAAU,SACV,WAAc,SACd,SAAY,QACZ,SAAY,SACZ,OAAU,SACV,OAAU,SACV,QAAW,QACX,UAAa,QACb,UAAa,QACb,UAAa,QACb,KAAQ,SACR,YAAe,MACf,UAAa,QACb,IAAO,SACP,KAAQ,MACR,QAAW,SACX,OAAU,SACV,UAAa,QACb,OAAU,SACV,MAAS,SACT,MAAS,SACT,WAAc,SACd,OAAU,SACV,YAAe,UAEV,GAAQ,CACb,EAAG,EACH,EAAG,EACH,EAAG,GAEE,GAAQ,CACb,EAAG,EACH,EAAG,EACH,EAAG,GAGJ,YAAiB,EAAG,EAAG,EAAG,CAGzB,MAFI,GAAI,GAAG,IAAK,GACZ,EAAI,GAAG,IAAK,GACZ,EAAI,EAAI,EAAU,EAAK,GAAI,GAAK,EAAI,EACpC,EAAI,EAAI,EAAU,EAClB,EAAI,EAAI,EAAU,EAAK,GAAI,GAAK,EAAK,GAAI,EAAI,GAC1C,EAGR,YAAsB,EAAG,CACxB,MAAO,GAAI,OAAU,EAAI,YAAe,KAAK,IAAI,EAAI,YAAe,YAAc,KAGnF,YAAsB,EAAG,CACxB,MAAO,GAAI,SAAY,EAAI,MAAQ,MAAQ,KAAK,IAAI,EAAG,QAAW,KAGnE,QAAY,CACX,YAAY,EAAG,EAAG,EAAG,CACpB,MAAI,KAAM,QAAa,IAAM,OAErB,KAAK,IAAI,GAGV,KAAK,OAAO,EAAG,EAAG,GAG1B,IAAI,EAAO,CACV,MAAI,IAAS,EAAM,QAClB,KAAK,KAAK,GACJ,AAAI,MAAO,IAAU,SAC3B,KAAK,OAAO,GACF,MAAO,IAAU,UAC3B,KAAK,SAAS,GAGR,KAGR,UAAU,EAAQ,CACjB,YAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,EACF,KAGR,OAAO,EAAK,CACX,SAAM,KAAK,MAAM,GACjB,KAAK,EAAK,IAAO,GAAK,KAAO,IAC7B,KAAK,EAAK,IAAO,EAAI,KAAO,IAC5B,KAAK,EAAK,GAAM,KAAO,IAChB,KAGR,OAAO,EAAG,EAAG,EAAG,CACf,YAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,EACF,KAGR,OAAO,EAAG,EAAG,EAAG,CAMf,GAJA,EAAI,GAAgB,EAAG,GACvB,EAAI,GAAM,EAAG,EAAG,GAChB,EAAI,GAAM,EAAG,EAAG,GAEZ,IAAM,EACT,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,MACrB,CACN,GAAM,GAAI,GAAK,GAAM,EAAK,GAAI,GAAK,EAAI,EAAI,EAAI,EACzC,EAAI,EAAI,EAAI,EAClB,KAAK,EAAI,GAAQ,EAAG,EAAG,EAAI,EAAI,GAC/B,KAAK,EAAI,GAAQ,EAAG,EAAG,GACvB,KAAK,EAAI,GAAQ,EAAG,EAAG,EAAI,EAAI,GAGhC,MAAO,MAGR,SAAS,EAAO,CACf,WAAqB,EAAQ,CAC5B,AAAI,IAAW,QAEX,WAAW,GAAU,GACxB,QAAQ,KAAK,mCAAqC,EAAQ,qBAI5D,GAAI,GAEJ,GAAI,EAAI,+BAA+B,KAAK,GAAQ,CAEnD,GAAI,GACE,EAAO,EAAE,GACT,EAAa,EAAE,GAErB,OAAQ,OACF,UACA,OACJ,GAAI,EAAQ,+DAA+D,KAAK,GAE/E,YAAK,EAAI,KAAK,IAAI,IAAK,SAAS,EAAM,GAAI,KAAO,IACjD,KAAK,EAAI,KAAK,IAAI,IAAK,SAAS,EAAM,GAAI,KAAO,IACjD,KAAK,EAAI,KAAK,IAAI,IAAK,SAAS,EAAM,GAAI,KAAO,IACjD,EAAY,EAAM,IACX,KAGR,GAAI,EAAQ,qEAAqE,KAAK,GAErF,YAAK,EAAI,KAAK,IAAI,IAAK,SAAS,EAAM,GAAI,KAAO,IACjD,KAAK,EAAI,KAAK,IAAI,IAAK,SAAS,EAAM,GAAI,KAAO,IACjD,KAAK,EAAI,KAAK,IAAI,IAAK,SAAS,EAAM,GAAI,KAAO,IACjD,EAAY,EAAM,IACX,KAGR,UAEI,UACA,OACJ,GAAI,EAAQ,yEAAyE,KAAK,GAAa,CAEtG,GAAM,GAAI,WAAW,EAAM,IAAM,IAC3B,EAAI,SAAS,EAAM,GAAI,IAAM,IAC7B,EAAI,SAAS,EAAM,GAAI,IAAM,IACnC,SAAY,EAAM,IACX,KAAK,OAAO,EAAG,EAAG,GAG1B,eAEQ,EAAI,oBAAoB,KAAK,GAAQ,CAE/C,GAAM,GAAM,EAAE,GACR,EAAO,EAAI,OAEjB,GAAI,IAAS,EAEZ,YAAK,EAAI,SAAS,EAAI,OAAO,GAAK,EAAI,OAAO,GAAI,IAAM,IACvD,KAAK,EAAI,SAAS,EAAI,OAAO,GAAK,EAAI,OAAO,GAAI,IAAM,IACvD,KAAK,EAAI,SAAS,EAAI,OAAO,GAAK,EAAI,OAAO,GAAI,IAAM,IAChD,KACD,GAAI,IAAS,EAEnB,YAAK,EAAI,SAAS,EAAI,OAAO,GAAK,EAAI,OAAO,GAAI,IAAM,IACvD,KAAK,EAAI,SAAS,EAAI,OAAO,GAAK,EAAI,OAAO,GAAI,IAAM,IACvD,KAAK,EAAI,SAAS,EAAI,OAAO,GAAK,EAAI,OAAO,GAAI,IAAM,IAChD,KAIT,MAAI,IAAS,EAAM,OAAS,EACpB,KAAK,aAAa,GAGnB,KAGR,aAAa,EAAO,CAEnB,GAAM,GAAM,GAAe,EAAM,eAEjC,MAAI,KAAQ,OAEX,KAAK,OAAO,GAGZ,QAAQ,KAAK,8BAAgC,GAGvC,KAGR,OAAQ,CACP,MAAO,IAAI,MAAK,YAAY,KAAK,EAAG,KAAK,EAAG,KAAK,GAGlD,KAAK,EAAO,CACX,YAAK,EAAI,EAAM,EACf,KAAK,EAAI,EAAM,EACf,KAAK,EAAI,EAAM,EACR,KAGR,kBAAkB,EAAO,EAAc,EAAK,CAC3C,YAAK,EAAI,KAAK,IAAI,EAAM,EAAG,GAC3B,KAAK,EAAI,KAAK,IAAI,EAAM,EAAG,GAC3B,KAAK,EAAI,KAAK,IAAI,EAAM,EAAG,GACpB,KAGR,kBAAkB,EAAO,EAAc,EAAK,CAC3C,GAAM,GAAc,EAAc,EAAI,EAAM,EAAc,EAC1D,YAAK,EAAI,KAAK,IAAI,EAAM,EAAG,GAC3B,KAAK,EAAI,KAAK,IAAI,EAAM,EAAG,GAC3B,KAAK,EAAI,KAAK,IAAI,EAAM,EAAG,GACpB,KAGR,qBAAqB,EAAa,CACjC,YAAK,kBAAkB,KAAM,GACtB,KAGR,qBAAqB,EAAa,CACjC,YAAK,kBAAkB,KAAM,GACtB,KAGR,iBAAiB,EAAO,CACvB,YAAK,EAAI,GAAa,EAAM,GAC5B,KAAK,EAAI,GAAa,EAAM,GAC5B,KAAK,EAAI,GAAa,EAAM,GACrB,KAGR,iBAAiB,EAAO,CACvB,YAAK,EAAI,GAAa,EAAM,GAC5B,KAAK,EAAI,GAAa,EAAM,GAC5B,KAAK,EAAI,GAAa,EAAM,GACrB,KAGR,qBAAsB,CACrB,YAAK,iBAAiB,MACf,KAGR,qBAAsB,CACrB,YAAK,iBAAiB,MACf,KAGR,QAAS,CACR,MAAO,MAAK,EAAI,KAAO,GAAK,KAAK,EAAI,KAAO,EAAI,KAAK,EAAI,KAAO,EAGjE,cAAe,CACd,MAAQ,UAAW,KAAK,SAAS,SAAS,KAAK,MAAM,IAGtD,OAAO,EAAQ,CAEd,GAAM,GAAI,KAAK,EACZ,EAAI,KAAK,EACT,EAAI,KAAK,EACN,EAAM,KAAK,IAAI,EAAG,EAAG,GACrB,EAAM,KAAK,IAAI,EAAG,EAAG,GACvB,EAAK,EACH,EAAa,GAAM,GAAO,EAEhC,GAAI,IAAQ,EACX,EAAM,EACN,EAAa,MACP,CACN,GAAM,GAAQ,EAAM,EAGpB,OAFA,EAAa,GAAa,GAAM,EAAS,GAAM,GAAO,EAAS,GAAI,EAAM,GAEjE,OACF,GACJ,EAAO,GAAI,GAAK,EAAS,GAAI,EAAI,EAAI,GACrC,UAEI,GACJ,EAAO,GAAI,GAAK,EAAQ,EACxB,UAEI,GACJ,EAAO,GAAI,GAAK,EAAQ,EACxB,MAGF,GAAO,EAGR,SAAO,EAAI,EACX,EAAO,EAAI,EACX,EAAO,EAAI,EACJ,EAGR,UAAW,CACV,MAAO,OAAU,MAAK,EAAI,IAAM,GAAK,IAAO,MAAK,EAAI,IAAM,GAAK,IAAO,MAAK,EAAI,IAAM,GAAK,IAG5F,UAAU,EAAG,EAAG,EAAG,CAClB,YAAK,OAAO,IACZ,GAAM,GAAK,EACX,GAAM,GAAK,EACX,GAAM,GAAK,EACX,KAAK,OAAO,GAAM,EAAG,GAAM,EAAG,GAAM,GAC7B,KAGR,IAAI,EAAO,CACV,YAAK,GAAK,EAAM,EAChB,KAAK,GAAK,EAAM,EAChB,KAAK,GAAK,EAAM,EACT,KAGR,UAAU,EAAQ,EAAQ,CACzB,YAAK,EAAI,EAAO,EAAI,EAAO,EAC3B,KAAK,EAAI,EAAO,EAAI,EAAO,EAC3B,KAAK,EAAI,EAAO,EAAI,EAAO,EACpB,KAGR,UAAU,EAAG,CACZ,YAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACH,KAGR,IAAI,EAAO,CACV,YAAK,EAAI,KAAK,IAAI,EAAG,KAAK,EAAI,EAAM,GACpC,KAAK,EAAI,KAAK,IAAI,EAAG,KAAK,EAAI,EAAM,GACpC,KAAK,EAAI,KAAK,IAAI,EAAG,KAAK,EAAI,EAAM,GAC7B,KAGR,SAAS,EAAO,CACf,YAAK,GAAK,EAAM,EAChB,KAAK,GAAK,EAAM,EAChB,KAAK,GAAK,EAAM,EACT,KAGR,eAAe,EAAG,CACjB,YAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACH,KAGR,KAAK,EAAO,EAAO,CAClB,YAAK,GAAM,GAAM,EAAI,KAAK,GAAK,EAC/B,KAAK,GAAM,GAAM,EAAI,KAAK,GAAK,EAC/B,KAAK,GAAM,GAAM,EAAI,KAAK,GAAK,EACxB,KAGR,WAAW,EAAQ,EAAQ,EAAO,CACjC,YAAK,EAAI,EAAO,EAAK,GAAO,EAAI,EAAO,GAAK,EAC5C,KAAK,EAAI,EAAO,EAAK,GAAO,EAAI,EAAO,GAAK,EAC5C,KAAK,EAAI,EAAO,EAAK,GAAO,EAAI,EAAO,GAAK,EACrC,KAGR,QAAQ,EAAO,EAAO,CACrB,KAAK,OAAO,IACZ,EAAM,OAAO,IACb,GAAM,GAAI,GAAK,GAAM,EAAG,GAAM,EAAG,GAC3B,EAAI,GAAK,GAAM,EAAG,GAAM,EAAG,GAC3B,EAAI,GAAK,GAAM,EAAG,GAAM,EAAG,GACjC,YAAK,OAAO,EAAG,EAAG,GACX,KAGR,OAAO,EAAG,CACT,MAAO,GAAE,IAAM,KAAK,GAAK,EAAE,IAAM,KAAK,GAAK,EAAE,IAAM,KAAK,EAGzD,UAAU,EAAO,EAAS,EAAG,CAC5B,YAAK,EAAI,EAAM,GACf,KAAK,EAAI,EAAM,EAAS,GACxB,KAAK,EAAI,EAAM,EAAS,GACjB,KAGR,QAAQ,EAAQ,GAAI,EAAS,EAAG,CAC/B,SAAM,GAAU,KAAK,EACrB,EAAM,EAAS,GAAK,KAAK,EACzB,EAAM,EAAS,GAAK,KAAK,EAClB,EAGR,oBAAoB,EAAW,EAAO,CACrC,YAAK,EAAI,EAAU,KAAK,GACxB,KAAK,EAAI,EAAU,KAAK,GACxB,KAAK,EAAI,EAAU,KAAK,GAEpB,EAAU,aAAe,IAE5B,MAAK,GAAK,IACV,KAAK,GAAK,IACV,KAAK,GAAK,KAGJ,KAGR,QAAS,CACR,MAAO,MAAK,UAKd,GAAM,MAAQ,GACd,GAAM,UAAU,QAAU,GAC1B,GAAM,UAAU,EAAI,EACpB,GAAM,UAAU,EAAI,EACpB,GAAM,UAAU,EAAI,EA+BpB,gBAAgC,GAAS,CACxC,YAAY,EAAY,CACvB,QACA,KAAK,KAAO,oBACZ,KAAK,MAAQ,GAAI,IAAM,UAEvB,KAAK,IAAM,KACX,KAAK,SAAW,KAChB,KAAK,kBAAoB,EACzB,KAAK,MAAQ,KACb,KAAK,eAAiB,EACtB,KAAK,YAAc,KACnB,KAAK,SAAW,KAChB,KAAK,OAAS,KACd,KAAK,QAAU,GACf,KAAK,aAAe,EACpB,KAAK,gBAAkB,IACvB,KAAK,UAAY,GACjB,KAAK,mBAAqB,EAC1B,KAAK,iBAAmB,QACxB,KAAK,kBAAoB,QACzB,KAAK,UAAU,GAGhB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,MAAM,KAAK,EAAO,OACvB,KAAK,IAAM,EAAO,IAClB,KAAK,SAAW,EAAO,SACvB,KAAK,kBAAoB,EAAO,kBAChC,KAAK,MAAQ,EAAO,MACpB,KAAK,eAAiB,EAAO,eAC7B,KAAK,YAAc,EAAO,YAC1B,KAAK,SAAW,EAAO,SACvB,KAAK,OAAS,EAAO,OACrB,KAAK,QAAU,EAAO,QACtB,KAAK,aAAe,EAAO,aAC3B,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,UAAY,EAAO,UACxB,KAAK,mBAAqB,EAAO,mBACjC,KAAK,iBAAmB,EAAO,iBAC/B,KAAK,kBAAoB,EAAO,kBACzB,MAKT,GAAkB,UAAU,oBAAsB,GAElD,GAAM,IAAyB,GAAI,GAE7B,GAA0B,GAAI,IAEpC,QAAsB,CACrB,YAAY,EAAO,EAAU,EAAY,CACxC,GAAI,MAAM,QAAQ,GACjB,KAAM,IAAI,WAAU,yDAGrB,KAAK,KAAO,GACZ,KAAK,MAAQ,EACb,KAAK,SAAW,EAChB,KAAK,MAAQ,IAAU,OAAY,EAAM,OAAS,EAAW,EAC7D,KAAK,WAAa,IAAe,GACjC,KAAK,MAAQ,GACb,KAAK,YAAc,CAClB,OAAQ,EACR,MAAO,IAER,KAAK,QAAU,EAGhB,kBAAmB,KAEf,aAAY,EAAO,CACtB,AAAI,IAAU,IAAM,KAAK,UAG1B,SAAS,EAAO,CACf,YAAK,MAAQ,EACN,KAGR,KAAK,EAAQ,CACZ,YAAK,KAAO,EAAO,KACnB,KAAK,MAAQ,GAAI,GAAO,MAAM,YAAY,EAAO,OACjD,KAAK,SAAW,EAAO,SACvB,KAAK,MAAQ,EAAO,MACpB,KAAK,WAAa,EAAO,WACzB,KAAK,MAAQ,EAAO,MACb,KAGR,OAAO,EAAQ,EAAW,EAAQ,CACjC,GAAU,KAAK,SACf,GAAU,EAAU,SAEpB,OAAS,GAAI,EAAG,EAAI,KAAK,SAAU,EAAI,EAAG,IACzC,KAAK,MAAM,EAAS,GAAK,EAAU,MAAM,EAAS,GAGnD,MAAO,MAGR,UAAU,EAAO,CAChB,YAAK,MAAM,IAAI,GACR,KAGR,gBAAgB,EAAQ,CACvB,GAAM,GAAQ,KAAK,MACf,EAAS,EAEb,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,IAAK,CAC9C,GAAI,GAAQ,EAAO,GAEnB,AAAI,IAAU,QACb,SAAQ,KAAK,8DAA+D,GAC5E,EAAQ,GAAI,KAGb,EAAM,KAAY,EAAM,EACxB,EAAM,KAAY,EAAM,EACxB,EAAM,KAAY,EAAM,EAGzB,MAAO,MAGR,kBAAkB,EAAS,CAC1B,GAAM,GAAQ,KAAK,MACf,EAAS,EAEb,OAAS,GAAI,EAAG,EAAI,EAAQ,OAAQ,EAAI,EAAG,IAAK,CAC/C,GAAI,GAAS,EAAQ,GAErB,AAAI,IAAW,QACd,SAAQ,KAAK,iEAAkE,GAC/E,EAAS,GAAI,KAGd,EAAM,KAAY,EAAO,EACzB,EAAM,KAAY,EAAO,EAG1B,MAAO,MAGR,kBAAkB,EAAS,CAC1B,GAAM,GAAQ,KAAK,MACf,EAAS,EAEb,OAAS,GAAI,EAAG,EAAI,EAAQ,OAAQ,EAAI,EAAG,IAAK,CAC/C,GAAI,GAAS,EAAQ,GAErB,AAAI,IAAW,QACd,SAAQ,KAAK,iEAAkE,GAC/E,EAAS,GAAI,IAGd,EAAM,KAAY,EAAO,EACzB,EAAM,KAAY,EAAO,EACzB,EAAM,KAAY,EAAO,EAG1B,MAAO,MAGR,kBAAkB,EAAS,CAC1B,GAAM,GAAQ,KAAK,MACf,EAAS,EAEb,OAAS,GAAI,EAAG,EAAI,EAAQ,OAAQ,EAAI,EAAG,IAAK,CAC/C,GAAI,GAAS,EAAQ,GAErB,AAAI,IAAW,QACd,SAAQ,KAAK,iEAAkE,GAC/E,EAAS,GAAI,KAGd,EAAM,KAAY,EAAO,EACzB,EAAM,KAAY,EAAO,EACzB,EAAM,KAAY,EAAO,EACzB,EAAM,KAAY,EAAO,EAG1B,MAAO,MAGR,aAAa,EAAG,CACf,GAAI,KAAK,WAAa,EACrB,OAAS,GAAI,EAAG,EAAI,KAAK,MAAO,EAAI,EAAG,IACtC,GAAW,oBAAoB,KAAM,GAErC,GAAW,aAAa,GAExB,KAAK,MAAM,EAAG,GAAW,EAAG,GAAW,WAE9B,KAAK,WAAa,EAC5B,OAAS,GAAI,EAAG,EAAI,KAAK,MAAO,EAAI,EAAG,IACtC,GAAU,oBAAoB,KAAM,GAEpC,GAAU,aAAa,GAEvB,KAAK,OAAO,EAAG,GAAU,EAAG,GAAU,EAAG,GAAU,GAIrD,MAAO,MAGR,aAAa,EAAG,CACf,OAAS,GAAI,EAAG,EAAI,KAAK,MAAO,EAAI,EAAG,IACtC,GAAU,EAAI,KAAK,KAAK,GACxB,GAAU,EAAI,KAAK,KAAK,GACxB,GAAU,EAAI,KAAK,KAAK,GAExB,GAAU,aAAa,GAEvB,KAAK,OAAO,EAAG,GAAU,EAAG,GAAU,EAAG,GAAU,GAGpD,MAAO,MAGR,kBAAkB,EAAG,CACpB,OAAS,GAAI,EAAG,EAAI,KAAK,MAAO,EAAI,EAAG,IACtC,GAAU,EAAI,KAAK,KAAK,GACxB,GAAU,EAAI,KAAK,KAAK,GACxB,GAAU,EAAI,KAAK,KAAK,GAExB,GAAU,kBAAkB,GAE5B,KAAK,OAAO,EAAG,GAAU,EAAG,GAAU,EAAG,GAAU,GAGpD,MAAO,MAGR,mBAAmB,EAAG,CACrB,OAAS,GAAI,EAAG,EAAI,KAAK,MAAO,EAAI,EAAG,IACtC,GAAU,EAAI,KAAK,KAAK,GACxB,GAAU,EAAI,KAAK,KAAK,GACxB,GAAU,EAAI,KAAK,KAAK,GAExB,GAAU,mBAAmB,GAE7B,KAAK,OAAO,EAAG,GAAU,EAAG,GAAU,EAAG,GAAU,GAGpD,MAAO,MAGR,IAAI,EAAO,EAAS,EAAG,CACtB,YAAK,MAAM,IAAI,EAAO,GACf,KAGR,KAAK,EAAO,CACX,MAAO,MAAK,MAAM,EAAQ,KAAK,UAGhC,KAAK,EAAO,EAAG,CACd,YAAK,MAAM,EAAQ,KAAK,UAAY,EAC7B,KAGR,KAAK,EAAO,CACX,MAAO,MAAK,MAAM,EAAQ,KAAK,SAAW,GAG3C,KAAK,EAAO,EAAG,CACd,YAAK,MAAM,EAAQ,KAAK,SAAW,GAAK,EACjC,KAGR,KAAK,EAAO,CACX,MAAO,MAAK,MAAM,EAAQ,KAAK,SAAW,GAG3C,KAAK,EAAO,EAAG,CACd,YAAK,MAAM,EAAQ,KAAK,SAAW,GAAK,EACjC,KAGR,KAAK,EAAO,CACX,MAAO,MAAK,MAAM,EAAQ,KAAK,SAAW,GAG3C,KAAK,EAAO,EAAG,CACd,YAAK,MAAM,EAAQ,KAAK,SAAW,GAAK,EACjC,KAGR,MAAM,EAAO,EAAG,EAAG,CAClB,UAAS,KAAK,SACd,KAAK,MAAM,EAAQ,GAAK,EACxB,KAAK,MAAM,EAAQ,GAAK,EACjB,KAGR,OAAO,EAAO,EAAG,EAAG,EAAG,CACtB,UAAS,KAAK,SACd,KAAK,MAAM,EAAQ,GAAK,EACxB,KAAK,MAAM,EAAQ,GAAK,EACxB,KAAK,MAAM,EAAQ,GAAK,EACjB,KAGR,QAAQ,EAAO,EAAG,EAAG,EAAG,EAAG,CAC1B,UAAS,KAAK,SACd,KAAK,MAAM,EAAQ,GAAK,EACxB,KAAK,MAAM,EAAQ,GAAK,EACxB,KAAK,MAAM,EAAQ,GAAK,EACxB,KAAK,MAAM,EAAQ,GAAK,EACjB,KAGR,SAAS,EAAU,CAClB,YAAK,iBAAmB,EACjB,KAGR,OAAQ,CACP,MAAO,IAAI,MAAK,YAAY,KAAK,MAAO,KAAK,UAAU,KAAK,MAG7D,QAAS,CACR,GAAM,GAAO,CACZ,SAAU,KAAK,SACf,KAAM,KAAK,MAAM,YAAY,KAC7B,MAAO,MAAM,UAAU,MAAM,KAAK,KAAK,OACvC,WAAY,KAAK,YAElB,MAAI,MAAK,OAAS,IAAI,GAAK,KAAO,KAAK,MACnC,KAAK,QAAU,IAAiB,GAAK,MAAQ,KAAK,OAClD,MAAK,YAAY,SAAW,GAAK,KAAK,YAAY,QAAU,KAAI,GAAK,YAAc,KAAK,aACrF,GAKT,GAAgB,UAAU,kBAAoB,GAE9C,gBAAkC,GAAgB,CACjD,YAAY,EAAO,EAAU,EAAY,CACxC,MAAM,GAAI,WAAU,GAAQ,EAAU,IAKxC,gBAAmC,GAAgB,CAClD,YAAY,EAAO,EAAU,EAAY,CACxC,MAAM,GAAI,YAAW,GAAQ,EAAU,IAKzC,gBAA0C,GAAgB,CACzD,YAAY,EAAO,EAAU,EAAY,CACxC,MAAM,GAAI,mBAAkB,GAAQ,EAAU,IAKhD,gBAAmC,GAAgB,CAClD,YAAY,EAAO,EAAU,EAAY,CACxC,MAAM,GAAI,YAAW,GAAQ,EAAU,IAKzC,gBAAoC,GAAgB,CACnD,YAAY,EAAO,EAAU,EAAY,CACxC,MAAM,GAAI,aAAY,GAAQ,EAAU,IAK1C,gBAAmC,GAAgB,CAClD,YAAY,EAAO,EAAU,EAAY,CACxC,MAAM,GAAI,YAAW,GAAQ,EAAU,IAKzC,gBAAoC,GAAgB,CACnD,YAAY,EAAO,EAAU,EAAY,CACxC,MAAM,GAAI,aAAY,GAAQ,EAAU,IAK1C,gBAAqC,GAAgB,CACpD,YAAY,EAAO,EAAU,EAAY,CACxC,MAAM,GAAI,aAAY,GAAQ,EAAU,IAK1C,GAAuB,UAAU,yBAA2B,GAE5D,gBAAqC,GAAgB,CACpD,YAAY,EAAO,EAAU,EAAY,CACxC,MAAM,GAAI,cAAa,GAAQ,EAAU,IAK3C,gBAAqC,GAAgB,CACpD,YAAY,EAAO,EAAU,EAAY,CACxC,MAAM,GAAI,cAAa,GAAQ,EAAU,IAK3C,GAAI,IAAM,EAEJ,GAAmB,GAAI,IAEvB,GAAoB,GAAI,IAExB,GAAuB,GAAI,GAE3B,GAAsB,GAAI,IAE1B,GAAgC,GAAI,IAEpC,GAAyB,GAAI,GAEnC,gBAA6B,GAAgB,CAC5C,aAAc,CACb,QACA,OAAO,eAAe,KAAM,KAAM,CACjC,MAAO,OAER,KAAK,KAAO,KACZ,KAAK,KAAO,GACZ,KAAK,KAAO,iBACZ,KAAK,MAAQ,KACb,KAAK,WAAa,GAClB,KAAK,gBAAkB,GACvB,KAAK,qBAAuB,GAC5B,KAAK,OAAS,GACd,KAAK,YAAc,KACnB,KAAK,eAAiB,KACtB,KAAK,UAAY,CAChB,MAAO,EACP,MAAO,KAER,KAAK,SAAW,GAGjB,UAAW,CACV,MAAO,MAAK,MAGb,SAAS,EAAO,CACf,MAAI,OAAM,QAAQ,GACjB,KAAK,MAAQ,GAAK,IAAS,GAAS,MAAQ,GAAwB,IAAuB,EAAO,GAElG,KAAK,MAAQ,EAGP,KAGR,aAAa,EAAM,CAClB,MAAO,MAAK,WAAW,GAGxB,aAAa,EAAM,EAAW,CAC7B,YAAK,WAAW,GAAQ,EACjB,KAGR,gBAAgB,EAAM,CACrB,aAAO,MAAK,WAAW,GAChB,KAGR,aAAa,EAAM,CAClB,MAAO,MAAK,WAAW,KAAU,OAGlC,SAAS,EAAO,EAAO,EAAgB,EAAG,CACzC,KAAK,OAAO,KAAK,CAChB,MAAO,EACP,MAAO,EACP,cAAe,IAIjB,aAAc,CACb,KAAK,OAAS,GAGf,aAAa,EAAO,EAAO,CAC1B,KAAK,UAAU,MAAQ,EACvB,KAAK,UAAU,MAAQ,EAGxB,aAAa,EAAQ,CACpB,GAAM,GAAW,KAAK,WAAW,SAEjC,AAAI,IAAa,QAChB,GAAS,aAAa,GACtB,EAAS,YAAc,IAGxB,GAAM,GAAS,KAAK,WAAW,OAE/B,GAAI,IAAW,OAAW,CACzB,GAAM,GAAe,GAAI,MAAU,gBAAgB,GACnD,EAAO,kBAAkB,GACzB,EAAO,YAAc,GAGtB,GAAM,GAAU,KAAK,WAAW,QAEhC,MAAI,KAAY,QACf,GAAQ,mBAAmB,GAC3B,EAAQ,YAAc,IAGnB,KAAK,cAAgB,MACxB,KAAK,qBAGF,KAAK,iBAAmB,MAC3B,KAAK,wBAGC,KAGR,gBAAgB,EAAG,CAClB,UAAI,2BAA2B,GAE/B,KAAK,aAAa,IACX,KAGR,QAAQ,EAAO,CAEd,UAAI,cAAc,GAElB,KAAK,aAAa,IACX,KAGR,QAAQ,EAAO,CAEd,UAAI,cAAc,GAElB,KAAK,aAAa,IACX,KAGR,QAAQ,EAAO,CAEd,UAAI,cAAc,GAElB,KAAK,aAAa,IACX,KAGR,UAAU,EAAG,EAAG,EAAG,CAElB,UAAI,gBAAgB,EAAG,EAAG,GAE1B,KAAK,aAAa,IACX,KAGR,MAAM,EAAG,EAAG,EAAG,CAEd,UAAI,UAAU,EAAG,EAAG,GAEpB,KAAK,aAAa,IACX,KAGR,OAAO,EAAQ,CACd,UAAK,OAAO,GAEZ,GAAK,eAEL,KAAK,aAAa,GAAK,QAChB,KAGR,QAAS,CACR,YAAK,qBACL,KAAK,YAAY,UAAU,IAAS,SACpC,KAAK,UAAU,GAAQ,EAAG,GAAQ,EAAG,GAAQ,GACtC,KAGR,cAAc,EAAQ,CACrB,GAAM,GAAW,GAEjB,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,IAAK,CAC9C,GAAM,GAAQ,EAAO,GACrB,EAAS,KAAK,EAAM,EAAG,EAAM,EAAG,EAAM,GAAK,GAG5C,YAAK,aAAa,WAAY,GAAI,IAAuB,EAAU,IAC5D,KAGR,oBAAqB,CACpB,AAAI,KAAK,cAAgB,MACxB,MAAK,YAAc,GAAI,KAGxB,GAAM,GAAW,KAAK,WAAW,SAC3B,EAA0B,KAAK,gBAAgB,SAErD,GAAI,GAAY,EAAS,oBAAqB,CAC7C,QAAQ,MAAM,kJAAmJ,MACjK,KAAK,YAAY,IAAI,GAAI,GAAQ,KAAW,KAAW,MAAY,GAAI,GAAQ,IAAW,IAAW,MACrG,OAGD,GAAI,IAAa,QAGhB,GAFA,KAAK,YAAY,uBAAuB,GAEpC,EACH,OAAS,GAAI,EAAG,EAAK,EAAwB,OAAQ,EAAI,EAAI,IAAK,CACjE,GAAM,GAAiB,EAAwB,GAE/C,GAAO,uBAAuB,GAE9B,AAAI,KAAK,qBACR,IAAU,WAAW,KAAK,YAAY,IAAK,GAAO,KAElD,KAAK,YAAY,cAAc,IAE/B,GAAU,WAAW,KAAK,YAAY,IAAK,GAAO,KAElD,KAAK,YAAY,cAAc,KAE/B,MAAK,YAAY,cAAc,GAAO,KACtC,KAAK,YAAY,cAAc,GAAO,WAKzC,MAAK,YAAY,YAGlB,AAAI,OAAM,KAAK,YAAY,IAAI,IAAM,MAAM,KAAK,YAAY,IAAI,IAAM,MAAM,KAAK,YAAY,IAAI,KAChG,QAAQ,MAAM,sIAAuI,MAIvJ,uBAAwB,CACvB,AAAI,KAAK,iBAAmB,MAC3B,MAAK,eAAiB,GAAI,KAG3B,GAAM,GAAW,KAAK,WAAW,SAC3B,EAA0B,KAAK,gBAAgB,SAErD,GAAI,GAAY,EAAS,oBAAqB,CAC7C,QAAQ,MAAM,wJAAyJ,MACvK,KAAK,eAAe,IAAI,GAAI,GAAW,KACvC,OAGD,GAAI,EAAU,CAEb,GAAM,GAAS,KAAK,eAAe,OAKnC,GAHA,GAAO,uBAAuB,GAG1B,EACH,OAAS,GAAI,EAAG,EAAK,EAAwB,OAAQ,EAAI,EAAI,IAAK,CACjE,GAAM,GAAiB,EAAwB,GAE/C,GAAiB,uBAAuB,GAExC,AAAI,KAAK,qBACR,IAAU,WAAW,GAAO,IAAK,GAAiB,KAElD,GAAO,cAAc,IAErB,GAAU,WAAW,GAAO,IAAK,GAAiB,KAElD,GAAO,cAAc,KAErB,IAAO,cAAc,GAAiB,KAEtC,GAAO,cAAc,GAAiB,MAKzC,GAAO,UAAU,GAIjB,GAAI,GAAc,EAElB,OAAS,GAAI,EAAG,EAAK,EAAS,MAAO,EAAI,EAAI,IAC5C,GAAU,oBAAoB,EAAU,GAExC,EAAc,KAAK,IAAI,EAAa,EAAO,kBAAkB,KAI9D,GAAI,EACH,OAAS,GAAI,EAAG,EAAK,EAAwB,OAAQ,EAAI,EAAI,IAAK,CACjE,GAAM,GAAiB,EAAwB,GACzC,EAAuB,KAAK,qBAElC,OAAS,GAAI,EAAG,EAAK,EAAe,MAAO,EAAI,EAAI,IAClD,GAAU,oBAAoB,EAAgB,GAE1C,GACH,IAAQ,oBAAoB,EAAU,GAEtC,GAAU,IAAI,KAGf,EAAc,KAAK,IAAI,EAAa,EAAO,kBAAkB,KAKhE,KAAK,eAAe,OAAS,KAAK,KAAK,GAEnC,MAAM,KAAK,eAAe,SAC7B,QAAQ,MAAM,+HAAgI,OAKjJ,iBAAkB,CACjB,GAAM,GAAQ,KAAK,MACb,EAAa,KAAK,WAGxB,GAAI,IAAU,MAAQ,EAAW,WAAa,QAAa,EAAW,SAAW,QAAa,EAAW,KAAO,OAAW,CAC1H,QAAQ,MAAM,gHACd,OAGD,GAAM,GAAU,EAAM,MAChB,EAAY,EAAW,SAAS,MAChC,EAAU,EAAW,OAAO,MAC5B,EAAM,EAAW,GAAG,MACpB,EAAY,EAAU,OAAS,EAErC,AAAI,EAAW,UAAY,QAC1B,KAAK,aAAa,UAAW,GAAI,IAAgB,GAAI,cAAa,EAAI,GAAY,IAGnF,GAAM,GAAW,EAAW,QAAQ,MAC9B,EAAO,GACV,EAAO,GAEV,OAAS,GAAI,EAAG,EAAI,EAAW,IAC9B,EAAK,GAAK,GAAI,GACd,EAAK,GAAK,GAAI,GAGf,GAAM,GAAK,GAAI,GACZ,EAAK,GAAI,GACT,EAAK,GAAI,GACT,EAAM,GAAI,IACV,EAAM,GAAI,IACV,EAAM,GAAI,IACV,EAAO,GAAI,GACX,EAAO,GAAI,GAEd,WAAwB,EAAG,EAAG,GAAG,CAChC,EAAG,UAAU,EAAW,EAAI,GAC5B,EAAG,UAAU,EAAW,EAAI,GAC5B,EAAG,UAAU,EAAW,GAAI,GAC5B,EAAI,UAAU,EAAK,EAAI,GACvB,EAAI,UAAU,EAAK,EAAI,GACvB,EAAI,UAAU,EAAK,GAAI,GACvB,EAAG,IAAI,GACP,EAAG,IAAI,GACP,EAAI,IAAI,GACR,EAAI,IAAI,GACR,GAAM,GAAI,EAAO,GAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAE7C,AAAI,CAAC,SAAS,IACd,GAAK,KAAK,GAAI,eAAe,EAAI,GAAG,gBAAgB,EAAI,CAAC,EAAI,GAAG,eAAe,GAC/E,EAAK,KAAK,GAAI,eAAe,EAAI,GAAG,gBAAgB,EAAI,CAAC,EAAI,GAAG,eAAe,GAC/E,EAAK,GAAG,IAAI,GACZ,EAAK,GAAG,IAAI,GACZ,EAAK,IAAG,IAAI,GACZ,EAAK,GAAG,IAAI,GACZ,EAAK,GAAG,IAAI,GACZ,EAAK,IAAG,IAAI,IAGb,GAAI,GAAS,KAAK,OAElB,AAAI,EAAO,SAAW,GACrB,GAAS,CAAC,CACT,MAAO,EACP,MAAO,EAAQ,UAIjB,OAAS,GAAI,EAAG,EAAK,EAAO,OAAQ,EAAI,EAAI,EAAE,EAAG,CAChD,GAAM,IAAQ,EAAO,GACf,EAAQ,GAAM,MACd,EAAQ,GAAM,MAEpB,OAAS,GAAI,EAAO,EAAK,EAAQ,EAAO,EAAI,EAAI,GAAK,EACpD,EAAe,EAAQ,EAAI,GAAI,EAAQ,EAAI,GAAI,EAAQ,EAAI,IAI7D,GAAM,GAAM,GAAI,GACb,EAAO,GAAI,GACR,EAAI,GAAI,GACX,EAAK,GAAI,GAEZ,WAAsB,EAAG,CACxB,EAAE,UAAU,EAAS,EAAI,GACzB,EAAG,KAAK,GACR,GAAM,GAAI,EAAK,GAEf,EAAI,KAAK,GACT,EAAI,IAAI,EAAE,eAAe,EAAE,IAAI,KAAK,YAEpC,EAAK,aAAa,EAAI,GAEtB,GAAM,GAAI,AADG,EAAK,IAAI,EAAK,IACV,EAAM,GAAO,EAC9B,EAAS,EAAI,GAAK,EAAI,EACtB,EAAS,EAAI,EAAI,GAAK,EAAI,EAC1B,EAAS,EAAI,EAAI,GAAK,EAAI,EAC1B,EAAS,EAAI,EAAI,GAAK,EAGvB,OAAS,GAAI,EAAG,EAAK,EAAO,OAAQ,EAAI,EAAI,EAAE,EAAG,CAChD,GAAM,IAAQ,EAAO,GACf,EAAQ,GAAM,MACd,EAAQ,GAAM,MAEpB,OAAS,GAAI,EAAO,EAAK,EAAQ,EAAO,EAAI,EAAI,GAAK,EACpD,EAAa,EAAQ,EAAI,IACzB,EAAa,EAAQ,EAAI,IACzB,EAAa,EAAQ,EAAI,KAK5B,sBAAuB,CACtB,GAAM,GAAQ,KAAK,MACb,EAAoB,KAAK,aAAa,YAE5C,GAAI,IAAsB,OAAW,CACpC,GAAI,GAAkB,KAAK,aAAa,UAExC,GAAI,IAAoB,OACvB,EAAkB,GAAI,IAAgB,GAAI,cAAa,EAAkB,MAAQ,GAAI,GACrF,KAAK,aAAa,SAAU,OAG5B,QAAS,GAAI,EAAG,EAAK,EAAgB,MAAO,EAAI,EAAI,IACnD,EAAgB,OAAO,EAAG,EAAG,EAAG,GAIlC,GAAM,GAAK,GAAI,GACZ,EAAK,GAAI,GACT,EAAK,GAAI,GACN,EAAK,GAAI,GACZ,EAAK,GAAI,GACT,EAAK,GAAI,GACN,EAAK,GAAI,GACZ,EAAK,GAAI,GAEZ,GAAI,EACH,OAAS,GAAI,EAAG,EAAK,EAAM,MAAO,EAAI,EAAI,GAAK,EAAG,CACjD,GAAM,GAAK,EAAM,KAAK,EAAI,GACpB,EAAK,EAAM,KAAK,EAAI,GACpB,EAAK,EAAM,KAAK,EAAI,GAC1B,EAAG,oBAAoB,EAAmB,GAC1C,EAAG,oBAAoB,EAAmB,GAC1C,EAAG,oBAAoB,EAAmB,GAC1C,EAAG,WAAW,EAAI,GAClB,EAAG,WAAW,EAAI,GAClB,EAAG,MAAM,GACT,EAAG,oBAAoB,EAAiB,GACxC,EAAG,oBAAoB,EAAiB,GACxC,EAAG,oBAAoB,EAAiB,GACxC,EAAG,IAAI,GACP,EAAG,IAAI,GACP,EAAG,IAAI,GACP,EAAgB,OAAO,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1C,EAAgB,OAAO,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1C,EAAgB,OAAO,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,OAI3C,QAAS,GAAI,EAAG,EAAK,EAAkB,MAAO,EAAI,EAAI,GAAK,EAC1D,EAAG,oBAAoB,EAAmB,EAAI,GAC9C,EAAG,oBAAoB,EAAmB,EAAI,GAC9C,EAAG,oBAAoB,EAAmB,EAAI,GAC9C,EAAG,WAAW,EAAI,GAClB,EAAG,WAAW,EAAI,GAClB,EAAG,MAAM,GACT,EAAgB,OAAO,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7C,EAAgB,OAAO,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7C,EAAgB,OAAO,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAI/C,KAAK,mBACL,EAAgB,YAAc,IAIhC,MAAM,EAAU,EAAQ,CACvB,GAAI,CAAE,IAAY,EAAS,kBAAmB,CAC7C,QAAQ,MAAM,kFAAmF,GACjG,OAGD,AAAI,IAAW,QACd,GAAS,EACT,QAAQ,KAAK,2JAGd,GAAM,GAAa,KAAK,WAExB,OAAW,KAAO,GAAY,CAC7B,GAAI,EAAS,WAAW,KAAS,OAAW,SAE5C,GAAM,GAAkB,AADL,EAAW,GACK,MAC7B,EAAa,EAAS,WAAW,GACjC,EAAkB,EAAW,MAC7B,EAAkB,EAAW,SAAW,EACxC,EAAS,KAAK,IAAI,EAAgB,OAAQ,EAAgB,OAAS,GAEzE,OAAS,GAAI,EAAG,EAAI,EAAiB,EAAI,EAAQ,IAAK,IACrD,EAAgB,GAAK,EAAgB,GAIvC,MAAO,MAGR,kBAAmB,CAClB,GAAM,GAAU,KAAK,WAAW,OAEhC,OAAS,GAAI,EAAG,EAAK,EAAQ,MAAO,EAAI,EAAI,IAC3C,GAAU,oBAAoB,EAAS,GAEvC,GAAU,YAEV,EAAQ,OAAO,EAAG,GAAU,EAAG,GAAU,EAAG,GAAU,GAIxD,cAAe,CACd,WAAgC,EAAW,EAAS,CACnD,GAAM,GAAQ,EAAU,MAClB,EAAW,EAAU,SACrB,EAAa,EAAU,WACvB,EAAS,GAAI,GAAM,YAAY,EAAQ,OAAS,GAClD,EAAQ,EACV,EAAS,EAEX,OAAS,GAAI,EAAG,EAAI,EAAQ,OAAQ,EAAI,EAAG,IAAK,CAC/C,AAAI,EAAU,6BACb,EAAQ,EAAQ,GAAK,EAAU,KAAK,OAAS,EAAU,OAEvD,EAAQ,EAAQ,GAAK,EAGtB,OAAS,GAAI,EAAG,EAAI,EAAU,IAC7B,EAAO,KAAY,EAAM,KAI3B,MAAO,IAAI,IAAgB,EAAQ,EAAU,GAI9C,GAAI,KAAK,QAAU,KAClB,eAAQ,KAAK,+EACN,KAGR,GAAM,GAAY,GAAI,IAChB,EAAU,KAAK,MAAM,MACrB,EAAa,KAAK,WAExB,OAAW,KAAQ,GAAY,CAC9B,GAAM,GAAY,EAAW,GACvB,EAAe,EAAuB,EAAW,GACvD,EAAU,aAAa,EAAM,GAI9B,GAAM,GAAkB,KAAK,gBAE7B,OAAW,KAAQ,GAAiB,CACnC,GAAM,GAAa,GACb,EAAiB,EAAgB,GAEvC,OAAS,GAAI,EAAG,EAAK,EAAe,OAAQ,EAAI,EAAI,IAAK,CACxD,GAAM,GAAY,EAAe,GAC3B,EAAe,EAAuB,EAAW,GACvD,EAAW,KAAK,GAGjB,EAAU,gBAAgB,GAAQ,EAGnC,EAAU,qBAAuB,KAAK,qBAEtC,GAAM,GAAS,KAAK,OAEpB,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,IAAK,CAC9C,GAAM,GAAQ,EAAO,GACrB,EAAU,SAAS,EAAM,MAAO,EAAM,MAAO,EAAM,eAGpD,MAAO,GAGR,QAAS,CACR,GAAM,GAAO,CACZ,SAAU,CACT,QAAS,IACT,KAAM,iBACN,UAAW,0BASb,GALA,EAAK,KAAO,KAAK,KACjB,EAAK,KAAO,KAAK,KACb,KAAK,OAAS,IAAI,GAAK,KAAO,KAAK,MACnC,OAAO,KAAK,KAAK,UAAU,OAAS,GAAG,GAAK,SAAW,KAAK,UAE5D,KAAK,aAAe,OAAW,CAClC,GAAM,GAAa,KAAK,WAExB,OAAW,KAAO,GACjB,AAAI,EAAW,KAAS,QAAW,GAAK,GAAO,EAAW,IAG3D,MAAO,GAIR,EAAK,KAAO,CACX,WAAY,IAEb,GAAM,GAAQ,KAAK,MAEnB,AAAI,IAAU,MACb,GAAK,KAAK,MAAQ,CACjB,KAAM,EAAM,MAAM,YAAY,KAC9B,MAAO,MAAM,UAAU,MAAM,KAAK,EAAM,SAI1C,GAAM,GAAa,KAAK,WAExB,OAAW,KAAO,GAAY,CAC7B,GAAM,GAAY,EAAW,GAC7B,EAAK,KAAK,WAAW,GAAO,EAAU,OAAO,EAAK,MAGnD,GAAM,GAAkB,GACpB,EAAqB,GAEzB,OAAW,KAAO,MAAK,gBAAiB,CACvC,GAAM,GAAiB,KAAK,gBAAgB,GACtC,EAAQ,GAEd,OAAS,GAAI,EAAG,EAAK,EAAe,OAAQ,EAAI,EAAI,IAAK,CACxD,GAAM,GAAY,EAAe,GACjC,EAAM,KAAK,EAAU,OAAO,EAAK,OAGlC,AAAI,EAAM,OAAS,GAClB,GAAgB,GAAO,EACvB,EAAqB,IAIvB,AAAI,GACH,GAAK,KAAK,gBAAkB,EAC5B,EAAK,KAAK,qBAAuB,KAAK,sBAGvC,GAAM,GAAS,KAAK,OAEpB,AAAI,EAAO,OAAS,GACnB,GAAK,KAAK,OAAS,KAAK,MAAM,KAAK,UAAU,KAG9C,GAAM,GAAiB,KAAK,eAE5B,MAAI,KAAmB,MACtB,GAAK,KAAK,eAAiB,CAC1B,OAAQ,EAAe,OAAO,UAC9B,OAAQ,EAAe,SAIlB,EAGR,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,MAGpC,KAAK,EAAQ,CAEZ,KAAK,MAAQ,KACb,KAAK,WAAa,GAClB,KAAK,gBAAkB,GACvB,KAAK,OAAS,GACd,KAAK,YAAc,KACnB,KAAK,eAAiB,KAEtB,GAAM,GAAO,GAEb,KAAK,KAAO,EAAO,KAEnB,GAAM,GAAQ,EAAO,MAErB,AAAI,IAAU,MACb,KAAK,SAAS,EAAM,MAAM,IAI3B,GAAM,GAAa,EAAO,WAE1B,OAAW,KAAQ,GAAY,CAC9B,GAAM,GAAY,EAAW,GAC7B,KAAK,aAAa,EAAM,EAAU,MAAM,IAIzC,GAAM,GAAkB,EAAO,gBAE/B,OAAW,KAAQ,GAAiB,CACnC,GAAM,GAAQ,GACR,EAAiB,EAAgB,GAEvC,OAAS,GAAI,EAAG,EAAI,EAAe,OAAQ,EAAI,EAAG,IACjD,EAAM,KAAK,EAAe,GAAG,MAAM,IAGpC,KAAK,gBAAgB,GAAQ,EAG9B,KAAK,qBAAuB,EAAO,qBAEnC,GAAM,GAAS,EAAO,OAEtB,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,IAAK,CAC9C,GAAM,GAAQ,EAAO,GACrB,KAAK,SAAS,EAAM,MAAO,EAAM,MAAO,EAAM,eAI/C,GAAM,GAAc,EAAO,YAE3B,AAAI,IAAgB,MACnB,MAAK,YAAc,EAAY,SAIhC,GAAM,GAAiB,EAAO,eAE9B,MAAI,KAAmB,MACtB,MAAK,eAAiB,EAAe,SAItC,KAAK,UAAU,MAAQ,EAAO,UAAU,MACxC,KAAK,UAAU,MAAQ,EAAO,UAAU,MAExC,KAAK,SAAW,EAAO,SAEnB,EAAO,aAAe,QAAW,MAAK,WAAa,OAAO,OAAO,GAAI,EAAO,aACzE,KAGR,SAAU,CACT,KAAK,cAAc,CAClB,KAAM,aAMT,GAAe,UAAU,iBAAmB,GAE5C,GAAM,IAAgC,GAAI,IAEpC,GAAsB,GAAI,IAE1B,GAAyB,GAAI,IAE7B,GAAqB,GAAI,GAEzB,GAAqB,GAAI,GAEzB,GAAqB,GAAI,GAEzB,GAAsB,GAAI,GAE1B,GAAsB,GAAI,GAE1B,GAAsB,GAAI,GAE1B,GAAuB,GAAI,GAE3B,GAAuB,GAAI,GAE3B,GAAuB,GAAI,GAE3B,GAAsB,GAAI,IAE1B,GAAsB,GAAI,IAE1B,GAAsB,GAAI,IAE1B,GAAkC,GAAI,GAEtC,GAAuC,GAAI,GAEjD,gBAAmB,GAAS,CAC3B,YAAY,EAAW,GAAI,IAAkB,EAAW,GAAI,IAAqB,CAChF,QACA,KAAK,KAAO,OACZ,KAAK,SAAW,EAChB,KAAK,SAAW,EAChB,KAAK,qBAGN,KAAK,EAAQ,CACZ,aAAM,KAAK,GAEP,EAAO,wBAA0B,QACpC,MAAK,sBAAwB,EAAO,sBAAsB,SAGvD,EAAO,wBAA0B,QACpC,MAAK,sBAAwB,OAAO,OAAO,GAAI,EAAO,wBAGvD,KAAK,SAAW,EAAO,SACvB,KAAK,SAAW,EAAO,SAChB,KAGR,oBAAqB,CACpB,GAAM,GAAW,KAAK,SAEtB,GAAI,EAAS,iBAAkB,CAC9B,GAAM,GAAkB,EAAS,gBAC3B,EAAO,OAAO,KAAK,GAEzB,GAAI,EAAK,OAAS,EAAG,CACpB,GAAM,GAAiB,EAAgB,EAAK,IAE5C,GAAI,IAAmB,OAAW,CACjC,KAAK,sBAAwB,GAC7B,KAAK,sBAAwB,GAE7B,OAAS,GAAI,EAAG,EAAK,EAAe,OAAQ,EAAI,EAAI,IAAK,CACxD,GAAM,GAAO,EAAe,GAAG,MAAQ,OAAO,GAC9C,KAAK,sBAAsB,KAAK,GAChC,KAAK,sBAAsB,GAAQ,SAIhC,CACN,GAAM,GAAe,EAAS,aAE9B,AAAI,IAAiB,QAAa,EAAa,OAAS,GACvD,QAAQ,MAAM,yGAKjB,QAAQ,EAAW,EAAY,CAC9B,GAAM,GAAW,KAAK,SAChB,EAAW,KAAK,SAChB,EAAc,KAAK,YAgBzB,GAfI,IAAa,QAEb,GAAS,iBAAmB,MAAM,EAAS,wBAE/C,GAAU,KAAK,EAAS,gBAExB,GAAU,aAAa,GAEnB,EAAU,IAAI,iBAAiB,MAAe,KAElD,IAAiB,KAAK,GAAa,SAEnC,GAAO,KAAK,EAAU,KAAK,aAAa,IAGpC,EAAS,cAAgB,MACxB,GAAO,cAAc,EAAS,eAAiB,IAAO,OAG3D,GAAI,GAEJ,GAAI,EAAS,iBAAkB,CAC9B,GAAM,GAAQ,EAAS,MACjB,EAAW,EAAS,WAAW,SAC/B,EAAgB,EAAS,gBAAgB,SACzC,EAAuB,EAAS,qBAChC,EAAK,EAAS,WAAW,GACzB,EAAM,EAAS,WAAW,IAC1B,EAAS,EAAS,OAClB,EAAY,EAAS,UAE3B,GAAI,IAAU,KAEb,GAAI,MAAM,QAAQ,GACjB,OAAS,GAAI,EAAG,EAAK,EAAO,OAAQ,EAAI,EAAI,IAAK,CAChD,GAAM,GAAQ,EAAO,GACf,EAAgB,EAAS,EAAM,eAC/B,EAAQ,KAAK,IAAI,EAAM,MAAO,EAAU,OACxC,EAAM,KAAK,IAAI,EAAM,MAAO,KAAK,IAAI,EAAM,MAAQ,EAAM,MAAO,EAAU,MAAQ,EAAU,QAElG,OAAS,GAAI,EAAO,EAAK,EAAK,EAAI,EAAI,GAAK,EAAG,CAC7C,GAAM,GAAI,EAAM,KAAK,GACf,EAAI,EAAM,KAAK,EAAI,GACnB,EAAI,EAAM,KAAK,EAAI,GACzB,EAAe,GAAgC,KAAM,EAAe,EAAW,GAAQ,EAAU,EAAe,EAAsB,EAAI,EAAK,EAAG,EAAG,GAEjJ,GACH,GAAa,UAAY,KAAK,MAAM,EAAI,GAExC,EAAa,KAAK,cAAgB,EAAM,cACxC,EAAW,KAAK,SAIb,CACN,GAAM,GAAQ,KAAK,IAAI,EAAG,EAAU,OAC9B,EAAM,KAAK,IAAI,EAAM,MAAO,EAAU,MAAQ,EAAU,OAE9D,OAAS,GAAI,EAAO,EAAK,EAAK,EAAI,EAAI,GAAK,EAAG,CAC7C,GAAM,GAAI,EAAM,KAAK,GACf,EAAI,EAAM,KAAK,EAAI,GACnB,EAAI,EAAM,KAAK,EAAI,GACzB,EAAe,GAAgC,KAAM,EAAU,EAAW,GAAQ,EAAU,EAAe,EAAsB,EAAI,EAAK,EAAG,EAAG,GAE5I,GACH,GAAa,UAAY,KAAK,MAAM,EAAI,GAExC,EAAW,KAAK,aAIT,IAAa,OAEvB,GAAI,MAAM,QAAQ,GACjB,OAAS,GAAI,EAAG,EAAK,EAAO,OAAQ,EAAI,EAAI,IAAK,CAChD,GAAM,GAAQ,EAAO,GACf,EAAgB,EAAS,EAAM,eAC/B,EAAQ,KAAK,IAAI,EAAM,MAAO,EAAU,OACxC,EAAM,KAAK,IAAI,EAAS,MAAO,KAAK,IAAI,EAAM,MAAQ,EAAM,MAAO,EAAU,MAAQ,EAAU,QAErG,OAAS,GAAI,EAAO,EAAK,EAAK,EAAI,EAAI,GAAK,EAAG,CAC7C,GAAM,GAAI,EACJ,EAAI,EAAI,EACR,EAAI,EAAI,EACd,EAAe,GAAgC,KAAM,EAAe,EAAW,GAAQ,EAAU,EAAe,EAAsB,EAAI,EAAK,EAAG,EAAG,GAEjJ,GACH,GAAa,UAAY,KAAK,MAAM,EAAI,GAExC,EAAa,KAAK,cAAgB,EAAM,cACxC,EAAW,KAAK,SAIb,CACN,GAAM,GAAQ,KAAK,IAAI,EAAG,EAAU,OAC9B,EAAM,KAAK,IAAI,EAAS,MAAO,EAAU,MAAQ,EAAU,OAEjE,OAAS,GAAI,EAAO,EAAK,EAAK,EAAI,EAAI,GAAK,EAAG,CAC7C,GAAM,GAAI,EACJ,EAAI,EAAI,EACR,EAAI,EAAI,EACd,EAAe,GAAgC,KAAM,EAAU,EAAW,GAAQ,EAAU,EAAe,EAAsB,EAAI,EAAK,EAAG,EAAG,GAE5I,GACH,GAAa,UAAY,KAAK,MAAM,EAAI,GAExC,EAAW,KAAK,UAKd,AAAI,GAAS,YACnB,QAAQ,MAAM,8FAMjB,GAAK,UAAU,OAAS,GAExB,YAA2B,EAAQ,EAAU,EAAW,EAAK,EAAI,EAAI,EAAI,EAAO,CAC/E,GAAI,GAQJ,GANA,AAAI,EAAS,OAAS,GACrB,EAAY,EAAI,kBAAkB,EAAI,EAAI,EAAI,GAAM,GAEpD,EAAY,EAAI,kBAAkB,EAAI,EAAI,EAAI,EAAS,OAAS,GAAY,GAGzE,IAAc,KAAM,MAAO,MAE/B,GAAwB,KAAK,GAE7B,GAAwB,aAAa,EAAO,aAE5C,GAAM,GAAW,EAAU,IAAI,OAAO,WAAW,IACjD,MAAI,GAAW,EAAU,MAAQ,EAAW,EAAU,IAAY,KAC3D,CACN,SAAU,EACV,MAAO,GAAwB,QAC/B,OAAQ,GAIV,YAAyC,EAAQ,EAAU,EAAW,EAAK,EAAU,EAAe,EAAsB,EAAI,EAAK,EAAG,EAAG,EAAG,CAC3I,GAAM,oBAAoB,EAAU,GAEpC,GAAM,oBAAoB,EAAU,GAEpC,GAAM,oBAAoB,EAAU,GAEpC,GAAM,GAAkB,EAAO,sBAE/B,GAAI,GAAiB,EAAiB,CACrC,GAAQ,IAAI,EAAG,EAAG,GAElB,GAAQ,IAAI,EAAG,EAAG,GAElB,GAAQ,IAAI,EAAG,EAAG,GAElB,OAAS,GAAI,EAAG,EAAK,EAAc,OAAQ,EAAI,EAAI,IAAK,CACvD,GAAM,GAAY,EAAgB,GAC5B,EAAiB,EAAc,GACrC,AAAI,IAAc,GAElB,IAAO,oBAAoB,EAAgB,GAE3C,GAAO,oBAAoB,EAAgB,GAE3C,GAAO,oBAAoB,EAAgB,GAE3C,AAAI,EACH,IAAQ,gBAAgB,GAAQ,GAEhC,GAAQ,gBAAgB,GAAQ,GAEhC,GAAQ,gBAAgB,GAAQ,IAEhC,IAAQ,gBAAgB,GAAO,IAAI,IAAQ,GAE3C,GAAQ,gBAAgB,GAAO,IAAI,IAAQ,GAE3C,GAAQ,gBAAgB,GAAO,IAAI,IAAQ,KAI7C,GAAM,IAAI,IAEV,GAAM,IAAI,IAEV,GAAM,IAAI,IAGX,AAAI,EAAO,eACV,GAAO,cAAc,EAAG,IACxB,EAAO,cAAc,EAAG,IACxB,EAAO,cAAc,EAAG,KAGzB,GAAM,GAAe,GAAkB,EAAQ,EAAU,EAAW,EAAK,GAAO,GAAO,GAAO,IAE9F,GAAI,EAAc,CACjB,AAAI,GACH,IAAO,oBAAoB,EAAI,GAE/B,GAAO,oBAAoB,EAAI,GAE/B,GAAO,oBAAoB,EAAI,GAE/B,EAAa,GAAK,GAAS,MAAM,GAAoB,GAAO,GAAO,GAAO,GAAQ,GAAQ,GAAQ,GAAI,MAGnG,GACH,IAAO,oBAAoB,EAAK,GAEhC,GAAO,oBAAoB,EAAK,GAEhC,GAAO,oBAAoB,EAAK,GAEhC,EAAa,IAAM,GAAS,MAAM,GAAoB,GAAO,GAAO,GAAO,GAAQ,GAAQ,GAAQ,GAAI,MAGxG,GAAM,GAAO,CACZ,EAAG,EACH,EAAG,EACH,EAAG,EACH,OAAQ,GAAI,GACZ,cAAe,GAEhB,GAAS,UAAU,GAAO,GAAO,GAAO,EAAK,QAC7C,EAAa,KAAO,EAGrB,MAAO,GAGR,gBAA0B,GAAe,CACxC,YAAY,EAAQ,EAAG,EAAS,EAAG,EAAQ,EAAG,EAAgB,EAAG,EAAiB,EAAG,EAAgB,EAAG,CACvG,QACA,KAAK,KAAO,cACZ,KAAK,WAAa,CACjB,MAAO,EACP,OAAQ,EACR,MAAO,EACP,cAAe,EACf,eAAgB,EAChB,cAAe,GAEhB,GAAM,GAAQ,KAEd,EAAgB,KAAK,MAAM,GAC3B,EAAiB,KAAK,MAAM,GAC5B,EAAgB,KAAK,MAAM,GAE3B,GAAM,GAAU,GACV,EAAW,GACX,EAAU,GACV,EAAM,GAER,EAAmB,EACnB,EAAa,EAEjB,EAAW,IAAK,IAAK,IAAK,GAAI,GAAI,EAAO,EAAQ,EAAO,EAAe,EAAgB,GAEvF,EAAW,IAAK,IAAK,IAAK,EAAG,GAAI,EAAO,EAAQ,CAAC,EAAO,EAAe,EAAgB,GAEvF,EAAW,IAAK,IAAK,IAAK,EAAG,EAAG,EAAO,EAAO,EAAQ,EAAe,EAAe,GAEpF,EAAW,IAAK,IAAK,IAAK,EAAG,GAAI,EAAO,EAAO,CAAC,EAAQ,EAAe,EAAe,GAEtF,EAAW,IAAK,IAAK,IAAK,EAAG,GAAI,EAAO,EAAQ,EAAO,EAAe,EAAgB,GAEtF,EAAW,IAAK,IAAK,IAAK,GAAI,GAAI,EAAO,EAAQ,CAAC,EAAO,EAAe,EAAgB,GAGxF,KAAK,SAAS,GACd,KAAK,aAAa,WAAY,GAAI,IAAuB,EAAU,IACnE,KAAK,aAAa,SAAU,GAAI,IAAuB,EAAS,IAChE,KAAK,aAAa,KAAM,GAAI,IAAuB,EAAK,IAExD,WAAoB,EAAG,EAAG,EAAG,EAAM,EAAM,EAAO,EAAQ,EAAO,EAAO,EAAO,EAAe,CAC3F,GAAM,GAAe,EAAQ,EACvB,EAAgB,EAAS,EACzB,GAAY,EAAQ,EACpB,EAAa,EAAS,EACtB,EAAY,EAAQ,EACpB,EAAS,EAAQ,EACjB,EAAS,EAAQ,EACnB,GAAgB,EAChB,GAAa,EACX,GAAS,GAAI,GAEnB,OAAS,IAAK,EAAG,GAAK,EAAQ,KAAM,CACnC,GAAM,IAAI,GAAK,EAAgB,EAE/B,OAAS,IAAK,EAAG,GAAK,EAAQ,KAAM,CACnC,GAAM,IAAI,GAAK,EAAe,GAE9B,GAAO,GAAK,GAAI,EAChB,GAAO,GAAK,GAAI,EAChB,GAAO,GAAK,EAEZ,EAAS,KAAK,GAAO,EAAG,GAAO,EAAG,GAAO,GAEzC,GAAO,GAAK,EACZ,GAAO,GAAK,EACZ,GAAO,GAAK,EAAQ,EAAI,EAAI,GAE5B,EAAQ,KAAK,GAAO,EAAG,GAAO,EAAG,GAAO,GAExC,EAAI,KAAK,GAAK,GACd,EAAI,KAAK,EAAI,GAAK,GAElB,IAAiB,GAQnB,OAAS,IAAK,EAAG,GAAK,EAAO,KAC5B,OAAS,IAAK,EAAG,GAAK,EAAO,KAAM,CAClC,GAAM,IAAI,EAAmB,GAAK,EAAS,GACrC,GAAI,EAAmB,GAAK,EAAU,IAAK,GAC3C,GAAI,EAAoB,IAAK,GAAK,EAAU,IAAK,GACjD,GAAI,EAAoB,IAAK,GAAK,EAAS,GAEjD,EAAQ,KAAK,GAAG,GAAG,IACnB,EAAQ,KAAK,GAAG,GAAG,IAEnB,IAAc,EAKhB,EAAM,SAAS,EAAY,GAAY,GAEvC,GAAc,GAEd,GAAoB,UAIf,UAAS,EAAM,CACrB,MAAO,IAAI,IAAY,EAAK,MAAO,EAAK,OAAQ,EAAK,MAAO,EAAK,cAAe,EAAK,eAAgB,EAAK,gBAQ5G,YAAuB,EAAK,CAC3B,GAAM,GAAM,GAEZ,OAAW,KAAK,GAAK,CACpB,EAAI,GAAK,GAET,OAAW,KAAK,GAAI,GAAI,CACvB,GAAM,GAAW,EAAI,GAAG,GAExB,AAAI,GAAa,GAAS,SAAW,EAAS,WAAa,EAAS,WAAa,EAAS,WAAa,EAAS,WAAa,EAAS,WAAa,EAAS,WAAa,EAAS,cACjL,EAAI,GAAG,GAAK,EAAS,QACf,AAAI,MAAM,QAAQ,GACxB,EAAI,GAAG,GAAK,EAAS,QAErB,EAAI,GAAG,GAAK,GAKf,MAAO,GAER,YAAuB,EAAU,CAChC,GAAM,GAAS,GAEf,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CACzC,GAAM,GAAM,GAAc,EAAS,IAEnC,OAAW,KAAK,GACf,EAAO,GAAK,EAAI,GAIlB,MAAO,GAGR,GAAM,IAAgB,CACrB,MAAO,GACP,MAAO,IAGR,GAAI,IAAiB;AAAA;AAAA,GAEjB,GAAmB;AAAA;AAAA,GAiBvB,gBAA6B,GAAS,CACrC,YAAY,EAAY,CACvB,QACA,KAAK,KAAO,iBACZ,KAAK,QAAU,GACf,KAAK,SAAW,GAChB,KAAK,aAAe,GACpB,KAAK,eAAiB,GACtB,KAAK,UAAY,EACjB,KAAK,UAAY,GACjB,KAAK,mBAAqB,EAC1B,KAAK,IAAM,GAEX,KAAK,OAAS,GAEd,KAAK,SAAW,GAEhB,KAAK,WAAa,CACjB,YAAa,GAEb,UAAW,GAEX,YAAa,GAEb,iBAAkB,IAKnB,KAAK,uBAAyB,CAC7B,MAAS,CAAC,EAAG,EAAG,GAChB,GAAM,CAAC,EAAG,GACV,IAAO,CAAC,EAAG,IAEZ,KAAK,oBAAsB,OAC3B,KAAK,mBAAqB,GAC1B,KAAK,YAAc,KAEf,IAAe,QACd,GAAW,aAAe,QAC7B,QAAQ,MAAM,2FAGf,KAAK,UAAU,IAIjB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,eAAiB,EAAO,eAC7B,KAAK,aAAe,EAAO,aAC3B,KAAK,SAAW,GAAc,EAAO,UACrC,KAAK,QAAU,OAAO,OAAO,GAAI,EAAO,SACxC,KAAK,UAAY,EAAO,UACxB,KAAK,mBAAqB,EAAO,mBACjC,KAAK,OAAS,EAAO,OACrB,KAAK,SAAW,EAAO,SACvB,KAAK,WAAa,OAAO,OAAO,GAAI,EAAO,YAC3C,KAAK,YAAc,EAAO,YACnB,KAGR,OAAO,EAAM,CACZ,GAAM,GAAO,MAAM,OAAO,GAC1B,EAAK,YAAc,KAAK,YACxB,EAAK,SAAW,GAEhB,OAAW,KAAQ,MAAK,SAAU,CAEjC,GAAM,GAAQ,AADE,KAAK,SAAS,GACR,MAEtB,AAAI,GAAS,EAAM,UAClB,EAAK,SAAS,GAAQ,CACrB,KAAM,IACN,MAAO,EAAM,OAAO,GAAM,MAErB,AAAI,GAAS,EAAM,QACzB,EAAK,SAAS,GAAQ,CACrB,KAAM,IACN,MAAO,EAAM,UAER,AAAI,GAAS,EAAM,UACzB,EAAK,SAAS,GAAQ,CACrB,KAAM,KACN,MAAO,EAAM,WAER,AAAI,GAAS,EAAM,UACzB,EAAK,SAAS,GAAQ,CACrB,KAAM,KACN,MAAO,EAAM,WAER,AAAI,GAAS,EAAM,UACzB,EAAK,SAAS,GAAQ,CACrB,KAAM,KACN,MAAO,EAAM,WAER,AAAI,GAAS,EAAM,UACzB,EAAK,SAAS,GAAQ,CACrB,KAAM,KACN,MAAO,EAAM,WAER,AAAI,GAAS,EAAM,UACzB,EAAK,SAAS,GAAQ,CACrB,KAAM,KACN,MAAO,EAAM,WAGd,EAAK,SAAS,GAAQ,CACrB,MAAO,GAKV,AAAI,OAAO,KAAK,KAAK,SAAS,OAAS,GAAG,GAAK,QAAU,KAAK,SAC9D,EAAK,aAAe,KAAK,aACzB,EAAK,eAAiB,KAAK,eAC3B,GAAM,GAAa,GAEnB,OAAW,KAAO,MAAK,WACtB,AAAI,KAAK,WAAW,KAAS,IAAM,GAAW,GAAO,IAGtD,MAAI,QAAO,KAAK,GAAY,OAAS,GAAG,GAAK,WAAa,GACnD,GAKT,GAAe,UAAU,iBAAmB,GAE5C,gBAAqB,GAAS,CAC7B,aAAc,CACb,QACA,KAAK,KAAO,SACZ,KAAK,mBAAqB,GAAI,IAC9B,KAAK,iBAAmB,GAAI,IAC5B,KAAK,wBAA0B,GAAI,IAGpC,KAAK,EAAQ,EAAW,CACvB,aAAM,KAAK,EAAQ,GACnB,KAAK,mBAAmB,KAAK,EAAO,oBACpC,KAAK,iBAAiB,KAAK,EAAO,kBAClC,KAAK,wBAAwB,KAAK,EAAO,yBAClC,KAGR,kBAAkB,EAAQ,CACzB,KAAK,kBAAkB,GAAM,IAC7B,GAAM,GAAI,KAAK,YAAY,SAC3B,MAAO,GAAO,IAAI,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,KAAK,YAGzC,kBAAkB,EAAO,CACxB,MAAM,kBAAkB,GACxB,KAAK,mBAAmB,KAAK,KAAK,aAAa,SAGhD,kBAAkB,EAAe,EAAgB,CAChD,MAAM,kBAAkB,EAAe,GACvC,KAAK,mBAAmB,KAAK,KAAK,aAAa,SAGhD,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,OAKrC,GAAO,UAAU,SAAW,GAE5B,gBAAgC,GAAO,CACtC,YAAY,EAAM,GAAI,EAAS,EAAG,EAAO,GAAK,EAAM,IAAM,CACzD,QACA,KAAK,KAAO,oBACZ,KAAK,IAAM,EACX,KAAK,KAAO,EACZ,KAAK,KAAO,EACZ,KAAK,IAAM,EACX,KAAK,MAAQ,GACb,KAAK,OAAS,EACd,KAAK,KAAO,KACZ,KAAK,UAAY,GAEjB,KAAK,WAAa,EAElB,KAAK,yBAGN,KAAK,EAAQ,EAAW,CACvB,aAAM,KAAK,EAAQ,GACnB,KAAK,IAAM,EAAO,IAClB,KAAK,KAAO,EAAO,KACnB,KAAK,KAAO,EAAO,KACnB,KAAK,IAAM,EAAO,IAClB,KAAK,MAAQ,EAAO,MACpB,KAAK,OAAS,EAAO,OACrB,KAAK,KAAO,EAAO,OAAS,KAAO,KAAO,OAAO,OAAO,GAAI,EAAO,MACnE,KAAK,UAAY,EAAO,UACxB,KAAK,WAAa,EAAO,WAClB,KAYR,eAAe,EAAa,CAE3B,GAAM,GAAe,GAAM,KAAK,gBAAkB,EAClD,KAAK,IAAM,GAAU,EAAI,KAAK,KAAK,GACnC,KAAK,yBAON,gBAAiB,CAChB,GAAM,GAAe,KAAK,IAAI,GAAU,GAAM,KAAK,KACnD,MAAO,IAAM,KAAK,gBAAkB,EAGrC,iBAAkB,CACjB,MAAO,IAAU,EAAI,KAAK,KAAK,KAAK,IAAI,GAAU,GAAM,KAAK,KAAO,KAAK,MAG1E,cAAe,CAEd,MAAO,MAAK,UAAY,KAAK,IAAI,KAAK,OAAQ,GAG/C,eAAgB,CAEf,MAAO,MAAK,UAAY,KAAK,IAAI,KAAK,OAAQ,GAuC/C,cAAc,EAAW,EAAY,EAAG,EAAG,EAAO,EAAQ,CACzD,KAAK,OAAS,EAAY,EAEtB,KAAK,OAAS,MACjB,MAAK,KAAO,CACX,QAAS,GACT,UAAW,EACX,WAAY,EACZ,QAAS,EACT,QAAS,EACT,MAAO,EACP,OAAQ,IAIV,KAAK,KAAK,QAAU,GACpB,KAAK,KAAK,UAAY,EACtB,KAAK,KAAK,WAAa,EACvB,KAAK,KAAK,QAAU,EACpB,KAAK,KAAK,QAAU,EACpB,KAAK,KAAK,MAAQ,EAClB,KAAK,KAAK,OAAS,EACnB,KAAK,yBAGN,iBAAkB,CACjB,AAAI,KAAK,OAAS,MACjB,MAAK,KAAK,QAAU,IAGrB,KAAK,yBAGN,wBAAyB,CACxB,GAAM,GAAO,KAAK,KACd,EAAM,EAAO,KAAK,IAAI,GAAU,GAAM,KAAK,KAAO,KAAK,KACvD,EAAS,EAAI,EACb,EAAQ,KAAK,OAAS,EACtB,EAAO,IAAO,EACZ,EAAO,KAAK,KAElB,GAAI,KAAK,OAAS,MAAQ,KAAK,KAAK,QAAS,CAC5C,GAAM,GAAY,EAAK,UACpB,EAAa,EAAK,WACrB,GAAQ,EAAK,QAAU,EAAQ,EAC/B,GAAO,EAAK,QAAU,EAAS,EAC/B,GAAS,EAAK,MAAQ,EACtB,GAAU,EAAK,OAAS,EAGzB,GAAM,GAAO,KAAK,WAClB,AAAI,IAAS,GAAG,IAAQ,EAAO,EAAO,KAAK,gBAC3C,KAAK,iBAAiB,gBAAgB,EAAM,EAAO,EAAO,EAAK,EAAM,EAAQ,EAAM,KAAK,KACxF,KAAK,wBAAwB,KAAK,KAAK,kBAAkB,SAG1D,OAAO,EAAM,CACZ,GAAM,GAAO,MAAM,OAAO,GAC1B,SAAK,OAAO,IAAM,KAAK,IACvB,EAAK,OAAO,KAAO,KAAK,KACxB,EAAK,OAAO,KAAO,KAAK,KACxB,EAAK,OAAO,IAAM,KAAK,IACvB,EAAK,OAAO,MAAQ,KAAK,MACzB,EAAK,OAAO,OAAS,KAAK,OACtB,KAAK,OAAS,MAAM,GAAK,OAAO,KAAO,OAAO,OAAO,GAAI,KAAK,OAClE,EAAK,OAAO,UAAY,KAAK,UAC7B,EAAK,OAAO,WAAa,KAAK,WACvB,GAKT,GAAkB,UAAU,oBAAsB,GAElD,GAAM,IAAM,GACT,GAAS,EAEZ,gBAAyB,GAAS,CACjC,YAAY,EAAM,EAAK,EAAc,CACpC,QAGA,GAFA,KAAK,KAAO,aAER,EAAa,0BAA4B,GAAM,CAClD,QAAQ,MAAM,0GACd,OAGD,KAAK,aAAe,EACpB,GAAM,GAAW,GAAI,IAAkB,GAAK,GAAQ,EAAM,GAC1D,EAAS,OAAS,KAAK,OACvB,EAAS,GAAG,IAAI,EAAG,GAAI,GACvB,EAAS,OAAO,GAAI,GAAQ,EAAG,EAAG,IAClC,KAAK,IAAI,GACT,GAAM,GAAW,GAAI,IAAkB,GAAK,GAAQ,EAAM,GAC1D,EAAS,OAAS,KAAK,OACvB,EAAS,GAAG,IAAI,EAAG,GAAI,GACvB,EAAS,OAAO,GAAI,GAAQ,GAAI,EAAG,IACnC,KAAK,IAAI,GACT,GAAM,GAAW,GAAI,IAAkB,GAAK,GAAQ,EAAM,GAC1D,EAAS,OAAS,KAAK,OACvB,EAAS,GAAG,IAAI,EAAG,EAAG,GACtB,EAAS,OAAO,GAAI,GAAQ,EAAG,EAAG,IAClC,KAAK,IAAI,GACT,GAAM,GAAW,GAAI,IAAkB,GAAK,GAAQ,EAAM,GAC1D,EAAS,OAAS,KAAK,OACvB,EAAS,GAAG,IAAI,EAAG,EAAG,IACtB,EAAS,OAAO,GAAI,GAAQ,EAAG,GAAI,IACnC,KAAK,IAAI,GACT,GAAM,GAAW,GAAI,IAAkB,GAAK,GAAQ,EAAM,GAC1D,EAAS,OAAS,KAAK,OACvB,EAAS,GAAG,IAAI,EAAG,GAAI,GACvB,EAAS,OAAO,GAAI,GAAQ,EAAG,EAAG,IAClC,KAAK,IAAI,GACT,GAAM,GAAW,GAAI,IAAkB,GAAK,GAAQ,EAAM,GAC1D,EAAS,OAAS,KAAK,OACvB,EAAS,GAAG,IAAI,EAAG,GAAI,GACvB,EAAS,OAAO,GAAI,GAAQ,EAAG,EAAG,KAClC,KAAK,IAAI,GAGV,OAAO,EAAU,EAAO,CACvB,AAAI,KAAK,SAAW,MAAM,KAAK,oBAC/B,GAAM,GAAe,KAAK,aACpB,CAAC,EAAU,EAAU,EAAU,EAAU,EAAU,GAAY,KAAK,SACpE,EAAmB,EAAS,GAAG,QAC/B,EAAsB,EAAS,kBACrC,EAAS,GAAG,QAAU,GACtB,GAAM,GAAkB,EAAa,QAAQ,gBAC7C,EAAa,QAAQ,gBAAkB,GACvC,EAAS,gBAAgB,EAAc,GACvC,EAAS,OAAO,EAAO,GACvB,EAAS,gBAAgB,EAAc,GACvC,EAAS,OAAO,EAAO,GACvB,EAAS,gBAAgB,EAAc,GACvC,EAAS,OAAO,EAAO,GACvB,EAAS,gBAAgB,EAAc,GACvC,EAAS,OAAO,EAAO,GACvB,EAAS,gBAAgB,EAAc,GACvC,EAAS,OAAO,EAAO,GACvB,EAAa,QAAQ,gBAAkB,EACvC,EAAS,gBAAgB,EAAc,GACvC,EAAS,OAAO,EAAO,GACvB,EAAS,gBAAgB,GACzB,EAAS,GAAG,QAAU,GAKxB,gBAA0B,GAAQ,CACjC,YAAY,EAAQ,EAAS,EAAO,EAAO,EAAW,EAAW,EAAQ,EAAM,EAAY,EAAU,CACpG,EAAS,IAAW,OAAY,EAAS,GACzC,EAAU,IAAY,OAAY,EAAU,GAC5C,MAAM,EAAQ,EAAS,EAAO,EAAO,EAAW,EAAW,EAAQ,EAAM,EAAY,GACrF,KAAK,MAAQ,MAGV,SAAS,CACZ,MAAO,MAAK,SAGT,QAAO,EAAO,CACjB,KAAK,MAAQ,GAKf,GAAY,UAAU,cAAgB,GAEtC,gBAAoC,GAAkB,CACrD,YAAY,EAAM,EAAS,EAAO,CACjC,AAAI,OAAO,UAAU,IACpB,SAAQ,KAAK,oGACb,EAAU,GAGX,MAAM,EAAM,EAAM,GAClB,EAAU,GAAW,GAOrB,KAAK,QAAU,GAAI,IAAY,OAAW,EAAQ,QAAS,EAAQ,MAAO,EAAQ,MAAO,EAAQ,UAAW,EAAQ,UAAW,EAAQ,OAAQ,EAAQ,KAAM,EAAQ,WAAY,EAAQ,UACzL,KAAK,QAAQ,sBAAwB,GACrC,KAAK,QAAQ,gBAAkB,EAAQ,kBAAoB,OAAY,EAAQ,gBAAkB,GACjG,KAAK,QAAQ,UAAY,EAAQ,YAAc,OAAY,EAAQ,UAAY,GAC/E,KAAK,QAAQ,iBAAmB,GAGjC,2BAA2B,EAAU,EAAS,CAC7C,KAAK,QAAQ,KAAO,EAAQ,KAC5B,KAAK,QAAQ,OAAS,GAEtB,KAAK,QAAQ,SAAW,EAAQ,SAChC,KAAK,QAAQ,gBAAkB,EAAQ,gBACvC,KAAK,QAAQ,UAAY,EAAQ,UACjC,KAAK,QAAQ,UAAY,EAAQ,UACjC,GAAM,GAAS,CACd,SAAU,CACT,UAAW,CACV,MAAO,OAGT,aAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmBK,EAAW,GAAI,IAAY,EAAG,EAAG,GACjC,EAAW,GAAI,IAAe,CACnC,KAAM,sBACN,SAAU,GAAc,EAAO,UAC/B,aAAc,EAAO,aACrB,eAAgB,EAAO,eACvB,KAAM,GACN,SAAU,KAEX,EAAS,SAAS,UAAU,MAAQ,EACpC,GAAM,GAAO,GAAI,IAAK,EAAU,GAC1B,EAAmB,EAAQ,UAEjC,MAAI,GAAQ,YAAc,IAA0B,GAAQ,UAAY,IAExE,AADe,GAAI,IAAW,EAAG,GAAI,MAC9B,OAAO,EAAU,GACxB,EAAQ,UAAY,EACpB,EAAK,SAAS,UACd,EAAK,SAAS,UACP,KAGR,MAAM,EAAU,EAAO,EAAO,EAAS,CACtC,GAAM,GAAsB,EAAS,kBAErC,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,EAAS,gBAAgB,KAAM,GAC/B,EAAS,MAAM,EAAO,EAAO,GAG9B,EAAS,gBAAgB,IAK3B,GAAsB,UAAU,wBAA0B,GAE1D,GAAM,IAAwB,GAAI,GAE5B,GAAwB,GAAI,GAE5B,GAA6B,GAAI,IAEvC,QAAY,CACX,YAAY,EAAS,GAAI,GAAQ,EAAG,EAAG,GAAI,EAAW,EAAG,CAExD,KAAK,OAAS,EACd,KAAK,SAAW,EAGjB,IAAI,EAAQ,EAAU,CACrB,YAAK,OAAO,KAAK,GACjB,KAAK,SAAW,EACT,KAGR,cAAc,EAAG,EAAG,EAAG,EAAG,CACzB,YAAK,OAAO,IAAI,EAAG,EAAG,GACtB,KAAK,SAAW,EACT,KAGR,8BAA8B,EAAQ,EAAO,CAC5C,YAAK,OAAO,KAAK,GACjB,KAAK,SAAW,CAAC,EAAM,IAAI,KAAK,QACzB,KAGR,sBAAsB,EAAG,EAAG,EAAG,CAC9B,GAAM,GAAS,GAAS,WAAW,EAAG,GAAG,MAAM,GAAS,WAAW,EAAG,IAAI,YAG1E,YAAK,8BAA8B,EAAQ,GACpC,KAGR,KAAK,EAAO,CACX,YAAK,OAAO,KAAK,EAAM,QACvB,KAAK,SAAW,EAAM,SACf,KAGR,WAAY,CAEX,GAAM,GAAsB,EAAM,KAAK,OAAO,SAC9C,YAAK,OAAO,eAAe,GAC3B,KAAK,UAAY,EACV,KAGR,QAAS,CACR,YAAK,UAAY,GACjB,KAAK,OAAO,SACL,KAGR,gBAAgB,EAAO,CACtB,MAAO,MAAK,OAAO,IAAI,GAAS,KAAK,SAGtC,iBAAiB,EAAQ,CACxB,MAAO,MAAK,gBAAgB,EAAO,QAAU,EAAO,OAGrD,aAAa,EAAO,EAAQ,CAC3B,MAAO,GAAO,KAAK,KAAK,QAAQ,eAAe,CAAC,KAAK,gBAAgB,IAAQ,IAAI,GAGlF,cAAc,EAAM,EAAQ,CAC3B,GAAM,GAAY,EAAK,MAAM,IACvB,EAAc,KAAK,OAAO,IAAI,GAEpC,GAAI,IAAgB,EAEnB,MAAI,MAAK,gBAAgB,EAAK,SAAW,EACjC,EAAO,KAAK,EAAK,OAIlB,KAGR,GAAM,GAAI,CAAE,GAAK,MAAM,IAAI,KAAK,QAAU,KAAK,UAAY,EAE3D,MAAI,GAAI,GAAK,EAAI,EACT,KAGD,EAAO,KAAK,GAAW,eAAe,GAAG,IAAI,EAAK,OAG1D,eAAe,EAAM,CAEpB,GAAM,GAAY,KAAK,gBAAgB,EAAK,OACtC,EAAU,KAAK,gBAAgB,EAAK,KAC1C,MAAO,GAAY,GAAK,EAAU,GAAK,EAAU,GAAK,EAAY,EAGnE,cAAc,EAAK,CAClB,MAAO,GAAI,gBAAgB,MAG5B,iBAAiB,EAAQ,CACxB,MAAO,GAAO,gBAAgB,MAG/B,cAAc,EAAQ,CACrB,MAAO,GAAO,KAAK,KAAK,QAAQ,eAAe,CAAC,KAAK,UAGtD,aAAa,EAAQ,EAAsB,CAC1C,GAAM,GAAe,GAAwB,GAAc,gBAAgB,GAErE,EAAiB,KAAK,cAAc,IAAU,aAAa,GAC3D,EAAS,KAAK,OAAO,aAAa,GAAc,YACtD,YAAK,SAAW,CAAC,EAAe,IAAI,GAC7B,KAGR,UAAU,EAAQ,CACjB,YAAK,UAAY,EAAO,IAAI,KAAK,QAC1B,KAGR,OAAO,EAAO,CACb,MAAO,GAAM,OAAO,OAAO,KAAK,SAAW,EAAM,WAAa,KAAK,SAGpE,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,OAKrC,GAAM,UAAU,QAAU,GAE1B,GAAM,IAAyB,GAAI,IAE7B,GAAyB,GAAI,GAEnC,QAAc,CACb,YAAY,EAAK,GAAI,IAAS,EAAK,GAAI,IAAS,EAAK,GAAI,IAAS,EAAK,GAAI,IAAS,EAAK,GAAI,IAAS,EAAK,GAAI,IAAS,CACvH,KAAK,OAAS,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,GAGpC,IAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,CAC3B,GAAM,GAAS,KAAK,OACpB,SAAO,GAAG,KAAK,GACf,EAAO,GAAG,KAAK,GACf,EAAO,GAAG,KAAK,GACf,EAAO,GAAG,KAAK,GACf,EAAO,GAAG,KAAK,GACf,EAAO,GAAG,KAAK,GACR,KAGR,KAAK,EAAS,CACb,GAAM,GAAS,KAAK,OAEpB,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,EAAO,GAAG,KAAK,EAAQ,OAAO,IAG/B,MAAO,MAGR,wBAAwB,EAAG,CAC1B,GAAM,GAAS,KAAK,OACd,EAAK,EAAE,SACP,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACN,EAAM,EAAG,GACZ,EAAM,EAAG,GACT,EAAO,EAAG,IACV,EAAO,EAAG,IACP,EAAO,EAAG,IACb,EAAO,EAAG,IACV,EAAO,EAAG,IACV,EAAO,EAAG,IACb,SAAO,GAAG,cAAc,EAAM,EAAK,EAAM,EAAK,EAAO,EAAK,EAAO,GAAM,YACvE,EAAO,GAAG,cAAc,EAAM,EAAK,EAAM,EAAK,EAAO,EAAK,EAAO,GAAM,YACvE,EAAO,GAAG,cAAc,EAAM,EAAK,EAAM,EAAK,EAAO,EAAK,EAAO,GAAM,YACvE,EAAO,GAAG,cAAc,EAAM,EAAK,EAAM,EAAK,EAAO,EAAK,EAAO,GAAM,YACvE,EAAO,GAAG,cAAc,EAAM,EAAK,EAAM,EAAK,EAAO,EAAM,EAAO,GAAM,YACxE,EAAO,GAAG,cAAc,EAAM,EAAK,EAAM,EAAK,EAAO,EAAM,EAAO,GAAM,YACjE,KAGR,iBAAiB,EAAQ,CACxB,GAAM,GAAW,EAAO,SACxB,MAAI,GAAS,iBAAmB,MAAM,EAAS,wBAE/C,GAAU,KAAK,EAAS,gBAAgB,aAAa,EAAO,aAErD,KAAK,iBAAiB,IAG9B,iBAAiB,EAAQ,CACxB,UAAU,OAAO,IAAI,EAAG,EAAG,GAE3B,GAAU,OAAS,kBAEnB,GAAU,aAAa,EAAO,aAEvB,KAAK,iBAAiB,IAG9B,iBAAiB,EAAQ,CACxB,GAAM,GAAS,KAAK,OACd,EAAS,EAAO,OAChB,EAAY,CAAC,EAAO,OAE1B,OAAS,GAAI,EAAG,EAAI,EAAG,IAGtB,GAAI,AAFa,EAAO,GAAG,gBAAgB,GAE5B,EACd,MAAO,GAIT,MAAO,GAGR,cAAc,EAAK,CAClB,GAAM,GAAS,KAAK,OAEpB,OAAS,GAAI,EAAG,EAAI,EAAG,IAAK,CAC3B,GAAM,GAAQ,EAAO,GAMrB,GAJA,GAAU,EAAI,EAAM,OAAO,EAAI,EAAI,EAAI,IAAI,EAAI,EAAI,IAAI,EACvD,GAAU,EAAI,EAAM,OAAO,EAAI,EAAI,EAAI,IAAI,EAAI,EAAI,IAAI,EACvD,GAAU,EAAI,EAAM,OAAO,EAAI,EAAI,EAAI,IAAI,EAAI,EAAI,IAAI,EAEnD,EAAM,gBAAgB,IAAa,EACtC,MAAO,GAIT,MAAO,GAGR,cAAc,EAAO,CACpB,GAAM,GAAS,KAAK,OAEpB,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,GAAI,EAAO,GAAG,gBAAgB,GAAS,EACtC,MAAO,GAIT,MAAO,GAGR,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,OAKrC,aAA0B,CACzB,GAAI,GAAU,KACV,EAAc,GACd,EAAgB,KAChB,EAAY,KAEhB,WAA0B,EAAM,EAAO,CACtC,EAAc,EAAM,GACpB,EAAY,EAAQ,sBAAsB,GAG3C,MAAO,CACN,MAAO,UAAY,CAClB,AAAI,IAAgB,IAChB,IAAkB,MACtB,GAAY,EAAQ,sBAAsB,GAC1C,EAAc,KAEf,KAAM,UAAY,CACjB,EAAQ,qBAAqB,GAC7B,EAAc,IAEf,iBAAkB,SAAU,EAAU,CACrC,EAAgB,GAEjB,WAAY,SAAU,EAAO,CAC5B,EAAU,IAKb,YAAyB,EAAI,EAAc,CAC1C,GAAM,GAAW,EAAa,SACxB,EAAU,GAAI,SAEpB,WAAsB,EAAW,EAAY,CAC5C,GAAM,GAAQ,EAAU,MAClB,EAAQ,EAAU,MAClB,EAAS,EAAG,eAClB,EAAG,WAAW,EAAY,GAC1B,EAAG,WAAW,EAAY,EAAO,GACjC,EAAU,mBACV,GAAI,GAAO,EAAG,MAEd,MAAI,aAAiB,cACpB,EAAO,EAAG,MACJ,AAAI,YAAiB,cAC3B,QAAQ,KAAK,wEACP,AAAI,YAAiB,aAC3B,AAAI,EAAU,yBACb,AAAI,EACH,EAAO,EAAG,WAEV,QAAQ,KAAK,2EAGd,EAAO,EAAG,eAEL,AAAI,YAAiB,YAC3B,EAAO,EAAG,MACJ,AAAI,YAAiB,aAC3B,EAAO,EAAG,aACJ,AAAI,YAAiB,YAC3B,EAAO,EAAG,IACJ,AAAI,YAAiB,WAC3B,EAAO,EAAG,KACJ,AAAI,aAAiB,aAEjB,YAAiB,qBAC3B,GAAO,EAAG,eAGJ,CACN,OAAQ,EACR,KAAM,EACN,gBAAiB,EAAM,kBACvB,QAAS,EAAU,SAIrB,WAAsB,EAAQ,EAAW,EAAY,CACpD,GAAM,GAAQ,EAAU,MAClB,EAAc,EAAU,YAC9B,EAAG,WAAW,EAAY,GAE1B,AAAI,EAAY,QAAU,GAEzB,EAAG,cAAc,EAAY,EAAG,GAEhC,CAAI,EACH,EAAG,cAAc,EAAY,EAAY,OAAS,EAAM,kBAAmB,EAAO,EAAY,OAAQ,EAAY,OAElH,EAAG,cAAc,EAAY,EAAY,OAAS,EAAM,kBAAmB,EAAM,SAAS,EAAY,OAAQ,EAAY,OAAS,EAAY,QAGhJ,EAAY,MAAQ,IAKtB,WAAa,EAAW,CACvB,MAAI,GAAU,8BAA8B,GAAY,EAAU,MAC3D,EAAQ,IAAI,GAGpB,WAAgB,EAAW,CAC1B,AAAI,EAAU,8BAA8B,GAAY,EAAU,MAClE,GAAM,GAAO,EAAQ,IAAI,GAEzB,AAAI,GACH,GAAG,aAAa,EAAK,QACrB,EAAQ,OAAO,IAIjB,WAAgB,EAAW,EAAY,CACtC,GAAI,EAAU,oBAAqB,CAClC,GAAM,GAAS,EAAQ,IAAI,GAE3B,AAAI,EAAC,GAAU,EAAO,QAAU,EAAU,UACzC,EAAQ,IAAI,EAAW,CACtB,OAAQ,EAAU,OAClB,KAAM,EAAU,KAChB,gBAAiB,EAAU,YAC3B,QAAS,EAAU,UAIrB,OAGD,AAAI,EAAU,8BAA8B,GAAY,EAAU,MAClE,GAAM,GAAO,EAAQ,IAAI,GAEzB,AAAI,IAAS,OACZ,EAAQ,IAAI,EAAW,EAAa,EAAW,IACrC,EAAK,QAAU,EAAU,SACnC,GAAa,EAAK,OAAQ,EAAW,GACrC,EAAK,QAAU,EAAU,SAI3B,MAAO,CACN,IAAK,EACL,OAAQ,EACR,OAAQ,GAIV,gBAA4B,GAAe,CAC1C,YAAY,EAAQ,EAAG,EAAS,EAAG,EAAgB,EAAG,EAAiB,EAAG,CACzE,QACA,KAAK,KAAO,gBACZ,KAAK,WAAa,CACjB,MAAO,EACP,OAAQ,EACR,cAAe,EACf,eAAgB,GAEjB,GAAM,GAAa,EAAQ,EACrB,EAAc,EAAS,EACvB,EAAQ,KAAK,MAAM,GACnB,EAAQ,KAAK,MAAM,GACnB,EAAS,EAAQ,EACjB,EAAS,EAAQ,EACjB,EAAgB,EAAQ,EACxB,EAAiB,EAAS,EAE1B,EAAU,GACV,EAAW,GACX,EAAU,GACV,EAAM,GAEZ,OAAS,GAAK,EAAG,EAAK,EAAQ,IAAM,CACnC,GAAM,GAAI,EAAK,EAAiB,EAEhC,OAAS,GAAK,EAAG,EAAK,EAAQ,IAAM,CACnC,GAAM,GAAI,EAAK,EAAgB,EAC/B,EAAS,KAAK,EAAG,CAAC,EAAG,GACrB,EAAQ,KAAK,EAAG,EAAG,GACnB,EAAI,KAAK,EAAK,GACd,EAAI,KAAK,EAAI,EAAK,IAIpB,OAAS,GAAK,EAAG,EAAK,EAAO,IAC5B,OAAS,GAAK,EAAG,EAAK,EAAO,IAAM,CAClC,GAAM,GAAI,EAAK,EAAS,EAClB,EAAI,EAAK,EAAU,GAAK,GACxB,EAAI,EAAK,EAAI,EAAU,GAAK,GAC5B,EAAI,EAAK,EAAI,EAAS,EAC5B,EAAQ,KAAK,EAAG,EAAG,GACnB,EAAQ,KAAK,EAAG,EAAG,GAIrB,KAAK,SAAS,GACd,KAAK,aAAa,WAAY,GAAI,IAAuB,EAAU,IACnE,KAAK,aAAa,SAAU,GAAI,IAAuB,EAAS,IAChE,KAAK,aAAa,KAAM,GAAI,IAAuB,EAAK,UAGlD,UAAS,EAAM,CACrB,MAAO,IAAI,IAAc,EAAK,MAAO,EAAK,OAAQ,EAAK,cAAe,EAAK,iBAK7E,GAAI,IAAoB;AAAA;AAAA,QAEpB,GAAyB;AAAA;AAAA,QAEzB,GAAqB;AAAA;AAAA,QAErB,GAA0B;AAAA;AAAA,QAE1B,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEjB,GAAsB;AAAA;AAAA;AAAA,QAEtB,GAAe,uCAEf,GAAqB;AAAA;AAAA;AAAA,QAErwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAExB,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAE3B,GAAgC;AAAA;AAAA;AAAA,QAEhC,GAA8B;AAAA;AAAA,QAE9B,GAAyB;AAAA;AAAA,QAEzB,GAAiB;AAAA;AAAA;AAAA;AAAA,QAEjB,GAAsB;AAAA;AAAA;AAAA;AAAA,QAEtB,GAAoB;AAAA;AAAA;AAAA;AAAA,QAEpB,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEfuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEvB,GAA8B;AAAA;AAAA;AAAA;AAAA,QAE9B,GAAyB;AAAA;AAAA,QAEzB,GAAuB;AAAA;AAAA;AAAA;AAAA,QAEvB,GAA4B;AAAA;AAAA,QAE5B,GAAqB,sDAErB,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAE1B,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAElB,GAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAE9B,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEvB,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAErB,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEhB,GAAa;AAAA;AAAA,QAEb,GAAkB;AAAA;AAAA,QAElB,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEf,GAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEpB,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAE5B,GAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEpB,GAAyB;AAAA;AAAA;AAAA,QAEzB,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAExB,GAAopB,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEhC,GAAuB;AAAA,2CAEvB,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAE5B,GAAwB;AAAA;AAAA;AAAA;AAAA,+CAExB,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAE7B,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAE3B,GAAghC,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAExB,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEvB,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,QAEtB,GAAuB;AAAA;AAAA,QAEvB,GAA4B;AAAA;AAAA;AAAA;AAAA,QAE5B,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAE1B,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAErB,GAAe;AAAA;AAAA;AAAA;AAAA,QAEf,GAAoB;AAAA;AAAA,QAEpB,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAExB,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAE7B,GAAwB;AAAA;AAAA;AAAA;AAAA,QAExB,GAA6B;AAAA;AAAA,QAE7B,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAErB,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAE1B,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAErB,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAExB,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEvB,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEvB,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAErB,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEhB,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAE1B,GAAkC;AAAA;AAAA,QAElC,GAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEjC,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAE1B,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAElB,GAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEV,GAA+B;AAAA;AAAA,QAE/B,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEjB,GAAqB;AAAA;AAAA,QAErB,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAE1B,GAAwB;AAAA;AAAA;AAAA;AAAA,QAExwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAExB,GAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEnB,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAE3B,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,QAElB,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEvB,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAElB,GAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEpB,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEvB,GAA4B;AAAA;AAAA,QAE5B,GAAuB;AAAA;AAAA,QAEvB,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAE5B,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAExB,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAE7B,GAAmB;AAAA;AAAA,QAEnB,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEjB,GAAY;AAAA;AAAA,QAEZ,GAAoB;AAAA;AAAA,QAEpB,GAAkB;AAAA;AAAA;AAAA;AAAA,QAElB,GAAa;AAAA;AAAA,QAEb,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAkDtB,GAAM,IAAc,CACnB,kBAAmB,GACnB,uBAAwB,GACxB,mBAAoB,GACpB,wBAAyB,GACzB,eAAgB,GAChB,oBAAqB,GACrB,aAAc,GACd,mBAAoB,GACpB,MAAO,GACP,sBAAuB,GACvB,yBAA0B,GAC1B,8BAA+B,GAC/B,4BAA6B,GAC7B,uBAAwB,GACxB,eAAgB,GAChB,oBAAqB,GACrB,kBAAmB,GACnB,aAAc,GACd,OAAQ,GACR,4BAA6B,GAC7B,qBAAsB,GACtB,4BAA6B,GAC7B,uBAAwB,GACxB,qBAAsB,GACtB,0BAA2B,GAC3B,mBAAoB,GACpB,wBAAyB,GACzB,gBAAiB,GACjB,4BAA6B,GAC7B,qBAAsB,GACtB,mBAAoB,GACpB,8BAA+B,GAC/B,cAAe,GACf,WAAY,GACZ,gBAAiB,GACjB,aAAc,GACd,kBAAmB,GACnB,0BAA2B,GAC3B,kBAAmB,GACnB,uBAAwB,GACxB,sBAAuB,GACvB,kBAAmB,GACnB,qBAAsB,GACtB,0BAA2B,GAC3B,sBAAuB,GACvB,2BAA4B,GAC5B,yBAA0B,GAC1B,8BAA+B,GAC/B,sBAAuB,GACvB,qBAAsB,GACtB,oBAAqB,GACrB,qBAAsB,GACtB,0BAA2B,GAC3B,wBAAyB,GACzB,mBAAoB,GACpB,aAAc,GACd,kBAAmB,GACnB,sBAAuB,GACvB,2BAA4B,GAC5B,sBAAuB,GACvB,2BAA4B,GAC5B,mBAAoB,GACpB,wBAAyB,GACzB,mBAAoB,GACpB,sBAAuB,GACvB,qBAAsB,GACtB,qBAAsB,GACtB,mBAAoB,GACpB,cAAe,GACf,wBAAyB,GACzB,gCAAiC,GACjC,+BAAgC,GAChC,wBAAyB,GACzB,gBAAiB,GACjB,QAAS,GACT,6BAA8B,GAC9B,eAAgB,GAChB,mBAAoB,GACpB,wBAAyB,GACzB,sBAAuB,GACvB,2BAA4B,GAC5B,wBAAyB,GACzB,sBAAuB,GACvB,iBAAkB,GAClB,yBAA0B,GAC1B,gBAAiB,GACjB,qBAAsB,GACtB,gBAAiB,GACjB,kBAAmB,GACnB,qBAAsB,GACtB,0BAA2B,GAC3B,qBAAsB,GACtB,0BAA2B,GAC3B,sBAAuB,GACvB,2BAA4B,GAC5B,iBAAkB,GAClB,eAAgB,GAChB,UAAW,GACX,kBAAmB,GACnB,gBAAiB,GACjB,WAAY,GACZ,gBAAiB,GACjB,gBAvJgB;AAAA;AAAA;AAAA;AAAA;AAAA,GAwJhB,gBAvJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAwJlB,UAtJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAuJhB,UAtJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAuJlB,WArJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAsJhB,WArJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAsJlB,kBApJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAqJhB,kBApJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAqJlB,cAnJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAoJhB,cAnJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAoJlB,gBAlJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAmJhB,gBAlJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAmJlB,eAjJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAkJhB,eAjJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAkJlB,iBAhJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAiJhB,iBAhJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAiJlB,gBA/IgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAgJhB,gBA/IkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAgJlB,gBA9IgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA+IhB,gBA9IkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA+IlB,eA7IgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA8IhB,eA7IkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA8IlB,kBA5IgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA6IhB,kBA5IkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA6IlB,cA3IgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA4IhB,cA3IkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA4IlB,YA1IgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA2IhB,YA1IkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA2IlB,YAzIgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA0IhB,YAzIkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA0IlB,YAxIgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAyIhB,YAxIkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA+Ib,GAAc,CACnB,OAAQ,CACP,QAAS,CACR,MAAO,GAAI,IAAM,WAElB,QAAS,CACR,MAAO,GAER,IAAK,CACJ,MAAO,MAER,YAAa,CACZ,MAAO,GAAI,KAEZ,aAAc,CACb,MAAO,GAAI,KAEZ,SAAU,CACT,MAAO,MAER,UAAW,CACV,MAAO,IAGT,YAAa,CACZ,YAAa,CACZ,MAAO,OAGT,OAAQ,CACP,OAAQ,CACP,MAAO,MAER,WAAY,CACX,MAAO,IAER,aAAc,CACb,MAAO,GAGR,IAAK,CACJ,MAAO,KAGR,gBAAiB,CAChB,MAAO,KAER,YAAa,CACZ,MAAO,IAGT,MAAO,CACN,MAAO,CACN,MAAO,MAER,eAAgB,CACf,MAAO,IAGT,SAAU,CACT,SAAU,CACT,MAAO,MAER,kBAAmB,CAClB,MAAO,IAGT,YAAa,CACZ,YAAa,CACZ,MAAO,OAGT,QAAS,CACR,QAAS,CACR,MAAO,MAER,UAAW,CACV,MAAO,IAGT,UAAW,CACV,UAAW,CACV,MAAO,MAER,YAAa,CACZ,MAAO,GAAI,IAAQ,EAAG,KAGxB,gBAAiB,CAChB,gBAAiB,CAChB,MAAO,MAER,kBAAmB,CAClB,MAAO,GAER,iBAAkB,CACjB,MAAO,IAGT,aAAc,CACb,aAAc,CACb,MAAO,OAGT,aAAc,CACb,aAAc,CACb,MAAO,OAGT,YAAa,CACZ,YAAa,CACZ,MAAO,OAGT,IAAK,CACJ,WAAY,CACX,MAAO,OAER,QAAS,CACR,MAAO,GAER,OAAQ,CACP,MAAO,KAER,SAAU,CACT,MAAO,GAAI,IAAM,YAGnB,OAAQ,CACP,kBAAmB,CAClB,MAAO,IAER,WAAY,CACX,MAAO,IAER,kBAAmB,CAClB,MAAO,GACP,WAAY,CACX,UAAW,GACX,MAAO,KAGT,wBAAyB,CACxB,MAAO,GACP,WAAY,CACX,WAAY,GACZ,iBAAkB,GAClB,aAAc,GACd,cAAe,KAGjB,qBAAsB,CACrB,MAAO,IAER,wBAAyB,CACxB,MAAO,IAER,WAAY,CACX,MAAO,GACP,WAAY,CACX,MAAO,GACP,SAAU,GACV,UAAW,GACX,SAAU,GACV,QAAS,GACT,YAAa,GACb,MAAO,KAGT,iBAAkB,CACjB,MAAO,GACP,WAAY,CACX,WAAY,GACZ,iBAAkB,GAClB,aAAc,GACd,cAAe,KAGjB,cAAe,CACd,MAAO,IAER,iBAAkB,CACjB,MAAO,IAER,YAAa,CACZ,MAAO,GACP,WAAY,CACX,MAAO,GACP,SAAU,GACV,MAAO,GACP,SAAU,KAGZ,kBAAmB,CAClB,MAAO,GACP,WAAY,CACX,WAAY,GACZ,iBAAkB,GAClB,aAAc,GACd,cAAe,GACf,iBAAkB,GAClB,gBAAiB,KAGnB,eAAgB,CACf,MAAO,IAER,kBAAmB,CAClB,MAAO,IAER,iBAAkB,CACjB,MAAO,GACP,WAAY,CACX,UAAW,GACX,SAAU,GACV,YAAa,KAIf,eAAgB,CACf,MAAO,GACP,WAAY,CACX,MAAO,GACP,SAAU,GACV,MAAO,GACP,OAAQ,KAGV,MAAO,CACN,MAAO,MAER,MAAO,CACN,MAAO,OAGT,OAAQ,CACP,QAAS,CACR,MAAO,GAAI,IAAM,WAElB,QAAS,CACR,MAAO,GAER,KAAM,CACL,MAAO,GAER,MAAO,CACN,MAAO,GAER,IAAK,CACJ,MAAO,MAER,SAAU,CACT,MAAO,MAER,UAAW,CACV,MAAO,GAER,YAAa,CACZ,MAAO,GAAI,MAGb,OAAQ,CACP,QAAS,CACR,MAAO,GAAI,IAAM,WAElB,QAAS,CACR,MAAO,GAER,OAAQ,CACP,MAAO,GAAI,IAAQ,GAAK,KAEzB,SAAU,CACT,MAAO,GAER,IAAK,CACJ,MAAO,MAER,SAAU,CACT,MAAO,MAER,UAAW,CACV,MAAO,GAER,YAAa,CACZ,MAAO,GAAI,OAKR,GAAY,CACjB,MAAO,CACN,SAAU,GAAc,CAAC,GAAY,OAAQ,GAAY,YAAa,GAAY,OAAQ,GAAY,MAAO,GAAY,SAAU,GAAY,MAC/I,aAAc,GAAY,eAC1B,eAAgB,GAAY,gBAE7B,QAAS,CACR,SAAU,GAAc,CAAC,GAAY,OAAQ,GAAY,YAAa,GAAY,OAAQ,GAAY,MAAO,GAAY,SAAU,GAAY,YAAa,GAAY,IAAK,GAAY,OAAQ,CAChM,SAAU,CACT,MAAO,GAAI,IAAM,OAGnB,aAAc,GAAY,iBAC1B,eAAgB,GAAY,kBAE7B,MAAO,CACN,SAAU,GAAc,CAAC,GAAY,OAAQ,GAAY,YAAa,GAAY,OAAQ,GAAY,MAAO,GAAY,SAAU,GAAY,YAAa,GAAY,QAAS,GAAY,UAAW,GAAY,gBAAiB,GAAY,IAAK,GAAY,OAAQ,CACzQ,SAAU,CACT,MAAO,GAAI,IAAM,IAElB,SAAU,CACT,MAAO,GAAI,IAAM,UAElB,UAAW,CACV,MAAO,OAGT,aAAc,GAAY,eAC1B,eAAgB,GAAY,gBAE7B,SAAU,CACT,SAAU,GAAc,CAAC,GAAY,OAAQ,GAAY,OAAQ,GAAY,MAAO,GAAY,SAAU,GAAY,YAAa,GAAY,QAAS,GAAY,UAAW,GAAY,gBAAiB,GAAY,aAAc,GAAY,aAAc,GAAY,IAAK,GAAY,OAAQ,CACpS,SAAU,CACT,MAAO,GAAI,IAAM,IAElB,UAAW,CACV,MAAO,GAER,UAAW,CACV,MAAO,GAER,gBAAiB,CAChB,MAAO,MAIT,aAAc,GAAY,kBAC1B,eAAgB,GAAY,mBAE7B,KAAM,CACL,SAAU,GAAc,CAAC,GAAY,OAAQ,GAAY,MAAO,GAAY,SAAU,GAAY,YAAa,GAAY,QAAS,GAAY,UAAW,GAAY,gBAAiB,GAAY,YAAa,GAAY,IAAK,GAAY,OAAQ,CACrP,SAAU,CACT,MAAO,GAAI,IAAM,OAGnB,aAAc,GAAY,cAC1B,eAAgB,GAAY,eAE7B,OAAQ,CACP,SAAU,GAAc,CAAC,GAAY,OAAQ,GAAY,QAAS,GAAY,UAAW,GAAY,gBAAiB,GAAY,IAAK,CACtI,OAAQ,CACP,MAAO,SAGT,aAAc,GAAY,gBAC1B,eAAgB,GAAY,iBAE7B,OAAQ,CACP,SAAU,GAAc,CAAC,GAAY,OAAQ,GAAY,MACzD,aAAc,GAAY,YAC1B,eAAgB,GAAY,aAE7B,OAAQ,CACP,SAAU,GAAc,CAAC,GAAY,OAAQ,GAAY,IAAK,CAC7D,MAAO,CACN,MAAO,GAER,SAAU,CACT,MAAO,GAER,UAAW,CACV,MAAO,MAGT,aAAc,GAAY,gBAC1B,eAAgB,GAAY,iBAE7B,MAAO,CACN,SAAU,GAAc,CAAC,GAAY,OAAQ,GAAY,kBACzD,aAAc,GAAY,WAC1B,eAAgB,GAAY,YAE7B,OAAQ,CACP,SAAU,GAAc,CAAC,GAAY,OAAQ,GAAY,QAAS,GAAY,UAAW,GAAY,gBAAiB,CACrH,QAAS,CACR,MAAO,MAGT,aAAc,GAAY,gBAC1B,eAAgB,GAAY,iBAE7B,OAAQ,CACP,SAAU,GAAc,CAAC,GAAY,OAAQ,GAAY,MACzD,aAAc,GAAY,YAC1B,eAAgB,GAAY,aAE7B,WAAY,CACX,SAAU,CACT,YAAa,CACZ,MAAO,GAAI,KAEZ,IAAK,CACJ,MAAO,OAGT,aAAc,GAAY,gBAC1B,eAAgB,GAAY,iBAM7B,KAAM,CACL,SAAU,GAAc,CAAC,GAAY,OAAQ,CAC5C,QAAS,CACR,MAAO,MAGT,aAAc,GAAY,UAC1B,eAAgB,GAAY,WAE7B,SAAU,CACT,SAAU,CACT,UAAW,CACV,MAAO,OAGT,aAAc,GAAY,cAC1B,eAAgB,GAAY,eAE7B,aAAc,CACb,SAAU,GAAc,CAAC,GAAY,OAAQ,GAAY,gBAAiB,CACzE,kBAAmB,CAClB,MAAO,GAAI,IAEZ,aAAc,CACb,MAAO,GAER,YAAa,CACZ,MAAO,QAGT,aAAc,GAAY,kBAC1B,eAAgB,GAAY,mBAE7B,OAAQ,CACP,SAAU,GAAc,CAAC,GAAY,OAAQ,GAAY,IAAK,CAC7D,MAAO,CACN,MAAO,GAAI,IAAM,IAElB,QAAS,CACR,MAAO,MAGT,aAAc,GAAY,YAC1B,eAAgB,GAAY,cAG9B,GAAU,SAAW,CACpB,SAAU,GAAc,CAAC,GAAU,SAAS,SAAU,CACrD,UAAW,CACV,MAAO,GAER,aAAc,CACb,MAAO,MAER,mBAAoB,CACnB,MAAO,GAER,sBAAuB,CACtB,MAAO,MAER,qBAAsB,CACrB,MAAO,GAAI,IAAQ,EAAG,IAEvB,mBAAoB,CACnB,MAAO,MAER,MAAO,CACN,MAAO,GAER,UAAW,CACV,MAAO,GAAI,IAAM,IAElB,eAAgB,CACf,MAAO,GAER,aAAc,CACb,MAAO,GAER,gBAAiB,CAChB,MAAO,MAER,wBAAyB,CACxB,MAAO,GAAI,KAEZ,uBAAwB,CACvB,MAAO,MAER,UAAW,CACV,MAAO,GAER,aAAc,CACb,MAAO,MAER,oBAAqB,CACpB,MAAO,GAER,gBAAiB,CAChB,MAAO,GAAI,IAAM,IAElB,kBAAmB,CAClB,MAAO,GAER,qBAAsB,CACrB,MAAO,MAER,aAAc,CACb,MAAO,GAAI,IAAM,EAAG,EAAG,IAExB,gBAAiB,CAChB,MAAO,SAGT,aAAc,GAAY,kBAC1B,eAAgB,GAAY,mBAG7B,YAAyB,EAAU,EAAU,EAAO,EAAS,EAAoB,CAChF,GAAM,GAAa,GAAI,IAAM,GACzB,EAAa,EACb,EACA,EACA,EAAoB,KACpB,EAA2B,EAC3B,EAAqB,KAEzB,WAAgB,EAAY,EAAO,CAClC,GAAI,GAAa,GACb,EAAa,EAAM,UAAY,GAAO,EAAM,WAAa,KAE7D,AAAI,GAAc,EAAW,WAC5B,GAAa,EAAS,IAAI,IAK3B,GAAM,GAAK,EAAS,GACd,EAAU,EAAG,YAAc,EAAG,aAEpC,AAAI,GAAW,EAAQ,uBAAyB,YAC/C,GAAa,MAGd,AAAI,IAAe,KAClB,EAAS,EAAY,GACX,GAAc,EAAW,SACnC,GAAS,EAAY,GACrB,EAAa,IAGV,GAAS,WAAa,IACzB,EAAS,MAAM,EAAS,eAAgB,EAAS,eAAgB,EAAS,kBAG3E,AAAI,GAAe,GAAW,eAAiB,EAAW,UAAY,IACjE,KAAY,QACf,GAAU,GAAI,IAAK,GAAI,IAAY,EAAG,EAAG,GAAI,GAAI,IAAe,CAC/D,KAAM,yBACN,SAAU,GAAc,GAAU,KAAK,UACvC,aAAc,GAAU,KAAK,aAC7B,eAAgB,GAAU,KAAK,eAC/B,KAAM,GACN,UAAW,GACX,WAAY,GACZ,IAAK,MAEN,EAAQ,SAAS,gBAAgB,UACjC,EAAQ,SAAS,gBAAgB,MAEjC,EAAQ,eAAiB,SAAU,EAAU,EAAO,EAAQ,CAC3D,KAAK,YAAY,aAAa,EAAO,cAItC,OAAO,eAAe,EAAQ,SAAU,SAAU,CACjD,IAAK,UAAY,CAChB,MAAO,MAAK,SAAS,OAAO,SAG9B,EAAQ,OAAO,IAGhB,EAAQ,SAAS,SAAS,OAAO,MAAQ,EACzC,EAAQ,SAAS,SAAS,WAAW,MAAQ,EAAW,eAAiB,EAAW,wBAA0B,GAAQ,GAAK,EAEvH,KAAsB,GAAc,IAA6B,EAAW,SAAW,IAAuB,EAAS,cAC1H,GAAQ,SAAS,YAAc,GAC/B,EAAoB,EACpB,EAA2B,EAAW,QACtC,EAAqB,EAAS,aAI/B,EAAW,QAAQ,EAAS,EAAQ,SAAU,EAAQ,SAAU,EAAG,EAAG,OAC5D,GAAc,EAAW,WAC/B,KAAc,QACjB,GAAY,GAAI,IAAK,GAAI,IAAc,EAAG,GAAI,GAAI,IAAe,CAChE,KAAM,qBACN,SAAU,GAAc,GAAU,WAAW,UAC7C,aAAc,GAAU,WAAW,aACnC,eAAgB,GAAU,WAAW,eACrC,KAAM,GACN,UAAW,GACX,WAAY,GACZ,IAAK,MAEN,EAAU,SAAS,gBAAgB,UAEnC,OAAO,eAAe,EAAU,SAAU,MAAO,CAChD,IAAK,UAAY,CAChB,MAAO,MAAK,SAAS,IAAI,SAG3B,EAAQ,OAAO,IAGhB,EAAU,SAAS,SAAS,IAAI,MAAQ,EAEpC,EAAW,mBAAqB,IACnC,EAAW,eAGZ,EAAU,SAAS,SAAS,YAAY,MAAM,KAAK,EAAW,QAE1D,KAAsB,GAAc,IAA6B,EAAW,SAAW,IAAuB,EAAS,cAC1H,GAAU,SAAS,YAAc,GACjC,EAAoB,EACpB,EAA2B,EAAW,QACtC,EAAqB,EAAS,aAI/B,EAAW,QAAQ,EAAW,EAAU,SAAU,EAAU,SAAU,EAAG,EAAG,OAI9E,WAAkB,EAAO,EAAO,CAC/B,EAAM,QAAQ,MAAM,SAAS,EAAM,EAAG,EAAM,EAAG,EAAM,EAAG,EAAO,GAGhE,MAAO,CACN,cAAe,UAAY,CAC1B,MAAO,IAER,cAAe,SAAU,EAAO,EAAQ,EAAG,CAC1C,EAAW,IAAI,GACf,EAAa,EACb,EAAS,EAAY,IAEtB,cAAe,UAAY,CAC1B,MAAO,IAER,cAAe,SAAU,EAAO,CAC/B,EAAa,EACb,EAAS,EAAY,IAEtB,OAAQ,GAIV,YAA4B,EAAI,EAAY,EAAY,EAAc,CACrE,GAAM,GAAsB,EAAG,aAAa,EAAG,oBACzC,EAAY,EAAa,SAAW,KAAO,EAAW,IAAI,2BAC1D,EAAe,EAAa,UAAY,IAAc,KACtD,EAAgB,GAChB,EAAe,EAAmB,MACpC,EAAe,EAEnB,WAAe,EAAQ,EAAU,EAAS,EAAU,GAAO,CAC1D,GAAI,IAAgB,GAEpB,GAAI,EAAc,CACjB,GAAM,IAAQ,EAAgB,EAAU,EAAS,GAEjD,AAAI,IAAiB,IACpB,GAAe,GACf,EAAsB,EAAa,SAGpC,GAAgB,EAAY,EAAU,IAClC,IAAe,EAAU,EAAU,QACjC,CACN,GAAM,IAAY,EAAS,YAAc,GAEzC,AAAI,GAAa,WAAa,EAAS,IAAM,EAAa,UAAY,EAAQ,IAAM,EAAa,YAAc,KAC9G,GAAa,SAAW,EAAS,GACjC,EAAa,QAAU,EAAQ,GAC/B,EAAa,UAAY,GACzB,GAAgB,IAIlB,AAAI,EAAO,kBAAoB,IAC9B,IAAgB,IAGb,KAAU,MACb,EAAW,OAAO,GAAO,EAAG,sBAGzB,IACH,GAAsB,EAAQ,EAAU,EAAS,GAE7C,KAAU,MACb,EAAG,WAAW,EAAG,qBAAsB,EAAW,IAAI,IAAO,SAKhE,YAAmC,CAClC,MAAI,GAAa,SAAiB,EAAG,oBAC9B,EAAU,uBAGlB,WAA+B,EAAK,CACnC,MAAI,GAAa,SAAiB,EAAG,gBAAgB,GAC9C,EAAU,mBAAmB,GAGrC,WAAiC,EAAK,CACrC,MAAI,GAAa,SAAiB,EAAG,kBAAkB,GAChD,EAAU,qBAAqB,GAGvC,WAAyB,EAAU,EAAS,EAAU,CACrD,GAAM,GAAY,EAAS,YAAc,GACrC,GAAa,EAAc,EAAS,IAExC,AAAI,KAAe,QAClB,IAAa,GACb,EAAc,EAAS,IAAM,IAG9B,GAAI,IAAW,GAAW,EAAQ,IAElC,AAAI,KAAa,QAChB,IAAW,GACX,GAAW,EAAQ,IAAM,IAG1B,GAAI,IAAQ,GAAS,GAErB,MAAI,MAAU,QACb,IAAQ,EAAmB,KAC3B,GAAS,GAAa,IAGhB,GAGR,WAA4B,EAAK,CAChC,GAAM,GAAgB,GAChB,EAAoB,GACpB,EAAoB,GAE1B,OAAS,IAAI,EAAG,GAAI,EAAqB,KACxC,EAAc,IAAK,EACnB,EAAkB,IAAK,EACvB,EAAkB,IAAK,EAGxB,MAAO,CAEN,SAAU,KACV,QAAS,KACT,UAAW,GACX,cAAe,EACf,kBAAmB,EACnB,kBAAmB,EACnB,OAAQ,EACR,WAAY,GACZ,MAAO,MAIT,WAAqB,EAAU,EAAO,CACrC,GAAM,GAAmB,EAAa,WAChC,EAAqB,EAAS,WAChC,GAAgB,EAEpB,OAAW,MAAO,GAAoB,CACrC,GAAM,IAAkB,EAAiB,IACnC,GAAoB,EAAmB,IAG7C,GAFI,KAAoB,QACpB,GAAgB,YAAc,IAC9B,GAAgB,OAAS,GAAkB,KAAM,MAAO,GAC5D,KAID,MADI,GAAa,gBAAkB,IAC/B,EAAa,QAAU,EAI5B,WAAmB,EAAU,EAAO,CACnC,GAAM,GAAQ,GACR,EAAa,EAAS,WACxB,GAAgB,EAEpB,OAAW,MAAO,GAAY,CAC7B,GAAM,IAAY,EAAW,IACvB,GAAO,GACb,GAAK,UAAY,GAEb,GAAU,MACb,IAAK,KAAO,GAAU,MAGvB,EAAM,IAAO,GACb,KAGD,EAAa,WAAa,EAC1B,EAAa,cAAgB,GAC7B,EAAa,MAAQ,EAGtB,YAA0B,CACzB,GAAM,GAAgB,EAAa,cAEnC,OAAS,GAAI,EAAG,EAAK,EAAc,OAAQ,EAAI,EAAI,IAClD,EAAc,GAAK,EAIrB,WAAyB,EAAW,CACnC,EAA0B,EAAW,GAGtC,WAAmC,EAAW,EAAkB,CAC/D,GAAM,GAAgB,EAAa,cAC7B,EAAoB,EAAa,kBACjC,GAAoB,EAAa,kBACvC,EAAc,GAAa,EAEvB,EAAkB,KAAe,GACpC,GAAG,wBAAwB,GAC3B,EAAkB,GAAa,GAG5B,GAAkB,KAAe,GAEpC,CADkB,GAAa,SAAW,EAAK,EAAW,IAAI,2BACpD,EAAa,SAAW,sBAAwB,4BAA4B,EAAW,GACjG,GAAkB,GAAa,GAIjC,YAAmC,CAClC,GAAM,GAAgB,EAAa,cAC7B,EAAoB,EAAa,kBAEvC,OAAS,GAAI,EAAG,EAAK,EAAkB,OAAQ,EAAI,EAAI,IACtD,AAAI,EAAkB,KAAO,EAAc,IAC1C,GAAG,yBAAyB,GAC5B,EAAkB,GAAK,GAK1B,WAA6B,EAAO,EAAM,EAAM,EAAY,GAAQ,GAAQ,CAC3E,AAAI,EAAa,WAAa,IAAS,KAAS,EAAG,KAAO,IAAS,EAAG,cACrE,EAAG,qBAAqB,EAAO,EAAM,EAAM,GAAQ,IAEnD,EAAG,oBAAoB,EAAO,EAAM,EAAM,EAAY,GAAQ,IAIhE,WAA+B,EAAQ,EAAU,EAAS,EAAU,CACnE,GAAI,EAAa,WAAa,IAAU,GAAO,iBAAmB,EAAS,4BACtE,EAAW,IAAI,4BAA8B,KAAM,OAGxD,IACA,GAAM,IAAqB,EAAS,WAC9B,GAAoB,EAAQ,gBAC5B,GAAiC,EAAS,uBAEhD,OAAW,MAAQ,IAAmB,CACrC,GAAM,IAAmB,GAAkB,IAE3C,GAAI,GAAiB,UAAY,EAAG,CACnC,GAAI,IAAoB,GAAmB,IAO3C,GALI,KAAsB,QACrB,MAAS,kBAAoB,EAAO,gBAAgB,IAAoB,EAAO,gBAC/E,KAAS,iBAAmB,EAAO,eAAe,IAAoB,EAAO,gBAG9E,KAAsB,OAAW,CACpC,GAAM,IAAa,GAAkB,WAC/B,GAAO,GAAkB,SACzB,GAAY,EAAW,IAAI,IAEjC,GAAI,KAAc,OAAW,SAC7B,GAAM,GAAS,GAAU,OACnB,GAAO,GAAU,KACjB,GAAkB,GAAU,gBAElC,GAAI,GAAkB,6BAA8B,CACnD,GAAM,IAAO,GAAkB,KACzB,GAAS,GAAK,OACd,GAAS,GAAkB,OAEjC,GAAI,IAAQ,GAAK,6BAA8B,CAC9C,OAAS,IAAI,EAAG,GAAI,GAAiB,aAAc,KAClD,EAA0B,GAAiB,SAAW,GAAG,GAAK,kBAG/D,AAAI,EAAO,kBAAoB,IAAQ,EAAS,oBAAsB,QACrE,GAAS,kBAAoB,GAAK,iBAAmB,GAAK,WAG3D,QAAS,IAAI,EAAG,GAAI,GAAiB,aAAc,KAClD,EAAgB,GAAiB,SAAW,IAI9C,EAAG,WAAW,EAAG,aAAc,GAE/B,OAAS,IAAI,EAAG,GAAI,GAAiB,aAAc,KAClD,EAAoB,GAAiB,SAAW,GAAG,GAAO,GAAiB,aAAc,GAAM,GAAY,GAAS,GAAkB,IAAS,GAAO,GAAiB,aAAe,IAAK,QAEtL,CACN,GAAI,GAAkB,2BAA4B,CACjD,OAAS,IAAI,EAAG,GAAI,GAAiB,aAAc,KAClD,EAA0B,GAAiB,SAAW,GAAG,GAAkB,kBAG5E,AAAI,EAAO,kBAAoB,IAAQ,EAAS,oBAAsB,QACrE,GAAS,kBAAoB,GAAkB,iBAAmB,GAAkB,WAGrF,QAAS,IAAI,EAAG,GAAI,GAAiB,aAAc,KAClD,EAAgB,GAAiB,SAAW,IAI9C,EAAG,WAAW,EAAG,aAAc,GAE/B,OAAS,IAAI,EAAG,GAAI,GAAiB,aAAc,KAClD,EAAoB,GAAiB,SAAW,GAAG,GAAO,GAAiB,aAAc,GAAM,GAAY,GAAO,GAAiB,GAAO,GAAiB,aAAe,GAAI,aAGtK,KAAmC,OAAW,CACxD,GAAM,IAAQ,GAA+B,IAE7C,GAAI,KAAU,OACb,OAAQ,GAAM,YACR,GACJ,EAAG,gBAAgB,GAAiB,SAAU,IAC9C,UAEI,GACJ,EAAG,gBAAgB,GAAiB,SAAU,IAC9C,UAEI,GACJ,EAAG,gBAAgB,GAAiB,SAAU,IAC9C,cAGA,EAAG,gBAAgB,GAAiB,SAAU,OAOpD,IAGD,YAAmB,CAClB,IAEA,OAAW,KAAc,GAAe,CACvC,GAAM,GAAa,EAAc,GAEjC,OAAW,KAAa,GAAY,CACnC,GAAM,GAAW,EAAW,GAE5B,OAAW,MAAa,GACvB,EAAwB,EAAS,IAAW,QAC5C,MAAO,GAAS,IAGjB,MAAO,GAAW,GAGnB,MAAO,GAAc,IAIvB,WAAiC,EAAU,CAC1C,GAAI,EAAc,EAAS,MAAQ,OAAW,OAC9C,GAAM,GAAa,EAAc,EAAS,IAE1C,OAAW,KAAa,GAAY,CACnC,GAAM,GAAW,EAAW,GAE5B,OAAW,MAAa,GACvB,EAAwB,EAAS,IAAW,QAC5C,MAAO,GAAS,IAGjB,MAAO,GAAW,GAGnB,MAAO,GAAc,EAAS,IAG/B,WAAgC,EAAS,CACxC,OAAW,KAAc,GAAe,CACvC,GAAM,GAAa,EAAc,GACjC,GAAI,EAAW,EAAQ,MAAQ,OAAW,SAC1C,GAAM,GAAW,EAAW,EAAQ,IAEpC,OAAW,MAAa,GACvB,EAAwB,EAAS,IAAW,QAC5C,MAAO,GAAS,IAGjB,MAAO,GAAW,EAAQ,KAI5B,YAAiB,CAEhB,AADA,KACI,IAAiB,GACrB,GAAe,EACf,EAAsB,EAAa,SAIpC,aAA6B,CAC5B,EAAa,SAAW,KACxB,EAAa,QAAU,KACvB,EAAa,UAAY,GAG1B,MAAO,CACN,MAAO,EACP,MAAO,EACP,kBAAmB,GACnB,QAAS,EACT,wBAAyB,EACzB,uBAAwB,EACxB,eAAgB,EAChB,gBAAiB,EACjB,wBAAyB,GAI3B,YAA6B,EAAI,EAAY,EAAM,EAAc,CAChE,GAAM,GAAW,EAAa,SAC1B,EAEJ,WAAiB,EAAO,CACvB,EAAO,EAGR,WAAgB,EAAO,EAAO,CAC7B,EAAG,WAAW,EAAM,EAAO,GAC3B,EAAK,OAAO,EAAO,EAAM,GAG1B,WAAyB,EAAO,EAAO,EAAW,CACjD,GAAI,IAAc,EAAG,OACrB,GAAI,GAAW,EAEf,GAAI,EACH,EAAY,EACZ,EAAa,8BAEb,EAAY,EAAW,IAAI,0BAC3B,EAAa,2BAET,IAAc,KAAM,CACvB,QAAQ,MAAM,kIACd,OAIF,EAAU,GAAY,EAAM,EAAO,EAAO,GAC1C,EAAK,OAAO,EAAO,EAAM,GAI1B,KAAK,QAAU,EACf,KAAK,OAAS,EACd,KAAK,gBAAkB,EAGxB,YAA2B,EAAI,EAAY,EAAY,CACtD,GAAI,GAEJ,YAA4B,CAC3B,GAAI,IAAkB,OAAW,MAAO,GAExC,GAAI,EAAW,IAAI,oCAAsC,GAAM,CAC9D,GAAM,GAAY,EAAW,IAAI,kCACjC,EAAgB,EAAG,aAAa,EAAU,oCAE1C,GAAgB,EAGjB,MAAO,GAGR,WAAyB,EAAW,CACnC,GAAI,IAAc,QAAS,CAC1B,GAAI,EAAG,yBAAyB,EAAG,cAAe,EAAG,YAAY,UAAY,GAAK,EAAG,yBAAyB,EAAG,gBAAiB,EAAG,YAAY,UAAY,EAC5J,MAAO,QAGR,EAAY,UAGb,MAAI,KAAc,WACb,EAAG,yBAAyB,EAAG,cAAe,EAAG,cAAc,UAAY,GAAK,EAAG,yBAAyB,EAAG,gBAAiB,EAAG,cAAc,UAAY,EACzJ,UAIF,OAKR,GAAM,GAAW,MAAO,yBAA2B,aAAe,YAAc,yBAA0B,MAAO,gCAAkC,aAAe,YAAc,+BAG5K,EAAY,EAAW,YAAc,OAAY,EAAW,UAAY,QACtE,EAAe,EAAgB,GAErC,AAAI,IAAiB,GACpB,SAAQ,KAAK,uBAAwB,EAAW,uBAAwB,EAAc,YACtF,EAAY,GAGb,GAAM,GAAc,GAAY,EAAW,IAAI,sBACzC,EAAyB,EAAW,yBAA2B,GAC/D,EAAc,EAAG,aAAa,EAAG,yBACjC,EAAoB,EAAG,aAAa,EAAG,gCACvC,EAAiB,EAAG,aAAa,EAAG,kBACpC,EAAiB,EAAG,aAAa,EAAG,2BACpC,EAAgB,EAAG,aAAa,EAAG,oBACnC,EAAoB,EAAG,aAAa,EAAG,4BACvC,EAAc,EAAG,aAAa,EAAG,qBACjC,EAAsB,EAAG,aAAa,EAAG,8BACzC,EAAiB,EAAoB,EACrC,EAAwB,GAAY,EAAW,IAAI,qBACnD,EAAsB,GAAkB,EACxC,EAAa,EAAW,EAAG,aAAa,EAAG,aAAe,EAChE,MAAO,CACN,SAAU,EACV,YAAa,EACb,iBAAkB,EAClB,gBAAiB,EACjB,UAAW,EACX,uBAAwB,EACxB,YAAa,EACb,kBAAmB,EACnB,eAAgB,EAChB,eAAgB,EAChB,cAAe,EACf,kBAAmB,EACnB,YAAa,EACb,oBAAqB,EACrB,eAAgB,EAChB,sBAAuB,EACvB,oBAAqB,EACrB,WAAY,GAId,YAAuB,EAAY,CAClC,GAAM,GAAQ,KACV,EAAc,KAChB,EAAkB,EAClB,EAAuB,GACvB,EAAmB,GACf,EAAQ,GAAI,IACf,EAAmB,GAAI,IACvB,EAAU,CACZ,MAAO,KACP,YAAa,IAEd,KAAK,QAAU,EACf,KAAK,UAAY,EACjB,KAAK,gBAAkB,EAEvB,KAAK,KAAO,SAAU,EAAQ,EAAqB,EAAQ,CAC1D,GAAM,GAAU,EAAO,SAAW,GAAK,GAEvC,IAAoB,GAAK,EACzB,SAAuB,EACvB,EAAc,EAAc,EAAQ,EAAQ,GAC5C,EAAkB,EAAO,OAClB,GAGR,KAAK,aAAe,UAAY,CAC/B,EAAmB,GACnB,EAAc,OAGf,KAAK,WAAa,UAAY,CAC7B,EAAmB,GACnB,KAGD,KAAK,SAAW,SAAU,EAAU,EAAQ,EAAU,CACrD,GAAM,GAAS,EAAS,eACrB,EAAmB,EAAS,iBAC5B,EAAc,EAAS,YACpB,EAAqB,EAAW,IAAI,GAE1C,GAAI,CAAC,GAAwB,IAAW,MAAQ,EAAO,SAAW,GAAK,GAAoB,CAAC,EAE3F,AAAI,EAEH,EAAc,MAEd,QAEK,CACN,GAAM,GAAU,EAAmB,EAAI,EACpC,EAAU,EAAU,EACnB,EAAW,EAAmB,eAAiB,KACnD,EAAQ,MAAQ,EAEhB,EAAW,EAAc,EAAQ,EAAQ,EAAS,GAElD,OAAS,GAAI,EAAG,IAAM,EAAS,EAAE,EAChC,EAAS,GAAK,EAAY,GAG3B,EAAmB,cAAgB,EACnC,KAAK,gBAAkB,EAAmB,KAAK,UAAY,EAC3D,KAAK,WAAa,IAIpB,YAA4B,CAC3B,AAAI,EAAQ,QAAU,GACrB,GAAQ,MAAQ,EAChB,EAAQ,YAAc,EAAkB,GAGzC,EAAM,UAAY,EAClB,EAAM,gBAAkB,EAGzB,WAAuB,EAAQ,EAAQ,EAAW,EAAe,CAChE,GAAM,GAAU,IAAW,KAAO,EAAO,OAAS,EAC9C,EAAW,KAEf,GAAI,IAAY,EAAG,CAGlB,GAFA,EAAW,EAAQ,MAEf,IAAkB,IAAQ,IAAa,KAAM,CAChD,GAAM,GAAW,EAAY,EAAU,EACpC,EAAa,EAAO,mBACvB,EAAiB,gBAAgB,GAE7B,KAAa,MAAQ,EAAS,OAAS,IAC1C,GAAW,GAAI,cAAa,IAG7B,OAAS,GAAI,EAAG,EAAK,EAAW,IAAM,EAAS,EAAE,EAAG,GAAM,EACzD,EAAM,KAAK,EAAO,IAAI,aAAa,EAAY,GAC/C,EAAM,OAAO,QAAQ,EAAU,GAC/B,EAAS,EAAK,GAAK,EAAM,SAI3B,EAAQ,MAAQ,EAChB,EAAQ,YAAc,GAGvB,SAAM,UAAY,EAClB,EAAM,gBAAkB,EACjB,GAIT,YAAuB,EAAU,CAChC,GAAI,GAAW,GAAI,SAEnB,WAA2B,EAAS,EAAS,CAC5C,MAAI,KAAY,GACf,EAAQ,QAAU,GACR,IAAY,IACtB,GAAQ,QAAU,IAGZ,EAGR,WAAa,EAAS,CACrB,GAAI,GAAW,EAAQ,WAAa,EAAQ,wBAA0B,GAAO,CAC5E,GAAM,GAAU,EAAQ,QAExB,GAAI,IAAY,IAAoC,IAAY,GAC/D,GAAI,EAAS,IAAI,GAAU,CAC1B,GAAM,GAAU,EAAS,IAAI,GAAS,QACtC,MAAO,GAAkB,EAAS,EAAQ,aACpC,CACN,GAAM,GAAQ,EAAQ,MAEtB,GAAI,GAAS,EAAM,OAAS,EAAG,CAC9B,GAAM,GAAsB,EAAS,kBAC/B,EAAe,GAAI,IAAsB,EAAM,OAAS,GAC9D,SAAa,2BAA2B,EAAU,GAClD,EAAS,IAAI,EAAS,GACtB,EAAS,gBAAgB,GACzB,EAAQ,iBAAiB,UAAW,GAC7B,EAAkB,EAAa,QAAS,EAAQ,aAGvD,OAAO,OAMX,MAAO,GAGR,WAA0B,EAAO,CAChC,GAAM,GAAU,EAAM,OACtB,EAAQ,oBAAoB,UAAW,GACvC,GAAM,GAAU,EAAS,IAAI,GAE7B,AAAI,IAAY,QACf,GAAS,OAAO,GAChB,EAAQ,WAIV,YAAmB,CAClB,EAAW,GAAI,SAGhB,MAAO,CACN,IAAK,EACL,QAAS,GAIX,gBAAiC,GAAO,CACvC,YAAY,EAAO,GAAI,EAAQ,EAAG,EAAM,EAAG,EAAS,GAAI,EAAO,GAAK,EAAM,IAAM,CAC/E,QACA,KAAK,KAAO,qBACZ,KAAK,KAAO,EACZ,KAAK,KAAO,KACZ,KAAK,KAAO,EACZ,KAAK,MAAQ,EACb,KAAK,IAAM,EACX,KAAK,OAAS,EACd,KAAK,KAAO,EACZ,KAAK,IAAM,EACX,KAAK,yBAGN,KAAK,EAAQ,EAAW,CACvB,aAAM,KAAK,EAAQ,GACnB,KAAK,KAAO,EAAO,KACnB,KAAK,MAAQ,EAAO,MACpB,KAAK,IAAM,EAAO,IAClB,KAAK,OAAS,EAAO,OACrB,KAAK,KAAO,EAAO,KACnB,KAAK,IAAM,EAAO,IAClB,KAAK,KAAO,EAAO,KACnB,KAAK,KAAO,EAAO,OAAS,KAAO,KAAO,OAAO,OAAO,GAAI,EAAO,MAC5D,KAGR,cAAc,EAAW,EAAY,EAAG,EAAG,EAAO,EAAQ,CACzD,AAAI,KAAK,OAAS,MACjB,MAAK,KAAO,CACX,QAAS,GACT,UAAW,EACX,WAAY,EACZ,QAAS,EACT,QAAS,EACT,MAAO,EACP,OAAQ,IAIV,KAAK,KAAK,QAAU,GACpB,KAAK,KAAK,UAAY,EACtB,KAAK,KAAK,WAAa,EACvB,KAAK,KAAK,QAAU,EACpB,KAAK,KAAK,QAAU,EACpB,KAAK,KAAK,MAAQ,EAClB,KAAK,KAAK,OAAS,EACnB,KAAK,yBAGN,iBAAkB,CACjB,AAAI,KAAK,OAAS,MACjB,MAAK,KAAK,QAAU,IAGrB,KAAK,yBAGN,wBAAyB,CACxB,GAAM,GAAM,MAAK,MAAQ,KAAK,MAAS,GAAI,KAAK,MAC1C,EAAM,MAAK,IAAM,KAAK,QAAW,GAAI,KAAK,MAC1C,EAAM,MAAK,MAAQ,KAAK,MAAQ,EAChC,EAAM,MAAK,IAAM,KAAK,QAAU,EAClC,EAAO,EAAK,EACZ,EAAQ,EAAK,EACb,EAAM,EAAK,EACX,EAAS,EAAK,EAElB,GAAI,KAAK,OAAS,MAAQ,KAAK,KAAK,QAAS,CAC5C,GAAM,GAAU,MAAK,MAAQ,KAAK,MAAQ,KAAK,KAAK,UAAY,KAAK,KAC/D,EAAU,MAAK,IAAM,KAAK,QAAU,KAAK,KAAK,WAAa,KAAK,KACtE,GAAQ,EAAS,KAAK,KAAK,QAC3B,EAAQ,EAAO,EAAS,KAAK,KAAK,MAClC,GAAO,EAAS,KAAK,KAAK,QAC1B,EAAS,EAAM,EAAS,KAAK,KAAK,OAGnC,KAAK,iBAAiB,iBAAiB,EAAM,EAAO,EAAK,EAAQ,KAAK,KAAM,KAAK,KACjF,KAAK,wBAAwB,KAAK,KAAK,kBAAkB,SAG1D,OAAO,EAAM,CACZ,GAAM,GAAO,MAAM,OAAO,GAC1B,SAAK,OAAO,KAAO,KAAK,KACxB,EAAK,OAAO,KAAO,KAAK,KACxB,EAAK,OAAO,MAAQ,KAAK,MACzB,EAAK,OAAO,IAAM,KAAK,IACvB,EAAK,OAAO,OAAS,KAAK,OAC1B,EAAK,OAAO,KAAO,KAAK,KACxB,EAAK,OAAO,IAAM,KAAK,IACnB,KAAK,OAAS,MAAM,GAAK,OAAO,KAAO,OAAO,OAAO,GAAI,KAAK,OAC3D,GAKT,GAAmB,UAAU,qBAAuB,GAEpD,gBAAgC,GAAe,CAC9C,YAAY,EAAY,CACvB,MAAM,GACN,KAAK,KAAO,qBAKd,GAAkB,UAAU,oBAAsB,GAElD,GAAM,IAAU,EACV,GAAU,EACV,GAAW,KAAK,IAAI,EAAG,IAKvB,GAAkB,CAAC,KAAO,KAAO,IAAM,KAAO,KAAO,MACrD,GAAa,GAAU,GAAU,EAAI,GAAgB,OAGrD,GAAc,GACd,GAAY,EAChB,IAAiB,GACjB,IAAe,GACf,IAAe,GACf,IAAgB,GAChB,IAAiB,GACjB,IAAe,GACf,IAAgB,GAGZ,GAA2B,GAAI,IAE/B,CACL,cACA,aACA,YACgB,KAEX,GAA2B,GAAI,IAEjC,GAAa,KAEX,GAAO,GAAI,KAAK,KAAK,IAAM,EAC3B,GAAU,EAAI,GAGd,GAAkB,CAAc,GAAI,GAAQ,EAAG,EAAG,GAAiB,GAAI,GAAQ,GAAI,EAAG,GAAiB,GAAI,GAAQ,EAAG,EAAG,IAAkB,GAAI,GAAQ,GAAI,EAAG,IAAkB,GAAI,GAAQ,EAAG,GAAK,IAAuB,GAAI,GAAQ,EAAG,GAAK,CAAC,IAAuB,GAAI,GAAQ,GAAS,EAAG,IAAmB,GAAI,GAAQ,CAAC,GAAS,EAAG,IAAmB,GAAI,GAAQ,GAAK,GAAS,GAAiB,GAAI,GAAQ,CAAC,GAAK,GAAS,IAgB1a,QAAqB,CACpB,YAAY,EAAU,CACrB,KAAK,UAAY,EACjB,KAAK,sBAAwB,KAC7B,KAAK,cAAgB,GAAe,IACpC,KAAK,gBAAkB,KACvB,KAAK,eAAiB,KAEtB,KAAK,iBAAiB,KAAK,eAW5B,UAAU,EAAO,EAAQ,EAAG,EAAO,GAAK,EAAM,IAAK,CAClD,GAAa,KAAK,UAAU,kBAE5B,GAAM,GAAqB,KAAK,mBAEhC,YAAK,eAAe,EAAO,EAAM,EAAK,GAElC,EAAQ,GACX,KAAK,MAAM,EAAoB,EAAG,EAAG,GAGtC,KAAK,YAAY,GAEjB,KAAK,SAAS,GAEP,EASR,oBAAoB,EAAiB,CACpC,MAAO,MAAK,aAAa,GAS1B,YAAY,EAAS,CACpB,MAAO,MAAK,aAAa,GAQ1B,sBAAuB,CACtB,AAAI,KAAK,iBAAmB,MAC3B,MAAK,eAAiB,KAEtB,KAAK,iBAAiB,KAAK,iBAS7B,8BAA+B,CAC9B,AAAI,KAAK,kBAAoB,MAC5B,MAAK,gBAAkB,KAEvB,KAAK,iBAAiB,KAAK,kBAU7B,SAAU,CACT,KAAK,cAAc,UAEf,KAAK,iBAAmB,MAAM,KAAK,eAAe,UAClD,KAAK,kBAAoB,MAAM,KAAK,gBAAgB,UAExD,OAAS,GAAI,EAAG,EAAI,GAAW,OAAQ,IACtC,GAAW,GAAG,UAKhB,SAAS,EAAc,CACtB,KAAK,sBAAsB,UAE3B,KAAK,UAAU,gBAAgB,IAE/B,EAAa,YAAc,GAE3B,GAAa,EAAc,EAAG,EAAG,EAAa,MAAO,EAAa,QAGnE,aAAa,EAAS,CACrB,GAAa,KAAK,UAAU,kBAE5B,GAAM,GAAqB,KAAK,iBAAiB,GAEjD,YAAK,iBAAiB,EAAS,GAE/B,KAAK,YAAY,GAEjB,KAAK,SAAS,GAEP,EAGR,iBAAiB,EAAS,CAEzB,GAAM,GAAS,CACd,UAAW,GACX,UAAW,GACX,gBAAiB,GACjB,KAAM,GACN,OAAQ,GACR,SAAU,GAAO,GAAW,EAAQ,SAAW,GAC/C,YAAa,IAGR,EAAqB,GAAoB,GAE/C,SAAmB,YAAc,GACjC,KAAK,sBAAwB,GAAoB,GAC1C,EAGR,iBAAiB,EAAU,CAC1B,GAAM,GAAU,GAAI,IAAK,GAAW,GAAI,GAExC,KAAK,UAAU,QAAQ,EAAS,IAGjC,eAAe,EAAO,EAAM,EAAK,EAAoB,CACpD,GAAM,GAAM,GACN,EAAS,EACT,EAAa,GAAI,IAAkB,EAAK,EAAQ,EAAM,GACtD,EAAS,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAC1B,EAAc,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IAChC,EAAW,KAAK,UAChB,EAAoB,EAAS,UAC7B,EAAiB,EAAS,eAC1B,EAAc,EAAS,YAC7B,EAAS,cAAc,IACvB,EAAS,YAAc,GACvB,EAAS,eAAiB,GAC1B,EAAS,UAAY,GACrB,GAAM,GAAqB,GAAI,IAAkB,CAChD,KAAM,mBACN,KAAM,GACN,WAAY,GACZ,UAAW,KAEN,EAAgB,GAAI,IAAK,GAAI,IAAe,GAC9C,EAAgB,GACd,EAAa,EAAM,WAEzB,AAAI,EACC,EAAW,SACd,GAAmB,MAAM,KAAK,GAC9B,EAAM,WAAa,KACnB,EAAgB,IAGjB,GAAmB,MAAM,KAAK,IAC9B,EAAgB,IAGjB,OAAS,GAAI,EAAG,EAAI,EAAG,IAAK,CAC3B,GAAM,GAAM,EAAI,EAEhB,AAAI,GAAO,EACV,GAAW,GAAG,IAAI,EAAG,EAAO,GAAI,GAChC,EAAW,OAAO,EAAY,GAAI,EAAG,IAC/B,AAAI,GAAO,EACjB,GAAW,GAAG,IAAI,EAAG,EAAG,EAAO,IAC/B,EAAW,OAAO,EAAG,EAAY,GAAI,IAErC,GAAW,GAAG,IAAI,EAAG,EAAO,GAAI,GAChC,EAAW,OAAO,EAAG,EAAG,EAAY,KAGrC,GAAa,EAAoB,EAAM,GAAU,EAAI,EAAI,GAAW,EAAG,GAAU,IAEjF,EAAS,gBAAgB,GAErB,GACH,EAAS,OAAO,EAAe,GAGhC,EAAS,OAAO,EAAO,GAGxB,EAAc,SAAS,UACvB,EAAc,SAAS,UACvB,EAAS,YAAc,EACvB,EAAS,eAAiB,EAC1B,EAAS,UAAY,EACrB,EAAM,WAAa,EAGpB,aAAa,EAAS,EAAS,CAC9B,AAAI,KAAK,UAAU,aAAa,WAAa,IAAQ,EAAQ,SAAW,IAAc,EAAQ,OAAS,IAAoB,EAAQ,WAAa,GAC/I,EAAQ,MAAQ,GAAU,IAE1B,EAAQ,MAAQ,GAAU,EAAQ,UAIpC,iBAAiB,EAAS,EAAoB,CAC7C,GAAM,GAAW,KAAK,UAChB,EAAgB,EAAQ,UAAY,IAAyB,EAAQ,UAAY,GAEvF,AAAI,EACC,KAAK,gBAAkB,MAC1B,MAAK,eAAiB,MAGnB,KAAK,iBAAmB,MAC3B,MAAK,gBAAkB,MAIzB,GAAM,GAAW,EAAgB,KAAK,eAAiB,KAAK,gBACtD,EAAO,GAAI,IAAK,GAAW,GAAI,GAC/B,EAAW,EAAS,SAC1B,EAAS,OAAU,MAAQ,EAEtB,GACJ,EAAS,UAAa,MAAM,IAAI,EAAM,EAAQ,MAAM,MAAO,EAAM,EAAQ,MAAM,QAGhF,KAAK,aAAa,EAAS,cAAkB,GAE7C,KAAK,aAAa,EAAS,eAAmB,EAAmB,SAEjE,GAAa,EAAoB,EAAG,EAAG,EAAI,GAAU,EAAI,IAEzD,EAAS,gBAAgB,GACzB,EAAS,OAAO,EAAM,IAGvB,YAAY,EAAoB,CAC/B,GAAM,GAAW,KAAK,UAChB,EAAY,EAAS,UAC3B,EAAS,UAAY,GAErB,OAAS,GAAI,EAAG,EAAI,GAAY,IAAK,CACpC,GAAM,GAAQ,KAAK,KAAK,GAAQ,GAAK,GAAQ,GAAK,GAAQ,EAAI,GAAK,GAAQ,EAAI,IACzE,EAAW,GAAiB,GAAI,GAAK,GAAgB,QAE3D,KAAK,MAAM,EAAoB,EAAI,EAAG,EAAG,EAAO,GAGjD,EAAS,UAAY,EAWtB,MAAM,EAAoB,EAAO,EAAQ,EAAO,EAAU,CACzD,GAAM,GAAuB,KAAK,sBAElC,KAAK,UAAU,EAAoB,EAAsB,EAAO,EAAQ,EAAO,cAAe,GAE9F,KAAK,UAAU,EAAsB,EAAoB,EAAQ,EAAQ,EAAO,eAAgB,GAGjG,UAAU,EAAU,EAAW,EAAO,EAAQ,EAAc,EAAW,EAAU,CAChF,GAAM,GAAW,KAAK,UAChB,EAAe,KAAK,cAE1B,AAAI,IAAc,eAAiB,IAAc,gBAChD,QAAQ,MAAM,8DAIf,GAAM,GAAsB,EACtB,EAAW,GAAI,IAAK,GAAW,GAAS,GACxC,EAAe,EAAa,SAC5B,EAAS,GAAU,GAAS,EAC5B,EAAkB,SAAS,GAAgB,KAAK,GAAM,GAAI,GAAU,EAAI,KAAK,GAAM,GAAI,GAAc,GACrG,EAAc,EAAe,EAC7B,EAAU,SAAS,GAAgB,EAAI,KAAK,MAAM,EAAsB,GAAe,GAE7F,AAAI,EAAU,IACb,QAAQ,KAAK,iBAAiB,kDAA6D,wCAA8C,MAG1I,GAAM,GAAU,GACZ,EAAM,EAEV,OAAS,GAAI,EAAG,EAAI,GAAa,EAAE,EAAG,CACrC,GAAM,GAAI,EAAI,EACR,EAAS,KAAK,IAAI,CAAC,EAAI,EAAI,GACjC,EAAQ,KAAK,GAEb,AAAI,GAAK,EACR,GAAO,EACG,EAAI,GACd,IAAO,EAAI,GAIb,OAAS,GAAI,EAAG,EAAI,EAAQ,OAAQ,IACnC,EAAQ,GAAK,EAAQ,GAAK,EAG3B,EAAa,OAAU,MAAQ,EAAS,QACxC,EAAa,QAAW,MAAQ,EAChC,EAAa,QAAW,MAAQ,EAChC,EAAa,YAAe,MAAQ,IAAc,cAE9C,GACH,GAAa,SAAY,MAAQ,GAGlC,EAAa,OAAU,MAAQ,EAC/B,EAAa,OAAU,MAAQ,GAAU,EAEzC,KAAK,aAAa,EAAa,cAAkB,EAAS,SAE1D,KAAK,aAAa,EAAa,eAAmB,EAAS,SAE3D,GAAM,GAAa,GAAU,GACvB,EAAI,EAAI,KAAK,IAAI,EAAG,GAAW,EAAI,GACnC,EAAK,KAAW,EAAI,EAAI,EAAI,IAAY,EAAI,EAAc,GAAS,GAAU,GAAU,EAAS,GAAU,GAAU,GAE1H,GAAa,EAAW,EAAG,EAAG,EAAI,EAAY,EAAI,GAElD,EAAS,gBAAgB,GACzB,EAAS,OAAO,EAAU,KAK5B,YAAgB,EAAS,CACxB,MAAI,KAAY,QAAa,EAAQ,OAAS,GAAyB,GAChE,EAAQ,WAAa,IAAkB,EAAQ,WAAa,IAAgB,EAAQ,WAAa,GAGzG,aAAyB,CACxB,GAAM,GAAa,GACb,EAAY,GACZ,EAAU,GACZ,EAAM,GAEV,OAAS,GAAI,EAAG,EAAI,GAAY,IAAK,CACpC,GAAM,GAAU,KAAK,IAAI,EAAG,GAE5B,EAAU,KAAK,GAEf,GAAI,GAAQ,EAAM,EAElB,AAAI,EAAI,GAAU,GACjB,EAAQ,GAAgB,EAAI,GAAU,GAAU,GACtC,GAAK,GACf,GAAQ,GAGT,EAAQ,KAAK,GAEb,GAAM,GAAY,EAAO,GAAU,GAC7B,EAAM,CAAC,EAAY,EACnB,EAAM,EAAI,EAAY,EACtB,EAAM,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAC9D,EAAY,EACZ,EAAW,EACX,EAAe,EACf,EAAS,EACT,EAAgB,EAChB,EAAW,GAAI,cAAa,EAAe,EAAW,GACtD,EAAK,GAAI,cAAa,EAAS,EAAW,GAC1C,EAAY,GAAI,cAAa,EAAgB,EAAW,GAE9D,OAAS,GAAO,EAAG,EAAO,EAAW,IAAQ,CAC5C,GAAM,GAAI,EAAO,EAAI,EAAI,EAAI,EACvB,EAAI,EAAO,EAAI,EAAI,GACnB,EAAc,CAAC,EAAG,EAAG,EAAG,EAAI,EAAI,EAAG,EAAG,EAAG,EAAI,EAAI,EAAG,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAI,EAAI,EAAG,EAAI,EAAG,EAAG,EAAG,EAAI,EAAG,GAC5G,EAAS,IAAI,EAAa,EAAe,EAAW,GACpD,EAAG,IAAI,EAAK,EAAS,EAAW,GAChC,GAAM,GAAO,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,GAC5C,EAAU,IAAI,EAAM,EAAgB,EAAW,GAGhD,GAAM,GAAS,GAAI,IACnB,EAAO,aAAa,WAAY,GAAI,IAAgB,EAAU,IAC9D,EAAO,aAAa,KAAM,GAAI,IAAgB,EAAI,IAClD,EAAO,aAAa,YAAa,GAAI,IAAgB,EAAW,IAEhE,EAAW,KAAK,GAEZ,EAAM,IACT,IAIF,MAAO,CACN,aACA,YACA,WAIF,YAA6B,EAAQ,CACpC,GAAM,GAAqB,GAAI,IAAkB,EAAI,GAAU,EAAI,GAAU,GAC7E,SAAmB,QAAQ,QAAU,GACrC,EAAmB,QAAQ,KAAO,eAClC,EAAmB,YAAc,GAC1B,EAGR,YAAsB,EAAQ,EAAG,EAAG,EAAO,EAAQ,CAClD,EAAO,SAAS,IAAI,EAAG,EAAG,EAAO,GACjC,EAAO,QAAQ,IAAI,EAAG,EAAG,EAAO,GAGjC,YAAwB,EAAY,CACnC,GAAM,GAAU,GAAI,cAAa,GAC3B,EAAW,GAAI,GAAQ,EAAG,EAAG,GA2GnC,MA1GuB,IAAI,IAAkB,CAC5C,KAAM,wBACN,QAAS,CACR,EAAK,GAEN,SAAU,CACT,OAAU,CACT,MAAO,MAER,QAAW,CACV,MAAO,GAER,QAAW,CACV,MAAO,GAER,YAAe,CACd,MAAO,IAER,OAAU,CACT,MAAO,GAER,OAAU,CACT,MAAO,GAER,SAAY,CACX,MAAO,GAER,cAAiB,CAChB,MAAO,GAAU,KAElB,eAAkB,CACjB,MAAO,GAAU,MAGnB,aAAc,KACd,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAkDF,SAAU,GACV,UAAW,GACX,WAAY,KAKd,aAA8B,CAC7B,GAAM,GAAY,GAAI,IAAQ,EAAG,GA+DjC,MA9DuB,IAAI,IAAkB,CAC5C,KAAM,0BACN,SAAU,CACT,OAAU,CACT,MAAO,MAER,UAAa,CACZ,MAAO,GAER,cAAiB,CAChB,MAAO,GAAU,KAElB,eAAkB,CACjB,MAAO,GAAU,MAGnB,aAAc,KACd,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA6BF,SAAU,GACV,UAAW,GACX,WAAY,KAKd,aAA6B,CAwC5B,MAvCuB,IAAI,IAAkB,CAC5C,KAAM,kBACN,SAAU,CACT,OAAU,CACT,MAAO,MAER,cAAiB,CAChB,MAAO,GAAU,KAElB,eAAkB,CACjB,MAAO,GAAU,MAGnB,aAAc,KACd,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUF,SAAU,GACV,UAAW,GACX,WAAY,KAKd,aAAkC,CACjC,MAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA6DF,aAAyB,CACxB,MAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAoFF,YAAyB,EAAU,CAClC,GAAI,GAAa,GAAI,SACjB,EAAiB,KAErB,WAAa,EAAS,CACrB,GAAI,GAAW,EAAQ,WAAa,EAAQ,wBAA0B,GAAO,CAC5E,GAAM,GAAU,EAAQ,QAClB,EAAgB,IAAY,IAAoC,IAAY,GAC5E,EAAY,IAAY,IAAyB,IAAY,GAEnE,GAAI,GAAiB,EAAW,CAE/B,GAAI,EAAW,IAAI,GAClB,MAAO,GAAW,IAAI,GAAS,QACzB,CACN,GAAM,GAAQ,EAAQ,MAEtB,GAAI,GAAiB,GAAS,EAAM,OAAS,GAAK,GAAa,GAAS,EAAsB,GAAQ,CACrG,GAAM,GAAsB,EAAS,kBACrC,AAAI,IAAmB,MAAM,GAAiB,GAAI,IAAe,IACjE,GAAM,GAAe,EAAgB,EAAe,oBAAoB,GAAW,EAAe,YAAY,GAC9G,SAAW,IAAI,EAAS,GACxB,EAAS,gBAAgB,GACzB,EAAQ,iBAAiB,UAAW,GAC7B,EAAa,YAGpB,OAAO,QAMX,MAAO,GAGR,WAA+B,EAAO,CACrC,GAAI,GAAQ,EACN,EAAS,EAEf,OAAS,GAAI,EAAG,EAAI,EAAQ,IAC3B,AAAI,EAAM,KAAO,QAAW,IAG7B,MAAO,KAAU,EAGlB,WAA0B,EAAO,CAChC,GAAM,GAAU,EAAM,OACtB,EAAQ,oBAAoB,UAAW,GACvC,GAAM,GAAY,EAAW,IAAI,GAEjC,AAAI,IAAc,QACjB,GAAW,OAAO,GAClB,EAAU,WAIZ,YAAmB,CAClB,EAAa,GAAI,SAEb,IAAmB,MACtB,GAAe,UACf,EAAiB,MAInB,MAAO,CACN,IAAK,EACL,QAAS,GAIX,YAAyB,EAAI,CAC5B,GAAM,GAAa,GAEnB,WAAsB,EAAM,CAC3B,GAAI,EAAW,KAAU,OACxB,MAAO,GAAW,GAGnB,GAAI,GAEJ,OAAQ,OACF,sBACJ,EAAY,EAAG,aAAa,wBAA0B,EAAG,aAAa,4BAA8B,EAAG,aAAa,8BACpH,UAEI,iCACJ,EAAY,EAAG,aAAa,mCAAqC,EAAG,aAAa,uCAAyC,EAAG,aAAa,yCAC1I,UAEI,gCACJ,EAAY,EAAG,aAAa,kCAAoC,EAAG,aAAa,sCAAwC,EAAG,aAAa,wCACxI,UAEI,iCACJ,EAAY,EAAG,aAAa,mCAAqC,EAAG,aAAa,yCACjF,cAGA,EAAY,EAAG,aAAa,GAG9B,SAAW,GAAQ,EACZ,EAGR,MAAO,CACN,IAAK,SAAU,EAAM,CACpB,MAAO,GAAa,KAAU,MAE/B,KAAM,SAAU,EAAc,CAC7B,AAAI,EAAa,SAChB,EAAa,0BAEb,GAAa,uBACb,EAAa,qBACb,EAAa,0BACb,EAAa,iCACb,EAAa,4BACb,EAAa,0BACb,EAAa,2BACb,EAAa,2BAGd,EAAa,4BACb,EAAa,gCAEd,IAAK,SAAU,EAAM,CACpB,GAAM,GAAY,EAAa,GAE/B,MAAI,KAAc,MACjB,QAAQ,KAAK,wBAA0B,EAAO,6BAGxC,IAKV,YAAyB,EAAI,EAAY,EAAM,EAAe,CAC7D,GAAM,GAAa,GACb,EAAsB,GAAI,SAEhC,WAA2B,EAAO,CACjC,GAAM,GAAW,EAAM,OAEvB,AAAI,EAAS,QAAU,MACtB,EAAW,OAAO,EAAS,OAG5B,OAAW,KAAQ,GAAS,WAC3B,EAAW,OAAO,EAAS,WAAW,IAGvC,EAAS,oBAAoB,UAAW,GACxC,MAAO,GAAW,EAAS,IAC3B,GAAM,GAAY,EAAoB,IAAI,GAE1C,AAAI,GACH,GAAW,OAAO,GAClB,EAAoB,OAAO,IAG5B,EAAc,wBAAwB,GAElC,EAAS,4BAA8B,IAC1C,MAAO,GAAS,kBAIjB,EAAK,OAAO,aAGb,WAAa,EAAQ,EAAU,CAC9B,MAAI,GAAW,EAAS,MAAQ,IAChC,GAAS,iBAAiB,UAAW,GACrC,EAAW,EAAS,IAAM,GAC1B,EAAK,OAAO,cACL,EAGR,WAAgB,EAAU,CACzB,GAAM,GAAqB,EAAS,WAEpC,OAAW,KAAQ,GAClB,EAAW,OAAO,EAAmB,GAAO,EAAG,cAIhD,GAAM,GAAkB,EAAS,gBAEjC,OAAW,KAAQ,GAAiB,CACnC,GAAM,GAAQ,EAAgB,GAE9B,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,IACxC,EAAW,OAAO,EAAM,GAAI,EAAG,eAKlC,WAAkC,EAAU,CAC3C,GAAM,GAAU,GACV,EAAgB,EAAS,MACzB,EAAmB,EAAS,WAAW,SACzC,EAAU,EAEd,GAAI,IAAkB,KAAM,CAC3B,GAAM,GAAQ,EAAc,MAC5B,EAAU,EAAc,QAExB,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,GAAK,EAAG,CAChD,GAAM,GAAI,EAAM,EAAI,GACd,EAAI,EAAM,EAAI,GACd,EAAI,EAAM,EAAI,GACpB,EAAQ,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,QAEvB,CACN,GAAM,GAAQ,EAAiB,MAC/B,EAAU,EAAiB,QAE3B,OAAS,GAAI,EAAG,EAAI,EAAM,OAAS,EAAI,EAAG,EAAI,EAAG,GAAK,EAAG,CACxD,GAAM,GAAI,EAAI,EACR,EAAI,EAAI,EACR,EAAI,EAAI,EACd,EAAQ,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAI9B,GAAM,GAAY,GAAK,IAAS,GAAW,MAAQ,GAAwB,IAAuB,EAAS,GAC3G,EAAU,QAAU,EAGpB,GAAM,GAAoB,EAAoB,IAAI,GAClD,AAAI,GAAmB,EAAW,OAAO,GAEzC,EAAoB,IAAI,EAAU,GAGnC,WAA+B,EAAU,CACxC,GAAM,GAAmB,EAAoB,IAAI,GAEjD,GAAI,EAAkB,CACrB,GAAM,GAAgB,EAAS,MAE/B,AAAI,IAAkB,MAEjB,EAAiB,QAAU,EAAc,SAC5C,EAAyB,OAI3B,GAAyB,GAG1B,MAAO,GAAoB,IAAI,GAGhC,MAAO,CACN,IAAK,EACL,OAAQ,EACR,sBAAuB,GAIzB,YAAoC,EAAI,EAAY,EAAM,EAAc,CACvE,GAAM,GAAW,EAAa,SAC1B,EAEJ,WAAiB,EAAO,CACvB,EAAO,EAGR,GAAI,GAAM,EAEV,WAAkB,EAAO,CACxB,EAAO,EAAM,KACb,EAAkB,EAAM,gBAGzB,WAAgB,EAAO,EAAO,CAC7B,EAAG,aAAa,EAAM,EAAO,EAAM,EAAQ,GAC3C,EAAK,OAAO,EAAO,EAAM,GAG1B,WAAyB,EAAO,EAAO,EAAW,CACjD,GAAI,IAAc,EAAG,OACrB,GAAI,GAAW,EAEf,GAAI,EACH,EAAY,EACZ,EAAa,gCAEb,EAAY,EAAW,IAAI,0BAC3B,EAAa,6BAET,IAAc,KAAM,CACvB,QAAQ,MAAM,yIACd,OAIF,EAAU,GAAY,EAAM,EAAO,EAAM,EAAQ,EAAiB,GAClE,EAAK,OAAO,EAAO,EAAM,GAI1B,KAAK,QAAU,EACf,KAAK,SAAW,EAChB,KAAK,OAAS,EACd,KAAK,gBAAkB,EAGxB,YAAmB,EAAI,CACtB,GAAM,GAAS,CACd,WAAY,EACZ,SAAU,GAEL,EAAS,CACd,MAAO,EACP,MAAO,EACP,UAAW,EACX,OAAQ,EACR,MAAO,GAGR,WAAgB,EAAO,EAAM,EAAe,CAG3C,OAFA,EAAO,QAEC,OACF,GAAG,UACP,EAAO,WAAa,EAAiB,GAAQ,GAC7C,UAEI,GAAG,MACP,EAAO,OAAS,EAAiB,GAAQ,GACzC,UAEI,GAAG,WACP,EAAO,OAAS,EAAiB,GAAQ,GACzC,UAEI,GAAG,UACP,EAAO,OAAS,EAAgB,EAChC,UAEI,GAAG,OACP,EAAO,QAAU,EAAgB,EACjC,cAGA,QAAQ,MAAM,sCAAuC,GACrD,OAIH,YAAiB,CAChB,EAAO,QACP,EAAO,MAAQ,EACf,EAAO,UAAY,EACnB,EAAO,OAAS,EAChB,EAAO,MAAQ,EAGhB,MAAO,CACN,OAAQ,EACR,OAAQ,EACR,SAAU,KACV,UAAW,GACX,MAAO,EACP,OAAQ,GAIV,gBAAiC,GAAQ,CACxC,YAAY,EAAO,KAAM,EAAQ,EAAG,EAAS,EAAG,EAAQ,EAAG,CAC1D,MAAM,MACN,KAAK,MAAQ,CACZ,OACA,QACA,SACA,SAED,KAAK,UAAY,GACjB,KAAK,UAAY,GACjB,KAAK,MAAQ,GACb,KAAK,gBAAkB,GACvB,KAAK,MAAQ,GACb,KAAK,gBAAkB,EACvB,KAAK,YAAc,IAKrB,GAAmB,UAAU,qBAAuB,GAEpD,YAAuB,EAAG,EAAG,CAC5B,MAAO,GAAE,GAAK,EAAE,GAGjB,YAA0B,EAAG,EAAG,CAC/B,MAAO,MAAK,IAAI,EAAE,IAAM,KAAK,IAAI,EAAE,IAGpC,YAAqB,EAAO,EAAW,CACtC,GAAI,GAAc,EACZ,EAAQ,EAAU,6BAA+B,EAAU,KAAK,MAAQ,EAAU,MACxF,AAAI,YAAiB,WAAW,EAAc,IAAS,AAAI,YAAiB,YAAY,EAAc,MAAW,AAAI,YAAiB,YAAY,EAAc,WAAgB,QAAQ,MAAM,mEAAoE,GAClQ,EAAM,aAAa,GAGpB,YAA2B,EAAI,EAAc,EAAU,CACtD,GAAM,GAAiB,GACjB,EAAkB,GAAI,cAAa,GACnC,EAAgB,GAAI,SACpB,EAAQ,GAAI,GACZ,EAAiB,GAEvB,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,EAAe,GAAK,CAAC,EAAG,GAGzB,WAAgB,EAAQ,EAAU,EAAU,EAAS,CACpD,GAAM,GAAmB,EAAO,sBAEhC,GAAI,EAAa,WAAa,GAAM,CAGnC,GAAM,GAAuB,EAAS,gBAAgB,SAAS,OAC3D,EAAQ,EAAc,IAAI,GAE9B,GAAI,IAAU,QAAa,EAAM,QAAU,EAAsB,CAChE,AAAI,IAAU,QAAW,EAAM,QAAQ,UACvC,GAAM,GAAkB,EAAS,gBAAgB,SAAW,OACtD,EAAe,EAAS,gBAAgB,SACxC,EAAe,EAAS,gBAAgB,QAAU,GAClD,EAAmB,EAAS,WAAW,SAAS,MAChD,EAAqB,IAAoB,GAAO,EAAI,EAEtD,EAAQ,EAAmB,EAC3B,EAAS,EAEb,AAAI,EAAQ,EAAa,gBACxB,GAAS,KAAK,KAAK,EAAQ,EAAa,gBACxC,EAAQ,EAAa,gBAGtB,GAAM,GAAS,GAAI,cAAa,EAAQ,EAAS,EAAI,GAC/C,EAAU,GAAI,IAAmB,EAAQ,EAAO,EAAQ,GAC9D,EAAQ,OAAS,GAEjB,EAAQ,KAAO,EAEf,GAAM,GAAmB,EAAqB,EAE9C,OAAS,IAAI,EAAG,GAAI,EAAsB,KAAK,CAC9C,GAAM,GAAc,EAAa,IAC3B,EAAc,EAAa,IAC3B,EAAS,EAAQ,EAAS,EAAI,GAEpC,OAAS,GAAI,EAAG,EAAI,EAAY,MAAO,IAAK,CAC3C,EAAM,oBAAoB,EAAa,GACnC,EAAY,aAAe,IAAM,GAAY,EAAO,GACxD,GAAM,IAAS,EAAI,EACnB,EAAO,EAAS,GAAS,GAAK,EAAM,EACpC,EAAO,EAAS,GAAS,GAAK,EAAM,EACpC,EAAO,EAAS,GAAS,GAAK,EAAM,EACpC,EAAO,EAAS,GAAS,GAAK,EAE1B,IAAoB,IACvB,GAAM,oBAAoB,EAAa,GACnC,EAAY,aAAe,IAAM,GAAY,EAAO,GACxD,EAAO,EAAS,GAAS,GAAK,EAAM,EACpC,EAAO,EAAS,GAAS,GAAK,EAAM,EACpC,EAAO,EAAS,GAAS,GAAK,EAAM,EACpC,EAAO,EAAS,GAAS,GAAK,IAKjC,EAAQ,CACP,MAAO,EACP,QAAS,EACT,KAAM,GAAI,IAAQ,EAAO,IAE1B,EAAc,IAAI,EAAU,GAI7B,GAAI,GAAqB,EAEzB,OAAS,GAAI,EAAG,EAAI,EAAiB,OAAQ,IAC5C,GAAsB,EAAiB,GAGxC,GAAM,GAAqB,EAAS,qBAAuB,EAAI,EAAI,EACnE,EAAQ,cAAc,SAAS,EAAI,2BAA4B,GAC/D,EAAQ,cAAc,SAAS,EAAI,wBAAyB,GAC5D,EAAQ,cAAc,SAAS,EAAI,sBAAuB,EAAM,QAAS,GACzE,EAAQ,cAAc,SAAS,EAAI,0BAA2B,EAAM,UAC9D,CAGN,GAAM,GAAS,IAAqB,OAAY,EAAI,EAAiB,OACjE,EAAa,EAAe,EAAS,IAEzC,GAAI,IAAe,QAAa,EAAW,SAAW,EAAQ,CAE7D,EAAa,GAEb,OAAS,GAAI,EAAG,EAAI,EAAQ,IAC3B,EAAW,GAAK,CAAC,EAAG,GAGrB,EAAe,EAAS,IAAM,EAI/B,OAAS,GAAI,EAAG,EAAI,EAAQ,IAAK,CAChC,GAAM,GAAY,EAAW,GAC7B,EAAU,GAAK,EACf,EAAU,GAAK,EAAiB,GAGjC,EAAW,KAAK,IAEhB,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,AAAI,EAAI,GAAU,EAAW,GAAG,GAC/B,GAAe,GAAG,GAAK,EAAW,GAAG,GACrC,EAAe,GAAG,GAAK,EAAW,GAAG,IAErC,GAAe,GAAG,GAAK,OAAO,iBAC9B,EAAe,GAAG,GAAK,GAIzB,EAAe,KAAK,IACpB,GAAM,GAAe,EAAS,gBAAgB,SACxC,EAAe,EAAS,gBAAgB,OAC1C,EAAqB,EAEzB,OAAS,GAAI,EAAG,EAAI,EAAG,IAAK,CAC3B,GAAM,GAAY,EAAe,GAC3B,EAAQ,EAAU,GAClB,EAAQ,EAAU,GAExB,AAAI,IAAU,OAAO,kBAAoB,EACpC,IAAgB,EAAS,aAAa,cAAgB,KAAO,EAAa,IAC7E,EAAS,aAAa,cAAgB,EAAG,EAAa,IAGnD,GAAgB,EAAS,aAAa,cAAgB,KAAO,EAAa,IAC7E,EAAS,aAAa,cAAgB,EAAG,EAAa,IAGvD,EAAgB,GAAK,EACrB,GAAsB,GAElB,IAAgB,EAAS,aAAa,cAAgB,KAAO,IAChE,EAAS,gBAAgB,cAAgB,GAGtC,GAAgB,EAAS,aAAa,cAAgB,KAAO,IAChE,EAAS,gBAAgB,cAAgB,GAG1C,EAAgB,GAAK,GAOvB,GAAM,GAAqB,EAAS,qBAAuB,EAAI,EAAI,EACnE,EAAQ,cAAc,SAAS,EAAI,2BAA4B,GAC/D,EAAQ,cAAc,SAAS,EAAI,wBAAyB,IAI9D,MAAO,CACN,OAAQ,GAIV,YAAsB,EAAI,EAAY,EAAY,EAAM,CACvD,GAAI,GAAY,GAAI,SAEpB,WAAgB,EAAQ,CACvB,GAAM,GAAQ,EAAK,OAAO,MACpB,EAAW,EAAO,SAClB,EAAiB,EAAW,IAAI,EAAQ,GAE9C,MAAI,GAAU,IAAI,KAAoB,GACrC,GAAW,OAAO,GAClB,EAAU,IAAI,EAAgB,IAG3B,EAAO,iBACN,GAAO,iBAAiB,UAAW,KAA4B,IAClE,EAAO,iBAAiB,UAAW,GAGpC,EAAW,OAAO,EAAO,eAAgB,EAAG,cAExC,EAAO,gBAAkB,MAC5B,EAAW,OAAO,EAAO,cAAe,EAAG,eAItC,EAGR,YAAmB,CAClB,EAAY,GAAI,SAGjB,WAAgC,EAAO,CACtC,GAAM,GAAgB,EAAM,OAC5B,EAAc,oBAAoB,UAAW,GAC7C,EAAW,OAAO,EAAc,gBAC5B,EAAc,gBAAkB,MAAM,EAAW,OAAO,EAAc,eAG3E,MAAO,CACN,OAAQ,EACR,QAAS,GAIX,gBAA4B,GAAQ,CACnC,YAAY,EAAO,KAAM,EAAQ,EAAG,EAAS,EAAG,EAAQ,EAAG,CAQ1D,MAAM,MACN,KAAK,MAAQ,CACZ,OACA,QACA,SACA,SAED,KAAK,UAAY,GACjB,KAAK,UAAY,GACjB,KAAK,MAAQ,GACb,KAAK,gBAAkB,GACvB,KAAK,MAAQ,GACb,KAAK,gBAAkB,EACvB,KAAK,YAAc,IAKrB,GAAc,UAAU,gBAAkB,GA4C1C,GAAM,IAAe,GAAI,IACnB,GAAsB,GAAI,IAC1B,GAAiB,GAAI,IACrB,GAAmB,GAAI,IAGvB,GAAgB,GAChB,GAAgB,GAEhB,GAAY,GAAI,cAAa,IAC7B,GAAY,GAAI,cAAa,GAC7B,GAAY,GAAI,cAAa,GAEnC,YAAiB,EAAO,EAAS,EAAW,CAC3C,GAAM,GAAY,EAAM,GACxB,GAAI,GAAa,GAAK,EAAY,EAAG,MAAO,GAG5C,GAAM,GAAI,EAAU,EAChB,EAAI,GAAc,GAOtB,GALI,IAAM,QACT,GAAI,GAAI,cAAa,GACrB,GAAc,GAAK,GAGhB,IAAY,EAAG,CAClB,EAAU,QAAQ,EAAG,GAErB,OAAS,GAAI,EAAG,EAAS,EAAG,IAAM,EAAS,EAAE,EAC5C,GAAU,EACV,EAAM,GAAG,QAAQ,EAAG,GAItB,MAAO,GAGR,YAAqB,EAAG,EAAG,CAC1B,GAAI,EAAE,SAAW,EAAE,OAAQ,MAAO,GAElC,OAAS,GAAI,EAAG,EAAI,EAAE,OAAQ,EAAI,EAAG,IACpC,GAAI,EAAE,KAAO,EAAE,GAAI,MAAO,GAG3B,MAAO,GAGR,YAAmB,EAAG,EAAG,CACxB,OAAS,GAAI,EAAG,EAAI,EAAE,OAAQ,EAAI,EAAG,IACpC,EAAE,GAAK,EAAE,GAKX,YAAuB,EAAU,EAAG,CACnC,GAAI,GAAI,GAAc,GAEtB,AAAI,IAAM,QACT,GAAI,GAAI,YAAW,GACnB,GAAc,GAAK,GAGpB,OAAS,GAAI,EAAG,IAAM,EAAG,EAAE,EAC1B,EAAE,GAAK,EAAS,sBAGjB,MAAO,GAOR,YAAqB,EAAI,EAAG,CAC3B,GAAM,GAAQ,KAAK,MACnB,AAAI,EAAM,KAAO,GACjB,GAAG,UAAU,KAAK,KAAM,GACxB,EAAM,GAAK,GAIZ,YAAqB,EAAI,EAAG,CAC3B,GAAM,GAAQ,KAAK,MAEnB,GAAI,EAAE,IAAM,OACX,AAAI,GAAM,KAAO,EAAE,GAAK,EAAM,KAAO,EAAE,IACtC,GAAG,UAAU,KAAK,KAAM,EAAE,EAAG,EAAE,GAC/B,EAAM,GAAK,EAAE,EACb,EAAM,GAAK,EAAE,OAER,CACN,GAAI,GAAY,EAAO,GAAI,OAC3B,EAAG,WAAW,KAAK,KAAM,GACzB,GAAU,EAAO,IAInB,YAAqB,EAAI,EAAG,CAC3B,GAAM,GAAQ,KAAK,MAEnB,GAAI,EAAE,IAAM,OACX,AAAI,GAAM,KAAO,EAAE,GAAK,EAAM,KAAO,EAAE,GAAK,EAAM,KAAO,EAAE,IAC1D,GAAG,UAAU,KAAK,KAAM,EAAE,EAAG,EAAE,EAAG,EAAE,GACpC,EAAM,GAAK,EAAE,EACb,EAAM,GAAK,EAAE,EACb,EAAM,GAAK,EAAE,WAEJ,EAAE,IAAM,OAClB,AAAI,GAAM,KAAO,EAAE,GAAK,EAAM,KAAO,EAAE,GAAK,EAAM,KAAO,EAAE,IAC1D,GAAG,UAAU,KAAK,KAAM,EAAE,EAAG,EAAE,EAAG,EAAE,GACpC,EAAM,GAAK,EAAE,EACb,EAAM,GAAK,EAAE,EACb,EAAM,GAAK,EAAE,OAER,CACN,GAAI,GAAY,EAAO,GAAI,OAC3B,EAAG,WAAW,KAAK,KAAM,GACzB,GAAU,EAAO,IAInB,YAAqB,EAAI,EAAG,CAC3B,GAAM,GAAQ,KAAK,MAEnB,GAAI,EAAE,IAAM,OACX,AAAI,GAAM,KAAO,EAAE,GAAK,EAAM,KAAO,EAAE,GAAK,EAAM,KAAO,EAAE,GAAK,EAAM,KAAO,EAAE,IAC9E,GAAG,UAAU,KAAK,KAAM,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,GACzC,EAAM,GAAK,EAAE,EACb,EAAM,GAAK,EAAE,EACb,EAAM,GAAK,EAAE,EACb,EAAM,GAAK,EAAE,OAER,CACN,GAAI,GAAY,EAAO,GAAI,OAC3B,EAAG,WAAW,KAAK,KAAM,GACzB,GAAU,EAAO,IAKnB,YAAoB,EAAI,EAAG,CAC1B,GAAM,GAAQ,KAAK,MACb,EAAW,EAAE,SAEnB,GAAI,IAAa,OAAW,CAC3B,GAAI,GAAY,EAAO,GAAI,OAC3B,EAAG,iBAAiB,KAAK,KAAM,GAAO,GACtC,GAAU,EAAO,OACX,CACN,GAAI,GAAY,EAAO,GAAW,OAClC,GAAU,IAAI,GACd,EAAG,iBAAiB,KAAK,KAAM,GAAO,IACtC,GAAU,EAAO,IAInB,YAAoB,EAAI,EAAG,CAC1B,GAAM,GAAQ,KAAK,MACb,EAAW,EAAE,SAEnB,GAAI,IAAa,OAAW,CAC3B,GAAI,GAAY,EAAO,GAAI,OAC3B,EAAG,iBAAiB,KAAK,KAAM,GAAO,GACtC,GAAU,EAAO,OACX,CACN,GAAI,GAAY,EAAO,GAAW,OAClC,GAAU,IAAI,GACd,EAAG,iBAAiB,KAAK,KAAM,GAAO,IACtC,GAAU,EAAO,IAInB,YAAoB,EAAI,EAAG,CAC1B,GAAM,GAAQ,KAAK,MACb,EAAW,EAAE,SAEnB,GAAI,IAAa,OAAW,CAC3B,GAAI,GAAY,EAAO,GAAI,OAC3B,EAAG,iBAAiB,KAAK,KAAM,GAAO,GACtC,GAAU,EAAO,OACX,CACN,GAAI,GAAY,EAAO,GAAW,OAClC,GAAU,IAAI,GACd,EAAG,iBAAiB,KAAK,KAAM,GAAO,IACtC,GAAU,EAAO,IAKnB,YAAqB,EAAI,EAAG,CAC3B,GAAM,GAAQ,KAAK,MACnB,AAAI,EAAM,KAAO,GACjB,GAAG,UAAU,KAAK,KAAM,GACxB,EAAM,GAAK,GAIZ,YAAqB,EAAI,EAAG,CAC3B,GAAM,GAAQ,KAAK,MACnB,AAAI,GAAY,EAAO,IACvB,GAAG,WAAW,KAAK,KAAM,GACzB,GAAU,EAAO,IAGlB,YAAqB,EAAI,EAAG,CAC3B,GAAM,GAAQ,KAAK,MACnB,AAAI,GAAY,EAAO,IACvB,GAAG,WAAW,KAAK,KAAM,GACzB,GAAU,EAAO,IAGlB,YAAqB,EAAI,EAAG,CAC3B,GAAM,GAAQ,KAAK,MACnB,AAAI,GAAY,EAAO,IACvB,GAAG,WAAW,KAAK,KAAM,GACzB,GAAU,EAAO,IAIlB,YAAsB,EAAI,EAAG,CAC5B,GAAM,GAAQ,KAAK,MACnB,AAAI,EAAM,KAAO,GACjB,GAAG,WAAW,KAAK,KAAM,GACzB,EAAM,GAAK,GAIZ,YAAsB,EAAI,EAAG,CAC5B,GAAM,GAAQ,KAAK,MACnB,AAAI,GAAY,EAAO,IACvB,GAAG,YAAY,KAAK,KAAM,GAC1B,GAAU,EAAO,IAGlB,YAAsB,EAAI,EAAG,CAC5B,GAAM,GAAQ,KAAK,MACnB,AAAI,GAAY,EAAO,IACvB,GAAG,YAAY,KAAK,KAAM,GAC1B,GAAU,EAAO,IAGlB,YAAsB,EAAI,EAAG,CAC5B,GAAM,GAAQ,KAAK,MACnB,AAAI,GAAY,EAAO,IACvB,GAAG,YAAY,KAAK,KAAM,GAC1B,GAAU,EAAO,IAIlB,YAAoB,EAAI,EAAG,EAAU,CACpC,GAAM,GAAQ,KAAK,MACb,EAAO,EAAS,sBAEtB,AAAI,EAAM,KAAO,GAChB,GAAG,UAAU,KAAK,KAAM,GACxB,EAAM,GAAK,GAGZ,EAAS,iBAAiB,GAAK,GAAc,GAG9C,YAAsB,EAAI,EAAG,EAAU,CACtC,GAAM,GAAQ,KAAK,MACb,EAAO,EAAS,sBAEtB,AAAI,EAAM,KAAO,GAChB,GAAG,UAAU,KAAK,KAAM,GACxB,EAAM,GAAK,GAGZ,EAAS,aAAa,GAAK,GAAgB,GAG5C,YAAoB,EAAI,EAAG,EAAU,CACpC,GAAM,GAAQ,KAAK,MACb,EAAO,EAAS,sBAEtB,AAAI,EAAM,KAAO,GAChB,GAAG,UAAU,KAAK,KAAM,GACxB,EAAM,GAAK,GAGZ,EAAS,mBAAmB,GAAK,GAAkB,GAGpD,YAA2B,EAAI,EAAG,EAAU,CAC3C,GAAM,GAAQ,KAAK,MACb,EAAO,EAAS,sBAEtB,AAAI,EAAM,KAAO,GAChB,GAAG,UAAU,KAAK,KAAM,GACxB,EAAM,GAAK,GAGZ,EAAS,kBAAkB,GAAK,GAAqB,GAItD,YAA2B,EAAM,CAChC,OAAQ,OACF,MACJ,MAAO,QAGH,OACJ,MAAO,QAGH,OACJ,MAAO,QAGH,OACJ,MAAO,QAGH,OACJ,MAAO,QAGH,OACJ,MAAO,QAGH,OACJ,MAAO,QAGH,UACA,OACJ,MAAO,QAGH,WACA,OACJ,MAAO,QAGH,WACA,OACJ,MAAO,QAGH,WACA,OACJ,MAAO,QAGH,MACJ,MAAO,QAGH,OACJ,MAAO,QAGH,OACJ,MAAO,QAGH,OACJ,MAAO,QAGH,WAEA,WAEA,WAEA,WAEA,OAEJ,MAAO,QAEH,WAEA,WAEA,OAEJ,MAAO,QAEH,WAEA,WAEA,WAEA,OAEJ,MAAO,QAEH,WAEA,WAEA,WAEA,OAEJ,MAAO,KAKV,YAA0B,EAAI,EAAG,CAChC,EAAG,WAAW,KAAK,KAAM,GAI1B,YAA0B,EAAI,EAAG,CAChC,GAAM,GAAO,GAAQ,EAAG,KAAK,KAAM,GACnC,EAAG,WAAW,KAAK,KAAM,GAG1B,YAA0B,EAAI,EAAG,CAChC,GAAM,GAAO,GAAQ,EAAG,KAAK,KAAM,GACnC,EAAG,WAAW,KAAK,KAAM,GAG1B,YAA0B,EAAI,EAAG,CAChC,GAAM,GAAO,GAAQ,EAAG,KAAK,KAAM,GACnC,EAAG,WAAW,KAAK,KAAM,GAI1B,YAAyB,EAAI,EAAG,CAC/B,GAAM,GAAO,GAAQ,EAAG,KAAK,KAAM,GACnC,EAAG,iBAAiB,KAAK,KAAM,GAAO,GAGvC,YAAyB,EAAI,EAAG,CAC/B,GAAM,GAAO,GAAQ,EAAG,KAAK,KAAM,GACnC,EAAG,iBAAiB,KAAK,KAAM,GAAO,GAGvC,YAAyB,EAAI,EAAG,CAC/B,GAAM,GAAO,GAAQ,EAAG,KAAK,KAAM,IACnC,EAAG,iBAAiB,KAAK,KAAM,GAAO,GAIvC,YAA0B,EAAI,EAAG,CAChC,EAAG,WAAW,KAAK,KAAM,GAI1B,YAA0B,EAAI,EAAG,CAChC,EAAG,WAAW,KAAK,KAAM,GAG1B,YAA0B,EAAI,EAAG,CAChC,EAAG,WAAW,KAAK,KAAM,GAG1B,YAA0B,EAAI,EAAG,CAChC,EAAG,WAAW,KAAK,KAAM,GAI1B,YAA2B,EAAI,EAAG,CACjC,EAAG,YAAY,KAAK,KAAM,GAI3B,YAA2B,EAAI,EAAG,CACjC,EAAG,YAAY,KAAK,KAAM,GAG3B,YAA2B,EAAI,EAAG,CACjC,EAAG,YAAY,KAAK,KAAM,GAG3B,YAA2B,EAAI,EAAG,CACjC,EAAG,YAAY,KAAK,KAAM,GAI3B,YAAyB,EAAI,EAAG,EAAU,CACzC,GAAM,GAAI,EAAE,OACN,EAAQ,GAAc,EAAU,GACtC,EAAG,WAAW,KAAK,KAAM,GAEzB,OAAS,GAAI,EAAG,IAAM,EAAG,EAAE,EAC1B,EAAS,iBAAiB,EAAE,IAAM,GAAc,EAAM,IAIxD,YAAyB,EAAI,EAAG,EAAU,CACzC,GAAM,GAAI,EAAE,OACN,EAAQ,GAAc,EAAU,GACtC,EAAG,WAAW,KAAK,KAAM,GAEzB,OAAS,GAAI,EAAG,IAAM,EAAG,EAAE,EAC1B,EAAS,mBAAmB,EAAE,IAAM,GAAkB,EAAM,IAK9D,YAA4B,EAAM,CACjC,OAAQ,OACF,MACJ,MAAO,QAGH,OACJ,MAAO,QAGH,OACJ,MAAO,QAGH,OACJ,MAAO,QAGH,OACJ,MAAO,QAGH,OACJ,MAAO,QAGH,OACJ,MAAO,QAGH,UACA,OACJ,MAAO,QAGH,WACA,OACJ,MAAO,QAGH,WACA,OACJ,MAAO,QAGH,WACA,OACJ,MAAO,QAGH,MACJ,MAAO,QAGH,OACJ,MAAO,QAGH,OACJ,MAAO,QAGH,OACJ,MAAO,QAGH,WAEA,WAEA,WAEA,WAEA,OAEJ,MAAO,QAEH,WAEA,WAEA,WAEA,OAEJ,MAAO,KAKV,YAAuB,EAAI,EAAY,EAAM,CAC5C,KAAK,GAAK,EACV,KAAK,KAAO,EACZ,KAAK,MAAQ,GACb,KAAK,SAAW,GAAkB,EAAW,MAG9C,YAA0B,EAAI,EAAY,EAAM,CAC/C,KAAK,GAAK,EACV,KAAK,KAAO,EACZ,KAAK,MAAQ,GACb,KAAK,KAAO,EAAW,KACvB,KAAK,SAAW,GAAmB,EAAW,MAG/C,GAAiB,UAAU,YAAc,SAAU,EAAM,CACxD,GAAM,GAAQ,KAAK,MAEnB,AAAI,YAAgB,eAAgB,EAAM,SAAW,EAAK,QACzD,MAAK,MAAQ,GAAI,cAAa,EAAK,SAGpC,GAAU,EAAO,IAGlB,YAA2B,EAAI,CAC9B,KAAK,GAAK,EACV,KAAK,IAAM,GACX,KAAK,IAAM,GAGZ,GAAkB,UAAU,SAAW,SAAU,EAAI,EAAO,EAAU,CACrE,GAAM,GAAM,KAAK,IAEjB,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,IAAM,EAAG,EAAE,EAAG,CAC7C,GAAM,GAAI,EAAI,GACd,EAAE,SAAS,EAAI,EAAM,EAAE,IAAK,KAM9B,GAAM,IAAa,sBASnB,YAAoB,EAAW,EAAe,CAC7C,EAAU,IAAI,KAAK,GACnB,EAAU,IAAI,EAAc,IAAM,EAGnC,YAAsB,EAAY,EAAM,EAAW,CAClD,GAAM,GAAO,EAAW,KACrB,EAAa,EAAK,OAIrB,IAFA,GAAW,UAAY,IAEV,CACZ,GAAM,GAAQ,GAAW,KAAK,GAC3B,EAAW,GAAW,UACrB,EAAK,EAAM,GACT,EAAY,EAAM,KAAO,IAC5B,EAAY,EAAM,GAGrB,GAFI,GAAW,GAAK,EAAK,GAErB,IAAc,QAAa,IAAc,KAAO,EAAW,IAAM,EAAY,CAEhF,GAAW,EAAW,IAAc,OAAY,GAAI,IAAc,EAAI,EAAY,GAAQ,GAAI,IAAiB,EAAI,EAAY,IAC/H,UACM,CAGN,GAAI,GAAO,AADC,EAAU,IACP,GAEf,AAAI,IAAS,QACZ,GAAO,GAAI,IAAkB,GAC7B,GAAW,EAAW,IAGvB,EAAY,IAMf,YAAuB,EAAI,EAAS,CACnC,KAAK,IAAM,GACX,KAAK,IAAM,GACX,GAAM,GAAI,EAAG,oBAAoB,EAAS,EAAG,iBAE7C,OAAS,GAAI,EAAG,EAAI,EAAG,EAAE,EAAG,CAC3B,GAAM,GAAO,EAAG,iBAAiB,EAAS,GACvC,EAAO,EAAG,mBAAmB,EAAS,EAAK,MAC9C,GAAa,EAAM,EAAM,OAI3B,GAAc,UAAU,SAAW,SAAU,EAAI,EAAM,EAAO,EAAU,CACvE,GAAM,GAAI,KAAK,IAAI,GACnB,AAAI,IAAM,QAAW,EAAE,SAAS,EAAI,EAAO,IAG5C,GAAc,UAAU,YAAc,SAAU,EAAI,EAAQ,EAAM,CACjE,GAAM,GAAI,EAAO,GACjB,AAAI,IAAM,QAAW,KAAK,SAAS,EAAI,EAAM,IAI9C,GAAc,OAAS,SAAU,EAAI,EAAK,EAAQ,EAAU,CAC3D,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,IAAM,EAAG,EAAE,EAAG,CAC7C,GAAM,GAAI,EAAI,GACX,EAAI,EAAO,EAAE,IAEhB,AAAI,EAAE,cAAgB,IAErB,EAAE,SAAS,EAAI,EAAE,MAAO,KAK3B,GAAc,aAAe,SAAU,EAAK,EAAQ,CACnD,GAAM,GAAI,GAEV,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,IAAM,EAAG,EAAE,EAAG,CAC7C,GAAM,GAAI,EAAI,GACd,AAAI,EAAE,KAAM,IAAQ,EAAE,KAAK,GAG5B,MAAO,IAGR,YAAqB,EAAI,EAAM,EAAQ,CACtC,GAAM,GAAS,EAAG,aAAa,GAC/B,SAAG,aAAa,EAAQ,GACxB,EAAG,cAAc,GACV,EAGR,GAAI,IAAiB,EAErB,YAAwB,EAAQ,CAC/B,GAAM,GAAQ,EAAO,MAAM;AAAA,GAE3B,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,IACjC,EAAM,GAAK,EAAI,EAAI,KAAO,EAAM,GAGjC,MAAO,GAAM,KAAK;AAAA,GAGnB,YAA+B,EAAU,CACxC,OAAQ,OACF,IACJ,MAAO,CAAC,SAAU,iBAEd,IACJ,MAAO,CAAC,OAAQ,iBAEZ,IACJ,MAAO,CAAC,OAAQ,iBAEZ,IACJ,MAAO,CAAC,OAAQ,sBAEZ,IACJ,MAAO,CAAC,OAAQ,uBAEZ,IACJ,MAAO,CAAC,OAAQ,wBAEZ,IACJ,MAAO,CAAC,QAAS,wCAEb,IACJ,MAAO,CAAC,SAAU,qBAGlB,eAAQ,KAAK,4CAA6C,GACnD,CAAC,SAAU,cAIrB,YAAyB,EAAI,EAAQ,EAAM,CAC1C,GAAM,GAAS,EAAG,mBAAmB,EAAQ,EAAG,gBAC1C,EAAS,EAAG,iBAAiB,GAAQ,OAC3C,MAAI,IAAU,IAAW,GAAW,GAG7B,EAAK,cAAgB;AAAA;AAAA,EAAS,EAAS;AAAA;AAAA,EAAS,GAAe,EAAG,gBAAgB,IAG1F,YAAkC,EAAc,EAAU,CACzD,GAAM,GAAa,GAAsB,GACzC,MAAO,QAAU,EAAe,2BAA6B,EAAW,GAAK,WAAa,EAAW,GAAK,MAG3G,YAAkC,EAAc,EAAU,CACzD,GAAM,GAAa,GAAsB,GACzC,MAAO,QAAU,EAAe,mCAAqC,EAAW,GAAK,EAAW,GAAK,MAGtG,YAAgC,EAAc,EAAa,CAC1D,GAAI,GAEJ,OAAQ,OACF,IACJ,EAAkB,SAClB,UAEI,IACJ,EAAkB,WAClB,UAEI,IACJ,EAAkB,kBAClB,UAEI,IACJ,EAAkB,aAClB,UAEI,IACJ,EAAkB,SAClB,cAGA,QAAQ,KAAK,+CAAgD,GAC7D,EAAkB,SAGpB,MAAO,QAAU,EAAe,2BAA6B,EAAkB,0BAGhF,YAA4B,EAAY,CAEvC,MAAO,AADQ,CAAC,EAAW,sBAAwB,EAAW,cAAgB,EAAW,SAAW,EAAW,uBAAyB,EAAW,oBAAsB,EAAW,aAAe,EAAW,WAAa,WAAa,kDAAoD,GAAK,GAAW,oBAAsB,EAAW,yBAA2B,EAAW,2BAA6B,wCAA0C,GAAI,EAAW,sBAAwB,EAAW,6BAA+B,2CAA6C,GAAK,GAAW,2BAA6B,EAAW,QAAU,EAAW,eAAiB,EAAW,kCAAoC,gDAAkD,IACzuB,OAAO,IAAiB,KAAK;AAAA,GAG5C,YAAyB,EAAS,CACjC,GAAM,GAAS,GAEf,OAAW,KAAQ,GAAS,CAC3B,GAAM,GAAQ,EAAQ,GACtB,AAAI,IAAU,IACd,EAAO,KAAK,WAAa,EAAO,IAAM,GAGvC,MAAO,GAAO,KAAK;AAAA,GAGpB,YAAiC,EAAI,EAAS,CAC7C,GAAM,GAAa,GACb,EAAI,EAAG,oBAAoB,EAAS,EAAG,mBAE7C,OAAS,GAAI,EAAG,EAAI,EAAG,IAAK,CAC3B,GAAM,GAAO,EAAG,gBAAgB,EAAS,GACnC,EAAO,EAAK,KACd,EAAe,EACnB,AAAI,EAAK,OAAS,EAAG,YAAY,GAAe,GAC5C,EAAK,OAAS,EAAG,YAAY,GAAe,GAC5C,EAAK,OAAS,EAAG,YAAY,GAAe,GAEhD,EAAW,GAAQ,CAClB,KAAM,EAAK,KACX,SAAU,EAAG,kBAAkB,EAAS,GACxC,aAAc,GAIhB,MAAO,GAGR,YAAyB,EAAQ,CAChC,MAAO,KAAW,GAGnB,YAA0B,EAAQ,EAAY,CAC7C,MAAO,GAAO,QAAQ,kBAAmB,EAAW,cAAc,QAAQ,mBAAoB,EAAW,eAAe,QAAQ,wBAAyB,EAAW,mBAAmB,QAAQ,oBAAqB,EAAW,gBAAgB,QAAQ,mBAAoB,EAAW,eAAe,QAAQ,yBAA0B,EAAW,oBAAoB,QAAQ,0BAA2B,EAAW,qBAAqB,QAAQ,2BAA4B,EAAW,sBAGzd,YAAkC,EAAQ,EAAY,CACrD,MAAO,GAAO,QAAQ,uBAAwB,EAAW,mBAAmB,QAAQ,yBAA0B,EAAW,kBAAoB,EAAW,qBAIzJ,GAAM,IAAiB,mCAEvB,YAAyB,EAAQ,CAChC,MAAO,GAAO,QAAQ,GAAgB,IAGvC,YAAyB,EAAO,EAAS,CACxC,GAAM,GAAS,GAAY,GAE3B,GAAI,IAAW,OACd,KAAM,IAAI,OAAM,6BAA+B,EAAU,KAG1D,MAAO,IAAgB,GAIxB,GAAM,IAA8B,+FAC9B,GAAoB,+IAE1B,YAAqB,EAAQ,CAC5B,MAAO,GAAO,QAAQ,GAAmB,IAAc,QAAQ,GAA6B,IAG7F,YAAgC,EAAO,EAAO,EAAK,EAAS,CAC3D,eAAQ,KAAK,uHACN,GAAa,EAAO,EAAO,EAAK,GAGxC,YAAsB,EAAO,EAAO,EAAK,EAAS,CACjD,GAAI,GAAS,GAEb,OAAS,GAAI,SAAS,GAAQ,EAAI,SAAS,GAAM,IAChD,GAAU,EAAQ,QAAQ,eAAgB,KAAO,EAAI,MAAM,QAAQ,uBAAwB,GAG5F,MAAO,GAIR,YAA2B,EAAY,CACtC,GAAI,GAAkB,aAAe,EAAW,UAAY;AAAA,YAAwB,EAAW,UAAY,QAE3G,MAAI,GAAW,YAAc,QAC5B,GAAmB;AAAA,wBACb,AAAI,EAAW,YAAc,UACnC,GAAmB;AAAA,0BACT,EAAW,YAAc,QACnC,IAAmB;AAAA,wBAGb,EAGR,YAAqC,EAAY,CAChD,GAAI,GAAsB,uBAE1B,MAAI,GAAW,gBAAkB,GAChC,EAAsB,qBAChB,AAAI,EAAW,gBAAkB,GACvC,EAAsB,0BACZ,EAAW,gBAAkB,IACvC,GAAsB,sBAGhB,EAGR,YAAkC,EAAY,CAC7C,GAAI,GAAmB,mBAEvB,GAAI,EAAW,OACd,OAAQ,EAAW,gBACb,QACA,IACJ,EAAmB,mBACnB,UAEI,QACA,IACJ,EAAmB,sBACnB,MAIH,MAAO,GAGR,YAAkC,EAAY,CAC7C,GAAI,GAAmB,yBAEvB,GAAI,EAAW,OACd,OAAQ,EAAW,gBACb,QACA,IACJ,EAAmB,yBACnB,MAIH,MAAO,GAGR,YAAsC,EAAY,CACjD,GAAI,GAAuB,uBAE3B,GAAI,EAAW,OACd,OAAQ,EAAW,aACb,IACJ,EAAuB,2BACvB,UAEI,IACJ,EAAuB,sBACvB,UAEI,IACJ,EAAuB,sBACvB,MAIH,MAAO,GAGR,YAAsB,EAAU,EAAU,EAAY,EAAe,CAGpE,GAAM,GAAK,EAAS,aACd,EAAU,EAAW,QACvB,EAAe,EAAW,aAC1B,EAAiB,EAAW,eAC1B,EAAsB,GAA4B,GAClD,EAAmB,GAAyB,GAC5C,EAAmB,GAAyB,GAC5C,EAAuB,GAA6B,GACpD,EAAoB,EAAS,YAAc,EAAI,EAAS,YAAc,EACtE,EAAmB,EAAW,SAAW,GAAK,GAAmB,GACjE,EAAgB,GAAgB,GAChC,EAAU,EAAG,gBACf,EAAc,EACd,EAAgB,EAAW,YAAc,YAAc,EAAW,YAAc;AAAA,EAAO,GAE3F,AAAI,EAAW,oBACd,GAAe,CAAC,GAAe,OAAO,IAAiB,KAAK;AAAA,GAExD,EAAa,OAAS,GACzB,IAAgB;AAAA,GAGjB,EAAiB,CAAC,EAAkB,GAAe,OAAO,IAAiB,KAAK;AAAA,GAE5E,EAAe,OAAS,GAC3B,IAAkB;AAAA,IAGnB,GAAe,CAAC,GAAkB,GAAa,uBAAyB,EAAW,WAAY,EAAe,EAAW,WAAa,yBAA2B,GAAI,EAAW,gBAAkB,+BAAiC,GAAI,EAAW,uBAAyB,0BAA4B,GAAI,wBAA0B,EAAmB,qBAAuB,EAAW,SAAU,EAAW,QAAU,EAAW,IAAM,kBAAoB,GAAI,EAAW,QAAU,EAAW,QAAU,mBAAqB,GAAI,EAAW,IAAM,kBAAoB,GAAI,EAAW,OAAS,qBAAuB,GAAI,EAAW,OAAS,WAAa,EAAmB,GAAI,EAAW,SAAW,uBAAyB,GAAI,EAAW,MAAQ,oBAAsB,GAAI,EAAW,YAAc,0BAA4B,GAAI,EAAW,QAAU,sBAAwB,GAAI,EAAW,UAAY,wBAA0B,GAAI,EAAW,WAAa,EAAW,qBAAuB,gCAAkC,GAAI,EAAW,WAAa,EAAW,sBAAwB,iCAAmC,GAAI,EAAW,aAAe,2BAA6B,GAAI,EAAW,sBAAwB,qCAAuC,GAAI,EAAW,mBAAqB,kCAAoC,GAAI,EAAW,iBAAmB,EAAW,uBAAyB,8BAAgC,GAAI,EAAW,YAAc,0BAA4B,GAAI,EAAW,qBAAuB,mCAAqC,GAAI,EAAW,gBAAkB,8BAAgC,GAAI,EAAW,aAAe,2BAA6B,GAAI,EAAW,aAAe,2BAA6B,GAAI,EAAW,SAAW,uBAAyB,GAAI,EAAW,aAAe,2BAA6B,GAAI,EAAW,gBAAkB,8BAAgC,GAAI,EAAW,aAAe,2BAA6B,GAAI,EAAW,eAAiB,sBAAwB,GAAI,EAAW,aAAe,oBAAsB,GAAI,EAAW,aAAe,0BAA4B,GAAI,EAAW,UAAY,iBAAmB,GAAI,EAAW,cAAgB,0BAA4B,GAAI,EAAW,YAAc,sBAAwB,GAAI,EAAW,SAAW,uBAAyB,GAAI,EAAW,iBAAmB,uBAAyB,GAAI,EAAW,aAAe,2BAA6B,GAAI,EAAW,cAAgB,EAAW,cAAgB,GAAQ,2BAA6B,GAAI,EAAW,cAAgB,EAAW,SAAW,+BAAiC,GAAI,EAAW,cAAgB,EAAW,SAAW,8BAAgC,EAAW,kBAAoB,GAAI,EAAW,YAAc,uBAAyB,GAAI,EAAW,UAAY,qBAAuB,GAAI,EAAW,iBAAmB,wBAA0B,GAAI,EAAW,iBAAmB,WAAa,EAAsB,GAAI,EAAW,gBAAkB,8BAAgC,GAAI,EAAW,uBAAyB,0BAA4B,GAAI,EAAW,wBAA0B,EAAW,2BAA6B,8BAAgC,GAAI,4BAA6B,gCAAiC,iCAAkC,2BAA4B,6BAA8B,+BAAgC,+BAAgC,wBAAyB,kCAAmC,SAAU,8BAA+B,iCAAkC,SAAU,2BAA4B,yBAA0B,qBAAsB,qBAAsB,2BAA4B,SAAU,iCAAkC,yBAA0B,6BAA8B,yBAA0B,SAAU,2EAA4E,gCAAiC,gCAAiC,gCAAiC,gCAAiC,2BAA4B,iCAAkC,iCAAkC,iCAAkC,iCAAkC,SAAU,iCAAkC,iCAAkC,iCAAkC,iCAAkC,UAAW,SAAU,sBAAuB,6BAA8B,8BAA+B,SAAU;AAAA,GAAM,OAAO,IAAiB,KAAK;AAAA,GACp7I,EAAiB,CAAC,EAAkB,GAAkB,GAAa,uBAAyB,EAAW,WAAY,EAAe,wBAA0B,EAAmB,EAAW,QAAU,EAAW,IAAM,kBAAoB,GAAI,EAAW,QAAU,EAAW,QAAU,mBAAqB,GAAI,EAAW,IAAM,kBAAoB,GAAI,EAAW,OAAS,qBAAuB,GAAI,EAAW,OAAS,qBAAuB,GAAI,EAAW,OAAS,WAAa,EAAmB,GAAI,EAAW,OAAS,WAAa,EAAmB,GAAI,EAAW,OAAS,WAAa,EAAuB,GAAI,EAAW,SAAW,uBAAyB,GAAI,EAAW,MAAQ,oBAAsB,GAAI,EAAW,YAAc,0BAA4B,GAAI,EAAW,QAAU,sBAAwB,GAAI,EAAW,UAAY,wBAA0B,GAAI,EAAW,WAAa,EAAW,qBAAuB,gCAAkC,GAAI,EAAW,WAAa,EAAW,sBAAwB,iCAAmC,GAAI,EAAW,UAAY,wBAA0B,GAAI,EAAW,aAAe,2BAA6B,GAAI,EAAW,sBAAwB,qCAAuC,GAAI,EAAW,mBAAqB,kCAAoC,GAAI,EAAW,YAAc,0BAA4B,GAAI,EAAW,qBAAuB,mCAAqC,GAAI,EAAW,gBAAkB,8BAAgC,GAAI,EAAW,aAAe,2BAA6B,GAAI,EAAW,aAAe,2BAA6B,GAAI,EAAW,SAAW,uBAAyB,GAAI,EAAW,UAAY,wBAA0B,GAAI,EAAW,MAAQ,oBAAsB,GAAI,EAAW,aAAe,2BAA6B,GAAI,EAAW,gBAAkB,8BAAgC,GAAI,EAAW,aAAe,2BAA6B,GAAI,EAAW,eAAiB,sBAAwB,GAAI,EAAW,cAAgB,EAAW,gBAAkB,oBAAsB,GAAI,EAAW,aAAe,0BAA4B,GAAI,EAAW,UAAY,iBAAmB,GAAI,EAAW,cAAgB,0BAA4B,GAAI,EAAW,YAAc,0BAA4B,GAAI,EAAW,YAAc,sBAAwB,GAAI,EAAW,YAAc,uBAAyB,GAAI,EAAW,UAAY,qBAAuB,GAAI,EAAW,iBAAmB,wBAA0B,GAAI,EAAW,iBAAmB,WAAa,EAAsB,GAAI,EAAW,mBAAqB,8BAAgC,GAAI,EAAW,wBAA0B,oCAAsC,GAAI,EAAW,uBAAyB,0BAA4B,GAAI,EAAW,wBAA0B,EAAW,2BAA6B,8BAAgC,GAAK,GAAW,2BAA6B,EAAW,SAAW,EAAW,kCAAoC,0BAA4B,GAAI,2BAA4B,+BAAgC,+BAAgC,EAAW,cAAgB,GAAgB,uBAAyB,GAAI,EAAW,cAAgB,GAAgB,GAAY,0BAA+B,GACrwG,EAAW,cAAgB,GAAgB,GAAuB,cAAe,EAAW,aAAe,GAAI,EAAW,UAAY,oBAAsB,GAAI,EAAW,SAAW,GAAY,iBAAmB,GAAI,GAAY,wBACrO,EAAW,IAAM,GAAyB,mBAAoB,EAAW,aAAe,GAAI,EAAW,OAAS,GAAyB,sBAAuB,EAAW,gBAAkB,GAAI,EAAW,OAAS,GAAyB,sBAAuB,EAAW,gBAAkB,GAAI,EAAW,YAAc,GAAyB,2BAA4B,EAAW,qBAAuB,GAAI,EAAW,gBAAkB,GAAyB,+BAAgC,EAAW,yBAA2B,GAAI,EAAW,SAAW,GAAyB,wBAAyB,EAAW,kBAAoB,GAAI,GAAyB,sBAAuB,EAAW,gBAAiB,EAAW,aAAe,yBAA2B,EAAW,aAAe,GAAI;AAAA,GAAM,OAAO,IAAiB,KAAK;AAAA,IAGx0B,EAAe,GAAgB,GAC/B,EAAe,GAAiB,EAAc,GAC9C,EAAe,GAAyB,EAAc,GACtD,EAAiB,GAAgB,GACjC,EAAiB,GAAiB,EAAgB,GAClD,EAAiB,GAAyB,EAAgB,GAC1D,EAAe,GAAY,GAC3B,EAAiB,GAAY,GAEzB,EAAW,UAAY,EAAW,sBAAwB,IAE7D,GAAgB;AAAA,EAChB,EAAe,CAAC,oCAAqC,uBAAwB,sBAAuB,6BAA6B,KAAK;AAAA,GAAQ;AAAA,EAAO,EACrJ,EAAiB,CAAC,qBAAsB,EAAW,cAAgB,GAAQ,GAAK,+BAAgC,EAAW,cAAgB,GAAQ,GAAK,oCAAqC,uCAAwC,4BAA6B,8BAA+B,oCAAqC,qCAAsC,6CAA8C,uCAAwC,uCAAwC,+CAAgD,0CAA0C,KAAK;AAAA,GAAQ;AAAA,EAAO,GAGzlB,GAAM,GAAa,EAAgB,EAAe,EAC5C,EAAe,EAAgB,EAAiB,EAGhD,EAAiB,GAAY,EAAI,EAAG,cAAe,GACnD,EAAmB,GAAY,EAAI,EAAG,gBAAiB,GAa7D,GAZA,EAAG,aAAa,EAAS,GACzB,EAAG,aAAa,EAAS,GAEzB,AAAI,EAAW,sBAAwB,OACtC,EAAG,mBAAmB,EAAS,EAAG,EAAW,qBACnC,EAAW,eAAiB,IAEtC,EAAG,mBAAmB,EAAS,EAAG,YAGnC,EAAG,YAAY,GAEX,EAAS,MAAM,kBAAmB,CACrC,GAAM,GAAa,EAAG,kBAAkB,GAAS,OAC3C,EAAY,EAAG,iBAAiB,GAAgB,OAChD,EAAc,EAAG,iBAAiB,GAAkB,OACtD,GAAW,GACX,EAAkB,GAEtB,GAAI,EAAG,oBAAoB,EAAS,EAAG,eAAiB,GAAO,CAC9D,GAAW,GACX,GAAM,GAAe,GAAgB,EAAI,EAAgB,UACnD,EAAiB,GAAgB,EAAI,EAAkB,YAC7D,QAAQ,MAAM,oCAAsC,EAAG,WAAa,sBAA6B,EAAG,oBAAoB,EAAS,EAAG,iBAAmB;AAAA;AAAA,oBAAgC,EAAa;AAAA,EAAO,EAAe;AAAA,EAAO,OAC3N,AAAI,KAAe,GACzB,QAAQ,KAAK,wCAAyC,GAC5C,KAAc,IAAM,IAAgB,KAC9C,GAAkB,IAGnB,AAAI,GACH,MAAK,YAAc,CAClB,SAAU,GACV,WAAY,EACZ,aAAc,CACb,IAAK,EACL,OAAQ,GAET,eAAgB,CACf,IAAK,EACL,OAAQ,KAUZ,EAAG,aAAa,GAChB,EAAG,aAAa,GAEhB,GAAI,GAEJ,KAAK,YAAc,UAAY,CAC9B,MAAI,KAAmB,QACtB,GAAiB,GAAI,IAAc,EAAI,IAGjC,GAIR,GAAI,GAEJ,YAAK,cAAgB,UAAY,CAChC,MAAI,KAAqB,QACxB,GAAmB,GAAwB,EAAI,IAGzC,GAIR,KAAK,QAAU,UAAY,CAC1B,EAAc,uBAAuB,MACrC,EAAG,cAAc,GACjB,KAAK,QAAU,QAIhB,KAAK,KAAO,EAAW,WACvB,KAAK,GAAK,KACV,KAAK,SAAW,EAChB,KAAK,UAAY,EACjB,KAAK,QAAU,EACf,KAAK,aAAe,EACpB,KAAK,eAAiB,EACf,KAGR,YAAuB,EAAU,EAAU,EAAY,EAAY,EAAc,EAAe,EAAU,CACzG,GAAM,GAAW,GACX,EAAW,EAAa,SACxB,EAAyB,EAAa,uBACtC,EAAsB,EAAa,oBACnC,EAAoB,EAAa,kBACjC,EAAiB,EAAa,eAChC,EAAY,EAAa,UACvB,EAAY,CACjB,kBAAmB,QACnB,qBAAsB,eACtB,mBAAoB,SACpB,kBAAmB,QACnB,oBAAqB,UACrB,kBAAmB,QACnB,iBAAkB,OAClB,qBAAsB,WACtB,qBAAsB,WACtB,mBAAoB,SACpB,kBAAmB,QACnB,mBAAoB,SACpB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,UAEX,EAAiB,CAAC,YAAa,WAAY,yBAA0B,iBAAkB,aAAc,kBAAmB,MAAO,cAAe,SAAU,iBAAkB,SAAU,aAAc,iBAAkB,eAAgB,WAAY,mBAAoB,QAAS,cAAe,sBAAuB,UAAW,YAAa,uBAAwB,wBAAyB,YAAa,eAAgB,wBAAyB,qBAAsB,kBAAmB,cAAe,uBAAwB,kBAAmB,0BAA2B,eAAgB,eAAgB,cAAe,WAAY,YAAa,UAAW,eAAgB,eAAgB,iBAAkB,YAAa,gBAAiB,MAAO,SAAU,UAAW,cAAe,kBAAmB,yBAA0B,WAAY,WAAY,mBAAoB,eAAgB,eAAgB,oBAAqB,qBAAsB,eAAgB,iBAAkB,gBAAiB,gBAAiB,oBAAqB,qBAAsB,uBAAwB,sBAAuB,mBAAoB,gBAAiB,cAAe,0BAA2B,cAAe,YAAa,oBAAqB,sBAAuB,eAAgB,YAAa,SAAU,QAAS,eAAgB,kBAAmB,gBAEhzC,WAAqB,EAAQ,CAE5B,GAAM,GAAQ,AADG,EAAO,SACD,MAEvB,GAAI,EACH,MAAO,MACD,CAQN,GAAM,GAAkB,KAAK,MAAO,CADZ,EAC8B,IAAM,GACtD,GAAW,KAAK,IAAI,EAAiB,EAAM,QAEjD,MAAI,IAAW,EAAM,OACpB,SAAQ,KAAK,qCAAuC,EAAM,OAAS,6BAA+B,GAAW,KACtG,GAGD,IAIT,WAAmC,EAAK,CACvC,GAAI,GAEJ,MAAI,IAAO,EAAI,UACd,EAAW,EAAI,SACT,AAAI,GAAO,EAAI,oBACrB,SAAQ,KAAK,6HACb,EAAW,EAAI,QAAQ,UAEvB,EAAW,GAGR,GAAY,GAAO,EAAI,WAAa,EAAI,SAAW,IAAc,EAAI,OAAS,IAAoB,EAAI,WAAa,IACtH,GAAW,IAGL,EAGR,WAAuB,EAAU,EAAQ,EAAS,EAAO,EAAQ,CAChE,GAAM,IAAM,EAAM,IACZ,EAAc,EAAS,uBAAyB,EAAM,YAAc,KACpE,EAAU,GAAS,uBAAyB,EAAa,GAAU,IAAI,EAAS,QAAU,GAC1F,EAAW,EAAU,EAAS,MAG9B,EAAW,EAAO,cAAgB,EAAY,GAAU,EAE9D,AAAI,EAAS,YAAc,MAC1B,GAAY,EAAa,gBAAgB,EAAS,WAE9C,IAAc,EAAS,WAC1B,QAAQ,KAAK,oCAAqC,EAAS,UAAW,uBAAwB,EAAW,aAI3G,GAAI,IAAc,GAElB,GAAI,EAAU,CACb,GAAM,IAAS,GAAU,GACzB,GAAe,GAAO,aACtB,GAAiB,GAAO,mBAExB,IAAe,EAAS,aACxB,GAAiB,EAAS,eAG3B,GAAM,IAAsB,EAAS,kBAC/B,GAAe,EAAS,UAAY,EACpC,GAAe,EAAS,UAAY,EAkG1C,MAjGmB,CAClB,SAAU,EACV,SAAU,EACV,WAAY,EAAS,KACrB,aAAc,GACd,eAAgB,GAChB,QAAS,EAAS,QAClB,oBAAqB,EAAS,sBAAwB,GACtD,YAAa,EAAS,YACtB,UAAW,EACX,WAAY,EAAO,kBAAoB,GACvC,gBAAiB,EAAO,kBAAoB,IAAQ,EAAO,gBAAkB,KAC7E,uBAAwB,EACxB,eAAgB,KAAwB,KAAO,EAA0B,GAAoB,SAAW,EAAS,eACjH,IAAK,CAAC,CAAC,EAAS,IAChB,YAAa,EAA0B,EAAS,KAChD,OAAQ,CAAC,CAAC,EAAS,OACnB,eAAgB,EAA0B,EAAS,QACnD,OAAQ,CAAC,CAAC,EACV,WAAY,GAAU,EAAO,QAC7B,eAAgB,EAA0B,GAC1C,aAAc,CAAC,CAAC,GAAW,GAAO,UAAY,IAA2B,EAAO,UAAY,IAC5F,SAAU,CAAC,CAAC,EAAS,SACrB,iBAAkB,EAA0B,EAAS,UACrD,MAAO,CAAC,CAAC,EAAS,MAClB,YAAa,CAAC,CAAC,EAAS,YACxB,oBAAqB,EAA0B,EAAS,aACxD,QAAS,CAAC,CAAC,EAAS,QACpB,UAAW,CAAC,CAAC,EAAS,UACtB,qBAAsB,EAAS,gBAAkB,GACjD,sBAAuB,EAAS,gBAAkB,GAClD,UAAW,GACX,aAAc,IAAgB,CAAC,CAAC,EAAS,aACzC,sBAAuB,IAAgB,CAAC,CAAC,EAAS,sBAClD,mBAAoB,IAAgB,CAAC,CAAC,EAAS,mBAC/C,gBAAiB,CAAC,CAAC,EAAS,gBAC5B,aAAc,CAAC,CAAC,EAAS,aACzB,aAAc,CAAC,CAAC,EAAS,aACzB,YAAa,CAAC,CAAC,EAAS,YACxB,qBAAsB,CAAC,CAAC,EAAS,qBACjC,gBAAiB,CAAC,CAAC,EAAS,gBAC5B,wBAAyB,EAA0B,EAAS,iBAC5D,SAAU,CAAC,CAAC,EAAS,SACrB,UAAW,GACX,YAAa,CAAC,CAAC,EAAS,YACxB,MAAO,EAAS,MAAQ,EACxB,aAAc,EAAS,aAAe,EACtC,gBAAiB,CAAC,CAAC,EAAS,gBAC5B,aAAc,CAAC,CAAC,EAAS,aACzB,QAAS,EAAS,QAClB,eAAgB,CAAC,CAAC,EAAS,WAAa,CAAC,CAAC,EAAO,UAAY,CAAC,CAAC,EAAO,SAAS,WAAW,QAC1F,aAAc,EAAS,aACvB,aAAc,EAAS,eAAiB,IAAQ,CAAC,CAAC,EAAO,UAAY,CAAC,CAAC,EAAO,SAAS,WAAW,OAAS,EAAO,SAAS,WAAW,MAAM,WAAa,EACzJ,UAAW,CAAC,CAAC,EAAS,KAAO,CAAC,CAAC,EAAS,SAAW,CAAC,CAAC,EAAS,WAAa,CAAC,CAAC,EAAS,aAAe,CAAC,CAAC,EAAS,UAAY,CAAC,CAAC,EAAS,aAAe,CAAC,CAAC,EAAS,cAAgB,CAAC,CAAC,EAAS,cAAgB,CAAC,CAAC,EAAS,cAAgB,CAAC,CAAC,EAAS,uBAAyB,CAAC,CAAC,EAAS,oBAAsB,CAAC,CAAC,EAAS,iBAAmB,CAAC,CAAC,EAAS,iBAAmB,CAAC,CAAC,EAAS,cAAgB,CAAC,CAAC,EAAS,sBAAwB,CAAC,CAAC,EAAS,gBACjb,cAAe,CAAE,EAAC,CAAC,EAAS,KAAO,CAAC,CAAC,EAAS,SAAW,CAAC,CAAC,EAAS,WAAa,CAAC,CAAC,EAAS,aAAe,CAAC,CAAC,EAAS,UAAY,CAAC,CAAC,EAAS,aAAe,CAAC,CAAC,EAAS,cAAgB,CAAC,CAAC,EAAS,cAAgB,CAAC,CAAC,EAAS,oBAAsB,EAAS,aAAe,GAAK,CAAC,CAAC,EAAS,iBAAmB,CAAC,CAAC,EAAS,cAAgB,CAAC,CAAC,EAAS,sBAAwB,CAAC,CAAC,EAAS,kBAAoB,CAAC,CAAC,EAAS,gBACtZ,IAAK,CAAC,CAAC,GACP,OAAQ,EAAS,IACjB,QAAS,IAAO,GAAI,UACpB,YAAa,CAAC,CAAC,EAAS,YACxB,gBAAiB,EAAS,gBAC1B,uBAAwB,EACxB,SAAU,EAAO,gBAAkB,IAAQ,EAAW,EACtD,SAAU,EACV,iBAAkB,EAClB,aAAc,CAAC,CAAC,EAAO,UAAY,CAAC,CAAC,EAAO,SAAS,gBAAgB,SACrE,aAAc,CAAC,CAAC,EAAO,UAAY,CAAC,CAAC,EAAO,SAAS,gBAAgB,OACrE,kBAAmB,CAAC,CAAC,EAAO,UAAY,CAAC,CAAC,EAAO,SAAS,gBAAgB,SAAW,EAAO,SAAS,gBAAgB,SAAS,OAAS,EACvI,aAAc,EAAO,YAAY,OACjC,eAAgB,EAAO,MAAM,OAC7B,cAAe,EAAO,KAAK,OAC3B,kBAAmB,EAAO,SAAS,OACnC,cAAe,EAAO,KAAK,OAC3B,mBAAoB,EAAO,qBAAqB,OAChD,qBAAsB,EAAO,eAAe,OAC5C,oBAAqB,EAAO,cAAc,OAC1C,kBAAmB,EAAS,UAC5B,oBAAqB,EAAS,gBAC9B,OAAQ,EAAS,OACjB,UAAW,EAAS,UACpB,iBAAkB,EAAS,UAAU,SAAW,EAAQ,OAAS,EACjE,cAAe,EAAS,UAAU,KAClC,YAAa,EAAS,WAAa,EAAS,YAAc,GAC1D,wBAAyB,EAAS,wBAClC,mBAAoB,EAAS,mBAC7B,YAAa,EAAS,OAAS,GAC/B,UAAW,EAAS,OAAS,GAC7B,aAAc,EAAS,eAAiB,OAAY,EAAS,aAAe,GAC5E,oBAAqB,EAAS,oBAC9B,qBAAsB,EAAS,YAAc,EAAS,WAAW,YACjE,mBAAoB,EAAS,YAAc,EAAS,WAAW,UAC/D,qBAAsB,EAAS,YAAc,EAAS,WAAW,YACjE,0BAA2B,EAAS,YAAc,EAAS,WAAW,iBACtE,2BAA4B,GAAY,EAAW,IAAI,kBACvD,6BAA8B,GAAY,EAAW,IAAI,sBACzD,kCAAmC,GAAY,EAAW,IAAI,0BAC9D,sBAAuB,EAAS,yBAKlC,WAA4B,EAAY,CACvC,GAAM,GAAQ,GASd,GAPA,AAAI,EAAW,SACd,EAAM,KAAK,EAAW,UAEtB,GAAM,KAAK,GAAW,EAAW,iBACjC,EAAM,KAAK,GAAW,EAAW,gBAG9B,EAAW,UAAY,OAC1B,OAAW,KAAQ,GAAW,QAC7B,EAAM,KAAK,GACX,EAAM,KAAK,EAAW,QAAQ,IAIhC,GAAI,EAAW,sBAAwB,GAAO,CAC7C,OAAS,GAAI,EAAG,EAAI,EAAe,OAAQ,IAC1C,EAAM,KAAK,EAAW,EAAe,KAGtC,EAAM,KAAK,EAAS,gBACpB,EAAM,KAAK,EAAS,aAGrB,SAAM,KAAK,EAAW,uBACf,EAAM,OAGd,WAAqB,EAAU,CAC9B,GAAM,GAAW,EAAU,EAAS,MAChC,EAEJ,GAAI,EAAU,CACb,GAAM,GAAS,GAAU,GACzB,EAAW,GAAc,MAAM,EAAO,cAEtC,GAAW,EAAS,SAGrB,MAAO,GAGR,WAAwB,EAAY,EAAU,CAC7C,GAAI,GAEJ,OAAS,GAAI,EAAG,EAAK,EAAS,OAAQ,EAAI,EAAI,IAAK,CAClD,GAAM,IAAqB,EAAS,GAEpC,GAAI,GAAmB,WAAa,EAAU,CAC7C,EAAU,GACV,EAAE,EAAQ,UACV,OAIF,MAAI,KAAY,QACf,GAAU,GAAI,IAAa,EAAU,EAAU,EAAY,GAC3D,EAAS,KAAK,IAGR,EAGR,WAAwB,EAAS,CAChC,GAAI,EAAE,EAAQ,WAAc,EAAG,CAE9B,GAAM,GAAI,EAAS,QAAQ,GAC3B,EAAS,GAAK,EAAS,EAAS,OAAS,GACzC,EAAS,MAET,EAAQ,WAIV,MAAO,CACN,cAAe,EACf,mBAAoB,EACpB,YAAa,EACb,eAAgB,EAChB,eAAgB,EAEhB,SAAU,GAIZ,aAA2B,CAC1B,GAAI,GAAa,GAAI,SAErB,WAAa,EAAQ,CACpB,GAAI,GAAM,EAAW,IAAI,GAEzB,MAAI,KAAQ,QACX,GAAM,GACN,EAAW,IAAI,EAAQ,IAGjB,EAGR,WAAgB,EAAQ,CACvB,EAAW,OAAO,GAGnB,WAAgB,EAAQ,EAAK,EAAO,CACnC,EAAW,IAAI,GAAQ,GAAO,EAG/B,YAAmB,CAClB,EAAa,GAAI,SAGlB,MAAO,CACN,IAAK,EACL,OAAQ,EACR,OAAQ,EACR,QAAS,GAIX,YAA2B,EAAG,EAAG,CAChC,MAAI,GAAE,aAAe,EAAE,WACf,EAAE,WAAa,EAAE,WACd,EAAE,cAAgB,EAAE,YACvB,EAAE,YAAc,EAAE,YACf,EAAE,UAAY,EAAE,QACnB,EAAE,QAAQ,GAAK,EAAE,QAAQ,GACtB,EAAE,SAAS,KAAO,EAAE,SAAS,GAChC,EAAE,SAAS,GAAK,EAAE,SAAS,GACxB,EAAE,IAAM,EAAE,EACb,EAAE,EAAI,EAAE,EAER,EAAE,GAAK,EAAE,GAIlB,YAAkC,EAAG,EAAG,CACvC,MAAI,GAAE,aAAe,EAAE,WACf,EAAE,WAAa,EAAE,WACd,EAAE,cAAgB,EAAE,YACvB,EAAE,YAAc,EAAE,YACf,EAAE,IAAM,EAAE,EACb,EAAE,EAAI,EAAE,EAER,EAAE,GAAK,EAAE,GAIlB,YAAyB,EAAY,CACpC,GAAM,GAAc,GAChB,EAAmB,EACjB,EAAS,GACT,EAAe,GACf,EAAc,GACd,EAAiB,CACtB,GAAI,IAGL,YAAgB,CACf,EAAmB,EACnB,EAAO,OAAS,EAChB,EAAa,OAAS,EACtB,EAAY,OAAS,EAGtB,WAA2B,EAAQ,EAAU,EAAU,EAAY,EAAG,EAAO,CAC5E,GAAI,GAAa,EAAY,GACvB,EAAqB,EAAW,IAAI,GAE1C,MAAI,KAAe,OAClB,GAAa,CACZ,GAAI,EAAO,GACX,OAAQ,EACR,SAAU,EACV,SAAU,EACV,QAAS,EAAmB,SAAW,EACvC,WAAY,EACZ,YAAa,EAAO,YACpB,EAAG,EACH,MAAO,GAER,EAAY,GAAoB,GAEhC,GAAW,GAAK,EAAO,GACvB,EAAW,OAAS,EACpB,EAAW,SAAW,EACtB,EAAW,SAAW,EACtB,EAAW,QAAU,EAAmB,SAAW,EACnD,EAAW,WAAa,EACxB,EAAW,YAAc,EAAO,YAChC,EAAW,EAAI,EACf,EAAW,MAAQ,GAGpB,IACO,EAGR,WAAc,EAAQ,EAAU,EAAU,EAAY,EAAG,EAAO,CAC/D,GAAM,GAAa,EAAkB,EAAQ,EAAU,EAAU,EAAY,EAAG,GAEhF,AAAI,EAAS,aAAe,EAC3B,EAAa,KAAK,GACZ,AAAI,EAAS,cAAgB,GACnC,EAAY,KAAK,GAEjB,EAAO,KAAK,GAId,WAAiB,EAAQ,EAAU,EAAU,EAAY,EAAG,EAAO,CAClE,GAAM,GAAa,EAAkB,EAAQ,EAAU,EAAU,EAAY,EAAG,GAEhF,AAAI,EAAS,aAAe,EAC3B,EAAa,QAAQ,GACf,AAAI,EAAS,cAAgB,GACnC,EAAY,QAAQ,GAEpB,EAAO,QAAQ,GAIjB,WAAc,EAAkB,EAAuB,CACtD,AAAI,EAAO,OAAS,GAAG,EAAO,KAAK,GAAoB,IACnD,EAAa,OAAS,GAAG,EAAa,KAAK,GAAyB,IACpE,EAAY,OAAS,GAAG,EAAY,KAAK,GAAyB,IAGvE,YAAkB,CAEjB,OAAS,GAAI,EAAkB,EAAK,EAAY,OAAQ,EAAI,EAAI,IAAK,CACpE,GAAM,GAAa,EAAY,GAC/B,GAAI,EAAW,KAAO,KAAM,MAC5B,EAAW,GAAK,KAChB,EAAW,OAAS,KACpB,EAAW,SAAW,KACtB,EAAW,SAAW,KACtB,EAAW,QAAU,KACrB,EAAW,MAAQ,MAIrB,MAAO,CACN,OAAQ,EACR,aAAc,EACd,YAAa,EACb,KAAM,EACN,KAAM,EACN,QAAS,EACT,OAAQ,EACR,KAAM,GAIR,YAA0B,EAAY,CACrC,GAAI,GAAQ,GAAI,SAEhB,WAAa,EAAO,EAAiB,CACpC,GAAI,GAEJ,MAAI,GAAM,IAAI,KAAW,GACxB,GAAO,GAAI,IAAgB,GAC3B,EAAM,IAAI,EAAO,CAAC,KAElB,AAAI,GAAmB,EAAM,IAAI,GAAO,OACvC,GAAO,GAAI,IAAgB,GAC3B,EAAM,IAAI,GAAO,KAAK,IAEtB,EAAO,EAAM,IAAI,GAAO,GAInB,EAGR,YAAmB,CAClB,EAAQ,GAAI,SAGb,MAAO,CACN,IAAK,EACL,QAAS,GAIX,aAAyB,CACxB,GAAM,GAAS,GACf,MAAO,CACN,IAAK,SAAU,EAAO,CACrB,GAAI,EAAO,EAAM,MAAQ,OACxB,MAAO,GAAO,EAAM,IAGrB,GAAI,GAEJ,OAAQ,EAAM,UACR,mBACJ,EAAW,CACV,UAAW,GAAI,GACf,MAAO,GAAI,KAEZ,UAEI,YACJ,EAAW,CACV,SAAU,GAAI,GACd,UAAW,GAAI,GACf,MAAO,GAAI,IACX,SAAU,EACV,QAAS,EACT,YAAa,EACb,MAAO,GAER,UAEI,aACJ,EAAW,CACV,SAAU,GAAI,GACd,MAAO,GAAI,IACX,SAAU,EACV,MAAO,GAER,UAEI,kBACJ,EAAW,CACV,UAAW,GAAI,GACf,SAAU,GAAI,IACd,YAAa,GAAI,KAElB,UAEI,gBACJ,EAAW,CACV,MAAO,GAAI,IACX,SAAU,GAAI,GACd,UAAW,GAAI,GACf,WAAY,GAAI,IAEjB,MAGF,SAAO,EAAM,IAAM,EACZ,IAKV,aAA+B,CAC9B,GAAM,GAAS,GACf,MAAO,CACN,IAAK,SAAU,EAAO,CACrB,GAAI,EAAO,EAAM,MAAQ,OACxB,MAAO,GAAO,EAAM,IAGrB,GAAI,GAEJ,OAAQ,EAAM,UACR,mBACJ,EAAW,CACV,WAAY,EACZ,iBAAkB,EAClB,aAAc,EACd,cAAe,GAAI,KAEpB,UAEI,YACJ,EAAW,CACV,WAAY,EACZ,iBAAkB,EAClB,aAAc,EACd,cAAe,GAAI,KAEpB,UAEI,aACJ,EAAW,CACV,WAAY,EACZ,iBAAkB,EAClB,aAAc,EACd,cAAe,GAAI,IACnB,iBAAkB,EAClB,gBAAiB,KAElB,MAIF,SAAO,EAAM,IAAM,EACZ,IAKV,GAAI,IAAc,EAElB,YAAkC,EAAQ,EAAQ,CACjD,MAAQ,GAAO,WAAa,EAAI,GAAM,GAAO,WAAa,EAAI,GAG/D,YAAqB,EAAY,EAAc,CAC9C,GAAM,GAAQ,GAAI,IACZ,EAAc,KACd,EAAQ,CACb,QAAS,EACT,KAAM,CACL,kBAAmB,GACnB,YAAa,GACb,WAAY,GACZ,eAAgB,GAChB,WAAY,GACZ,sBAAuB,GACvB,gBAAiB,GACjB,eAAgB,IAEjB,QAAS,CAAC,EAAG,EAAG,GAChB,MAAO,GACP,YAAa,GACb,kBAAmB,GACnB,qBAAsB,GACtB,wBAAyB,GACzB,KAAM,GACN,WAAY,GACZ,cAAe,GACf,iBAAkB,GAClB,SAAU,GACV,aAAc,KACd,aAAc,KACd,MAAO,GACP,YAAa,GACb,eAAgB,GAChB,kBAAmB,GACnB,KAAM,IAGP,OAAS,GAAI,EAAG,EAAI,EAAG,IAAK,EAAM,MAAM,KAAK,GAAI,IAEjD,GAAM,GAAU,GAAI,GACd,EAAU,GAAI,IACd,EAAW,GAAI,IAErB,WAAe,EAAQ,EAAyB,CAC/C,GAAI,GAAI,EACN,EAAI,EACJ,EAAI,EAEN,OAAS,GAAI,EAAG,EAAI,EAAG,IAAK,EAAM,MAAM,GAAG,IAAI,EAAG,EAAG,GAErD,GAAI,GAAoB,EACpB,EAAc,EACd,EAAa,EACb,EAAiB,EACjB,EAAa,EACb,EAAwB,EACxB,EAAkB,EAClB,EAAiB,EACrB,EAAO,KAAK,IAEZ,GAAM,GAAc,IAA4B,GAAO,KAAK,GAAK,EAEjE,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,IAAK,CAC9C,GAAM,GAAQ,EAAO,GACf,GAAQ,EAAM,MACd,EAAY,EAAM,UAClB,EAAW,EAAM,SACjB,EAAY,EAAM,QAAU,EAAM,OAAO,IAAM,EAAM,OAAO,IAAI,QAAU,KAEhF,GAAI,EAAM,eACT,GAAK,GAAM,EAAI,EAAY,EAC3B,GAAK,GAAM,EAAI,EAAY,EAC3B,GAAK,GAAM,EAAI,EAAY,UACjB,EAAM,aAChB,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,EAAM,MAAM,GAAG,gBAAgB,EAAM,GAAG,aAAa,GAAI,WAEhD,EAAM,mBAAoB,CACpC,GAAM,GAAW,EAAM,IAAI,GAG3B,GAFA,EAAS,MAAM,KAAK,EAAM,OAAO,eAAe,EAAM,UAAY,GAE9D,EAAM,WAAY,CACrB,GAAM,IAAS,EAAM,OACf,GAAiB,EAAY,IAAI,GACvC,GAAe,WAAa,GAAO,KACnC,GAAe,iBAAmB,GAAO,WACzC,GAAe,aAAe,GAAO,OACrC,GAAe,cAAgB,GAAO,QACtC,EAAM,kBAAkB,GAAqB,GAC7C,EAAM,qBAAqB,GAAqB,EAChD,EAAM,wBAAwB,GAAqB,EAAM,OAAO,OAChE,IAGD,EAAM,YAAY,GAAqB,EACvC,YACU,EAAM,YAAa,CAC7B,GAAM,GAAW,EAAM,IAAI,GAQ3B,GAPA,EAAS,SAAS,sBAAsB,EAAM,aAC9C,EAAS,MAAM,KAAK,IAAO,eAAe,EAAY,GACtD,EAAS,SAAW,EACpB,EAAS,QAAU,KAAK,IAAI,EAAM,OAClC,EAAS,YAAc,KAAK,IAAI,EAAM,MAAS,GAAI,EAAM,WACzD,EAAS,MAAQ,EAAM,MAEnB,EAAM,WAAY,CACrB,GAAM,IAAS,EAAM,OACf,GAAiB,EAAY,IAAI,GACvC,GAAe,WAAa,GAAO,KACnC,GAAe,iBAAmB,GAAO,WACzC,GAAe,aAAe,GAAO,OACrC,GAAe,cAAgB,GAAO,QACtC,EAAM,WAAW,GAAc,GAC/B,EAAM,cAAc,GAAc,EAClC,EAAM,iBAAiB,GAAc,EAAM,OAAO,OAClD,IAGD,EAAM,KAAK,GAAc,EACzB,YACU,EAAM,gBAAiB,CACjC,GAAM,GAAW,EAAM,IAAI,GAI3B,EAAS,MAAM,KAAK,IAAO,eAAe,GAC1C,EAAS,UAAU,IAAI,EAAM,MAAQ,GAAK,EAAK,GAC/C,EAAS,WAAW,IAAI,EAAK,EAAM,OAAS,GAAK,GACjD,EAAM,SAAS,GAAkB,EACjC,YACU,EAAM,aAAc,CAC9B,GAAM,GAAW,EAAM,IAAI,GAK3B,GAJA,EAAS,MAAM,KAAK,EAAM,OAAO,eAAe,EAAM,UAAY,GAClE,EAAS,SAAW,EAAM,SAC1B,EAAS,MAAQ,EAAM,MAEnB,EAAM,WAAY,CACrB,GAAM,IAAS,EAAM,OACf,GAAiB,EAAY,IAAI,GACvC,GAAe,WAAa,GAAO,KACnC,GAAe,iBAAmB,GAAO,WACzC,GAAe,aAAe,GAAO,OACrC,GAAe,cAAgB,GAAO,QACtC,GAAe,iBAAmB,GAAO,OAAO,KAChD,GAAe,gBAAkB,GAAO,OAAO,IAC/C,EAAM,YAAY,GAAe,GACjC,EAAM,eAAe,GAAe,EACpC,EAAM,kBAAkB,GAAe,EAAM,OAAO,OACpD,IAGD,EAAM,MAAM,GAAe,EAC3B,YACU,EAAM,kBAAmB,CACnC,GAAM,GAAW,EAAM,IAAI,GAC3B,EAAS,SAAS,KAAK,EAAM,OAAO,eAAe,EAAY,GAC/D,EAAS,YAAY,KAAK,EAAM,aAAa,eAAe,EAAY,GACxE,EAAM,KAAK,GAAc,EACzB,KAIF,AAAI,EAAiB,GACpB,CAAI,EAAa,UAMZ,EAAW,IAAI,8BAAgC,GAJnD,GAAM,aAAe,GAAY,YACjC,EAAM,aAAe,GAAY,aAM1B,AAAI,EAAW,IAAI,mCAAqC,GAC9D,GAAM,aAAe,GAAY,WACjC,EAAM,aAAe,GAAY,YAEjC,QAAQ,MAAM,gFAKjB,EAAM,QAAQ,GAAK,EACnB,EAAM,QAAQ,GAAK,EACnB,EAAM,QAAQ,GAAK,EACnB,GAAM,GAAO,EAAM,KAEnB,AAAI,GAAK,oBAAsB,GAAqB,EAAK,cAAgB,GAAe,EAAK,aAAe,GAAc,EAAK,iBAAmB,GAAkB,EAAK,aAAe,GAAc,EAAK,wBAA0B,GAAyB,EAAK,kBAAoB,GAAmB,EAAK,iBAAmB,IACjU,GAAM,YAAY,OAAS,EAC3B,EAAM,KAAK,OAAS,EACpB,EAAM,SAAS,OAAS,EACxB,EAAM,MAAM,OAAS,EACrB,EAAM,KAAK,OAAS,EACpB,EAAM,kBAAkB,OAAS,EACjC,EAAM,qBAAqB,OAAS,EACpC,EAAM,YAAY,OAAS,EAC3B,EAAM,eAAe,OAAS,EAC9B,EAAM,WAAW,OAAS,EAC1B,EAAM,cAAc,OAAS,EAC7B,EAAM,wBAAwB,OAAS,EACvC,EAAM,kBAAkB,OAAS,EACjC,EAAM,iBAAiB,OAAS,EAChC,EAAK,kBAAoB,EACzB,EAAK,YAAc,EACnB,EAAK,WAAa,EAClB,EAAK,eAAiB,EACtB,EAAK,WAAa,EAClB,EAAK,sBAAwB,EAC7B,EAAK,gBAAkB,EACvB,EAAK,eAAiB,EACtB,EAAM,QAAU,MAIlB,WAAmB,EAAQ,EAAQ,CAClC,GAAI,GAAoB,EACpB,EAAc,EACd,EAAa,EACb,EAAiB,EACjB,EAAa,EACX,EAAa,EAAO,mBAE1B,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,IAAK,CAC9C,GAAM,GAAQ,EAAO,GAErB,GAAI,EAAM,mBAAoB,CAC7B,GAAM,GAAW,EAAM,YAAY,GACnC,EAAS,UAAU,sBAAsB,EAAM,aAC/C,EAAQ,sBAAsB,EAAM,OAAO,aAC3C,EAAS,UAAU,IAAI,GACvB,EAAS,UAAU,mBAAmB,GACtC,YACU,EAAM,YAAa,CAC7B,GAAM,GAAW,EAAM,KAAK,GAC5B,EAAS,SAAS,sBAAsB,EAAM,aAC9C,EAAS,SAAS,aAAa,GAC/B,EAAS,UAAU,sBAAsB,EAAM,aAC/C,EAAQ,sBAAsB,EAAM,OAAO,aAC3C,EAAS,UAAU,IAAI,GACvB,EAAS,UAAU,mBAAmB,GACtC,YACU,EAAM,gBAAiB,CACjC,GAAM,GAAW,EAAM,SAAS,GAChC,EAAS,SAAS,sBAAsB,EAAM,aAC9C,EAAS,SAAS,aAAa,GAE/B,EAAS,WACT,EAAQ,KAAK,EAAM,aACnB,EAAQ,YAAY,GACpB,EAAS,gBAAgB,GACzB,EAAS,UAAU,IAAI,EAAM,MAAQ,GAAK,EAAK,GAC/C,EAAS,WAAW,IAAI,EAAK,EAAM,OAAS,GAAK,GACjD,EAAS,UAAU,aAAa,GAChC,EAAS,WAAW,aAAa,GACjC,YACU,EAAM,aAAc,CAC9B,GAAM,GAAW,EAAM,MAAM,GAC7B,EAAS,SAAS,sBAAsB,EAAM,aAC9C,EAAS,SAAS,aAAa,GAC/B,YACU,EAAM,kBAAmB,CACnC,GAAM,GAAW,EAAM,KAAK,GAC5B,EAAS,UAAU,sBAAsB,EAAM,aAC/C,EAAS,UAAU,mBAAmB,GACtC,EAAS,UAAU,YACnB,MAKH,MAAO,CACN,MAAO,EACP,UAAW,EACX,MAAO,GAIT,YAA0B,EAAY,EAAc,CACnD,GAAM,GAAS,GAAI,IAAY,EAAY,GACrC,EAAc,GACd,EAAe,GAErB,YAAgB,CACf,EAAY,OAAS,EACrB,EAAa,OAAS,EAGvB,WAAmB,EAAO,CACzB,EAAY,KAAK,GAGlB,WAAoB,EAAa,CAChC,EAAa,KAAK,GAGnB,WAAqB,EAAyB,CAC7C,EAAO,MAAM,EAAa,GAG3B,WAAyB,EAAQ,CAChC,EAAO,UAAU,EAAa,GAQ/B,MAAO,CACN,KAAM,EACN,MAPa,CACb,YAAa,EACb,aAAc,EACd,OAAQ,GAKR,YAAa,EACb,gBAAiB,EACjB,UAAW,EACX,WAAY,GAId,YAA2B,EAAY,EAAc,CACpD,GAAI,GAAe,GAAI,SAEvB,WAAa,EAAO,EAAkB,EAAG,CACxC,GAAI,GAEJ,MAAI,GAAa,IAAI,KAAW,GAC/B,GAAc,GAAI,IAAiB,EAAY,GAC/C,EAAa,IAAI,EAAO,CAAC,KAEzB,AAAI,GAAmB,EAAa,IAAI,GAAO,OAC9C,GAAc,GAAI,IAAiB,EAAY,GAC/C,EAAa,IAAI,GAAO,KAAK,IAE7B,EAAc,EAAa,IAAI,GAAO,GAIjC,EAGR,YAAmB,CAClB,EAAe,GAAI,SAGpB,MAAO,CACN,IAAK,EACL,QAAS,GAsBX,gBAAgC,GAAS,CACxC,YAAY,EAAY,CACvB,QACA,KAAK,KAAO,oBACZ,KAAK,aAAe,GACpB,KAAK,IAAM,KACX,KAAK,SAAW,KAChB,KAAK,gBAAkB,KACvB,KAAK,kBAAoB,EACzB,KAAK,iBAAmB,EACxB,KAAK,UAAY,GACjB,KAAK,mBAAqB,EAC1B,KAAK,IAAM,GACX,KAAK,UAAU,GAGhB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,aAAe,EAAO,aAC3B,KAAK,IAAM,EAAO,IAClB,KAAK,SAAW,EAAO,SACvB,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,kBAAoB,EAAO,kBAChC,KAAK,iBAAmB,EAAO,iBAC/B,KAAK,UAAY,EAAO,UACxB,KAAK,mBAAqB,EAAO,mBAC1B,MAKT,GAAkB,UAAU,oBAAsB,GAoBlD,gBAAmC,GAAS,CAC3C,YAAY,EAAY,CACvB,QACA,KAAK,KAAO,uBACZ,KAAK,kBAAoB,GAAI,GAC7B,KAAK,aAAe,EACpB,KAAK,YAAc,IACnB,KAAK,IAAM,KACX,KAAK,SAAW,KAChB,KAAK,gBAAkB,KACvB,KAAK,kBAAoB,EACzB,KAAK,iBAAmB,EACxB,KAAK,IAAM,GACX,KAAK,UAAU,GAGhB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,kBAAkB,KAAK,EAAO,mBACnC,KAAK,aAAe,EAAO,aAC3B,KAAK,YAAc,EAAO,YAC1B,KAAK,IAAM,EAAO,IAClB,KAAK,SAAW,EAAO,SACvB,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,kBAAoB,EAAO,kBAChC,KAAK,iBAAmB,EAAO,iBACxB,MAKT,GAAqB,UAAU,uBAAyB,GAExD,GAAM,IAAS;AAAA;AAAA,GACT,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEjB,YAAwB,EAAW,EAAU,EAAe,CAC3D,GAAI,GAAW,GAAI,IAEb,EAAiB,GAAI,IACxB,EAAgB,GAAI,IACpB,EAAY,GAAI,IAChB,EAAiB,GAAI,IAAkB,CACzC,aAAc,KAEZ,EAAoB,GAAI,IACxB,EAAiB,GACjB,EAAkB,EAAc,eAE7B,EAAa,CAClB,EAAG,GACH,EAAG,GACH,EAAG,IAEE,EAAyB,GAAI,IAAe,CACjD,QAAS,CACR,YAAa,GAEd,SAAU,CACT,YAAa,CACZ,MAAO,MAER,WAAY,CACX,MAAO,GAAI,KAEZ,OAAQ,CACP,MAAO,IAGT,aAAc,GACd,eAAgB,KAEX,EAA2B,EAAuB,QACxD,EAAyB,QAAQ,gBAAkB,EACnD,GAAM,GAAgB,GAAI,IAC1B,EAAc,aAAa,WAAY,GAAI,IAAgB,GAAI,cAAa,CAAC,GAAI,GAAI,GAAK,EAAG,GAAI,GAAK,GAAI,EAAG,KAAO,IACpH,GAAM,GAAiB,GAAI,IAAK,EAAe,GACzC,EAAQ,KACd,KAAK,QAAU,GACf,KAAK,WAAa,GAClB,KAAK,YAAc,GACnB,KAAK,KAAO,GAEZ,KAAK,OAAS,SAAU,EAAQ,EAAO,EAAQ,CAG9C,GAFI,EAAM,UAAY,IAClB,EAAM,aAAe,IAAS,EAAM,cAAgB,IACpD,EAAO,SAAW,EAAG,OAEzB,GAAM,GAAsB,EAAU,kBAEhC,EAAiB,EAAU,oBAE3B,EAAoB,EAAU,uBAE9B,EAAS,EAAU,MAEzB,EAAO,YAAY,IAEnB,EAAO,QAAQ,MAAM,SAAS,EAAG,EAAG,EAAG,GAEvC,EAAO,QAAQ,MAAM,QAAQ,IAE7B,EAAO,eAAe,IAGtB,OAAS,GAAI,EAAG,GAAK,EAAO,OAAQ,EAAI,GAAI,IAAK,CAChD,GAAM,GAAQ,EAAO,GACf,EAAS,EAAM,OAErB,GAAI,IAAW,OAAW,CACzB,QAAQ,KAAK,wBAAyB,EAAO,kBAC7C,SAGD,GAAI,EAAO,aAAe,IAAS,EAAO,cAAgB,GAAO,SAEjE,EAAe,KAAK,EAAO,SAE3B,GAAM,GAAqB,EAAO,kBAoBlC,GAlBA,EAAe,SAAS,GAExB,EAAc,KAAK,EAAO,SAEtB,GAAe,EAAI,GAAmB,EAAe,EAAI,IACxD,GAAe,EAAI,GACtB,GAAc,EAAI,KAAK,MAAM,EAAkB,EAAmB,GAClE,EAAe,EAAI,EAAc,EAAI,EAAmB,EACxD,EAAO,QAAQ,EAAI,EAAc,GAG9B,EAAe,EAAI,GACtB,GAAc,EAAI,KAAK,MAAM,EAAkB,EAAmB,GAClE,EAAe,EAAI,EAAc,EAAI,EAAmB,EACxD,EAAO,QAAQ,EAAI,EAAc,IAI/B,EAAO,MAAQ,MAAQ,CAAC,EAAO,oBAAsB,KAAK,OAAS,GAAc,CACpF,GAAM,IAAO,CACZ,UAAW,GACX,UAAW,GACX,OAAQ,IAET,EAAO,IAAM,GAAI,IAAkB,EAAe,EAAG,EAAe,EAAG,IACvE,EAAO,IAAI,QAAQ,KAAO,EAAM,KAAO,aACvC,EAAO,QAAU,GAAI,IAAkB,EAAe,EAAG,EAAe,EAAG,IAC3E,EAAO,OAAO,yBAGf,GAAI,EAAO,MAAQ,KAAM,CACxB,GAAM,IAAO,CACZ,UAAW,GACX,UAAW,GACX,OAAQ,IAET,EAAO,IAAM,GAAI,IAAkB,EAAe,EAAG,EAAe,EAAG,IACvE,EAAO,IAAI,QAAQ,KAAO,EAAM,KAAO,aACvC,EAAO,OAAO,yBAGf,EAAU,gBAAgB,EAAO,KAEjC,EAAU,QAEV,GAAM,GAAgB,EAAO,mBAE7B,OAAS,IAAK,EAAG,GAAK,EAAe,KAAM,CAC1C,GAAM,IAAW,EAAO,YAAY,IAEpC,EAAU,IAAI,EAAc,EAAI,GAAS,EAAG,EAAc,EAAI,GAAS,EAAG,EAAc,EAAI,GAAS,EAAG,EAAc,EAAI,GAAS,GAEnI,EAAO,SAAS,GAEhB,EAAO,eAAe,EAAO,IAC7B,EAAW,EAAO,aAClB,EAAa,EAAO,EAAQ,EAAO,OAAQ,EAAO,KAAK,MAIxD,AAAI,CAAC,EAAO,oBAAsB,KAAK,OAAS,IAC/C,EAAQ,EAAQ,GAGjB,EAAO,YAAc,GAGtB,EAAM,YAAc,GAEpB,EAAU,gBAAgB,EAAqB,EAAgB,IAGhE,WAAiB,EAAQ,EAAQ,CAChC,GAAM,GAAW,EAAS,OAAO,GAEjC,AAAI,EAAuB,QAAQ,cAAgB,EAAO,aACzD,GAAuB,QAAQ,YAAc,EAAO,YACpD,EAAyB,QAAQ,YAAc,EAAO,YACtD,EAAuB,YAAc,GACrC,EAAyB,YAAc,IAIxC,EAAuB,SAAS,YAAY,MAAQ,EAAO,IAAI,QAC/D,EAAuB,SAAS,WAAW,MAAQ,EAAO,QAC1D,EAAuB,SAAS,OAAO,MAAQ,EAAO,OAEtD,EAAU,gBAAgB,EAAO,SAEjC,EAAU,QAEV,EAAU,mBAAmB,EAAQ,KAAM,EAAU,EAAwB,EAAgB,MAG7F,EAAyB,SAAS,YAAY,MAAQ,EAAO,QAAQ,QACrE,EAAyB,SAAS,WAAW,MAAQ,EAAO,QAC5D,EAAyB,SAAS,OAAO,MAAQ,EAAO,OAExD,EAAU,gBAAgB,EAAO,KAEjC,EAAU,QAEV,EAAU,mBAAmB,EAAQ,KAAM,EAAU,EAA0B,EAAgB,MAGhG,WAA0B,EAAQ,EAAU,EAAU,EAAO,EAAkB,EAAiB,EAAM,CACrG,GAAI,GAAS,KACP,GAAiB,EAAM,eAAiB,GAAO,EAAO,uBAAyB,EAAO,oBAQ5F,GANA,AAAI,KAAmB,OACtB,EAAS,GAET,EAAS,EAAM,eAAiB,GAAO,EAAoB,EAGxD,EAAU,sBAAwB,EAAS,cAAgB,IAAQ,EAAS,eAAe,SAAW,GAAK,EAAS,iBAAmB,EAAS,oBAAsB,GAAK,EAAS,UAAY,EAAS,UAAY,EAAG,CAG3N,GAAM,GAAO,EAAO,KACjB,EAAO,EAAS,KACf,EAAsB,EAAe,GAEzC,AAAI,IAAwB,QAC3B,GAAsB,GACtB,EAAe,GAAQ,GAGxB,GAAI,GAAiB,EAAoB,GAEzC,AAAI,IAAmB,QACtB,GAAiB,EAAO,QACxB,EAAoB,GAAQ,GAG7B,EAAS,EAGV,SAAO,QAAU,EAAS,QAC1B,EAAO,UAAY,EAAS,UAE5B,AAAI,IAAS,GACZ,EAAO,KAAO,EAAS,aAAe,KAAO,EAAS,WAAa,EAAS,KAE5E,EAAO,KAAO,EAAS,aAAe,KAAO,EAAS,WAAa,EAAW,EAAS,MAGxF,EAAO,SAAW,EAAS,SAC3B,EAAO,UAAY,EAAS,UAC5B,EAAO,YAAc,EAAS,YAC9B,EAAO,eAAiB,EAAS,eACjC,EAAO,iBAAmB,EAAS,iBACnC,EAAO,gBAAkB,EAAS,gBAClC,EAAO,kBAAoB,EAAS,kBACpC,EAAO,iBAAmB,EAAS,iBACnC,EAAO,mBAAqB,EAAS,mBACrC,EAAO,UAAY,EAAS,UAExB,EAAM,eAAiB,IAAQ,EAAO,yBAA2B,IACpE,GAAO,kBAAkB,sBAAsB,EAAM,aACrD,EAAO,aAAe,EACtB,EAAO,YAAc,GAGf,EAGR,WAAsB,EAAQ,EAAQ,EAAc,EAAO,EAAM,CAChE,GAAI,EAAO,UAAY,GAAO,OAG9B,GAAI,AAFY,EAAO,OAAO,KAAK,EAAO,SAE1B,GAAO,QAAU,EAAO,QAAU,EAAO,WACnD,GAAO,YAAc,EAAO,eAAiB,IAAS,KAAkB,EAAC,EAAO,eAAiB,EAAS,iBAAiB,IAAU,CACzI,EAAO,gBAAgB,iBAAiB,EAAa,mBAAoB,EAAO,aAEhF,GAAM,GAAW,EAAS,OAAO,GAE3B,GAAW,EAAO,SAExB,GAAI,MAAM,QAAQ,IAAW,CAC5B,GAAM,GAAS,EAAS,OAExB,OAAS,GAAI,EAAG,EAAK,EAAO,OAAQ,EAAI,EAAI,IAAK,CAChD,GAAM,GAAQ,EAAO,GACf,GAAgB,GAAS,EAAM,eAErC,GAAI,IAAiB,GAAc,QAAS,CAC3C,GAAM,IAAgB,EAAiB,EAAQ,EAAU,GAAe,EAAO,EAAa,KAAM,EAAa,IAAK,GAEpH,EAAU,mBAAmB,EAAc,KAAM,EAAU,GAAe,EAAQ,aAG1E,GAAS,QAAS,CAC5B,GAAM,GAAgB,EAAiB,EAAQ,EAAU,GAAU,EAAO,EAAa,KAAM,EAAa,IAAK,GAE/G,EAAU,mBAAmB,EAAc,KAAM,EAAU,EAAe,EAAQ,OAKrF,GAAM,GAAW,EAAO,SAExB,OAAS,GAAI,EAAG,GAAI,EAAS,OAAQ,EAAI,GAAG,IAC3C,EAAa,EAAS,GAAI,EAAQ,EAAc,EAAO,IAK1D,YAAoB,EAAI,EAAY,EAAc,CACjD,GAAM,GAAW,EAAa,SAE9B,YAAuB,CACtB,GAAI,GAAS,GACP,GAAQ,GAAI,IACd,GAAmB,KACjB,GAAoB,GAAI,IAAQ,EAAG,EAAG,EAAG,GAC/C,MAAO,CACN,QAAS,SAAU,GAAW,CAC7B,AAAI,KAAqB,IAAa,CAAC,GACtC,GAAG,UAAU,GAAW,GAAW,GAAW,IAC9C,GAAmB,KAGrB,UAAW,SAAU,GAAM,CAC1B,EAAS,IAEV,SAAU,SAAU,GAAG,GAAG,GAAG,GAAG,GAAoB,CACnD,AAAI,KAAuB,IAC1B,KAAK,GACL,IAAK,GACL,IAAK,IAGN,GAAM,IAAI,GAAG,GAAG,GAAG,IAEf,GAAkB,OAAO,MAAW,IACvC,GAAG,WAAW,GAAG,GAAG,GAAG,IACvB,GAAkB,KAAK,MAGzB,MAAO,UAAY,CAClB,EAAS,GACT,GAAmB,KACnB,GAAkB,IAAI,GAAI,EAAG,EAAG,KAKnC,YAAuB,CACtB,GAAI,GAAS,GACT,GAAmB,KACnB,GAAmB,KACnB,GAAoB,KACxB,MAAO,CACN,QAAS,SAAU,GAAW,CAC7B,AAAI,GACH,GAAO,EAAG,YAEV,GAAQ,EAAG,aAGb,QAAS,SAAU,GAAW,CAC7B,AAAI,KAAqB,IAAa,CAAC,GACtC,GAAG,UAAU,IACb,GAAmB,KAGrB,QAAS,SAAU,GAAW,CAC7B,GAAI,KAAqB,GAAW,CACnC,GAAI,GACH,OAAQ,QACF,IACJ,EAAG,UAAU,EAAG,OAChB,UAEI,IACJ,EAAG,UAAU,EAAG,QAChB,UAEI,IACJ,EAAG,UAAU,EAAG,MAChB,UAEI,IACJ,EAAG,UAAU,EAAG,QAChB,UAEI,IACJ,EAAG,UAAU,EAAG,OAChB,UAEI,IACJ,EAAG,UAAU,EAAG,QAChB,UAEI,IACJ,EAAG,UAAU,EAAG,SAChB,UAEI,IACJ,EAAG,UAAU,EAAG,UAChB,cAGA,EAAG,UAAU,EAAG,YAGlB,GAAG,UAAU,EAAG,QAGjB,GAAmB,KAGrB,UAAW,SAAU,GAAM,CAC1B,EAAS,IAEV,SAAU,SAAU,GAAO,CAC1B,AAAI,KAAsB,IACzB,GAAG,WAAW,IACd,GAAoB,KAGtB,MAAO,UAAY,CAClB,EAAS,GACT,GAAmB,KACnB,GAAmB,KACnB,GAAoB,OAKvB,YAAyB,CACxB,GAAI,GAAS,GACT,GAAqB,KACrB,GAAqB,KACrB,GAAoB,KACpB,GAAyB,KACzB,GAAqB,KACrB,GAAsB,KACtB,GAAsB,KACtB,GAAsB,KAC1B,MAAO,CACN,QAAS,SAAU,GAAa,CAC/B,AAAK,GACJ,CAAI,GACH,GAAO,EAAG,cAEV,GAAQ,EAAG,gBAId,QAAS,SAAU,GAAa,CAC/B,AAAI,KAAuB,IAAe,CAAC,GAC1C,GAAG,YAAY,IACf,GAAqB,KAGvB,QAAS,SAAU,GAAa,GAAY,GAAa,CACxD,AAAI,MAAuB,IAAe,KAAsB,IAAc,KAA2B,KACxG,GAAG,YAAY,GAAa,GAAY,IACxC,GAAqB,GACrB,GAAoB,GACpB,GAAyB,KAG3B,MAAO,SAAU,GAAa,GAAc,GAAc,CACzD,AAAI,MAAuB,IAAe,KAAwB,IAAgB,KAAwB,KACzG,GAAG,UAAU,GAAa,GAAc,IACxC,GAAqB,GACrB,GAAsB,GACtB,GAAsB,KAGxB,UAAW,SAAU,GAAM,CAC1B,EAAS,IAEV,SAAU,SAAU,GAAS,CAC5B,AAAI,KAAwB,IAC3B,GAAG,aAAa,IAChB,GAAsB,KAGxB,MAAO,UAAY,CAClB,EAAS,GACT,GAAqB,KACrB,GAAqB,KACrB,GAAoB,KACpB,GAAyB,KACzB,GAAqB,KACrB,GAAsB,KACtB,GAAsB,KACtB,GAAsB,OAMzB,GAAM,GAAc,GAAI,GAClB,EAAc,GAAI,GAClB,EAAgB,GAAI,GACtB,EAAsB,GACtB,EAAgB,KAChB,EAA2B,GAC3B,EAAiB,KACjB,EAAyB,GACzB,EAAkB,KAClB,EAAuB,KACvB,EAAkB,KAClB,EAAkB,KAClB,EAA4B,KAC5B,EAAuB,KACvB,EAAuB,KACvB,EAA2B,GAC3B,EAAmB,KACnB,EAAkB,KAClB,EAAmB,KACnB,EAA6B,KAC7B,EAA4B,KAC1B,GAAc,EAAG,aAAa,EAAG,kCACnC,EAAqB,GACrB,EAAU,EACR,EAAY,EAAG,aAAa,EAAG,SAErC,AAAI,EAAU,QAAQ,WAAa,GAClC,GAAU,WAAW,cAAc,KAAK,GAAW,IACnD,EAAqB,GAAW,GACtB,EAAU,QAAQ,eAAiB,IAC7C,GAAU,WAAW,kBAAkB,KAAK,GAAW,IACvD,EAAqB,GAAW,GAGjC,GAAI,GAAqB,KACrB,GAAuB,GACrB,GAAe,EAAG,aAAa,EAAG,aAClC,GAAgB,EAAG,aAAa,EAAG,UACnC,GAAiB,GAAI,MAAU,UAAU,IACzC,GAAkB,GAAI,MAAU,UAAU,IAEhD,YAAuB,EAAM,GAAQ,GAAO,CAC3C,GAAM,IAAO,GAAI,YAAW,GAEtB,GAAU,EAAG,gBACnB,EAAG,YAAY,EAAM,IACrB,EAAG,cAAc,EAAM,EAAG,mBAAoB,EAAG,SACjD,EAAG,cAAc,EAAM,EAAG,mBAAoB,EAAG,SAEjD,OAAS,IAAI,EAAG,GAAI,GAAO,KAC1B,EAAG,WAAW,GAAS,GAAG,EAAG,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,KAAM,EAAG,cAAe,IAG3E,MAAO,IAGR,GAAM,IAAgB,GACtB,GAAc,EAAG,YAAc,GAAc,EAAG,WAAY,EAAG,WAAY,GAC3E,GAAc,EAAG,kBAAoB,GAAc,EAAG,iBAAkB,EAAG,4BAA6B,GAExG,EAAY,SAAS,EAAG,EAAG,EAAG,GAC9B,EAAY,SAAS,GACrB,EAAc,SAAS,GACvB,GAAO,EAAG,YACV,EAAY,QAAQ,IACpB,GAAa,IACb,GAAY,GACZ,GAAO,EAAG,WACV,GAAY,IAEZ,YAAgB,EAAI,CACnB,AAAI,EAAoB,KAAQ,IAC/B,GAAG,OAAO,GACV,EAAoB,GAAM,IAI5B,YAAiB,EAAI,CACpB,AAAI,EAAoB,KAAQ,IAC/B,GAAG,QAAQ,GACX,EAAoB,GAAM,IAI5B,WAA2B,EAAa,CACvC,AAAI,IAAgB,GACnB,GAAG,gBAAgB,EAAG,YAAa,GACnC,EAAgB,GAIlB,YAAyB,EAAQ,GAAa,CAG7C,MAFI,MAAgB,MAAQ,IAAkB,MAAM,IAAc,GAE9D,EAAyB,KAAY,GACxC,GAAG,gBAAgB,EAAQ,IAC3B,EAAyB,GAAU,GAE/B,GAEC,KAAW,EAAG,kBACjB,GAAyB,EAAG,aAAe,IAGxC,IAAW,EAAG,aACjB,GAAyB,EAAG,kBAAoB,KAI3C,IAGD,GAGR,YAAoB,EAAS,CAC5B,MAAI,KAAmB,EACtB,GAAG,WAAW,GACd,EAAiB,EACV,IAGD,GAGR,GAAM,IAAe,EACnB,IAAc,EAAG,UACjB,IAAmB,EAAG,eACtB,IAA0B,EAAG,uBAG/B,GAAI,EACH,GAAa,GAAe,EAAG,IAC/B,GAAa,IAAe,EAAG,QACzB,CACN,GAAM,GAAY,EAAW,IAAI,oBAEjC,AAAI,IAAc,MACjB,IAAa,GAAe,EAAU,QACtC,GAAa,IAAe,EAAU,SAIxC,GAAM,IAAa,EACjB,IAAa,EAAG,MAChB,IAAY,EAAG,KACf,IAAiB,EAAG,WACpB,IAAiB,EAAG,WACpB,IAAyB,EAAG,oBAC5B,IAAiB,EAAG,WACpB,IAAiB,EAAG,WACpB,IAAyB,EAAG,qBAC5B,IAAyB,EAAG,qBAC5B,IAAyB,EAAG,qBAC5B,IAAyB,EAAG,qBAG9B,YAAqB,EAAU,GAAe,GAAU,GAAU,GAAoB,GAAe,GAAe,GAAoB,CACvI,GAAI,IAAa,GAAY,CAC5B,AAAI,IAA2B,IAC9B,IAAQ,EAAG,OACX,EAAyB,IAG1B,OAQD,GALI,IAA2B,IAC9B,IAAO,EAAG,OACV,EAAyB,IAGtB,IAAa,GAAgB,CAChC,GAAI,IAAa,GAAmB,KAAuB,EAA0B,CAOpF,GANI,KAAyB,IAAe,IAA8B,KACzE,GAAG,cAAc,EAAG,UACpB,EAAuB,GACvB,EAA4B,IAGzB,GACH,OAAQ,OACF,IACJ,EAAG,kBAAkB,EAAG,IAAK,EAAG,oBAAqB,EAAG,IAAK,EAAG,qBAChE,UAEI,IACJ,EAAG,UAAU,EAAG,IAAK,EAAG,KACxB,UAEI,IACJ,EAAG,kBAAkB,EAAG,KAAM,EAAG,KAAM,EAAG,oBAAqB,EAAG,qBAClE,UAEI,IACJ,EAAG,kBAAkB,EAAG,KAAM,EAAG,UAAW,EAAG,KAAM,EAAG,WACxD,cAGA,QAAQ,MAAM,uCAAwC,GACtD,UAGF,QAAQ,OACF,IACJ,EAAG,kBAAkB,EAAG,UAAW,EAAG,oBAAqB,EAAG,IAAK,EAAG,qBACtE,UAEI,IACJ,EAAG,UAAU,EAAG,UAAW,EAAG,KAC9B,UAEI,IACJ,EAAG,UAAU,EAAG,KAAM,EAAG,qBACzB,UAEI,IACJ,EAAG,UAAU,EAAG,KAAM,EAAG,WACzB,cAGA,QAAQ,MAAM,uCAAwC,GACtD,MAIH,EAAkB,KAClB,EAAkB,KAClB,EAAuB,KACvB,EAAuB,KACvB,EAAkB,EAClB,EAA2B,GAG5B,OAID,GAAqB,IAAsB,GAC3C,GAAgB,IAAiB,GACjC,GAAgB,IAAiB,GAE7B,MAAkB,GAAwB,KAAuB,IACpE,GAAG,sBAAsB,GAAa,IAAgB,GAAa,KACnE,EAAuB,GACvB,EAA4B,IAGzB,MAAa,GAAmB,KAAa,GAAmB,KAAkB,GAAwB,KAAkB,IAC/H,GAAG,kBAAkB,GAAW,IAAW,GAAW,IAAW,GAAW,IAAgB,GAAW,KACvG,EAAkB,GAClB,EAAkB,GAClB,EAAuB,GACvB,EAAuB,IAGxB,EAAkB,EAClB,EAA2B,KAG5B,YAAqB,EAAU,GAAa,CAC3C,EAAS,OAAS,GAAa,GAAQ,EAAG,WAAa,GAAO,EAAG,WACjE,GAAI,IAAY,EAAS,OAAS,GAClC,AAAI,IAAa,IAAY,CAAC,IAC9B,GAAa,IACb,EAAS,WAAa,IAAkB,EAAS,cAAgB,GAAQ,GAAY,IAAc,GAAY,EAAS,SAAU,EAAS,cAAe,EAAS,SAAU,EAAS,SAAU,EAAS,mBAAoB,EAAS,cAAe,EAAS,cAAe,EAAS,oBACtR,EAAY,QAAQ,EAAS,WAC7B,EAAY,QAAQ,EAAS,WAC7B,EAAY,QAAQ,EAAS,YAC7B,EAAY,QAAQ,EAAS,YAC7B,GAAM,IAAe,EAAS,aAC9B,EAAc,QAAQ,IAElB,IACH,GAAc,QAAQ,EAAS,kBAC/B,EAAc,QAAQ,EAAS,YAAa,EAAS,WAAY,EAAS,iBAC1E,EAAc,MAAM,EAAS,YAAa,EAAS,aAAc,EAAS,eAG3E,GAAiB,EAAS,cAAe,EAAS,oBAAqB,EAAS,oBAChF,EAAS,kBAAoB,GAAO,GAAO,EAAG,0BAA4B,GAAQ,EAAG,0BAItF,YAAsB,EAAW,CAChC,AAAI,IAAqB,GACxB,CAAI,EACH,EAAG,UAAU,EAAG,IAEhB,EAAG,UAAU,EAAG,KAGjB,EAAmB,GAIrB,YAAqB,EAAU,CAC9B,AAAI,IAAa,GAChB,IAAO,EAAG,WAEN,IAAa,GAChB,CAAI,IAAa,EAChB,EAAG,SAAS,EAAG,MACT,AAAI,IAAa,GACvB,EAAG,SAAS,EAAG,OAEf,EAAG,SAAS,EAAG,kBAIjB,GAAQ,EAAG,WAGZ,EAAkB,EAGnB,YAAsB,EAAO,CAC5B,AAAI,IAAU,GACT,IAAoB,EAAG,UAAU,GACrC,EAAmB,GAIrB,YAA0B,EAAe,GAAQ,GAAO,CACvD,AAAI,EACH,IAAO,EAAG,qBAEN,KAA+B,IAAU,IAA8B,KAC1E,GAAG,cAAc,GAAQ,IACzB,EAA6B,GAC7B,EAA4B,KAG7B,GAAQ,EAAG,qBAIb,WAAwB,EAAa,CACpC,AAAI,EACH,GAAO,EAAG,cAEV,GAAQ,EAAG,cAKb,WAAuB,EAAW,CACjC,AAAI,IAAc,QAAW,GAAY,EAAG,SAAW,GAAc,GAEjE,IAAuB,GAC1B,GAAG,cAAc,GACjB,EAAqB,GAIvB,YAAqB,EAAW,GAAc,CAC7C,AAAI,IAAuB,MAC1B,IAGD,GAAI,IAAe,GAAqB,GAExC,AAAI,KAAiB,QACpB,IAAe,CACd,KAAM,OACN,QAAS,QAEV,GAAqB,GAAsB,IAGxC,IAAa,OAAS,GAAa,GAAa,UAAY,KAC/D,GAAG,YAAY,EAAW,IAAgB,GAAc,IACxD,GAAa,KAAO,EACpB,GAAa,QAAU,IAIzB,aAAyB,CACxB,GAAM,GAAe,GAAqB,GAE1C,AAAI,IAAiB,QAAa,EAAa,OAAS,QACvD,GAAG,YAAY,EAAa,KAAM,MAClC,EAAa,KAAO,OACpB,EAAa,QAAU,QAIzB,aAAgC,CAC/B,GAAI,CACH,EAAG,qBAAqB,MAAM,EAAI,iBAC1B,EAAP,CACD,QAAQ,MAAM,oBAAqB,IAIrC,aAAsB,CACrB,GAAI,CACH,EAAG,WAAW,MAAM,EAAI,iBAChB,EAAP,CACD,QAAQ,MAAM,oBAAqB,IAIrC,aAAsB,CACrB,GAAI,CACH,EAAG,WAAW,MAAM,EAAI,iBAChB,EAAP,CACD,QAAQ,MAAM,oBAAqB,IAKrC,YAAiB,EAAS,CACzB,AAAI,GAAe,OAAO,KAAa,IACtC,GAAG,QAAQ,EAAQ,EAAG,EAAQ,EAAG,EAAQ,EAAG,EAAQ,GACpD,GAAe,KAAK,IAItB,YAAkB,EAAU,CAC3B,AAAI,GAAgB,OAAO,KAAc,IACxC,GAAG,SAAS,EAAS,EAAG,EAAS,EAAG,EAAS,EAAG,EAAS,GACzD,GAAgB,KAAK,IAKvB,aAAiB,CAEhB,EAAG,QAAQ,EAAG,OACd,EAAG,QAAQ,EAAG,WACd,EAAG,QAAQ,EAAG,YACd,EAAG,QAAQ,EAAG,qBACd,EAAG,QAAQ,EAAG,cACd,EAAG,QAAQ,EAAG,cACd,EAAG,QAAQ,EAAG,0BACd,EAAG,cAAc,EAAG,UACpB,EAAG,UAAU,EAAG,IAAK,EAAG,MACxB,EAAG,kBAAkB,EAAG,IAAK,EAAG,KAAM,EAAG,IAAK,EAAG,MACjD,EAAG,UAAU,GAAM,GAAM,GAAM,IAC/B,EAAG,WAAW,EAAG,EAAG,EAAG,GACvB,EAAG,UAAU,IACb,EAAG,UAAU,EAAG,MAChB,EAAG,WAAW,GACd,EAAG,YAAY,YACf,EAAG,YAAY,EAAG,OAAQ,EAAG,YAC7B,EAAG,UAAU,EAAG,KAAM,EAAG,KAAM,EAAG,MAClC,EAAG,aAAa,GAChB,EAAG,SAAS,EAAG,MACf,EAAG,UAAU,EAAG,KAChB,EAAG,cAAc,EAAG,GACpB,EAAG,cAAc,EAAG,UACpB,EAAG,gBAAgB,EAAG,YAAa,MAE/B,IAAa,IAChB,GAAG,gBAAgB,EAAG,iBAAkB,MACxC,EAAG,gBAAgB,EAAG,iBAAkB,OAGzC,EAAG,WAAW,MACd,EAAG,UAAU,GACb,EAAG,QAAQ,EAAG,EAAG,EAAG,OAAO,MAAO,EAAG,OAAO,QAC5C,EAAG,SAAS,EAAG,EAAG,EAAG,OAAO,MAAO,EAAG,OAAO,QAE7C,EAAsB,GACtB,EAAqB,KACrB,GAAuB,GACvB,EAAgB,KAChB,EAA2B,GAC3B,EAAiB,KACjB,EAAyB,GACzB,EAAkB,KAClB,EAAuB,KACvB,EAAkB,KAClB,EAAkB,KAClB,EAA4B,KAC5B,EAAuB,KACvB,EAAuB,KACvB,EAA2B,GAC3B,EAAmB,KACnB,EAAkB,KAClB,EAAmB,KACnB,EAA6B,KAC7B,EAA4B,KAC5B,GAAe,IAAI,EAAG,EAAG,EAAG,OAAO,MAAO,EAAG,OAAO,QACpD,GAAgB,IAAI,EAAG,EAAG,EAAG,OAAO,MAAO,EAAG,OAAO,QACrD,EAAY,QACZ,EAAY,QACZ,EAAc,QAGf,MAAO,CACN,QAAS,CACR,MAAO,EACP,MAAO,EACP,QAAS,GAEV,OAAQ,GACR,QAAS,GACT,gBAAiB,GACjB,kBAAmB,EACnB,WAAY,GACZ,YAAa,GACb,YAAa,GACb,aAAc,GACd,YAAa,GACb,aAAc,GACd,iBAAkB,GAClB,eAAgB,EAChB,cAAe,EACf,YAAa,GACb,cAAe,GACf,qBAAsB,GACtB,WAAY,GACZ,WAAY,GACZ,QAAS,GACT,SAAU,GACV,MAAO,IAIT,YAAuB,EAAK,EAAY,EAAO,EAAY,EAAc,EAAO,EAAM,CACrF,GAAM,GAAW,EAAa,SACxB,EAAc,EAAa,YAC3B,EAAiB,EAAa,eAC9B,EAAiB,EAAa,eAC9B,EAAa,EAAa,WAE1B,EAAiB,GAAI,SAEvB,EAKA,EAAqB,GAEzB,GAAI,CACH,EAAqB,MAAO,kBAAoB,aAAe,GAAI,iBAAgB,EAAG,GAAG,WAAW,QAAU,WACtG,EAAP,EAGF,WAAsB,EAAO,EAAQ,CAEpC,MAAO,GAAqB,GAAI,iBAAgB,EAAO,GAAU,GAAgB,UAGlF,WAAqB,EAAO,EAAiB,GAAgB,GAAS,CACrE,GAAI,IAAQ,EAOZ,GALI,GAAM,MAAQ,IAAW,EAAM,OAAS,KAC3C,IAAQ,GAAU,KAAK,IAAI,EAAM,MAAO,EAAM,SAI3C,GAAQ,GAAK,IAAoB,GAEpC,GAAI,MAAO,mBAAqB,aAAe,YAAiB,mBAAoB,MAAO,oBAAsB,aAAe,YAAiB,oBAAqB,MAAO,cAAgB,aAAe,YAAiB,aAAa,CACzO,GAAM,IAAQ,EAAkB,GAAkB,KAAK,MACjD,GAAQ,GAAM,GAAQ,EAAM,OAC5B,GAAS,GAAM,GAAQ,EAAM,QACnC,AAAI,IAAY,QAAW,GAAU,EAAa,GAAO,KAEzD,GAAM,IAAS,GAAiB,EAAa,GAAO,IAAU,EAC9D,UAAO,MAAQ,GACf,GAAO,OAAS,GAEhB,AADgB,GAAO,WAAW,MAC1B,UAAU,EAAO,EAAG,EAAG,GAAO,IACtC,QAAQ,KAAK,uDAAyD,EAAM,MAAQ,IAAM,EAAM,OAAS,SAAW,GAAQ,IAAM,GAAS,MACpI,OAEP,OAAI,QAAU,IACb,QAAQ,KAAK,yDAA2D,EAAM,MAAQ,IAAM,EAAM,OAAS,MAGrG,EAIT,MAAO,GAGR,WAAwB,EAAO,CAC9B,MAAO,IAAa,EAAM,QAAU,GAAa,EAAM,QAGxD,WAAgC,EAAS,CACxC,MAAI,GAAiB,GACd,EAAQ,QAAU,IAAuB,EAAQ,QAAU,IAAuB,EAAQ,YAAc,IAAiB,EAAQ,YAAc,GAGvJ,WAAqC,EAAS,EAAc,CAC3D,MAAO,GAAQ,iBAAmB,GAAgB,EAAQ,YAAc,IAAiB,EAAQ,YAAc,GAGhH,WAAwB,EAAQ,EAAS,GAAO,GAAQ,GAAQ,EAAG,CAClE,EAAI,eAAe,GAEnB,GAAM,IAAoB,EAAW,IAAI,GACzC,GAAkB,cAAgB,KAAK,KAAK,KAAK,IAAI,GAAO,GAAQ,KAGrE,WAA2B,EAAoB,EAAU,GAAQ,GAAU,CAC1E,GAAI,IAAa,GAAO,MAAO,GAE/B,GAAI,IAAuB,KAAM,CAChC,GAAI,EAAI,KAAwB,OAAW,MAAO,GAAI,GACtD,QAAQ,KAAK,2EAA8E,EAAqB,KAGjH,GAAI,IAAiB,EAErB,MAAI,KAAa,EAAI,KAChB,MAAW,EAAI,OAAO,IAAiB,EAAI,MAC3C,KAAW,EAAI,YAAY,IAAiB,EAAI,MAChD,KAAW,EAAI,eAAe,IAAiB,EAAI,KAGpD,IAAa,EAAI,KAChB,MAAW,EAAI,OAAO,IAAiB,EAAI,QAC3C,KAAW,EAAI,YAAY,IAAiB,EAAI,QAChD,KAAW,EAAI,eAAe,IAAiB,EAAI,OAGpD,IAAa,EAAI,MAChB,MAAW,EAAI,OAAO,IAAiB,EAAI,SAC3C,KAAW,EAAI,YAAY,IAAiB,EAAI,SAChD,KAAW,EAAI,eAAe,IAAiB,KAAa,GAAe,EAAI,aAAe,EAAI,QAGnG,MAAmB,EAAI,MAAQ,KAAmB,EAAI,MAAQ,KAAmB,EAAI,SAAW,KAAmB,EAAI,UAC1H,EAAW,IAAI,0BAGT,GAIR,WAAwB,EAAG,CAC1B,MAAI,KAAM,IAAiB,IAAM,IAA8B,IAAM,GAC7D,EAAI,QAGL,EAAI,OAIZ,WAA0B,EAAO,CAChC,GAAM,GAAU,EAAM,OACtB,EAAQ,oBAAoB,UAAW,GACvC,EAAkB,GAEd,EAAQ,gBACX,EAAe,OAAO,GAGvB,EAAK,OAAO,WAGb,WAA+B,EAAO,CACrC,GAAM,GAAe,EAAM,OAC3B,EAAa,oBAAoB,UAAW,GAC5C,EAAuB,GAIxB,WAA2B,EAAS,CACnC,GAAM,GAAoB,EAAW,IAAI,GACzC,AAAI,EAAkB,cAAgB,QAEtC,GAAI,cAAc,EAAkB,gBAEpC,EAAW,OAAO,IAGnB,WAAgC,EAAc,CAC7C,GAAM,GAAU,EAAa,QACvB,GAAyB,EAAW,IAAI,GACxC,GAAoB,EAAW,IAAI,GACzC,GAAI,EAAC,EAYL,IAVI,GAAkB,iBAAmB,QACxC,GAAI,cAAc,GAAkB,gBAEpC,EAAK,OAAO,YAGT,EAAa,cAChB,EAAa,aAAa,UAGvB,EAAa,wBAChB,OAAS,IAAI,EAAG,GAAI,EAAG,KACtB,EAAI,kBAAkB,GAAuB,mBAAmB,KAE5D,GAAuB,oBAAoB,EAAI,mBAAmB,GAAuB,mBAAmB,SAGjH,GAAI,kBAAkB,GAAuB,oBAEzC,GAAuB,oBAAoB,EAAI,mBAAmB,GAAuB,oBACzF,GAAuB,gCAAgC,EAAI,kBAAkB,GAAuB,gCACpG,GAAuB,0BAA0B,EAAI,mBAAmB,GAAuB,0BAC/F,GAAuB,0BAA0B,EAAI,mBAAmB,GAAuB,0BAGpG,GAAI,EAAa,6BAChB,OAAS,IAAI,EAAG,GAAK,EAAQ,OAAQ,GAAI,GAAI,KAAK,CACjD,GAAM,IAAuB,EAAW,IAAI,EAAQ,KAEpD,AAAI,GAAqB,gBACxB,GAAI,cAAc,GAAqB,gBAEvC,EAAK,OAAO,YAGb,EAAW,OAAO,EAAQ,KAI5B,EAAW,OAAO,GAClB,EAAW,OAAO,IAInB,GAAI,GAAe,EAEnB,aAA6B,CAC5B,EAAe,EAGhB,YAA+B,CAC9B,GAAM,GAAc,EAEpB,MAAI,IAAe,GAClB,QAAQ,KAAK,sCAAwC,EAAc,+CAAiD,GAGrH,GAAgB,EACT,EAIR,WAAsB,EAAS,EAAM,CACpC,GAAM,IAAoB,EAAW,IAAI,GAGzC,GAFI,EAAQ,gBAAgB,GAAmB,GAE3C,EAAQ,QAAU,GAAK,GAAkB,YAAc,EAAQ,QAAS,CAC3E,GAAM,IAAQ,EAAQ,MAEtB,GAAI,KAAU,OACb,QAAQ,KAAK,iFACH,GAAM,WAAa,GAC7B,QAAQ,KAAK,8EACP,CACN,GAAc,GAAmB,EAAS,GAC1C,QAIF,EAAM,cAAc,EAAI,SAAW,GACnC,EAAM,YAAY,EAAI,WAAY,GAAkB,gBAGrD,WAA2B,EAAS,EAAM,CACzC,GAAM,IAAoB,EAAW,IAAI,GAEzC,GAAI,EAAQ,QAAU,GAAK,GAAkB,YAAc,EAAQ,QAAS,CAC3E,GAAc,GAAmB,EAAS,GAC1C,OAGD,EAAM,cAAc,EAAI,SAAW,GACnC,EAAM,YAAY,EAAI,iBAAkB,GAAkB,gBAG3D,WAAsB,EAAS,EAAM,CACpC,GAAM,IAAoB,EAAW,IAAI,GAEzC,GAAI,EAAQ,QAAU,GAAK,GAAkB,YAAc,EAAQ,QAAS,CAC3E,GAAc,GAAmB,EAAS,GAC1C,OAGD,EAAM,cAAc,EAAI,SAAW,GACnC,EAAM,YAAY,EAAI,WAAY,GAAkB,gBAGrD,YAAwB,EAAS,EAAM,CACtC,GAAM,IAAoB,EAAW,IAAI,GAEzC,GAAI,EAAQ,QAAU,GAAK,GAAkB,YAAc,EAAQ,QAAS,CAC3E,GAAkB,GAAmB,EAAS,GAC9C,OAGD,EAAM,cAAc,EAAI,SAAW,GACnC,EAAM,YAAY,EAAI,iBAAkB,GAAkB,gBAG3D,GAAM,IAAe,EACnB,IAAiB,EAAI,QACrB,IAAsB,EAAI,eAC1B,IAAyB,EAAI,iBAEzB,GAAa,EACjB,IAAgB,EAAI,SACpB,IAA6B,EAAI,wBACjC,IAA4B,EAAI,uBAChC,IAAe,EAAI,QACnB,IAA4B,EAAI,uBAChC,IAA2B,EAAI,sBAGjC,YAA8B,EAAa,EAAS,GAAc,CAmCjE,GAlCA,AAAI,GACH,GAAI,cAAc,EAAa,EAAI,eAAgB,GAAa,EAAQ,QAExE,EAAI,cAAc,EAAa,EAAI,eAAgB,GAAa,EAAQ,QAEpE,KAAgB,EAAI,YAAc,IAAgB,EAAI,mBACzD,EAAI,cAAc,EAAa,EAAI,eAAgB,GAAa,EAAQ,QAGzE,EAAI,cAAc,EAAa,EAAI,mBAAoB,GAAW,EAAQ,YAE1E,EAAI,cAAc,EAAa,EAAI,mBAAoB,GAAW,EAAQ,aAE1E,GAAI,cAAc,EAAa,EAAI,eAAgB,EAAI,eAEvD,EAAI,cAAc,EAAa,EAAI,eAAgB,EAAI,eAEnD,KAAgB,EAAI,YAAc,IAAgB,EAAI,mBACzD,EAAI,cAAc,EAAa,EAAI,eAAgB,EAAI,eAGpD,GAAQ,QAAU,IAAuB,EAAQ,QAAU,KAC9D,QAAQ,KAAK,iIAGd,EAAI,cAAc,EAAa,EAAI,mBAAoB,EAAe,EAAQ,YAE9E,EAAI,cAAc,EAAa,EAAI,mBAAoB,EAAe,EAAQ,YAE1E,EAAQ,YAAc,IAAiB,EAAQ,YAAc,IAChE,QAAQ,KAAK,oIAIX,EAAW,IAAI,oCAAsC,GAAM,CAC9D,GAAM,IAAY,EAAW,IAAI,kCAGjC,GAFI,EAAQ,OAAS,GAAa,EAAW,IAAI,8BAAgC,IAE7E,IAAa,IAAS,EAAQ,OAAS,GAAiB,EAAW,IAAI,mCAAqC,GAAO,OAEvH,AAAI,GAAQ,WAAa,GAAK,EAAW,IAAI,GAAS,sBACrD,GAAI,cAAc,EAAa,GAAU,2BAA4B,KAAK,IAAI,EAAQ,WAAY,EAAa,qBAE/G,EAAW,IAAI,GAAS,oBAAsB,EAAQ,aAKzD,YAAqB,EAAmB,EAAS,CAChD,AAAI,EAAkB,cAAgB,QACrC,GAAkB,YAAc,GAChC,EAAQ,iBAAiB,UAAW,GACpC,EAAkB,eAAiB,EAAI,gBACvC,EAAK,OAAO,YAId,YAAuB,EAAmB,EAAS,GAAM,CACxD,GAAI,IAAc,EAAI,WACtB,AAAI,EAAQ,sBAAsB,IAAc,EAAI,kBAChD,EAAQ,iBAAiB,IAAc,EAAI,YAC/C,GAAY,EAAmB,GAC/B,EAAM,cAAc,EAAI,SAAW,IACnC,EAAM,YAAY,GAAa,EAAkB,gBAEjD,EAAI,YAAY,EAAI,oBAAqB,EAAQ,OAEjD,EAAI,YAAY,EAAI,+BAAgC,EAAQ,kBAE5D,EAAI,YAAY,EAAI,iBAAkB,EAAQ,iBAE9C,EAAI,YAAY,EAAI,mCAAoC,EAAI,MAE5D,GAAM,IAAkB,EAAuB,IAAY,EAAe,EAAQ,SAAW,GACvF,GAAQ,EAAY,EAAQ,MAAO,GAAiB,GAAO,GAC3D,GAAe,EAAe,KAAU,EAC3C,GAAW,EAAM,QAAQ,EAAQ,QAChC,GAAS,EAAM,QAAQ,EAAQ,MACjC,GAAmB,EAAkB,EAAQ,eAAgB,GAAU,GAAQ,EAAQ,UACzF,GAAqB,GAAa,EAAS,IAC3C,GAAI,GACE,GAAU,EAAQ,QAExB,GAAI,EAAQ,eAEX,GAAmB,EAAI,gBAEvB,AAAI,EACH,AAAI,EAAQ,OAAS,EACpB,GAAmB,EAAI,mBACjB,AAAI,EAAQ,OAAS,EAC3B,GAAmB,EAAI,kBACjB,AAAI,EAAQ,OAAS,GAC3B,GAAmB,EAAI,iBAEvB,GAAmB,EAAI,kBAGpB,EAAQ,OAAS,GACpB,QAAQ,MAAM,gEAKZ,EAAQ,SAAW,IAAe,KAAqB,EAAI,iBAI1D,EAAQ,OAAS,IAAqB,EAAQ,OAAS,GAC1D,SAAQ,KAAK,+FACb,EAAQ,KAAO,GACf,GAAS,EAAM,QAAQ,EAAQ,OAI7B,EAAQ,SAAW,IAAsB,KAAqB,EAAI,iBAGrE,IAAmB,EAAI,cAInB,EAAQ,OAAS,IACpB,SAAQ,KAAK,oFACb,EAAQ,KAAO,GACf,GAAS,EAAM,QAAQ,EAAQ,QAKjC,EAAM,WAAW,EAAI,WAAY,EAAG,GAAkB,GAAM,MAAO,GAAM,OAAQ,EAAG,GAAU,GAAQ,cAC5F,EAAQ,cAIlB,GAAI,GAAQ,OAAS,GAAK,GAAc,CACvC,OAAS,IAAI,EAAG,GAAK,GAAQ,OAAQ,GAAI,GAAI,KAC5C,EAAS,GAAQ,IACjB,EAAM,WAAW,EAAI,WAAY,GAAG,GAAkB,EAAO,MAAO,EAAO,OAAQ,EAAG,GAAU,GAAQ,EAAO,MAGhH,EAAQ,gBAAkB,GAC1B,EAAkB,cAAgB,GAAQ,OAAS,MAEnD,GAAM,WAAW,EAAI,WAAY,EAAG,GAAkB,GAAM,MAAO,GAAM,OAAQ,EAAG,GAAU,GAAQ,GAAM,MAC5G,EAAkB,cAAgB,UAEzB,EAAQ,oBAAqB,CACvC,OAAS,IAAI,EAAG,GAAK,GAAQ,OAAQ,GAAI,GAAI,KAC5C,EAAS,GAAQ,IAEjB,AAAI,EAAQ,SAAW,IAAc,EAAQ,SAAW,GACvD,AAAI,KAAa,KAChB,EAAM,qBAAqB,EAAI,WAAY,GAAG,GAAkB,EAAO,MAAO,EAAO,OAAQ,EAAG,EAAO,MAEvG,QAAQ,KAAK,kGAGd,EAAM,WAAW,EAAI,WAAY,GAAG,GAAkB,EAAO,MAAO,EAAO,OAAQ,EAAG,GAAU,GAAQ,EAAO,MAIjH,EAAkB,cAAgB,GAAQ,OAAS,UACzC,EAAQ,qBAClB,EAAM,WAAW,EAAI,iBAAkB,EAAG,GAAkB,GAAM,MAAO,GAAM,OAAQ,GAAM,MAAO,EAAG,GAAU,GAAQ,GAAM,MAC/H,EAAkB,cAAgB,UACxB,EAAQ,gBAClB,EAAM,WAAW,EAAI,WAAY,EAAG,GAAkB,GAAM,MAAO,GAAM,OAAQ,GAAM,MAAO,EAAG,GAAU,GAAQ,GAAM,MACzH,EAAkB,cAAgB,UAM9B,GAAQ,OAAS,GAAK,GAAc,CACvC,OAAS,IAAI,EAAG,GAAK,GAAQ,OAAQ,GAAI,GAAI,KAC5C,EAAS,GAAQ,IACjB,EAAM,WAAW,EAAI,WAAY,GAAG,GAAkB,GAAU,GAAQ,GAGzE,EAAQ,gBAAkB,GAC1B,EAAkB,cAAgB,GAAQ,OAAS,MAEnD,GAAM,WAAW,EAAI,WAAY,EAAG,GAAkB,GAAU,GAAQ,IACxE,EAAkB,cAAgB,EAIpC,AAAI,EAA4B,EAAS,KACxC,EAAe,GAAa,EAAS,GAAM,MAAO,GAAM,QAGzD,EAAkB,UAAY,EAAQ,QAClC,EAAQ,UAAU,EAAQ,SAAS,GAGxC,YAA2B,EAAmB,EAAS,GAAM,CAC5D,GAAI,EAAQ,MAAM,SAAW,EAAG,OAChC,GAAY,EAAmB,GAC/B,EAAM,cAAc,EAAI,SAAW,IACnC,EAAM,YAAY,EAAI,iBAAkB,EAAkB,gBAE1D,EAAI,YAAY,EAAI,oBAAqB,EAAQ,OAEjD,EAAI,YAAY,EAAI,+BAAgC,EAAQ,kBAE5D,EAAI,YAAY,EAAI,iBAAkB,EAAQ,iBAE9C,EAAI,YAAY,EAAI,mCAAoC,EAAI,MAE5D,GAAM,IAAe,GAAY,GAAQ,qBAAuB,EAAQ,MAAM,GAAG,qBAC3E,GAAgB,EAAQ,MAAM,IAAM,EAAQ,MAAM,GAAG,cACrD,GAAY,GAElB,OAAS,IAAI,EAAG,GAAI,EAAG,KACtB,AAAI,CAAC,IAAgB,CAAC,GACrB,GAAU,IAAK,EAAY,EAAQ,MAAM,IAAI,GAAO,GAAM,GAE1D,GAAU,IAAK,GAAgB,EAAQ,MAAM,IAAG,MAAQ,EAAQ,MAAM,IAIxE,GAAM,IAAQ,GAAU,GACrB,GAAe,EAAe,KAAU,EACxC,GAAW,EAAM,QAAQ,EAAQ,QACjC,GAAS,EAAM,QAAQ,EAAQ,MAC/B,EAAmB,EAAkB,EAAQ,eAAgB,GAAU,GAAQ,EAAQ,UAC1F,GAAqB,EAAI,iBAAkB,EAAS,IACpD,GAAI,IAEJ,GAAI,GAAc,CACjB,OAAS,IAAI,EAAG,GAAI,EAAG,KAAK,CAC3B,GAAU,GAAU,IAAG,QAEvB,OAAS,IAAI,EAAG,GAAI,GAAQ,OAAQ,KAAK,CACxC,GAAM,IAAS,GAAQ,IAEvB,AAAI,EAAQ,SAAW,IAAc,EAAQ,SAAW,GACvD,AAAI,KAAa,KAChB,EAAM,qBAAqB,EAAI,4BAA8B,GAAG,GAAG,EAAkB,GAAO,MAAO,GAAO,OAAQ,EAAG,GAAO,MAE5H,QAAQ,KAAK,mGAGd,EAAM,WAAW,EAAI,4BAA8B,GAAG,GAAG,EAAkB,GAAO,MAAO,GAAO,OAAQ,EAAG,GAAU,GAAQ,GAAO,OAKvI,EAAkB,cAAgB,GAAQ,OAAS,MAC7C,CACN,GAAU,EAAQ,QAElB,OAAS,IAAI,EAAG,GAAI,EAAG,KACtB,GAAI,GAAe,CAClB,EAAM,WAAW,EAAI,4BAA8B,GAAG,EAAG,EAAkB,GAAU,IAAG,MAAO,GAAU,IAAG,OAAQ,EAAG,GAAU,GAAQ,GAAU,IAAG,MAEtJ,OAAS,IAAI,EAAG,GAAI,GAAQ,OAAQ,KAAK,CAExC,GAAM,IAAc,AADL,GAAQ,IACI,MAAM,IAAG,MACpC,EAAM,WAAW,EAAI,4BAA8B,GAAG,GAAI,EAAG,EAAkB,GAAY,MAAO,GAAY,OAAQ,EAAG,GAAU,GAAQ,GAAY,WAElJ,CACN,EAAM,WAAW,EAAI,4BAA8B,GAAG,EAAG,EAAkB,GAAU,GAAQ,GAAU,KAEvG,OAAS,IAAI,EAAG,GAAI,GAAQ,OAAQ,KAAK,CACxC,GAAM,IAAS,GAAQ,IACvB,EAAM,WAAW,EAAI,4BAA8B,GAAG,GAAI,EAAG,EAAkB,GAAU,GAAQ,GAAO,MAAM,MAKjH,EAAkB,cAAgB,GAAQ,OAG3C,AAAI,EAA4B,EAAS,KAExC,EAAe,EAAI,iBAAkB,EAAS,GAAM,MAAO,GAAM,QAGlE,EAAkB,UAAY,EAAQ,QAClC,EAAQ,UAAU,EAAQ,SAAS,GAKxC,YAAiC,EAAa,EAAc,GAAS,GAAY,GAAe,CAC/F,GAAM,IAAW,EAAM,QAAQ,GAAQ,QACjC,GAAS,EAAM,QAAQ,GAAQ,MAC/B,GAAmB,EAAkB,GAAQ,eAAgB,GAAU,GAAQ,GAAQ,UAE7F,AAAI,KAAkB,EAAI,YAAc,KAAkB,EAAI,iBAC7D,EAAM,WAAW,GAAe,EAAG,GAAkB,EAAa,MAAO,EAAa,OAAQ,EAAa,MAAO,EAAG,GAAU,GAAQ,MAEvI,EAAM,WAAW,GAAe,EAAG,GAAkB,EAAa,MAAO,EAAa,OAAQ,EAAG,GAAU,GAAQ,MAGpH,EAAM,gBAAgB,EAAI,YAAa,GAEvC,EAAI,qBAAqB,EAAI,YAAa,GAAY,GAAe,EAAW,IAAI,IAAS,eAAgB,GAE7G,EAAM,gBAAgB,EAAI,YAAa,MAIxC,YAAkC,EAAc,EAAc,GAAe,CAG5E,GAFA,EAAI,iBAAiB,EAAI,aAAc,GAEnC,EAAa,aAAe,CAAC,EAAa,cAAe,CAC5D,GAAI,IAAmB,EAAI,kBAE3B,GAAI,GAAe,CAClB,GAAM,IAAe,EAAa,aAElC,AAAI,IAAgB,GAAa,gBAChC,CAAI,GAAa,OAAS,EACzB,GAAmB,EAAI,mBACb,GAAa,OAAS,GAChC,IAAmB,EAAI,oBAIzB,GAAM,IAAU,GAAuB,GAEvC,EAAI,+BAA+B,EAAI,aAAc,GAAS,GAAkB,EAAa,MAAO,EAAa,YAEjH,GAAI,oBAAoB,EAAI,aAAc,GAAkB,EAAa,MAAO,EAAa,QAG9F,EAAI,wBAAwB,EAAI,YAAa,EAAI,iBAAkB,EAAI,aAAc,WAC3E,EAAa,aAAe,EAAa,cAAe,CAClE,GAAI,GAAe,CAClB,GAAM,IAAU,GAAuB,GAEvC,EAAI,+BAA+B,EAAI,aAAc,GAAS,EAAI,iBAAkB,EAAa,MAAO,EAAa,YAErH,GAAI,oBAAoB,EAAI,aAAc,EAAI,cAAe,EAAa,MAAO,EAAa,QAG/F,EAAI,wBAAwB,EAAI,YAAa,EAAI,yBAA0B,EAAI,aAAc,OACvF,CAEN,GAAM,IAAU,EAAa,+BAAiC,GAAO,EAAa,QAAQ,GAAK,EAAa,QACtG,GAAW,EAAM,QAAQ,GAAQ,QACjC,GAAS,EAAM,QAAQ,GAAQ,MAC/B,GAAmB,EAAkB,GAAQ,eAAgB,GAAU,GAAQ,GAAQ,UAE7F,GAAI,GAAe,CAClB,GAAM,IAAU,GAAuB,GAEvC,EAAI,+BAA+B,EAAI,aAAc,GAAS,GAAkB,EAAa,MAAO,EAAa,YAEjH,GAAI,oBAAoB,EAAI,aAAc,GAAkB,EAAa,MAAO,EAAa,QAI/F,EAAI,iBAAiB,EAAI,aAAc,MAIxC,WAA2B,EAAa,EAAc,CAErD,GADe,GAAgB,EAAa,wBAChC,KAAM,IAAI,OAAM,2DAG5B,GAFA,EAAM,gBAAgB,EAAI,YAAa,GAEnC,CAAE,GAAa,cAAgB,EAAa,aAAa,gBAC5D,KAAM,IAAI,OAAM,uEAIjB,AAAI,EAAC,EAAW,IAAI,EAAa,cAAc,gBAAkB,EAAa,aAAa,MAAM,QAAU,EAAa,OAAS,EAAa,aAAa,MAAM,SAAW,EAAa,SACxL,GAAa,aAAa,MAAM,MAAQ,EAAa,MACrD,EAAa,aAAa,MAAM,OAAS,EAAa,OACtD,EAAa,aAAa,YAAc,IAGzC,EAAa,EAAa,aAAc,GAExC,GAAM,IAAoB,EAAW,IAAI,EAAa,cAAc,eAEpE,GAAI,EAAa,aAAa,SAAW,GACxC,EAAI,qBAAqB,EAAI,YAAa,EAAI,iBAAkB,EAAI,WAAY,GAAmB,WACzF,EAAa,aAAa,SAAW,GAC/C,EAAI,qBAAqB,EAAI,YAAa,EAAI,yBAA0B,EAAI,WAAY,GAAmB,OAE3G,MAAM,IAAI,OAAM,+BAKlB,YAAgC,EAAc,CAC7C,GAAM,GAAyB,EAAW,IAAI,GACxC,GAAS,EAAa,0BAA4B,GAExD,GAAI,EAAa,aAAc,CAC9B,GAAI,GAAQ,KAAM,IAAI,OAAM,4DAC5B,EAAkB,EAAuB,mBAAoB,WAEzD,GAAQ,CACX,EAAuB,mBAAqB,GAE5C,OAAS,IAAI,EAAG,GAAI,EAAG,KACtB,EAAM,gBAAgB,EAAI,YAAa,EAAuB,mBAAmB,KACjF,EAAuB,mBAAmB,IAAK,EAAI,qBACnD,GAAyB,EAAuB,mBAAmB,IAAI,EAAc,QAGtF,GAAM,gBAAgB,EAAI,YAAa,EAAuB,oBAC9D,EAAuB,mBAAqB,EAAI,qBAChD,GAAyB,EAAuB,mBAAoB,EAAc,IAIpF,EAAM,gBAAgB,EAAI,YAAa,MAIxC,YAA2B,EAAc,CACxC,GAAM,GAAU,EAAa,QACvB,GAAyB,EAAW,IAAI,GACxC,GAAoB,EAAW,IAAI,GACzC,EAAa,iBAAiB,UAAW,GAErC,EAAa,+BAAiC,IACjD,IAAkB,eAAiB,EAAI,gBACvC,GAAkB,UAAY,EAAQ,QACtC,EAAK,OAAO,YAGb,GAAM,IAAS,EAAa,0BAA4B,GAClD,GAA0B,EAAa,+BAAiC,GACxE,GAAgB,EAAa,iCAAmC,GAChE,GAAmB,EAAQ,iBAAmB,EAAQ,qBACtD,GAAe,EAAe,IAAiB,EAQrD,GANI,GAAY,EAAQ,SAAW,IAAc,GAAQ,OAAS,GAAa,EAAQ,OAAS,IAC/F,GAAQ,OAAS,GACjB,QAAQ,KAAK,4GAIV,GAAQ,CACX,GAAuB,mBAAqB,GAE5C,OAAS,IAAI,EAAG,GAAI,EAAG,KACtB,GAAuB,mBAAmB,IAAK,EAAI,4BAGpD,GAAuB,mBAAqB,EAAI,oBAE5C,GACH,GAAI,EAAa,YAAa,CAC7B,GAAM,IAAW,EAAa,QAE9B,OAAS,GAAI,EAAG,GAAK,GAAS,OAAQ,EAAI,GAAI,IAAK,CAClD,GAAM,IAAuB,EAAW,IAAI,GAAS,IAErD,AAAI,GAAqB,iBAAmB,QAC3C,IAAqB,eAAiB,EAAI,gBAC1C,EAAK,OAAO,iBAId,SAAQ,KAAK,yHAEJ,GACV,GAAI,EAAU,CACb,GAAuB,+BAAiC,EAAI,oBAC5D,GAAuB,yBAA2B,EAAI,qBAEtD,EAAI,iBAAiB,EAAI,aAAc,GAAuB,0BAE9D,GAAM,IAAW,EAAM,QAAQ,EAAQ,QACjC,EAAS,EAAM,QAAQ,EAAQ,MAC/B,GAAmB,EAAkB,EAAQ,eAAgB,GAAU,EAAQ,EAAQ,UACvF,GAAU,GAAuB,GAEvC,EAAI,+BAA+B,EAAI,aAAc,GAAS,GAAkB,EAAa,MAAO,EAAa,QAEjH,EAAM,gBAAgB,EAAI,YAAa,GAAuB,gCAE9D,EAAI,wBAAwB,EAAI,YAAa,EAAI,kBAAmB,EAAI,aAAc,GAAuB,0BAE7G,EAAI,iBAAiB,EAAI,aAAc,MAEnC,EAAa,aAChB,IAAuB,yBAA2B,EAAI,qBACtD,GAAyB,GAAuB,yBAA0B,EAAc,KAGzF,EAAM,gBAAgB,EAAI,YAAa,UAEvC,SAAQ,KAAK,mFAMhB,GAAI,GAAQ,CACX,EAAM,YAAY,EAAI,iBAAkB,GAAkB,gBAC1D,GAAqB,EAAI,iBAAkB,EAAS,IAEpD,OAAS,IAAI,EAAG,GAAI,EAAG,KACtB,GAAwB,GAAuB,mBAAmB,IAAI,EAAc,EAAS,EAAI,kBAAmB,EAAI,4BAA8B,IAGvJ,AAAI,EAA4B,EAAS,KACxC,EAAe,EAAI,iBAAkB,EAAS,EAAa,MAAO,EAAa,QAGhF,EAAM,wBACI,GAAyB,CACnC,GAAM,IAAW,EAAa,QAE9B,OAAS,GAAI,EAAG,GAAK,GAAS,OAAQ,EAAI,GAAI,IAAK,CAClD,GAAM,IAAa,GAAS,GACtB,GAAuB,EAAW,IAAI,IAC5C,EAAM,YAAY,EAAI,WAAY,GAAqB,gBACvD,GAAqB,EAAI,WAAY,GAAY,IACjD,GAAwB,GAAuB,mBAAoB,EAAc,GAAY,EAAI,kBAAoB,EAAG,EAAI,YAExH,EAA4B,GAAY,KAC3C,EAAe,EAAI,WAAY,GAAY,EAAa,MAAO,EAAa,QAI9E,EAAM,oBACA,CACN,GAAI,IAAgB,EAAI,WAExB,AAAI,IAEH,CAAI,EAEH,GAAgB,AADI,EAAQ,gBACE,EAAI,WAAa,EAAI,iBAEnD,QAAQ,KAAK,iFAIf,EAAM,YAAY,GAAe,GAAkB,gBACnD,GAAqB,GAAe,EAAS,IAC7C,GAAwB,GAAuB,mBAAoB,EAAc,EAAS,EAAI,kBAAmB,IAE7G,EAA4B,EAAS,KACxC,EAAe,GAAe,EAAS,EAAa,MAAO,EAAa,OAAQ,EAAa,OAG9F,EAAM,gBAIP,AAAI,EAAa,aAChB,GAAuB,GAIzB,YAAkC,EAAc,CAC/C,GAAM,GAAe,EAAe,IAAiB,EAC/C,GAAW,EAAa,+BAAiC,GAAO,EAAa,QAAU,CAAC,EAAa,SAE3G,OAAS,IAAI,EAAG,GAAK,GAAS,OAAQ,GAAI,GAAI,KAAK,CAClD,GAAM,IAAU,GAAS,IAEzB,GAAI,EAA4B,GAAS,GAAe,CACvD,GAAM,IAAS,EAAa,wBAA0B,EAAI,iBAAmB,EAAI,WAE3E,GAAe,EAAW,IAAI,IAAS,eAE7C,EAAM,YAAY,GAAQ,IAC1B,EAAe,GAAQ,GAAS,EAAa,MAAO,EAAa,QACjE,EAAM,kBAKT,YAAuC,EAAc,CACpD,GAAI,EAAa,+BAChB,GAAI,EAAU,CACb,GAAM,GAAQ,EAAa,MACrB,GAAS,EAAa,OACxB,GAAO,EAAI,iBACf,AAAI,EAAa,aAAa,KAAQ,EAAI,kBACtC,EAAa,eAAe,KAAQ,EAAI,oBAC5C,GAAM,IAAyB,EAAW,IAAI,GAC9C,EAAM,gBAAgB,EAAI,iBAAkB,GAAuB,gCACnE,EAAM,gBAAgB,EAAI,iBAAkB,GAAuB,oBAEnE,EAAI,gBAAgB,EAAG,EAAG,EAAO,GAAQ,EAAG,EAAG,EAAO,GAAQ,GAAM,EAAI,SAExE,EAAM,gBAAgB,EAAI,iBAAkB,MAC5C,EAAM,gBAAgB,EAAI,iBAAkB,GAAuB,oCAEnE,SAAQ,KAAK,mFAKhB,YAAgC,EAAc,CAC7C,MAAO,IAAY,EAAa,+BAAiC,KAAK,IAAI,EAAY,EAAa,SAAW,EAG/G,YAA4B,EAAS,CACpC,GAAM,GAAQ,EAAK,OAAO,MAE1B,AAAI,EAAe,IAAI,KAAa,GACnC,GAAe,IAAI,EAAS,GAE5B,EAAQ,UAKV,GAAI,IAAkB,GAClB,GAAoB,GAExB,YAA0B,EAAS,EAAM,CACxC,AAAI,GAAW,EAAQ,qBAClB,MAAoB,IACvB,SAAQ,KAAK,oHACb,GAAkB,IAGnB,EAAU,EAAQ,SAGnB,EAAa,EAAS,GAGvB,YAA4B,EAAS,EAAM,CAC1C,AAAI,GAAW,EAAQ,yBAClB,MAAsB,IACzB,SAAQ,KAAK,2HACb,GAAoB,IAGrB,EAAU,EAAQ,SAGnB,GAAe,EAAS,GAIzB,KAAK,oBAAsB,EAC3B,KAAK,kBAAoB,GACzB,KAAK,aAAe,EACpB,KAAK,kBAAoB,EACzB,KAAK,aAAe,EACpB,KAAK,eAAiB,GACtB,KAAK,kBAAoB,GACzB,KAAK,yBAA2B,GAChC,KAAK,8BAAgC,GACrC,KAAK,iBAAmB,GACxB,KAAK,mBAAqB,GAG3B,YAAoB,EAAI,EAAY,EAAc,CACjD,GAAM,GAAW,EAAa,SAE9B,WAAiB,EAAG,CACnB,GAAI,GACJ,GAAI,IAAM,GAAkB,MAAO,GAAG,cACtC,GAAI,IAAM,EAAuB,MAAO,GAAG,uBAC3C,GAAI,IAAM,EAAuB,MAAO,GAAG,uBAC3C,GAAI,IAAM,GAAsB,MAAO,GAAG,qBAC1C,GAAI,IAAM,GAAU,MAAO,GAAG,KAC9B,GAAI,IAAM,GAAW,MAAO,GAAG,MAC/B,GAAI,IAAM,GAAmB,MAAO,GAAG,eACvC,GAAI,IAAM,EAAS,MAAO,GAAG,IAC7B,GAAI,IAAM,EAAiB,MAAO,GAAG,aACrC,GAAI,IAAM,EAAW,MAAO,GAAG,MAE/B,GAAI,IAAM,EACT,MAAI,GAAiB,EAAG,WACxB,GAAY,EAAW,IAAI,0BAEvB,IAAc,KACV,EAAU,eAEV,MAIT,GAAI,IAAM,GAAa,MAAO,GAAG,MACjC,GAAI,IAAM,GAAW,MAAO,GAAG,IAC/B,GAAI,IAAM,GAAY,MAAO,GAAG,KAChC,GAAI,IAAM,GAAiB,MAAO,GAAG,UACrC,GAAI,IAAM,GAAsB,MAAO,GAAG,gBAC1C,GAAI,IAAM,GAAa,MAAO,GAAG,gBACjC,GAAI,IAAM,GAAoB,MAAO,GAAG,cACxC,GAAI,IAAM,GAAW,MAAO,GAAG,IAE/B,GAAI,IAAM,GAAkB,MAAO,GAAG,YACtC,GAAI,IAAM,GAAU,MAAO,GAAG,GAC9B,GAAI,IAAM,GAAiB,MAAO,GAAG,WACrC,GAAI,IAAM,GAAkB,MAAO,GAAG,YACtC,GAAI,IAAM,GAAmB,MAAO,GAAG,aAEvC,GAAI,IAAM,GAAwB,IAAM,GAAyB,IAAM,GAAyB,IAAM,EAGrG,GAFA,EAAY,EAAW,IAAI,iCAEvB,IAAc,KAAM,CACvB,GAAI,IAAM,EAAsB,MAAO,GAAU,6BACjD,GAAI,IAAM,EAAuB,MAAO,GAAU,8BAClD,GAAI,IAAM,EAAuB,MAAO,GAAU,8BAClD,GAAI,IAAM,EAAuB,MAAO,GAAU,kCAElD,OAAO,MAIT,GAAI,IAAM,IAA2B,IAAM,IAA2B,IAAM,IAA4B,IAAM,GAG7G,GAFA,EAAY,EAAW,IAAI,kCAEvB,IAAc,KAAM,CACvB,GAAI,IAAM,GAAyB,MAAO,GAAU,gCACpD,GAAI,IAAM,GAAyB,MAAO,GAAU,gCACpD,GAAI,IAAM,GAA0B,MAAO,GAAU,iCACrD,GAAI,IAAM,GAA0B,MAAO,GAAU,qCAErD,OAAO,MAIT,GAAI,IAAM,GAGT,MAFA,GAAY,EAAW,IAAI,iCAEvB,IAAc,KACV,EAAU,0BAEV,KAIT,GAAI,KAAM,GAAmB,IAAM,KAClC,GAAY,EAAW,IAAI,gCAEvB,IAAc,MAAM,CACvB,GAAI,IAAM,EAAiB,MAAO,GAAU,qBAC5C,GAAI,IAAM,GAAsB,MAAO,GAAU,0BAInD,GAAI,IAAM,IAAwB,IAAM,IAAwB,IAAM,IAAwB,IAAM,IAAwB,IAAM,IAAwB,IAAM,IAAwB,IAAM,IAAwB,IAAM,IAAwB,IAAM,IAAyB,IAAM,IAAyB,IAAM,IAAyB,IAAM,IAA0B,IAAM,IAA0B,IAAM,IAA0B,IAAM,IAAgC,IAAM,IAAgC,IAAM,IAAgC,IAAM,IAAgC,IAAM,IAAgC,IAAM,IAAgC,IAAM,IAAgC,IAAM,IAAgC,IAAM,IAAiC,IAAM,IAAiC,IAAM,IAAiC,IAAM,IAAkC,IAAM,IAAkC,IAAM,GAG36B,MAFA,GAAY,EAAW,IAAI,iCAEvB,IAAc,KAEV,EAEA,KAIT,GAAI,IAAM,GAGT,MAFA,GAAY,EAAW,IAAI,gCAEvB,IAAc,KAEV,EAEA,KAIT,GAAI,IAAM,GACT,MAAI,GAAiB,EAAG,kBACxB,GAAY,EAAW,IAAI,uBAEvB,IAAc,KACV,EAAU,wBAEV,MAKV,MAAO,CACN,QAAS,GAIX,gBAA0B,GAAkB,CAC3C,YAAY,EAAQ,GAAI,CACvB,QACA,KAAK,QAAU,GAKjB,GAAY,UAAU,cAAgB,GAEtC,gBAAoB,GAAS,CAC5B,aAAc,CACb,QACA,KAAK,KAAO,SAKd,GAAM,UAAU,QAAU,GAE1B,GAAM,IAAa,CAClB,KAAM,QAGP,QAAsB,CACrB,aAAc,CACb,KAAK,WAAa,KAClB,KAAK,MAAQ,KACb,KAAK,MAAQ,KAGd,cAAe,CACd,MAAI,MAAK,QAAU,MAClB,MAAK,MAAQ,GAAI,IACjB,KAAK,MAAM,iBAAmB,GAC9B,KAAK,MAAM,QAAU,GACrB,KAAK,MAAM,OAAS,GACpB,KAAK,MAAM,WAAa,CACvB,SAAU,KAIL,KAAK,MAGb,mBAAoB,CACnB,MAAI,MAAK,aAAe,MACvB,MAAK,WAAa,GAAI,IACtB,KAAK,WAAW,iBAAmB,GACnC,KAAK,WAAW,QAAU,GAC1B,KAAK,WAAW,kBAAoB,GACpC,KAAK,WAAW,eAAiB,GAAI,GACrC,KAAK,WAAW,mBAAqB,GACrC,KAAK,WAAW,gBAAkB,GAAI,IAGhC,KAAK,WAGb,cAAe,CACd,MAAI,MAAK,QAAU,MAClB,MAAK,MAAQ,GAAI,IACjB,KAAK,MAAM,iBAAmB,GAC9B,KAAK,MAAM,QAAU,GACrB,KAAK,MAAM,kBAAoB,GAC/B,KAAK,MAAM,eAAiB,GAAI,GAChC,KAAK,MAAM,mBAAqB,GAChC,KAAK,MAAM,gBAAkB,GAAI,IAG3B,KAAK,MAGb,cAAc,EAAO,CACpB,MAAI,MAAK,aAAe,MACvB,KAAK,WAAW,cAAc,GAG3B,KAAK,QAAU,MAClB,KAAK,MAAM,cAAc,GAGtB,KAAK,QAAU,MAClB,KAAK,MAAM,cAAc,GAGnB,KAGR,WAAW,EAAa,CACvB,YAAK,cAAc,CAClB,KAAM,eACN,KAAM,IAGH,KAAK,aAAe,MACvB,MAAK,WAAW,QAAU,IAGvB,KAAK,QAAU,MAClB,MAAK,MAAM,QAAU,IAGlB,KAAK,QAAU,MAClB,MAAK,MAAM,QAAU,IAGf,KAGR,OAAO,EAAa,EAAO,EAAgB,CAC1C,GAAI,GAAY,KACZ,EAAW,KACX,EAAW,KACT,EAAY,KAAK,WACjB,EAAO,KAAK,MACZ,EAAO,KAAK,MAElB,GAAI,GAAe,EAAM,QAAQ,kBAAoB,kBA0BpD,GAzBI,IAAc,MACjB,GAAY,EAAM,QAAQ,EAAY,eAAgB,GAElD,IAAc,MACjB,GAAU,OAAO,UAAU,EAAU,UAAU,QAC/C,EAAU,OAAO,UAAU,EAAU,SAAU,EAAU,SAAU,EAAU,OAE7E,AAAI,EAAU,eACb,GAAU,kBAAoB,GAC9B,EAAU,eAAe,KAAK,EAAU,iBAExC,EAAU,kBAAoB,GAG/B,AAAI,EAAU,gBACb,GAAU,mBAAqB,GAC/B,EAAU,gBAAgB,KAAK,EAAU,kBAEzC,EAAU,mBAAqB,GAGhC,KAAK,cAAc,MAIjB,GAAQ,EAAY,KAAM,CAC7B,EAAW,GAEX,OAAW,KAAc,GAAY,KAAK,SAAU,CAEnD,GAAM,GAAY,EAAM,aAAa,EAAY,GAEjD,GAAI,EAAK,OAAO,EAAW,aAAe,OAAW,CAEpD,GAAM,GAAQ,GAAI,IAClB,EAAM,iBAAmB,GACzB,EAAM,QAAU,GAChB,EAAK,OAAO,EAAW,WAAa,EAEpC,EAAK,IAAI,GAGV,GAAM,GAAQ,EAAK,OAAO,EAAW,WAErC,AAAI,IAAc,MACjB,GAAM,OAAO,UAAU,EAAU,UAAU,QAC3C,EAAM,OAAO,UAAU,EAAM,SAAU,EAAM,SAAU,EAAM,OAC7D,EAAM,YAAc,EAAU,QAG/B,EAAM,QAAU,IAAc,KAK/B,GAAM,GAAW,EAAK,OAAO,oBACvB,EAAW,EAAK,OAAO,aACvB,EAAW,EAAS,SAAS,WAAW,EAAS,UACjD,EAAkB,IAClB,EAAY,KAElB,AAAI,EAAK,WAAW,UAAY,EAAW,EAAkB,EAC5D,GAAK,WAAW,SAAW,GAC3B,KAAK,cAAc,CAClB,KAAM,WACN,WAAY,EAAY,WACxB,OAAQ,QAEC,CAAC,EAAK,WAAW,UAAY,GAAY,EAAkB,GACrE,GAAK,WAAW,SAAW,GAC3B,KAAK,cAAc,CAClB,KAAM,aACN,WAAY,EAAY,WACxB,OAAQ,YAIV,AAAI,KAAS,MAAQ,EAAY,WAChC,GAAW,EAAM,QAAQ,EAAY,UAAW,GAE5C,IAAa,MAChB,GAAK,OAAO,UAAU,EAAS,UAAU,QACzC,EAAK,OAAO,UAAU,EAAK,SAAU,EAAK,SAAU,EAAK,OAEzD,AAAI,EAAS,eACZ,GAAK,kBAAoB,GACzB,EAAK,eAAe,KAAK,EAAS,iBAElC,EAAK,kBAAoB,GAG1B,AAAI,EAAS,gBACZ,GAAK,mBAAqB,GAC1B,EAAK,gBAAgB,KAAK,EAAS,kBAEnC,EAAK,mBAAqB,KAO/B,MAAI,KAAc,MACjB,GAAU,QAAU,IAAc,MAG/B,IAAS,MACZ,GAAK,QAAU,IAAa,MAGzB,IAAS,MACZ,GAAK,QAAU,IAAa,MAGtB,MAKT,gBAA2B,GAAgB,CAC1C,YAAY,EAAU,EAAI,CACzB,QACA,GAAM,GAAQ,KACR,EAAQ,EAAS,MACnB,EAAU,KACV,EAAyB,EACzB,EAAiB,KACjB,EAAqB,cACrB,EAAO,KACP,EAAY,KACZ,EAAgB,KAChB,EAAc,KACd,EAAc,KACd,EAAgB,GAChB,EAA4B,KAC5B,EAAsB,KACtB,EAAsB,KACtB,EAAU,KACV,EAAa,KACb,EAAa,KACX,EAAc,GACd,EAAkB,GAAI,KAEtB,EAAU,GAAI,IACpB,EAAQ,OAAO,OAAO,GACtB,EAAQ,SAAW,GAAI,IACvB,GAAM,GAAU,GAAI,IACpB,EAAQ,OAAO,OAAO,GACtB,EAAQ,SAAW,GAAI,IACvB,GAAM,GAAU,CAAC,EAAS,GACpB,EAAW,GAAI,IACrB,EAAS,OAAO,OAAO,GACvB,EAAS,OAAO,OAAO,GACvB,GAAI,GAAoB,KACpB,GAAmB,KAEvB,KAAK,iBAAmB,GACxB,KAAK,QAAU,GACf,KAAK,aAAe,GAEpB,KAAK,cAAgB,SAAU,GAAO,CACrC,GAAI,IAAa,EAAY,IAE7B,MAAI,MAAe,QAClB,IAAa,GAAI,IACjB,EAAY,IAAS,IAGf,GAAW,qBAGnB,KAAK,kBAAoB,SAAU,GAAO,CACzC,GAAI,IAAa,EAAY,IAE7B,MAAI,MAAe,QAClB,IAAa,GAAI,IACjB,EAAY,IAAS,IAGf,GAAW,gBAGnB,KAAK,QAAU,SAAU,GAAO,CAC/B,GAAI,IAAa,EAAY,IAE7B,MAAI,MAAe,QAClB,IAAa,GAAI,IACjB,EAAY,IAAS,IAGf,GAAW,gBAInB,WAAwB,GAAO,CAC9B,GAAM,IAAa,EAAgB,IAAI,GAAM,aAE7C,AAAI,IACH,GAAW,cAAc,CACxB,KAAM,GAAM,KACZ,KAAM,GAAM,cAKf,YAAwB,CACvB,EAAgB,QAAQ,SAAU,GAAY,GAAa,CAC1D,GAAW,WAAW,MAEvB,EAAgB,QAChB,EAAoB,KACpB,GAAmB,KAEnB,EAAM,kBAAkB,MACxB,EAAS,gBAAgB,EAAS,mBAC9B,GAAe,EAAG,kBAAkB,GACpC,GAA2B,EAAG,kBAAkB,GAChD,GAAqB,EAAG,mBAAmB,GAC3C,GAAqB,EAAG,mBAAmB,GAC/C,EAAgB,KAChB,EAA4B,KAC5B,EAAsB,KACtB,EAAsB,KACtB,EAAc,KACd,EAAc,KACd,EAAY,KACZ,EAAU,KAEV,GAAU,OACV,EAAM,aAAe,GACrB,EAAM,cAAc,CACnB,KAAM,eAIR,KAAK,0BAA4B,SAAU,GAAO,CACjD,EAAyB,GAErB,EAAM,eAAiB,IAC1B,QAAQ,KAAK,0EAIf,KAAK,sBAAwB,SAAU,GAAO,CAC7C,EAAqB,GAEjB,EAAM,eAAiB,IAC1B,QAAQ,KAAK,6EAIf,KAAK,kBAAoB,UAAY,CACpC,MAAO,IAGR,KAAK,aAAe,UAAY,CAC/B,MAAO,KAAgB,KAAO,EAAc,GAG7C,KAAK,WAAa,UAAY,CAC7B,MAAO,IAGR,KAAK,SAAW,UAAY,CAC3B,MAAO,IAGR,KAAK,WAAa,UAAY,CAC7B,MAAO,IAGR,KAAK,WAAa,eAAgB,GAAO,CAGxC,GAFA,EAAU,GAEN,IAAY,KAAM,CACrB,EAAQ,iBAAiB,SAAU,GACnC,EAAQ,iBAAiB,cAAe,GACxC,EAAQ,iBAAiB,YAAa,GACtC,EAAQ,iBAAiB,UAAW,GACpC,EAAQ,iBAAiB,eAAgB,GACzC,EAAQ,iBAAiB,aAAc,GACvC,EAAQ,iBAAiB,MAAO,GAChC,EAAQ,iBAAiB,qBAAsB,GAC/C,GAAM,IAAa,EAAG,uBAMtB,GAJI,GAAW,eAAiB,IAC/B,KAAM,GAAG,mBAGN,EAAQ,YAAY,SAAW,OAAW,CAC7C,GAAM,IAAY,CACjB,UAAW,GAAW,UACtB,MAAO,GAAW,MAClB,MAAO,GAAW,MAClB,QAAS,GAAW,QACpB,uBAAwB,GAEzB,EAAc,GAAI,cAAa,EAAS,EAAI,IAC5C,EAAQ,kBAAkB,CACzB,UAAW,YAEF,YAAc,uBAAuB,CAG/C,GAAM,IAAY,CACjB,UAAW,GACX,MAAO,GAAW,MAClB,MAAO,GAAW,MAClB,QAAS,GAAW,QACpB,uBAAwB,GAEzB,EAAc,GAAI,cAAa,EAAS,EAAI,IAC5C,EAAQ,kBAAkB,CACzB,OAAQ,CAAC,SAEJ,CACN,EAAgB,GAAW,UAC3B,GAAI,IAAc,KAElB,AAAI,GAAW,OACd,GAAa,EAAG,iBACZ,GAAW,SAAS,IAAc,EAAG,oBACzC,EAAa,GAAW,QAAU,EAAG,yBAA2B,EAAG,iBACnE,GAAc,GAAW,QAAU,EAAG,iBAAmB,EAAG,mBAG7D,GAAM,GAAsB,CAC3B,YAAa,GAAW,MAAQ,EAAG,MAAQ,EAAG,KAC9C,YAAa,GACb,YAAa,GAEd,EAAY,GAAI,gBAAe,EAAS,GACxC,EAAc,EAAU,sBAAsB,GAC9C,EAAgB,EAAG,oBACnB,EAAQ,kBAAkB,CACzB,OAAQ,CAAC,KAGN,GACH,GAA4B,EAAG,oBAC/B,EAAsB,EAAG,qBACzB,EAAG,iBAAiB,EAAG,aAAc,GACrC,EAAG,+BAA+B,EAAG,aAAc,EAAG,EAAG,MAAO,EAAY,aAAc,EAAY,eACtG,EAAM,gBAAgB,EAAG,YAAa,GACtC,EAAG,wBAAwB,EAAG,YAAa,EAAG,kBAAmB,EAAG,aAAc,GAClF,EAAG,iBAAiB,EAAG,aAAc,MAEjC,KAAgB,MACnB,GAAsB,EAAG,qBACzB,EAAG,iBAAiB,EAAG,aAAc,GACrC,EAAG,+BAA+B,EAAG,aAAc,EAAG,GAAa,EAAY,aAAc,EAAY,eACzG,EAAG,wBAAwB,EAAG,YAAa,EAAY,EAAG,aAAc,GACxE,EAAG,iBAAiB,EAAG,aAAc,OAGtC,EAAM,gBAAgB,EAAG,YAAa,OAIxC,EAAiB,KAAM,GAAQ,sBAAsB,GACrD,GAAU,WAAW,GACrB,GAAU,QACV,EAAM,aAAe,GACrB,EAAM,cAAc,CACnB,KAAM,mBAKT,WAA8B,GAAO,CACpC,GAAM,IAAe,EAAQ,aAE7B,OAAS,IAAI,EAAG,GAAI,EAAY,OAAQ,KACvC,EAAgB,IAAI,GAAa,IAAI,EAAY,KAIlD,OAAS,IAAI,EAAG,GAAI,GAAM,QAAQ,OAAQ,KAAK,CAC9C,GAAM,GAAc,GAAM,QAAQ,IAC5B,GAAa,EAAgB,IAAI,GAEvC,AAAI,IACH,IAAW,cAAc,CACxB,KAAM,eACN,KAAM,IAEP,EAAgB,OAAO,IAKzB,OAAS,IAAI,EAAG,GAAI,GAAM,MAAM,OAAQ,KAAK,CAC5C,GAAM,GAAc,GAAM,MAAM,IAC1B,GAAa,EAAgB,IAAI,GAEvC,AAAI,IACH,GAAW,cAAc,CACxB,KAAM,YACN,KAAM,KAOV,GAAM,GAAa,GAAI,GACjB,GAAa,GAAI,GAQvB,YAAgC,GAAQ,GAAS,GAAS,CACzD,EAAW,sBAAsB,GAAQ,aACzC,GAAW,sBAAsB,GAAQ,aACzC,GAAM,GAAM,EAAW,WAAW,IAC5B,GAAQ,GAAQ,iBAAiB,SACjC,GAAQ,GAAQ,iBAAiB,SAIjC,GAAO,GAAM,IAAO,IAAM,IAAM,GAChC,GAAM,GAAM,IAAO,IAAM,IAAM,GAC/B,GAAU,IAAM,GAAK,GAAK,GAAM,GAChC,GAAa,IAAM,GAAK,GAAK,GAAM,GACnC,GAAW,IAAM,GAAK,GAAK,GAAM,GACjC,GAAY,IAAM,GAAK,GAAK,GAAM,GAClC,GAAO,GAAO,GACd,GAAQ,GAAO,GAGf,EAAU,EAAO,EAAC,GAAU,IAC5B,EAAU,EAAU,CAAC,GAE3B,GAAQ,YAAY,UAAU,GAAO,SAAU,GAAO,WAAY,GAAO,OACzE,GAAO,WAAW,GAClB,GAAO,WAAW,GAClB,GAAO,YAAY,QAAQ,GAAO,SAAU,GAAO,WAAY,GAAO,OACtE,GAAO,mBAAmB,KAAK,GAAO,aAAa,SAInD,GAAM,IAAQ,GAAO,EACf,GAAO,GAAM,EACb,GAAQ,GAAO,EACf,GAAS,GAAS,GAAM,GACxB,GAAO,GAAS,GAAM,GAAO,GAC7B,GAAU,GAAY,GAAM,GAAO,GACzC,GAAO,iBAAiB,gBAAgB,GAAO,GAAQ,GAAM,GAAS,GAAO,IAG9E,YAAsB,GAAQ,GAAQ,CACrC,AAAI,KAAW,KACd,GAAO,YAAY,KAAK,GAAO,QAE/B,GAAO,YAAY,iBAAiB,GAAO,YAAa,GAAO,QAGhE,GAAO,mBAAmB,KAAK,GAAO,aAAa,SAGpD,KAAK,aAAe,SAAU,GAAQ,CACrC,GAAI,IAAY,KAAM,OACtB,EAAS,KAAO,EAAQ,KAAO,EAAQ,KAAO,GAAO,KACrD,EAAS,IAAM,EAAQ,IAAM,EAAQ,IAAM,GAAO,IAE9C,KAAsB,EAAS,MAAQ,KAAqB,EAAS,MAExE,GAAQ,kBAAkB,CACzB,UAAW,EAAS,KACpB,SAAU,EAAS,MAEpB,EAAoB,EAAS,KAC7B,GAAmB,EAAS,KAG7B,GAAM,IAAS,GAAO,OAChB,GAAU,EAAS,QACzB,GAAa,EAAU,IAEvB,OAAS,IAAI,EAAG,GAAI,GAAQ,OAAQ,KACnC,GAAa,GAAQ,IAAI,IAG1B,EAAS,YAAY,UAAU,EAAS,SAAU,EAAS,WAAY,EAAS,OAEhF,GAAO,SAAS,KAAK,EAAS,UAC9B,GAAO,WAAW,KAAK,EAAS,YAChC,GAAO,MAAM,KAAK,EAAS,OAC3B,GAAO,OAAO,KAAK,EAAS,QAC5B,GAAO,YAAY,KAAK,EAAS,aACjC,GAAM,GAAW,GAAO,SAExB,OAAS,IAAI,EAAG,GAAI,EAAS,OAAQ,GAAI,GAAG,KAC3C,EAAS,IAAG,kBAAkB,IAI/B,AAAI,GAAQ,SAAW,EACtB,GAAuB,EAAU,EAAS,GAG1C,EAAS,iBAAiB,KAAK,EAAQ,mBAIzC,KAAK,UAAY,UAAY,CAC5B,MAAO,IAGR,KAAK,aAAe,UAAY,CAC/B,GAAI,IAAgB,KACnB,MAAO,GAAY,eAGpB,GAAI,IAAgB,KACnB,MAAO,GAAY,gBAMrB,KAAK,aAAe,SAAU,GAAW,CAGxC,AAAI,IAAgB,MACnB,GAAY,eAAiB,IAG1B,IAAgB,MAAQ,EAAY,iBAAmB,QAC1D,GAAY,eAAiB,KAK/B,GAAI,IAA2B,KAE/B,YAA0B,GAAM,GAAO,CAItC,GAHA,EAAO,GAAM,cAAc,GAC3B,EAAU,GAEN,IAAS,KAAM,CAClB,GAAM,GAAQ,EAAK,MAEnB,AAAI,IAAgB,MACnB,EAAM,kBAAkB,EAAY,aAGrC,GAAI,IAAsB,GAE1B,AAAI,EAAM,SAAW,EAAS,QAAQ,QACrC,GAAS,QAAQ,OAAS,EAC1B,GAAsB,IAGvB,OAAS,IAAI,EAAG,GAAI,EAAM,OAAQ,KAAK,CACtC,GAAM,IAAO,EAAM,IACf,GAAW,KAEf,GAAI,IAAgB,KACnB,GAAW,EAAY,YAAY,QAC7B,CACN,GAAM,IAAa,EAAU,gBAAgB,EAAa,IAC1D,EAAM,kBAAkB,GAEpB,GAAW,sBAAwB,QACtC,EAAG,qBAAqB,EAAG,YAAa,EAAY,EAAG,WAAY,GAAW,oBAAqB,GAGpG,EAAG,qBAAqB,EAAG,YAAa,EAAG,kBAAmB,EAAG,WAAY,GAAW,aAAc,GACtG,GAAW,GAAW,SAGvB,GAAM,IAAS,EAAQ,IACvB,GAAO,OAAO,UAAU,GAAK,UAAU,QACvC,GAAO,iBAAiB,UAAU,GAAK,kBACvC,GAAO,SAAS,IAAI,GAAS,EAAG,GAAS,EAAG,GAAS,MAAO,GAAS,QAEjE,KAAM,GACT,EAAS,OAAO,KAAK,GAAO,QAGzB,KAAwB,IAC3B,EAAS,QAAQ,KAAK,IAIxB,AAAI,GACH,GAAM,kBAAkB,GACpB,IAAe,MAAM,EAAG,MAAM,IAKpC,GAAM,IAAe,EAAQ,aAE7B,OAAS,GAAI,EAAG,EAAI,EAAY,OAAQ,IAAK,CAC5C,GAAM,IAAa,EAAY,GACzB,GAAc,GAAa,GACjC,GAAW,OAAO,GAAa,GAAO,GAKvC,GAFI,IAA0B,GAAyB,GAAM,IAEzD,EAAe,CAClB,GAAM,GAAQ,EAAY,aACpB,GAAS,EAAY,cAC3B,EAAM,gBAAgB,EAAG,iBAAkB,GAC3C,EAAM,gBAAgB,EAAG,iBAAkB,GAE3C,EAAG,sBAAsB,EAAG,iBAAkB,CAAC,IAC/C,EAAG,sBAAsB,EAAG,iBAAkB,CAAC,IAC/C,EAAG,gBAAgB,EAAG,EAAG,EAAO,GAAQ,EAAG,EAAG,EAAO,GAAQ,EAAG,iBAAkB,EAAG,SAErF,EAAG,sBAAsB,EAAG,iBAAkB,CAAC,EAAG,oBAClD,EAAM,gBAAgB,EAAG,iBAAkB,MAC3C,EAAM,gBAAgB,EAAG,iBAAkB,MAC3C,EAAM,gBAAgB,EAAG,YAAa,GAGvC,EAAU,KAGX,GAAM,IAAY,GAAI,IACtB,GAAU,iBAAiB,IAE3B,KAAK,iBAAmB,SAAU,GAAU,CAC3C,GAA2B,IAG5B,KAAK,QAAU,UAAY,IAK7B,YAAwB,EAAY,CACnC,WAA4B,EAAU,EAAK,CAC1C,EAAS,SAAS,MAAM,KAAK,EAAI,OAEjC,AAAI,EAAI,MACP,GAAS,QAAQ,MAAQ,EAAI,KAC7B,EAAS,OAAO,MAAQ,EAAI,KAClB,EAAI,WACd,GAAS,WAAW,MAAQ,EAAI,SAIlC,WAAiC,EAAU,EAAU,EAAY,EAAQ,EAA0B,CAClG,AAAI,EAAS,oBACZ,EAAsB,EAAU,GAC1B,AAAI,EAAS,sBACnB,GAAsB,EAAU,GAChC,EAAuB,EAAU,IAC3B,AAAI,EAAS,mBACnB,GAAsB,EAAU,GAChC,EAAoB,EAAU,IACxB,AAAI,EAAS,oBACnB,GAAsB,EAAU,GAChC,EAAqB,EAAU,IACzB,AAAI,EAAS,uBACnB,GAAsB,EAAU,GAEhC,AAAI,EAAS,uBACZ,EAAwB,EAAU,EAAU,GAE5C,EAAwB,EAAU,IAE7B,AAAI,EAAS,qBACnB,GAAsB,EAAU,GAChC,EAAsB,EAAU,IAC1B,AAAI,EAAS,oBACnB,GAAsB,EAAU,GAChC,EAAqB,EAAU,IACzB,AAAI,EAAS,uBACnB,GAAsB,EAAU,GAChC,EAAwB,EAAU,IAC5B,AAAI,EAAS,qBACnB,GAAsB,EAAU,GAChC,EAAsB,EAAU,IAC1B,AAAI,EAAS,oBACnB,GAAoB,EAAU,GAE1B,EAAS,sBACZ,EAAoB,EAAU,IAEzB,AAAI,EAAS,iBACnB,EAAsB,EAAU,EAAU,EAAY,GAChD,AAAI,EAAS,iBACnB,EAAuB,EAAU,GAC3B,AAAI,EAAS,iBACnB,GAAS,MAAM,MAAM,KAAK,EAAS,OACnC,EAAS,QAAQ,MAAQ,EAAS,SACxB,EAAS,kBACnB,GAAS,mBAAqB,IAIhC,WAA+B,EAAU,EAAU,CAClD,EAAS,QAAQ,MAAQ,EAAS,QAE9B,EAAS,OACZ,EAAS,QAAQ,MAAM,KAAK,EAAS,OAGlC,EAAS,UACZ,EAAS,SAAS,MAAM,KAAK,EAAS,UAAU,eAAe,EAAS,mBAGrE,EAAS,KACZ,GAAS,IAAI,MAAQ,EAAS,KAG3B,EAAS,UACZ,GAAS,SAAS,MAAQ,EAAS,UAGhC,EAAS,aACZ,GAAS,YAAY,MAAQ,EAAS,aAGnC,EAAS,UAAY,GACxB,GAAS,UAAU,MAAQ,EAAS,WAGrC,GAAM,GAAS,EAAW,IAAI,GAAU,OAExC,GAAI,EAAQ,CACX,EAAS,OAAO,MAAQ,EACxB,EAAS,WAAW,MAAQ,EAAO,eAAiB,EAAO,wBAA0B,GAAQ,GAAK,EAClG,EAAS,aAAa,MAAQ,EAAS,aACvC,EAAS,IAAI,MAAQ,EAAS,IAC9B,EAAS,gBAAgB,MAAQ,EAAS,gBAE1C,GAAM,GAAc,EAAW,IAAI,GAAQ,cAE3C,AAAI,IAAgB,QACnB,GAAS,YAAY,MAAQ,GAI/B,AAAI,EAAS,UACZ,GAAS,SAAS,MAAQ,EAAS,SACnC,EAAS,kBAAkB,MAAQ,EAAS,mBAGzC,EAAS,OACZ,GAAS,MAAM,MAAQ,EAAS,MAChC,EAAS,eAAe,MAAQ,EAAS,gBAoB1C,GAAI,GAEJ,AAAI,EAAS,IACZ,EAAa,EAAS,IAChB,AAAI,EAAS,YACnB,EAAa,EAAS,YAChB,AAAI,EAAS,gBACnB,EAAa,EAAS,gBAChB,AAAI,EAAS,UACnB,EAAa,EAAS,UAChB,AAAI,EAAS,QACnB,EAAa,EAAS,QAChB,AAAI,EAAS,aACnB,EAAa,EAAS,aAChB,AAAI,EAAS,aACnB,EAAa,EAAS,aAChB,AAAI,EAAS,SACnB,EAAa,EAAS,SAChB,AAAI,EAAS,YACnB,EAAa,EAAS,YAChB,AAAI,EAAS,aACnB,EAAa,EAAS,aAChB,AAAI,EAAS,mBACnB,EAAa,EAAS,mBAChB,AAAI,EAAS,sBACnB,EAAa,EAAS,sBAChB,AAAI,EAAS,qBACnB,EAAa,EAAS,qBAChB,AAAI,EAAS,gBACnB,EAAa,EAAS,gBAChB,AAAI,EAAS,gBACnB,EAAa,EAAS,gBACZ,EAAS,cACnB,GAAa,EAAS,cAGnB,IAAe,QAEd,GAAW,qBACd,GAAa,EAAW,SAGrB,EAAW,mBAAqB,IACnC,EAAW,eAGZ,EAAS,YAAY,MAAM,KAAK,EAAW,SAM5C,GAAI,GAEJ,AAAI,EAAS,MACZ,EAAc,EAAS,MACb,EAAS,UACnB,GAAc,EAAS,UAGpB,IAAgB,QAEf,GAAY,qBACf,GAAc,EAAY,SAGvB,EAAY,mBAAqB,IACpC,EAAY,eAGb,EAAS,aAAa,MAAM,KAAK,EAAY,SAI/C,WAA6B,EAAU,EAAU,CAChD,EAAS,QAAQ,MAAM,KAAK,EAAS,OACrC,EAAS,QAAQ,MAAQ,EAAS,QAGnC,WAA6B,EAAU,EAAU,CAChD,EAAS,SAAS,MAAQ,EAAS,SACnC,EAAS,UAAU,MAAQ,EAAS,SAAW,EAAS,QACxD,EAAS,MAAM,MAAQ,EAAS,MAGjC,WAA+B,EAAU,EAAU,EAAY,EAAQ,CACtE,EAAS,QAAQ,MAAM,KAAK,EAAS,OACrC,EAAS,QAAQ,MAAQ,EAAS,QAClC,EAAS,KAAK,MAAQ,EAAS,KAAO,EACtC,EAAS,MAAM,MAAQ,EAAS,GAE5B,EAAS,KACZ,GAAS,IAAI,MAAQ,EAAS,KAG3B,EAAS,UACZ,GAAS,SAAS,MAAQ,EAAS,UAGhC,EAAS,UAAY,GACxB,GAAS,UAAU,MAAQ,EAAS,WAMrC,GAAI,GAEJ,AAAI,EAAS,IACZ,EAAa,EAAS,IACZ,EAAS,UACnB,GAAa,EAAS,UAGnB,IAAe,QACd,GAAW,mBAAqB,IACnC,EAAW,eAGZ,EAAS,YAAY,MAAM,KAAK,EAAW,SAI7C,WAAgC,EAAU,EAAU,CACnD,EAAS,QAAQ,MAAM,KAAK,EAAS,OACrC,EAAS,QAAQ,MAAQ,EAAS,QAClC,EAAS,SAAS,MAAQ,EAAS,SAE/B,EAAS,KACZ,GAAS,IAAI,MAAQ,EAAS,KAG3B,EAAS,UACZ,GAAS,SAAS,MAAQ,EAAS,UAGhC,EAAS,UAAY,GACxB,GAAS,UAAU,MAAQ,EAAS,WAMrC,GAAI,GAEJ,AAAI,EAAS,IACZ,EAAa,EAAS,IACZ,EAAS,UACnB,GAAa,EAAS,UAGnB,IAAe,QACd,GAAW,mBAAqB,IACnC,EAAW,eAGZ,EAAS,YAAY,MAAM,KAAK,EAAW,SAI7C,WAAgC,EAAU,EAAU,CACnD,AAAI,EAAS,aACZ,GAAS,YAAY,MAAQ,EAAS,aAIxC,WAA8B,EAAU,EAAU,CACjD,EAAS,SAAS,MAAM,KAAK,EAAS,UACtC,EAAS,UAAU,MAAQ,KAAK,IAAI,EAAS,UAAW,MAEpD,EAAS,aACZ,GAAS,YAAY,MAAQ,EAAS,aAGnC,EAAS,SACZ,GAAS,QAAQ,MAAQ,EAAS,QAClC,EAAS,UAAU,MAAQ,EAAS,UAChC,EAAS,OAAS,IAAU,GAAS,UAAU,OAAS,KAGzD,EAAS,WACZ,GAAS,UAAU,MAAQ,EAAS,UACpC,EAAS,YAAY,MAAM,KAAK,EAAS,aACrC,EAAS,OAAS,IAAU,EAAS,YAAY,MAAM,UAGxD,EAAS,iBACZ,GAAS,gBAAgB,MAAQ,EAAS,gBAC1C,EAAS,kBAAkB,MAAQ,EAAS,kBAC5C,EAAS,iBAAiB,MAAQ,EAAS,kBAI7C,WAA6B,EAAU,EAAU,CAChD,AAAI,EAAS,aACZ,GAAS,YAAY,MAAQ,EAAS,aAGnC,EAAS,aACZ,GAAS,YAAY,MAAQ,EAAS,aAGnC,EAAS,SACZ,GAAS,QAAQ,MAAQ,EAAS,QAClC,EAAS,UAAU,MAAQ,EAAS,UAChC,EAAS,OAAS,IAAU,GAAS,UAAU,OAAS,KAGzD,EAAS,WACZ,GAAS,UAAU,MAAQ,EAAS,UACpC,EAAS,YAAY,MAAM,KAAK,EAAS,aACrC,EAAS,OAAS,IAAU,EAAS,YAAY,MAAM,UAGxD,EAAS,iBACZ,GAAS,gBAAgB,MAAQ,EAAS,gBAC1C,EAAS,kBAAkB,MAAQ,EAAS,kBAC5C,EAAS,iBAAiB,MAAQ,EAAS,kBAI7C,WAAiC,EAAU,EAAU,CACpD,EAAS,UAAU,MAAQ,EAAS,UACpC,EAAS,UAAU,MAAQ,EAAS,UAEhC,EAAS,cACZ,GAAS,aAAa,MAAQ,EAAS,cAGpC,EAAS,cACZ,GAAS,aAAa,MAAQ,EAAS,cAGpC,EAAS,aACZ,GAAS,YAAY,MAAQ,EAAS,aAGnC,EAAS,SACZ,GAAS,QAAQ,MAAQ,EAAS,QAClC,EAAS,UAAU,MAAQ,EAAS,UAChC,EAAS,OAAS,IAAU,GAAS,UAAU,OAAS,KAGzD,EAAS,WACZ,GAAS,UAAU,MAAQ,EAAS,UACpC,EAAS,YAAY,MAAM,KAAK,EAAS,aACrC,EAAS,OAAS,IAAU,EAAS,YAAY,MAAM,UAGxD,EAAS,iBACZ,GAAS,gBAAgB,MAAQ,EAAS,gBAC1C,EAAS,kBAAkB,MAAQ,EAAS,kBAC5C,EAAS,iBAAiB,MAAQ,EAAS,kBAKxC,AAFW,EAAW,IAAI,GAAU,QAIvC,GAAS,gBAAgB,MAAQ,EAAS,iBAI5C,WAAiC,EAAU,EAAU,EAA0B,CAC9E,EAAwB,EAAU,GAClC,EAAS,IAAI,MAAQ,EAAS,IAE1B,EAAS,MAAQ,GACpB,GAAS,UAAU,MAAM,KAAK,EAAS,WAAW,eAAe,EAAS,OAC1E,EAAS,eAAe,MAAQ,EAAS,gBAGtC,EAAS,UAAY,GACxB,GAAS,UAAU,MAAQ,EAAS,UACpC,EAAS,mBAAmB,MAAQ,EAAS,mBAEzC,EAAS,cACZ,GAAS,aAAa,MAAQ,EAAS,cAGpC,EAAS,uBACZ,GAAS,sBAAsB,MAAQ,EAAS,uBAG7C,EAAS,oBACZ,GAAS,qBAAqB,MAAM,KAAK,EAAS,sBAClD,EAAS,mBAAmB,MAAQ,EAAS,mBAEzC,EAAS,OAAS,IACrB,EAAS,qBAAqB,MAAM,WAKnC,EAAS,aAAe,GAC3B,GAAS,aAAa,MAAQ,EAAS,aACvC,EAAS,uBAAuB,MAAQ,EAAyB,QACjE,EAAS,wBAAwB,MAAM,IAAI,EAAyB,MAAO,EAAyB,QAEhG,EAAS,iBACZ,GAAS,gBAAgB,MAAQ,EAAS,iBAG3C,EAAS,UAAU,MAAQ,EAAS,UAEhC,EAAS,cACZ,GAAS,aAAa,MAAQ,EAAS,cAGxC,EAAS,oBAAoB,MAAQ,EAAS,oBAC9C,EAAS,gBAAgB,MAAM,KAAK,EAAS,kBAG9C,EAAS,kBAAkB,MAAQ,EAAS,kBAC5C,EAAS,aAAa,MAAM,KAAK,EAAS,cAEtC,EAAS,sBACZ,GAAS,qBAAqB,MAAQ,EAAS,sBAG5C,EAAS,iBACZ,GAAS,gBAAgB,MAAQ,EAAS,iBAI5C,WAA+B,EAAU,EAAU,CAClD,AAAI,EAAS,QACZ,GAAS,OAAO,MAAQ,EAAS,QAG9B,EAAS,SACZ,GAAS,QAAQ,MAAQ,EAAS,QAClC,EAAS,UAAU,MAAQ,EAAS,UAChC,EAAS,OAAS,IAAU,GAAS,UAAU,OAAS,KAGzD,EAAS,WACZ,GAAS,UAAU,MAAQ,EAAS,UACpC,EAAS,YAAY,MAAM,KAAK,EAAS,aACrC,EAAS,OAAS,IAAU,EAAS,YAAY,MAAM,UAGxD,EAAS,iBACZ,GAAS,gBAAgB,MAAQ,EAAS,gBAC1C,EAAS,kBAAkB,MAAQ,EAAS,kBAC5C,EAAS,iBAAiB,MAAQ,EAAS,kBAI7C,WAA8B,EAAU,EAAU,CACjD,AAAI,EAAS,iBACZ,GAAS,gBAAgB,MAAQ,EAAS,gBAC1C,EAAS,kBAAkB,MAAQ,EAAS,kBAC5C,EAAS,iBAAiB,MAAQ,EAAS,kBAI7C,WAAiC,EAAU,EAAU,CACpD,AAAI,EAAS,iBACZ,GAAS,gBAAgB,MAAQ,EAAS,gBAC1C,EAAS,kBAAkB,MAAQ,EAAS,kBAC5C,EAAS,iBAAiB,MAAQ,EAAS,kBAG5C,EAAS,kBAAkB,MAAM,KAAK,EAAS,mBAC/C,EAAS,aAAa,MAAQ,EAAS,aACvC,EAAS,YAAY,MAAQ,EAAS,YAGvC,WAA+B,EAAU,EAAU,CAClD,AAAI,EAAS,SACZ,GAAS,QAAQ,MAAQ,EAAS,QAClC,EAAS,UAAU,MAAQ,EAAS,UAChC,EAAS,OAAS,IAAU,GAAS,UAAU,OAAS,KAGzD,EAAS,WACZ,GAAS,UAAU,MAAQ,EAAS,UACpC,EAAS,YAAY,MAAM,KAAK,EAAS,aACrC,EAAS,OAAS,IAAU,EAAS,YAAY,MAAM,UAGxD,EAAS,iBACZ,GAAS,gBAAgB,MAAQ,EAAS,gBAC1C,EAAS,kBAAkB,MAAQ,EAAS,kBAC5C,EAAS,iBAAiB,MAAQ,EAAS,kBAI7C,MAAO,CACN,mBAAoB,EACpB,wBAAyB,GAI3B,aAA+B,CAC9B,GAAM,GAAS,GAAgB,UAC/B,SAAO,MAAM,QAAU,QAChB,EAGR,YAAuB,EAAa,GAAI,CACvC,GAAM,GAAU,EAAW,SAAW,OAAY,EAAW,OAAS,KACnE,EAAW,EAAW,UAAY,OAAY,EAAW,QAAU,KACnE,EAAS,EAAW,QAAU,OAAY,EAAW,MAAQ,GAC7D,EAAS,EAAW,QAAU,OAAY,EAAW,MAAQ,GAC7D,EAAW,EAAW,UAAY,OAAY,EAAW,QAAU,GACnE,EAAa,EAAW,YAAc,OAAY,EAAW,UAAY,GACzE,EAAsB,EAAW,qBAAuB,OAAY,EAAW,mBAAqB,GACpG,EAAyB,EAAW,wBAA0B,OAAY,EAAW,sBAAwB,GAC7G,EAAmB,EAAW,kBAAoB,OAAY,EAAW,gBAAkB,UAC3F,EAAgC,EAAW,+BAAiC,OAAY,EAAW,6BAA+B,GAEjI,EAAoB,KACpB,EAAqB,KAGnB,EAAkB,GAClB,EAAmB,GAEzB,KAAK,WAAa,EAElB,KAAK,MAAQ,CAKZ,kBAAmB,IAGpB,KAAK,UAAY,GACjB,KAAK,eAAiB,GACtB,KAAK,eAAiB,GACtB,KAAK,iBAAmB,GAExB,KAAK,YAAc,GAEnB,KAAK,eAAiB,GACtB,KAAK,qBAAuB,GAE5B,KAAK,YAAc,EAEnB,KAAK,eAAiB,GAEtB,KAAK,wBAA0B,GAE/B,KAAK,YAAc,GACnB,KAAK,oBAAsB,EAE3B,GAAM,GAAQ,KAEV,EAAiB,GAEjB,EAAyB,EACzB,EAA4B,EAC5B,EAAuB,KAEvB,EAAqB,GAErB,EAAiB,KAEf,EAAmB,GAAI,IAEvB,EAAkB,GAAI,IAExB,EAAsB,KAEtB,EAAS,EAAQ,MACjB,EAAU,EAAQ,OAClB,EAAc,EACd,GAAc,KACd,EAAmB,KAEjB,EAAY,GAAI,IAAQ,EAAG,EAAG,EAAQ,GAEtC,EAAW,GAAI,IAAQ,EAAG,EAAG,EAAQ,GAEvC,EAAe,GAEb,GAAsB,GAEtB,GAAW,GAAI,IAGjB,GAAmB,GACnB,GAAwB,GAExB,GAA4B,KAE1B,GAAoB,GAAI,IAExB,GAAW,GAAI,GAEf,GAAc,CACnB,WAAY,KACZ,IAAK,KACL,YAAa,KACb,iBAAkB,KAClB,QAAS,IAGV,aAA+B,CAC9B,MAAO,KAAyB,KAAO,EAAc,EAItD,GAAI,GAAM,EAEV,YAAoB,EAAc,EAAmB,CACpD,OAAS,IAAI,EAAG,GAAI,EAAa,OAAQ,KAAK,CAC7C,GAAM,GAAc,EAAa,IAE3B,GAAU,EAAQ,WAAW,EAAa,GAEhD,GAAI,KAAY,KAAM,MAAO,IAG9B,MAAO,MAGR,GAAI,CACH,GAAM,GAAoB,CACzB,MAAO,EACP,MAAO,EACP,QAAS,EACT,UAAW,EACX,mBAAoB,EACpB,sBAAuB,EACvB,gBAAiB,EACjB,6BAA8B,GAO/B,GAJA,EAAQ,iBAAiB,mBAAoB,GAAe,IAE5D,EAAQ,iBAAiB,uBAAwB,GAAkB,IAE/D,IAAQ,KAAM,CACjB,GAAM,GAAe,CAAC,SAAU,QAAS,sBAQzC,GANI,EAAM,mBAAqB,IAC9B,EAAa,QAGd,EAAM,GAAW,EAAc,GAE3B,IAAQ,KACX,KAAI,IAAW,GACR,GAAI,OAAM,+DAEV,GAAI,OAAM,iCAMnB,AAAI,EAAI,2BAA6B,QACpC,GAAI,yBAA2B,UAAY,CAC1C,MAAO,CACN,SAAY,EACZ,SAAY,EACZ,UAAa,WAIR,EAAP,CACD,cAAQ,MAAM,wBAA0B,EAAM,SACxC,EAGP,GAAI,IAAY,GAAc,GAAO,GACjC,GAAY,GAAU,GAAU,GAAY,GAAY,EAAY,EACpE,GAAc,GAAW,GAAa,GAAc,GAAU,GAC9D,GAAY,GAAc,EAAgB,GAC1C,GAAO,GAEX,aAAyB,CACxB,GAAa,GAAI,IAAgB,GACjC,GAAe,GAAI,IAAkB,EAAK,GAAY,GACtD,GAAW,KAAK,IAChB,GAAQ,GAAI,IAAW,EAAK,GAAY,IACxC,GAAQ,GAAI,IAAW,EAAK,GAAY,IACxC,GAAoB,GAAK,EAAI,KAC7B,GAAO,GAAI,IAAU,GACrB,GAAa,GAAI,IACjB,GAAW,GAAI,IAAc,EAAK,GAAY,GAAO,GAAY,GAAc,GAAO,IACtF,GAAW,GAAI,IAAc,GAC7B,GAAa,GAAI,IAAgB,GACjC,GAAa,GAAI,IAAgB,EAAK,IACtC,GAAgB,GAAI,IAAmB,EAAK,GAAY,GAAY,IACpE,EAAa,GAAI,IAAgB,EAAK,GAAY,GAAM,IACxD,EAAU,GAAI,IAAa,EAAK,EAAY,GAAY,IACxD,GAAe,GAAI,IAAkB,EAAK,GAAc,IACxD,GAAW,GAAI,IAAc,IAC7B,GAAe,GAAI,IAAc,EAAO,GAAU,GAAY,GAAY,GAAc,GAAe,IACvG,GAAY,GAAI,IAAe,IAC/B,GAAc,GAAI,IAAiB,IACnC,GAAe,GAAI,IAAkB,GAAY,IACjD,GAAa,GAAI,IAAgB,EAAO,GAAU,GAAO,EAAS,GAClE,GAAY,GAAI,IAAe,EAAO,EAAS,IAC/C,EAAiB,GAAI,IAAoB,EAAK,GAAY,GAAM,IAChE,GAAwB,GAAI,IAA2B,EAAK,GAAY,GAAM,IAC9E,GAAK,SAAW,GAAa,SAC7B,EAAM,aAAe,GACrB,EAAM,WAAa,GACnB,EAAM,WAAa,GACnB,EAAM,YAAc,GACpB,EAAM,UAAY,GAClB,EAAM,MAAQ,GACd,EAAM,KAAO,GAGd,KAEA,GAAM,IAAK,GAAI,IAAa,EAAO,GACnC,KAAK,GAAK,GAEV,KAAK,WAAa,UAAY,CAC7B,MAAO,IAGR,KAAK,qBAAuB,UAAY,CACvC,MAAO,GAAI,wBAGZ,KAAK,iBAAmB,UAAY,CACnC,GAAM,GAAY,GAAW,IAAI,sBACjC,AAAI,GAAW,EAAU,eAG1B,KAAK,oBAAsB,UAAY,CACtC,GAAM,GAAY,GAAW,IAAI,sBACjC,AAAI,GAAW,EAAU,kBAG1B,KAAK,cAAgB,UAAY,CAChC,MAAO,IAGR,KAAK,cAAgB,SAAU,EAAO,CACrC,AAAI,IAAU,QACd,GAAc,EACd,KAAK,QAAQ,EAAQ,EAAS,MAG/B,KAAK,QAAU,SAAU,EAAQ,CAChC,MAAO,GAAO,IAAI,EAAQ,IAG3B,KAAK,QAAU,SAAU,EAAO,EAAQ,GAAa,CACpD,GAAI,GAAG,aAAc,CACpB,QAAQ,KAAK,yEACb,OAGD,EAAS,EACT,EAAU,EACV,EAAQ,MAAQ,KAAK,MAAM,EAAQ,GACnC,EAAQ,OAAS,KAAK,MAAM,EAAS,GAEjC,KAAgB,IACnB,GAAQ,MAAM,MAAQ,EAAQ,KAC9B,EAAQ,MAAM,OAAS,EAAS,MAGjC,KAAK,YAAY,EAAG,EAAG,EAAO,IAG/B,KAAK,qBAAuB,SAAU,EAAQ,CAC7C,MAAO,GAAO,IAAI,EAAS,EAAa,EAAU,GAAa,SAGhE,KAAK,qBAAuB,SAAU,EAAO,EAAQ,GAAY,CAChE,EAAS,EACT,EAAU,EACV,EAAc,GACd,EAAQ,MAAQ,KAAK,MAAM,EAAQ,IACnC,EAAQ,OAAS,KAAK,MAAM,EAAS,IACrC,KAAK,YAAY,EAAG,EAAG,EAAO,IAG/B,KAAK,mBAAqB,SAAU,EAAQ,CAC3C,MAAO,GAAO,KAAK,IAGpB,KAAK,YAAc,SAAU,EAAQ,CACpC,MAAO,GAAO,KAAK,IAGpB,KAAK,YAAc,SAAU,EAAG,EAAG,GAAO,EAAQ,CACjD,AAAI,EAAE,UACL,EAAU,IAAI,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,GAE/B,EAAU,IAAI,EAAG,EAAG,GAAO,GAG5B,GAAM,SAAS,EAAiB,KAAK,GAAW,eAAe,GAAa,UAG7E,KAAK,WAAa,SAAU,EAAQ,CACnC,MAAO,GAAO,KAAK,IAGpB,KAAK,WAAa,SAAU,EAAG,EAAG,GAAO,EAAQ,CAChD,AAAI,EAAE,UACL,EAAS,IAAI,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,GAE9B,EAAS,IAAI,EAAG,EAAG,GAAO,GAG3B,GAAM,QAAQ,EAAgB,KAAK,GAAU,eAAe,GAAa,UAG1E,KAAK,eAAiB,UAAY,CACjC,MAAO,IAGR,KAAK,eAAiB,SAAU,EAAS,CACxC,GAAM,eAAe,EAAe,IAGrC,KAAK,cAAgB,SAAU,EAAQ,CACtC,GAAc,GAGf,KAAK,mBAAqB,SAAU,EAAQ,CAC3C,EAAmB,GAIpB,KAAK,cAAgB,SAAU,EAAQ,CACtC,MAAO,GAAO,KAAK,GAAW,kBAG/B,KAAK,cAAgB,UAAY,CAChC,GAAW,cAAc,MAAM,GAAY,YAG5C,KAAK,cAAgB,UAAY,CAChC,MAAO,IAAW,iBAGnB,KAAK,cAAgB,UAAY,CAChC,GAAW,cAAc,MAAM,GAAY,YAG5C,KAAK,MAAQ,SAAU,EAAO,EAAO,GAAS,CAC7C,GAAI,GAAO,EACX,AAAI,KAAU,QAAa,IAAO,IAAQ,EAAI,kBAC1C,KAAU,QAAa,IAAO,IAAQ,EAAI,kBAC1C,MAAY,QAAa,KAAS,IAAQ,EAAI,oBAElD,EAAI,MAAM,IAGX,KAAK,WAAa,UAAY,CAC7B,KAAK,MAAM,GAAM,GAAO,KAGzB,KAAK,WAAa,UAAY,CAC7B,KAAK,MAAM,GAAO,GAAM,KAGzB,KAAK,aAAe,UAAY,CAC/B,KAAK,MAAM,GAAO,GAAO,KAG1B,KAAK,4BAA8B,UAAY,CAC9C,GAAI,KAA8B,KAAM,CAEvC,GAAM,GAAmB,AADF,IAAe,IAAQ,GAAa,WAAa,GAC9B,GAA+B,GACzE,GAA4B,GAAI,GAAiB,KAAM,KAAM,CAC5D,gBAAiB,GACjB,KAAM,GAAM,QAAQ,KAAmB,KAAO,EAAgB,GAC9D,UAAW,GACX,UAAW,GACX,MAAO,GACP,MAAO,KAIT,MAAO,KAIR,KAAK,QAAU,UAAY,CAC1B,EAAQ,oBAAoB,mBAAoB,GAAe,IAE/D,EAAQ,oBAAoB,uBAAwB,GAAkB,IAEtE,GAAY,UACZ,GAAa,UACb,GAAW,UACX,GAAS,UACT,GAAW,UACX,EAAQ,UACR,GAAc,UACd,GAAG,UACH,GAAG,oBAAoB,eAAgB,IACvC,GAAG,oBAAoB,aAAc,IAEjC,IACH,IAA0B,UAE1B,GAA4B,MAG7B,GAAU,QAIX,YAAuB,EAAO,CAC7B,EAAM,iBACN,QAAQ,IAAI,sCACZ,EAAiB,GAGlB,aAA4B,CAC3B,QAAQ,IAAI,0CACZ,EAAiB,GACjB,GAAM,GAAgB,GAAK,UACrB,EAAmB,GAAU,QAC7B,GAAsB,GAAU,WAChC,EAAuB,GAAU,YACjC,GAAgB,GAAU,KAChC,KACA,GAAK,UAAY,EACjB,GAAU,QAAU,EACpB,GAAU,WAAa,GACvB,GAAU,YAAc,EACxB,GAAU,KAAO,GAGlB,YAA2B,EAAO,CACjC,GAAM,GAAW,EAAM,OACvB,EAAS,oBAAoB,UAAW,IACxC,GAAmB,GAIpB,YAA4B,EAAU,CACrC,GAAiC,GACjC,GAAW,OAAO,GAGnB,YAA0C,EAAU,CACnD,GAAM,GAAW,GAAW,IAAI,GAAU,SAE1C,AAAI,IAAa,QAChB,EAAS,QAAQ,SAAU,GAAS,CACnC,GAAa,eAAe,MAM/B,KAAK,mBAAqB,SAAU,EAAQ,EAAO,GAAU,EAAU,GAAQ,GAAO,CACrF,AAAI,IAAU,MAAM,GAAQ,IAE5B,GAAM,IAAc,GAAO,QAAU,GAAO,YAAY,cAAgB,EAClE,GAAU,GAAW,EAAQ,EAAO,GAAU,EAAU,IAC9D,GAAM,YAAY,EAAU,IAE5B,GAAI,IAAQ,GAAS,MACf,GAAW,GAAS,WAAW,SAErC,GAAI,KAAU,MACb,GAAI,KAAa,QAAa,GAAS,QAAU,EAAG,eAC1C,GAAM,QAAU,EAC1B,OAID,GAAI,IAAc,EAElB,AAAI,EAAS,YAAc,IAC1B,IAAQ,EAAW,sBAAsB,IACzC,GAAc,GAGf,GAAc,MAAM,GAAQ,EAAU,GAAS,GAAU,IACzD,GAAI,IACA,GAAW,EAEf,AAAI,KAAU,MACb,IAAY,GAAW,IAAI,IAC3B,GAAW,GACX,GAAS,SAAS,KAInB,GAAM,IAAY,KAAU,KAAO,GAAM,MAAQ,GAAS,MACpD,GAAa,GAAS,UAAU,MAAQ,GACxC,GAAa,GAAS,UAAU,MAAQ,GACxC,GAAa,KAAU,KAAO,GAAM,MAAQ,GAAc,EAC1D,GAAa,KAAU,KAAO,GAAM,MAAQ,GAAc,IAC1D,GAAY,KAAK,IAAI,GAAY,IACjC,GAAU,KAAK,IAAI,GAAW,GAAa,GAAY,GAAa,IAAc,EAClF,GAAY,KAAK,IAAI,EAAG,GAAU,GAAY,GACpD,GAAI,KAAc,EAElB,IAAI,GAAO,OACV,AAAI,EAAS,YAAc,GAC1B,IAAM,aAAa,EAAS,mBAAqB,MACjD,GAAS,QAAQ,EAAI,QAErB,GAAS,QAAQ,EAAI,mBAEZ,GAAO,OAAQ,CACzB,GAAI,IAAY,EAAS,UACzB,AAAI,KAAc,QAAW,IAAY,GAEzC,GAAM,aAAa,GAAY,MAE/B,AAAI,GAAO,eACV,GAAS,QAAQ,EAAI,OACf,AAAI,GAAO,WACjB,GAAS,QAAQ,EAAI,WAErB,GAAS,QAAQ,EAAI,gBAEhB,AAAI,IAAO,SACjB,GAAS,QAAQ,EAAI,QACX,GAAO,UACjB,GAAS,QAAQ,EAAI,WAGtB,GAAI,GAAO,gBACV,GAAS,gBAAgB,GAAW,GAAW,GAAO,eAC5C,GAAS,0BAA2B,CAC9C,GAAM,IAAgB,KAAK,IAAI,GAAS,cAAe,GAAS,mBAChE,GAAS,gBAAgB,GAAW,GAAW,QAE/C,IAAS,OAAO,GAAW,MAK7B,KAAK,QAAU,SAAU,EAAO,EAAQ,CACvC,EAAqB,GAAa,IAAI,GACtC,EAAmB,OACnB,EAAiB,KAAK,GACtB,EAAM,gBAAgB,SAAU,GAAQ,CACvC,AAAI,GAAO,SAAW,GAAO,OAAO,KAAK,EAAO,SAC/C,GAAmB,UAAU,IAEzB,GAAO,YACV,EAAmB,WAAW,OAIjC,EAAmB,YAAY,EAAM,yBACrC,EAAM,SAAS,SAAU,GAAQ,CAChC,GAAM,GAAW,GAAO,SAExB,GAAI,EACH,GAAI,MAAM,QAAQ,GACjB,OAAS,IAAI,EAAG,GAAI,EAAS,OAAQ,KAAK,CACzC,GAAM,IAAY,EAAS,IAC3B,GAAW,GAAW,EAAO,QAG9B,IAAW,EAAU,EAAO,MAI/B,EAAiB,MACjB,EAAqB,MAItB,GAAI,IAA2B,KAE/B,YAA0B,EAAM,CAC/B,AAAI,IAA0B,GAAyB,GAGxD,aAA4B,CAC3B,GAAU,OAGX,aAA0B,CACzB,GAAU,QAGX,GAAM,IAAY,GAAI,IACtB,GAAU,iBAAiB,IACvB,MAAO,SAAW,aAAa,GAAU,WAAW,QAExD,KAAK,iBAAmB,SAAU,EAAU,CAC3C,GAA2B,EAC3B,GAAG,iBAAiB,GACpB,IAAa,KAAO,GAAU,OAAS,GAAU,SAGlD,GAAG,iBAAiB,eAAgB,IACpC,GAAG,iBAAiB,aAAc,IAElC,KAAK,OAAS,SAAU,EAAO,EAAQ,CACtC,GAAI,IAAW,QAAa,EAAO,WAAa,GAAM,CACrD,QAAQ,MAAM,0EACd,OAGD,GAAI,IAAmB,GAAM,OAE7B,AAAI,EAAM,aAAe,IAAM,EAAM,oBAEjC,EAAO,SAAW,MAAM,EAAO,oBAE/B,GAAG,UAAY,IAAQ,GAAG,eAAiB,IAC1C,IAAG,mBAAqB,IAAM,GAAG,aAAa,GAClD,EAAS,GAAG,aAIT,EAAM,UAAY,IAAM,EAAM,eAAe,EAAO,EAAO,EAAQ,GACvE,EAAqB,GAAa,IAAI,EAAO,EAAiB,QAC9D,EAAmB,OACnB,EAAiB,KAAK,GAEtB,GAAkB,iBAAiB,EAAO,iBAAkB,EAAO,oBAEnE,GAAS,wBAAwB,IAEjC,GAAwB,KAAK,qBAC7B,GAAmB,GAAS,KAAK,KAAK,eAAgB,GAAuB,GAC7E,EAAoB,GAAY,IAAI,EAAO,EAAgB,QAC3D,EAAkB,OAClB,EAAgB,KAAK,GACrB,GAAc,EAAO,EAAQ,EAAG,EAAM,aACtC,EAAkB,SAEd,EAAM,cAAgB,IACzB,EAAkB,KAAK,GAAa,GAIjC,KAAqB,IAAM,GAAS,eACxC,GAAM,IAAe,EAAmB,MAAM,aAU9C,GATA,GAAU,OAAO,GAAc,EAAO,GAClC,KAAqB,IAAM,GAAS,aAEpC,KAAK,KAAK,YAAc,IAAM,KAAK,KAAK,QAE5C,GAAW,OAAO,EAAmB,GAErC,EAAmB,YAAY,EAAM,yBAEjC,EAAO,cAAe,CACzB,GAAM,GAAU,EAAO,QAEvB,OAAS,IAAI,EAAG,GAAI,EAAQ,OAAQ,GAAI,GAAG,KAAK,CAC/C,GAAM,IAAU,EAAQ,IACxB,GAAY,EAAmB,EAAO,GAAS,GAAQ,eAGxD,IAAY,EAAmB,EAAO,GAIvC,AAAI,IAAyB,MAE5B,IAAS,8BAA8B,GAEvC,GAAS,yBAAyB,IAI/B,EAAM,UAAY,IAAM,EAAM,cAAc,EAAO,EAAO,GAE9D,GAAM,QAAQ,MAAM,QAAQ,IAC5B,GAAM,QAAQ,MAAM,QAAQ,IAC5B,GAAM,QAAQ,MAAM,QAAQ,IAC5B,GAAM,iBAAiB,IAEvB,GAAc,oBACd,EAAqB,GACrB,EAAiB,KACjB,EAAiB,MAEjB,AAAI,EAAiB,OAAS,EAC7B,EAAqB,EAAiB,EAAiB,OAAS,GAEhE,EAAqB,KAGtB,EAAgB,MAEhB,AAAI,EAAgB,OAAS,EAC5B,EAAoB,EAAgB,EAAgB,OAAS,GAE7D,EAAoB,MAItB,YAAuB,EAAQ,EAAQ,GAAY,EAAa,CAC/D,GAAI,EAAO,UAAY,GAAO,OAG9B,GAFgB,EAAO,OAAO,KAAK,EAAO,SAGzC,GAAI,EAAO,QACV,GAAa,EAAO,oBACV,EAAO,MACjB,AAAI,EAAO,aAAe,IAAM,EAAO,OAAO,WACpC,EAAO,QACjB,EAAmB,UAAU,GAEzB,EAAO,YACV,EAAmB,WAAW,WAErB,EAAO,UACjB,GAAI,CAAC,EAAO,eAAiB,GAAS,iBAAiB,GAAS,CAC/D,AAAI,GACH,GAAS,sBAAsB,EAAO,aAAa,aAAa,IAGjE,GAAM,IAAW,EAAQ,OAAO,GAC1B,GAAW,EAAO,SAExB,AAAI,GAAS,SACZ,EAAkB,KAAK,EAAQ,GAAU,GAAU,GAAY,GAAS,EAAG,eAGnE,GAAO,QAAU,EAAO,QAAU,EAAO,WAC/C,GAAO,eAEN,EAAO,SAAS,QAAU,GAAK,OAAO,OACzC,GAAO,SAAS,SAChB,EAAO,SAAS,MAAQ,GAAK,OAAO,OAIlC,CAAC,EAAO,eAAiB,GAAS,iBAAiB,IAAS,CAC/D,AAAI,GACH,GAAS,sBAAsB,EAAO,aAAa,aAAa,IAGjE,GAAM,IAAW,EAAQ,OAAO,GAC1B,GAAW,EAAO,SAExB,GAAI,MAAM,QAAQ,IAAW,CAC5B,GAAM,IAAS,GAAS,OAExB,OAAS,IAAI,EAAG,GAAI,GAAO,OAAQ,GAAI,GAAG,KAAK,CAC9C,GAAM,IAAQ,GAAO,IACf,GAAgB,GAAS,GAAM,eAErC,AAAI,IAAiB,GAAc,SAClC,EAAkB,KAAK,EAAQ,GAAU,GAAe,GAAY,GAAS,EAAG,SAG5E,AAAI,IAAS,SACnB,EAAkB,KAAK,EAAQ,GAAU,GAAU,GAAY,GAAS,EAAG,OAM/E,GAAM,IAAW,EAAO,SAExB,OAAS,IAAI,EAAG,GAAI,GAAS,OAAQ,GAAI,GAAG,KAC3C,GAAc,GAAS,IAAI,EAAQ,GAAY,GAIjD,YAAqB,EAAmB,EAAO,GAAQ,EAAU,CAChE,GAAM,IAAgB,EAAkB,OAClC,GAAsB,EAAkB,aACxC,GAAqB,EAAkB,YAC7C,EAAmB,gBAAgB,IAC/B,GAAoB,OAAS,GAAG,GAAuB,GAAe,EAAO,IAC7E,GAAU,GAAM,SAAS,EAAiB,KAAK,IAC/C,GAAc,OAAS,GAAG,GAAc,GAAe,EAAO,IAC9D,GAAoB,OAAS,GAAG,GAAc,GAAqB,EAAO,IAC1E,GAAmB,OAAS,GAAG,GAAc,GAAoB,EAAO,IAG7E,YAAgC,EAAe,EAAO,GAAQ,CAC7D,GAAM,GAA2B,EAAM,8BAEjC,GAAsB,EAAM,kBAElC,EAAM,gBAAgB,GAEtB,EAAM,QAIN,GAAM,IAAqB,EAAM,YACjC,EAAM,YAAc,GACpB,GAAc,EAAe,EAAO,IACpC,EAAM,YAAc,GACpB,GAAS,8BAA8B,GACvC,GAAS,yBAAyB,GAElC,EAAM,gBAAgB,IAGvB,YAAuB,EAAY,EAAO,GAAQ,CACjD,GAAM,GAAmB,EAAM,UAAY,GAAO,EAAM,iBAAmB,KAE3E,OAAS,IAAI,EAAG,GAAI,EAAW,OAAQ,GAAI,GAAG,KAAK,CAClD,GAAM,IAAa,EAAW,IACxB,GAAS,GAAW,OACpB,GAAW,GAAW,SACtB,GAAW,IAAqB,KAAO,GAAW,SAAW,EAC7D,GAAQ,GAAW,MAEzB,AAAI,GAAO,OAAO,KAAK,GAAO,SAC7B,GAAa,GAAQ,EAAO,GAAQ,GAAU,GAAU,KAK3D,YAAsB,EAAQ,EAAO,GAAQ,EAAU,GAAU,GAAO,CACvE,EAAO,eAAe,EAAO,EAAO,GAAQ,EAAU,GAAU,IAChE,EAAO,gBAAgB,iBAAiB,GAAO,mBAAoB,EAAO,aAC1E,EAAO,aAAa,gBAAgB,EAAO,iBAC3C,GAAS,eAAe,EAAO,EAAO,GAAQ,EAAU,EAAQ,IAEhE,AAAI,GAAS,cAAgB,IAAQ,GAAS,OAAS,GACtD,IAAS,KAAO,GAChB,GAAS,YAAc,GAEvB,EAAM,mBAAmB,GAAQ,EAAO,EAAU,GAAU,EAAQ,IAEpE,GAAS,KAAO,GAChB,GAAS,YAAc,GAEvB,EAAM,mBAAmB,GAAQ,EAAO,EAAU,GAAU,EAAQ,IAEpE,GAAS,KAAO,IAEhB,EAAM,mBAAmB,GAAQ,EAAO,EAAU,GAAU,EAAQ,IAGrE,EAAO,cAAc,EAAO,EAAO,GAAQ,EAAU,GAAU,IAGhE,YAAoB,EAAU,EAAO,GAAQ,CAC5C,AAAI,EAAM,UAAY,IAAM,GAAQ,IAEpC,GAAM,GAAqB,GAAW,IAAI,GACpC,GAAS,EAAmB,MAAM,OAClC,GAAe,EAAmB,MAAM,aACxC,GAAqB,GAAO,MAAM,QAClC,GAAa,GAAa,cAAc,EAAU,GAAO,MAAO,GAAc,EAAO,IACrF,GAAkB,GAAa,mBAAmB,IACpD,GAAW,EAAmB,SAElC,EAAmB,YAAc,EAAS,uBAAyB,EAAM,YAAc,KACvF,EAAmB,IAAM,EAAM,IAC/B,EAAmB,OAAU,GAAS,uBAAyB,GAAa,IAAU,IAAI,EAAS,QAAU,EAAmB,aAE5H,KAAa,QAEhB,GAAS,iBAAiB,UAAW,IACrC,GAAW,GAAI,KACf,EAAmB,SAAW,IAG/B,GAAI,IAAU,GAAS,IAAI,IAE3B,GAAI,KAAY,QAEf,GAAI,EAAmB,iBAAmB,IAAW,EAAmB,qBAAuB,GAC9F,UAA+B,EAAU,IAClC,OAGR,IAAW,SAAW,GAAa,YAAY,GAC/C,EAAS,QAAQ,GAAQ,GAAY,GACrC,EAAS,gBAAgB,GAAY,GACrC,GAAU,GAAa,eAAe,GAAY,IAClD,GAAS,IAAI,GAAiB,IAC9B,EAAmB,SAAW,GAAW,SAG1C,GAAM,IAAW,EAAmB,SAEpC,AAAI,EAAC,EAAS,kBAAoB,CAAC,EAAS,qBAAuB,EAAS,WAAa,KACxF,IAAS,eAAiB,GAAS,SAGpC,GAA+B,EAAU,IAEzC,EAAmB,YAAc,GAAoB,GACrD,EAAmB,mBAAqB,GAEpC,EAAmB,aAEtB,IAAS,kBAAkB,MAAQ,GAAO,MAAM,QAChD,GAAS,WAAW,MAAQ,GAAO,MAAM,MACzC,GAAS,kBAAkB,MAAQ,GAAO,MAAM,YAChD,GAAS,wBAAwB,MAAQ,GAAO,MAAM,kBACtD,GAAS,WAAW,MAAQ,GAAO,MAAM,KACzC,GAAS,iBAAiB,MAAQ,GAAO,MAAM,WAC/C,GAAS,eAAe,MAAQ,GAAO,MAAM,SAC7C,GAAS,MAAM,MAAQ,GAAO,MAAM,aACpC,GAAS,MAAM,MAAQ,GAAO,MAAM,aACpC,GAAS,YAAY,MAAQ,GAAO,MAAM,MAC1C,GAAS,kBAAkB,MAAQ,GAAO,MAAM,YAChD,GAAS,iBAAiB,MAAQ,GAAO,MAAM,KAC/C,GAAS,qBAAqB,MAAQ,GAAO,MAAM,qBACnD,GAAS,wBAAwB,MAAQ,GAAO,MAAM,wBACtD,GAAS,cAAc,MAAQ,GAAO,MAAM,cAC5C,GAAS,iBAAiB,MAAQ,GAAO,MAAM,iBAC/C,GAAS,eAAe,MAAQ,GAAO,MAAM,eAC7C,GAAS,kBAAkB,MAAQ,GAAO,MAAM,mBAGjD,GAAM,IAAe,GAAQ,cACvB,GAAe,GAAc,aAAa,GAAa,IAAK,IAClE,SAAmB,eAAiB,GACpC,EAAmB,aAAe,GAC3B,GAGR,YAAwC,EAAU,EAAY,CAC7D,GAAM,IAAqB,GAAW,IAAI,GAC1C,GAAmB,eAAiB,EAAW,eAC/C,GAAmB,WAAa,EAAW,WAC3C,GAAmB,SAAW,EAAW,SACzC,GAAmB,aAAe,EAAW,aAC7C,GAAmB,aAAe,EAAW,aAC7C,GAAmB,kBAAoB,EAAW,kBAClD,GAAmB,kBAAoB,EAAW,kBAClD,GAAmB,gBAAkB,EAAW,oBAChD,GAAmB,aAAe,EAAW,aAC7C,GAAmB,eAAiB,EAAW,eAGhD,YAAoB,EAAQ,EAAO,GAAU,EAAU,GAAQ,CAC9D,AAAI,EAAM,UAAY,IAAM,GAAQ,IAEpC,GAAS,oBACT,GAAM,IAAM,EAAM,IACZ,GAAc,EAAS,uBAAyB,EAAM,YAAc,KACpE,GAAW,IAAyB,KAAO,EAAM,eAAiB,EAAqB,QAAQ,SAC/F,GAAU,GAAS,uBAAyB,GAAa,IAAU,IAAI,EAAS,QAAU,IAC1F,GAAe,EAAS,eAAiB,IAAQ,CAAC,CAAC,GAAS,WAAW,OAAS,GAAS,WAAW,MAAM,WAAa,EACvH,GAAiB,CAAC,CAAC,EAAS,WAAa,CAAC,CAAC,GAAS,WAAW,QAC/D,GAAe,CAAC,CAAC,GAAS,gBAAgB,SAC1C,GAAe,CAAC,CAAC,GAAS,gBAAgB,OAC1C,GAAoB,AAAE,GAAS,gBAAgB,SAAW,GAAS,gBAAgB,SAAS,OAAS,EACrG,GAAqB,GAAW,IAAI,GACpC,GAAS,EAAmB,MAAM,OAExC,GAAI,KAAqB,IACpB,MAA0B,IAAQ,IAAW,GAAgB,CAChE,GAAM,IAAW,IAAW,GAAkB,EAAS,KAAO,EAI9D,GAAS,SAAS,EAAU,EAAQ,IAKtC,GAAI,IAAqB,GAEzB,AAAI,EAAS,UAAY,GAAmB,UAC3C,AAAI,IAAmB,aAAe,GAAmB,qBAAuB,GAAO,MAAM,SAElF,GAAmB,iBAAmB,IAEtC,GAAO,iBAAmB,GAAmB,aAAe,IAE5D,CAAC,GAAO,iBAAmB,GAAmB,aAAe,IAE7D,GAAO,eAAiB,GAAmB,WAAa,IAExD,CAAC,GAAO,eAAiB,GAAmB,WAAa,IAEzD,GAAmB,SAAW,IAE9B,EAAS,KAAO,GAAmB,MAAQ,IAE3C,GAAmB,oBAAsB,QAAc,IAAmB,oBAAsB,GAAS,WAAa,GAAmB,kBAAoB,GAAS,kBAEtK,GAAmB,eAAiB,IAEpC,GAAmB,iBAAmB,IAEtC,GAAmB,eAAiB,IAEpC,GAAmB,eAAiB,IAEpC,GAAa,WAAa,IAAQ,GAAmB,oBAAsB,KACrF,IAAqB,IAGtB,IAAqB,GACrB,GAAmB,UAAY,EAAS,SAIzC,GAAI,IAAU,GAAmB,eAEjC,AAAI,KAAuB,IAC1B,IAAU,GAAW,EAAU,EAAO,KAGvC,GAAI,IAAiB,GACjB,GAAkB,GAClB,GAAgB,GACd,GAAa,GAAQ,cACxB,GAAa,GAAmB,SAanC,GAXI,GAAM,WAAW,GAAQ,UAC5B,IAAiB,GACjB,GAAkB,GAClB,GAAgB,IAGb,EAAS,KAAO,GACnB,GAAqB,EAAS,GAC9B,GAAkB,IAGf,IAAkB,IAAmB,EAAQ,CAmBhD,GAlBA,GAAW,SAAS,EAAK,mBAAoB,EAAO,kBAEhD,GAAa,wBAChB,GAAW,SAAS,EAAK,gBAAiB,EAAO,MAAK,IAAI,EAAO,IAAM,GAAO,KAAK,MAGhF,IAAmB,GACtB,GAAiB,EAIjB,GAAkB,GAElB,GAAgB,IAKb,EAAS,kBAAoB,EAAS,qBAAuB,EAAS,oBAAsB,EAAS,wBAA0B,EAAS,OAAQ,CACnJ,GAAM,IAAU,GAAW,IAAI,eAE/B,AAAI,KAAY,QACf,GAAQ,SAAS,EAAK,GAAS,sBAAsB,EAAO,cAI9D,AAAI,GAAS,qBAAuB,EAAS,oBAAsB,EAAS,uBAAyB,EAAS,qBAAuB,EAAS,wBAA0B,EAAS,mBAChL,GAAW,SAAS,EAAK,iBAAkB,EAAO,uBAAyB,IAGxE,GAAS,qBAAuB,EAAS,oBAAsB,EAAS,uBAAyB,EAAS,qBAAuB,EAAS,wBAA0B,EAAS,kBAAoB,EAAS,kBAAoB,GAAO,gBACxO,GAAW,SAAS,EAAK,aAAc,EAAO,oBAOhD,GAAI,GAAO,cAAe,CACzB,GAAW,YAAY,EAAK,GAAQ,cACpC,GAAW,YAAY,EAAK,GAAQ,qBACpC,GAAM,IAAW,GAAO,SAExB,AAAI,IACH,CAAI,GAAa,oBACZ,IAAS,cAAgB,MAAM,GAAS,qBAC5C,GAAW,SAAS,EAAK,cAAe,GAAS,YAAa,IAC9D,GAAW,SAAS,EAAK,kBAAmB,GAAS,kBAErD,GAAW,YAAY,EAAK,GAAU,iBAKzC,MAAI,CAAC,CAAC,IAAa,IAAS,gBAAgB,WAAa,QAAa,GAAS,gBAAgB,SAAW,SACzG,GAAa,OAAO,GAAQ,GAAU,EAAU,IAG7C,KAAmB,GAAmB,gBAAkB,GAAO,gBAClE,IAAmB,cAAgB,GAAO,cAC1C,GAAW,SAAS,EAAK,gBAAiB,GAAO,gBAG9C,IACH,IAAW,SAAS,EAAK,sBAAuB,EAAM,qBAElD,GAAmB,aAQtB,GAA8B,GAAY,IAIvC,IAAO,EAAS,KACnB,GAAU,mBAAmB,GAAY,IAG1C,GAAU,wBAAwB,GAAY,EAAU,EAAa,EAAS,EAAM,+BACpF,GAAc,OAAO,EAAK,GAAmB,aAAc,GAAY,KAGpE,EAAS,kBAAoB,EAAS,qBAAuB,IAChE,IAAc,OAAO,EAAK,GAAmB,aAAc,GAAY,IACvE,EAAS,mBAAqB,IAG3B,EAAS,kBACZ,GAAW,SAAS,EAAK,SAAU,GAAO,QAI3C,GAAW,SAAS,EAAK,kBAAmB,GAAO,iBACnD,GAAW,SAAS,EAAK,eAAgB,GAAO,cAChD,GAAW,SAAS,EAAK,cAAe,GAAO,aACxC,GAIR,YAAuC,EAAU,EAAO,CACvD,EAAS,kBAAkB,YAAc,EACzC,EAAS,WAAW,YAAc,EAClC,EAAS,kBAAkB,YAAc,EACzC,EAAS,wBAAwB,YAAc,EAC/C,EAAS,YAAY,YAAc,EACnC,EAAS,kBAAkB,YAAc,EACzC,EAAS,WAAW,YAAc,EAClC,EAAS,iBAAiB,YAAc,EACxC,EAAS,eAAe,YAAc,EACtC,EAAS,iBAAiB,YAAc,EAGzC,YAA6B,EAAU,CACtC,MAAO,GAAS,uBAAyB,EAAS,oBAAsB,EAAS,qBAAuB,EAAS,wBAA0B,EAAS,kBAAoB,EAAS,kBAAoB,EAAS,SAAW,GAG1N,KAAK,kBAAoB,UAAY,CACpC,MAAO,IAGR,KAAK,qBAAuB,UAAY,CACvC,MAAO,IAGR,KAAK,gBAAkB,UAAY,CAClC,MAAO,IAGR,KAAK,gBAAkB,SAAU,EAAc,EAAiB,EAAG,GAAoB,EAAG,CACzF,EAAuB,EACvB,EAAyB,EACzB,EAA4B,GAExB,GAAgB,GAAW,IAAI,GAAc,qBAAuB,QACvE,GAAS,kBAAkB,GAG5B,GAAI,GAAc,KACd,GAAS,GACT,GAAmB,GAEvB,GAAI,EAAc,CACjB,GAAM,IAAU,EAAa,QAE7B,AAAI,IAAQ,iBAAmB,GAAQ,uBACtC,IAAmB,IAGpB,GAAM,IAAqB,GAAW,IAAI,GAAc,mBAExD,AAAI,EAAa,wBAChB,GAAc,GAAmB,GACjC,GAAS,IACH,AAAI,EAAa,+BACvB,EAAc,GAAW,IAAI,GAAc,+BAE3C,EAAc,GAGf,EAAiB,KAAK,EAAa,UAEnC,EAAgB,KAAK,EAAa,SAElC,EAAsB,EAAa,gBAEnC,GAAiB,KAAK,GAAW,eAAe,GAAa,QAE7D,EAAgB,KAAK,GAAU,eAAe,GAAa,QAE3D,EAAsB,EAKvB,GAAI,AAFqB,GAAM,gBAAgB,EAAI,YAAa,IAExC,GAAa,YAAa,CACjD,GAAI,IAAc,GAElB,GAAI,EACH,GAAI,EAAa,6BAA8B,CAC9C,GAAM,IAAW,EAAa,QAE9B,GAAI,GAAoB,SAAW,GAAS,QAAU,GAAoB,KAAO,EAAI,kBAAmB,CACvG,OAAS,IAAI,EAAG,GAAK,GAAS,OAAQ,GAAI,GAAI,KAC7C,GAAoB,IAAK,EAAI,kBAAoB,GAGlD,GAAoB,OAAS,GAAS,OACtC,GAAc,QAGf,AAAI,IAAoB,SAAW,GAAK,GAAoB,KAAO,EAAI,oBACtE,IAAoB,GAAK,EAAI,kBAC7B,GAAoB,OAAS,EAC7B,GAAc,QAIhB,AAAI,IAAoB,SAAW,GAAK,GAAoB,KAAO,EAAI,OACtE,IAAoB,GAAK,EAAI,KAC7B,GAAoB,OAAS,EAC7B,GAAc,IAIhB,AAAI,IACH,CAAI,GAAa,SAChB,EAAI,YAAY,IAEhB,GAAW,IAAI,sBAAsB,iBAAiB,KASzD,GAJA,GAAM,SAAS,GACf,GAAM,QAAQ,GACd,GAAM,eAAe,GAEjB,GAAQ,CACX,GAAM,IAAoB,GAAW,IAAI,EAAa,SAEtD,EAAI,qBAAqB,EAAI,YAAa,EAAI,kBAAmB,EAAI,4BAA8B,EAAgB,GAAkB,eAAgB,YAC3I,GAAkB,CAC5B,GAAM,IAAoB,GAAW,IAAI,EAAa,SAChD,GAAQ,GAAkB,EAEhC,EAAI,wBAAwB,EAAI,YAAa,EAAI,kBAAmB,GAAkB,eAAgB,IAAqB,EAAG,IAG/H,EAAqB,IAGtB,KAAK,uBAAyB,SAAU,EAAc,EAAG,GAAG,EAAO,GAAQ,GAAQ,GAAqB,CACvG,GAAI,CAAE,IAAgB,EAAa,qBAAsB,CACxD,QAAQ,MAAM,4FACd,OAGD,GAAI,IAAc,GAAW,IAAI,GAAc,mBAM/C,GAJI,EAAa,yBAA2B,KAAwB,QACnE,IAAc,GAAY,KAGvB,GAAa,CAChB,GAAM,gBAAgB,EAAI,YAAa,IAEvC,GAAI,CACH,GAAM,IAAU,EAAa,QACvB,GAAgB,GAAQ,OACxB,GAAc,GAAQ,KAE5B,GAAI,KAAkB,IAAc,GAAM,QAAQ,MAAmB,EAAI,aAAa,EAAI,kCAAmC,CAC5H,QAAQ,MAAM,6GACd,OAGD,GAAM,IAA0B,KAAgB,GAAkB,IAAW,IAAI,gCAAkC,GAAa,UAAY,GAAW,IAAI,2BAE3J,GAAI,KAAgB,IAAoB,GAAM,QAAQ,MAAiB,EAAI,aAAa,EAAI,iCAC5F,CAAE,MAAgB,GAAc,IAAa,UAAY,GAAW,IAAI,sBAAwB,GAAW,IAAI,+BAC/G,CAAC,GAAyB,CACzB,QAAQ,MAAM,uHACd,OAGD,AAAI,EAAI,uBAAuB,EAAI,eAAiB,EAAI,qBAEnD,GAAK,GAAK,GAAK,EAAa,MAAQ,GAAS,IAAK,GAAK,IAAK,EAAa,OAAS,IACrF,EAAI,WAAW,EAAG,GAAG,EAAO,GAAQ,GAAM,QAAQ,IAAgB,GAAM,QAAQ,IAAc,IAG/F,QAAQ,MAAM,qHAEd,CAED,GAAM,IAAc,IAAyB,KAAO,GAAW,IAAI,GAAsB,mBAAqB,KAC9G,GAAM,gBAAgB,EAAI,YAAa,OAK1C,KAAK,yBAA2B,SAAU,EAAU,EAAS,GAAQ,EAAG,CACvE,GAAM,GAAa,KAAK,IAAI,EAAG,CAAC,IAC1B,GAAQ,KAAK,MAAM,EAAQ,MAAM,MAAQ,GACzC,GAAS,KAAK,MAAM,EAAQ,MAAM,OAAS,GAC7C,GAAW,GAAM,QAAQ,EAAQ,QAErC,AAAI,GAAa,UAGZ,MAAa,EAAI,KAAK,IAAW,EAAI,MACrC,KAAa,EAAI,MAAM,IAAW,EAAI,QAG3C,GAAS,aAAa,EAAS,GAE/B,EAAI,eAAe,EAAI,WAAY,GAAO,GAAU,EAAS,EAAG,EAAS,EAAG,GAAO,GAAQ,GAE3F,GAAM,iBAGP,KAAK,qBAAuB,SAAU,EAAU,EAAY,GAAY,EAAQ,EAAG,CAClF,GAAM,IAAQ,EAAW,MAAM,MACzB,GAAS,EAAW,MAAM,OAC1B,GAAW,GAAM,QAAQ,GAAW,QACpC,GAAS,GAAM,QAAQ,GAAW,MACxC,GAAS,aAAa,GAAY,GAGlC,EAAI,YAAY,EAAI,oBAAqB,GAAW,OAEpD,EAAI,YAAY,EAAI,+BAAgC,GAAW,kBAE/D,EAAI,YAAY,EAAI,iBAAkB,GAAW,iBAEjD,AAAI,EAAW,cACd,EAAI,cAAc,EAAI,WAAY,EAAO,EAAS,EAAG,EAAS,EAAG,GAAO,GAAQ,GAAU,GAAQ,EAAW,MAAM,MAEnH,AAAI,EAAW,oBACd,EAAI,wBAAwB,EAAI,WAAY,EAAO,EAAS,EAAG,EAAS,EAAG,EAAW,QAAQ,GAAG,MAAO,EAAW,QAAQ,GAAG,OAAQ,GAAU,EAAW,QAAQ,GAAG,MAEtK,EAAI,cAAc,EAAI,WAAY,EAAO,EAAS,EAAG,EAAS,EAAG,GAAU,GAAQ,EAAW,OAK5F,IAAU,GAAK,GAAW,iBAAiB,EAAI,eAAe,EAAI,YACtE,GAAM,iBAGP,KAAK,uBAAyB,SAAU,EAAW,EAAU,GAAY,EAAY,GAAQ,EAAG,CAC/F,GAAI,EAAM,iBAAkB,CAC3B,QAAQ,KAAK,6EACb,OAGD,GAAM,IAAQ,EAAU,IAAI,EAAI,EAAU,IAAI,EAAI,EAC5C,GAAS,EAAU,IAAI,EAAI,EAAU,IAAI,EAAI,EAC7C,GAAQ,EAAU,IAAI,EAAI,EAAU,IAAI,EAAI,EAC5C,GAAW,GAAM,QAAQ,EAAW,QACpC,GAAS,GAAM,QAAQ,EAAW,MACpC,GAEJ,GAAI,EAAW,gBACd,GAAS,aAAa,EAAY,GAClC,GAAW,EAAI,mBACL,EAAW,qBACrB,GAAS,kBAAkB,EAAY,GACvC,GAAW,EAAI,qBACT,CACN,QAAQ,KAAK,+GACb,OAGD,EAAI,YAAY,EAAI,oBAAqB,EAAW,OAEpD,EAAI,YAAY,EAAI,+BAAgC,EAAW,kBAE/D,EAAI,YAAY,EAAI,iBAAkB,EAAW,iBAEjD,GAAM,IAAe,EAAI,aAAa,EAAI,mBAEpC,GAAoB,EAAI,aAAa,EAAI,qBAEzC,GAAmB,EAAI,aAAa,EAAI,oBAExC,GAAiB,EAAI,aAAa,EAAI,kBAEtC,GAAmB,EAAI,aAAa,EAAI,oBAExC,GAAQ,GAAW,oBAAsB,GAAW,QAAQ,GAAK,GAAW,MAElF,EAAI,YAAY,EAAI,kBAAmB,GAAM,OAE7C,EAAI,YAAY,EAAI,oBAAqB,GAAM,QAE/C,EAAI,YAAY,EAAI,mBAAoB,EAAU,IAAI,GAEtD,EAAI,YAAY,EAAI,iBAAkB,EAAU,IAAI,GAEpD,EAAI,YAAY,EAAI,mBAAoB,EAAU,IAAI,GAEtD,AAAI,GAAW,eAAiB,GAAW,gBAC1C,EAAI,cAAc,GAAU,GAAO,EAAS,EAAG,EAAS,EAAG,EAAS,EAAG,GAAO,GAAQ,GAAO,GAAU,GAAQ,GAAM,MAErH,AAAI,GAAW,oBACd,SAAQ,KAAK,2FAEb,EAAI,wBAAwB,GAAU,GAAO,EAAS,EAAG,EAAS,EAAG,EAAS,EAAG,GAAO,GAAQ,GAAO,GAAU,GAAM,OAEvH,EAAI,cAAc,GAAU,GAAO,EAAS,EAAG,EAAS,EAAG,EAAS,EAAG,GAAO,GAAQ,GAAO,GAAU,GAAQ,IAIjH,EAAI,YAAY,EAAI,kBAAmB,IAEvC,EAAI,YAAY,EAAI,oBAAqB,IAEzC,EAAI,YAAY,EAAI,mBAAoB,IAExC,EAAI,YAAY,EAAI,iBAAkB,IAEtC,EAAI,YAAY,EAAI,mBAAoB,IAGpC,KAAU,GAAK,EAAW,iBAAiB,EAAI,eAAe,IAClE,GAAM,iBAGP,KAAK,YAAc,SAAU,EAAS,CACrC,GAAS,aAAa,EAAS,GAC/B,GAAM,iBAGP,KAAK,WAAa,UAAY,CAC7B,EAAyB,EACzB,EAA4B,EAC5B,EAAuB,KACvB,GAAM,QACN,GAAc,SAGX,MAAO,qBAAuB,aACjC,mBAAmB,cAAc,GAAI,aAAY,UAAW,CAC3D,OAAQ,QAMX,GAAc,UAAU,gBAAkB,GAE1C,gBAA6B,GAAc,EAE3C,GAAe,UAAU,iBAAmB,GAE5C,QAAc,CACb,YAAY,EAAO,EAAU,MAAS,CACrC,KAAK,KAAO,GACZ,KAAK,MAAQ,GAAI,IAAM,GACvB,KAAK,QAAU,EAGhB,OAAQ,CACP,MAAO,IAAI,IAAQ,KAAK,MAAO,KAAK,SAGrC,QAAS,CACR,MAAO,CACN,KAAM,UACN,MAAO,KAAK,MAAM,SAClB,QAAS,KAAK,UAMjB,GAAQ,UAAU,UAAY,GAE9B,QAAU,CACT,YAAY,EAAO,EAAO,EAAG,EAAM,IAAM,CACxC,KAAK,KAAO,GACZ,KAAK,MAAQ,GAAI,IAAM,GACvB,KAAK,KAAO,EACZ,KAAK,IAAM,EAGZ,OAAQ,CACP,MAAO,IAAI,IAAI,KAAK,MAAO,KAAK,KAAM,KAAK,KAG5C,QAAS,CACR,MAAO,CACN,KAAM,MACN,MAAO,KAAK,MAAM,SAClB,KAAM,KAAK,KACX,IAAK,KAAK,MAMb,GAAI,UAAU,MAAQ,GAEtB,gBAAoB,GAAS,CAC5B,aAAc,CACb,QACA,KAAK,KAAO,QACZ,KAAK,WAAa,KAClB,KAAK,YAAc,KACnB,KAAK,IAAM,KACX,KAAK,iBAAmB,KACxB,KAAK,WAAa,GAEd,MAAO,qBAAuB,aACjC,mBAAmB,cAAc,GAAI,aAAY,UAAW,CAC3D,OAAQ,QAMX,KAAK,EAAQ,EAAW,CACvB,aAAM,KAAK,EAAQ,GACf,EAAO,aAAe,MAAM,MAAK,WAAa,EAAO,WAAW,SAChE,EAAO,cAAgB,MAAM,MAAK,YAAc,EAAO,YAAY,SACnE,EAAO,MAAQ,MAAM,MAAK,IAAM,EAAO,IAAI,SAC3C,EAAO,mBAAqB,MAAM,MAAK,iBAAmB,EAAO,iBAAiB,SACtF,KAAK,WAAa,EAAO,WACzB,KAAK,iBAAmB,EAAO,iBACxB,KAGR,OAAO,EAAM,CACZ,GAAM,GAAO,MAAM,OAAO,GAC1B,MAAI,MAAK,MAAQ,MAAM,GAAK,OAAO,IAAM,KAAK,IAAI,UAC3C,GAKT,GAAM,UAAU,QAAU,GAE1B,QAAwB,CACvB,YAAY,EAAO,EAAQ,CAC1B,KAAK,MAAQ,EACb,KAAK,OAAS,EACd,KAAK,MAAQ,IAAU,OAAY,EAAM,OAAS,EAAS,EAC3D,KAAK,MAAQ,GACb,KAAK,YAAc,CAClB,OAAQ,EACR,MAAO,IAER,KAAK,QAAU,EACf,KAAK,KAAO,KAGb,kBAAmB,KAEf,aAAY,EAAO,CACtB,AAAI,IAAU,IAAM,KAAK,UAG1B,SAAS,EAAO,CACf,YAAK,MAAQ,EACN,KAGR,KAAK,EAAQ,CACZ,YAAK,MAAQ,GAAI,GAAO,MAAM,YAAY,EAAO,OACjD,KAAK,MAAQ,EAAO,MACpB,KAAK,OAAS,EAAO,OACrB,KAAK,MAAQ,EAAO,MACb,KAGR,OAAO,EAAQ,EAAW,EAAQ,CACjC,GAAU,KAAK,OACf,GAAU,EAAU,OAEpB,OAAS,GAAI,EAAG,EAAI,KAAK,OAAQ,EAAI,EAAG,IACvC,KAAK,MAAM,EAAS,GAAK,EAAU,MAAM,EAAS,GAGnD,MAAO,MAGR,IAAI,EAAO,EAAS,EAAG,CACtB,YAAK,MAAM,IAAI,EAAO,GACf,KAGR,MAAM,EAAM,CACX,AAAI,EAAK,eAAiB,QACzB,GAAK,aAAe,IAGjB,KAAK,MAAM,OAAO,QAAU,QAC/B,MAAK,MAAM,OAAO,MAAQ,MAGvB,EAAK,aAAa,KAAK,MAAM,OAAO,SAAW,QAClD,GAAK,aAAa,KAAK,MAAM,OAAO,OAAS,KAAK,MAAM,MAAM,GAAG,QAGlE,GAAM,GAAQ,GAAI,MAAK,MAAM,YAAY,EAAK,aAAa,KAAK,MAAM,OAAO,QACvE,EAAK,GAAI,MAAK,YAAY,EAAO,KAAK,QAC5C,SAAG,SAAS,KAAK,OACV,EAGR,SAAS,EAAU,CAClB,YAAK,iBAAmB,EACjB,KAGR,OAAO,EAAM,CACZ,MAAI,GAAK,eAAiB,QACzB,GAAK,aAAe,IAIjB,KAAK,MAAM,OAAO,QAAU,QAC/B,MAAK,MAAM,OAAO,MAAQ,MAGvB,EAAK,aAAa,KAAK,MAAM,OAAO,SAAW,QAClD,GAAK,aAAa,KAAK,MAAM,OAAO,OAAS,MAAM,UAAU,MAAM,KAAK,GAAI,aAAY,KAAK,MAAM,UAI7F,CACN,KAAM,KAAK,KACX,OAAQ,KAAK,MAAM,OAAO,MAC1B,KAAM,KAAK,MAAM,YAAY,KAC7B,OAAQ,KAAK,SAMhB,GAAkB,UAAU,oBAAsB,GAElD,GAAM,IAAyB,GAAI,GAEnC,QAAiC,CAChC,YAAY,EAAmB,EAAU,EAAQ,EAAa,GAAO,CACpE,KAAK,KAAO,GACZ,KAAK,KAAO,EACZ,KAAK,SAAW,EAChB,KAAK,OAAS,EACd,KAAK,WAAa,IAAe,MAG9B,QAAQ,CACX,MAAO,MAAK,KAAK,SAGd,QAAQ,CACX,MAAO,MAAK,KAAK,SAGd,aAAY,EAAO,CACtB,KAAK,KAAK,YAAc,EAGzB,aAAa,EAAG,CACf,OAAS,GAAI,EAAG,EAAI,KAAK,KAAK,MAAO,EAAI,EAAG,IAC3C,GAAU,EAAI,KAAK,KAAK,GACxB,GAAU,EAAI,KAAK,KAAK,GACxB,GAAU,EAAI,KAAK,KAAK,GAExB,GAAU,aAAa,GAEvB,KAAK,OAAO,EAAG,GAAU,EAAG,GAAU,EAAG,GAAU,GAGpD,MAAO,MAGR,kBAAkB,EAAG,CACpB,OAAS,GAAI,EAAG,EAAI,KAAK,MAAO,EAAI,EAAG,IACtC,GAAU,EAAI,KAAK,KAAK,GACxB,GAAU,EAAI,KAAK,KAAK,GACxB,GAAU,EAAI,KAAK,KAAK,GAExB,GAAU,kBAAkB,GAE5B,KAAK,OAAO,EAAG,GAAU,EAAG,GAAU,EAAG,GAAU,GAGpD,MAAO,MAGR,mBAAmB,EAAG,CACrB,OAAS,GAAI,EAAG,EAAI,KAAK,MAAO,EAAI,EAAG,IACtC,GAAU,EAAI,KAAK,KAAK,GACxB,GAAU,EAAI,KAAK,KAAK,GACxB,GAAU,EAAI,KAAK,KAAK,GAExB,GAAU,mBAAmB,GAE7B,KAAK,OAAO,EAAG,GAAU,EAAG,GAAU,EAAG,GAAU,GAGpD,MAAO,MAGR,KAAK,EAAO,EAAG,CACd,YAAK,KAAK,MAAM,EAAQ,KAAK,KAAK,OAAS,KAAK,QAAU,EACnD,KAGR,KAAK,EAAO,EAAG,CACd,YAAK,KAAK,MAAM,EAAQ,KAAK,KAAK,OAAS,KAAK,OAAS,GAAK,EACvD,KAGR,KAAK,EAAO,EAAG,CACd,YAAK,KAAK,MAAM,EAAQ,KAAK,KAAK,OAAS,KAAK,OAAS,GAAK,EACvD,KAGR,KAAK,EAAO,EAAG,CACd,YAAK,KAAK,MAAM,EAAQ,KAAK,KAAK,OAAS,KAAK,OAAS,GAAK,EACvD,KAGR,KAAK,EAAO,CACX,MAAO,MAAK,KAAK,MAAM,EAAQ,KAAK,KAAK,OAAS,KAAK,QAGxD,KAAK,EAAO,CACX,MAAO,MAAK,KAAK,MAAM,EAAQ,KAAK,KAAK,OAAS,KAAK,OAAS,GAGjE,KAAK,EAAO,CACX,MAAO,MAAK,KAAK,MAAM,EAAQ,KAAK,KAAK,OAAS,KAAK,OAAS,GAGjE,KAAK,EAAO,CACX,MAAO,MAAK,KAAK,MAAM,EAAQ,KAAK,KAAK,OAAS,KAAK,OAAS,GAGjE,MAAM,EAAO,EAAG,EAAG,CAClB,SAAQ,EAAQ,KAAK,KAAK,OAAS,KAAK,OACxC,KAAK,KAAK,MAAM,EAAQ,GAAK,EAC7B,KAAK,KAAK,MAAM,EAAQ,GAAK,EACtB,KAGR,OAAO,EAAO,EAAG,EAAG,EAAG,CACtB,SAAQ,EAAQ,KAAK,KAAK,OAAS,KAAK,OACxC,KAAK,KAAK,MAAM,EAAQ,GAAK,EAC7B,KAAK,KAAK,MAAM,EAAQ,GAAK,EAC7B,KAAK,KAAK,MAAM,EAAQ,GAAK,EACtB,KAGR,QAAQ,EAAO,EAAG,EAAG,EAAG,EAAG,CAC1B,SAAQ,EAAQ,KAAK,KAAK,OAAS,KAAK,OACxC,KAAK,KAAK,MAAM,EAAQ,GAAK,EAC7B,KAAK,KAAK,MAAM,EAAQ,GAAK,EAC7B,KAAK,KAAK,MAAM,EAAQ,GAAK,EAC7B,KAAK,KAAK,MAAM,EAAQ,GAAK,EACtB,KAGR,MAAM,EAAM,CACX,GAAI,IAAS,OAAW,CACvB,QAAQ,IAAI,mHACZ,GAAM,GAAQ,GAEd,OAAS,GAAI,EAAG,EAAI,KAAK,MAAO,IAAK,CACpC,GAAM,GAAQ,EAAI,KAAK,KAAK,OAAS,KAAK,OAE1C,OAAS,GAAI,EAAG,EAAI,KAAK,SAAU,IAClC,EAAM,KAAK,KAAK,KAAK,MAAM,EAAQ,IAIrC,MAAO,IAAI,IAAgB,GAAI,MAAK,MAAM,YAAY,GAAQ,KAAK,SAAU,KAAK,gBAElF,OAAI,GAAK,qBAAuB,QAC/B,GAAK,mBAAqB,IAGvB,EAAK,mBAAmB,KAAK,KAAK,QAAU,QAC/C,GAAK,mBAAmB,KAAK,KAAK,MAAQ,KAAK,KAAK,MAAM,IAGpD,GAAI,IAA2B,EAAK,mBAAmB,KAAK,KAAK,MAAO,KAAK,SAAU,KAAK,OAAQ,KAAK,YAIlH,OAAO,EAAM,CACZ,GAAI,IAAS,OAAW,CACvB,QAAQ,IAAI,wHACZ,GAAM,GAAQ,GAEd,OAAS,GAAI,EAAG,EAAI,KAAK,MAAO,IAAK,CACpC,GAAM,GAAQ,EAAI,KAAK,KAAK,OAAS,KAAK,OAE1C,OAAS,GAAI,EAAG,EAAI,KAAK,SAAU,IAClC,EAAM,KAAK,KAAK,KAAK,MAAM,EAAQ,IAKrC,MAAO,CACN,SAAU,KAAK,SACf,KAAM,KAAK,MAAM,YAAY,KAC7B,MAAO,EACP,WAAY,KAAK,gBAIlB,OAAI,GAAK,qBAAuB,QAC/B,GAAK,mBAAqB,IAGvB,EAAK,mBAAmB,KAAK,KAAK,QAAU,QAC/C,GAAK,mBAAmB,KAAK,KAAK,MAAQ,KAAK,KAAK,OAAO,IAGrD,CACN,6BAA8B,GAC9B,SAAU,KAAK,SACf,KAAM,KAAK,KAAK,KAChB,OAAQ,KAAK,OACb,WAAY,KAAK,aAOrB,GAA2B,UAAU,6BAA+B,GAYpE,gBAA6B,GAAS,CACrC,YAAY,EAAY,CACvB,QACA,KAAK,KAAO,iBACZ,KAAK,MAAQ,GAAI,IAAM,UACvB,KAAK,IAAM,KACX,KAAK,SAAW,KAChB,KAAK,SAAW,EAChB,KAAK,gBAAkB,GACvB,KAAK,YAAc,GACnB,KAAK,UAAU,GAGhB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,MAAM,KAAK,EAAO,OACvB,KAAK,IAAM,EAAO,IAClB,KAAK,SAAW,EAAO,SACvB,KAAK,SAAW,EAAO,SACvB,KAAK,gBAAkB,EAAO,gBACvB,MAKT,GAAe,UAAU,iBAAmB,GAE5C,GAAI,IAEE,GAA+B,GAAI,GAEnC,GAA2B,GAAI,GAE/B,GAA2B,GAAI,GAE/B,GAAgC,GAAI,IAEpC,GAAgC,GAAI,IAEpC,GAAgC,GAAI,IAEpC,GAAmB,GAAI,GAEvB,GAAmB,GAAI,GAEvB,GAAmB,GAAI,GAEvB,GAAoB,GAAI,IAExB,GAAoB,GAAI,IAExB,GAAoB,GAAI,IAE9B,gBAAqB,GAAS,CAC7B,YAAY,EAAU,CACrB,QAGA,GAFA,KAAK,KAAO,SAER,KAAc,OAAW,CAC5B,GAAY,GAAI,IAChB,GAAM,GAAe,GAAI,cAAa,CAAC,IAAM,IAAM,EAAG,EAAG,EAAG,GAAK,IAAM,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,IAAM,GAAK,EAAG,EAAG,IAC9G,EAAoB,GAAI,IAAkB,EAAc,GAE9D,GAAU,SAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAEnC,GAAU,aAAa,WAAY,GAAI,IAA2B,EAAmB,EAAG,EAAG,KAE3F,GAAU,aAAa,KAAM,GAAI,IAA2B,EAAmB,EAAG,EAAG,KAGtF,KAAK,SAAW,GAChB,KAAK,SAAW,IAAa,OAAY,EAAW,GAAI,IACxD,KAAK,OAAS,GAAI,IAAQ,GAAK,IAGhC,QAAQ,EAAW,EAAY,CAC9B,AAAI,EAAU,SAAW,MACxB,QAAQ,MAAM,yFAGf,GAAY,mBAAmB,KAAK,aAEpC,GAAiB,KAAK,EAAU,OAAO,aAEvC,KAAK,gBAAgB,iBAAiB,EAAU,OAAO,mBAAoB,KAAK,aAEhF,GAAY,sBAAsB,KAAK,iBAEnC,EAAU,OAAO,qBAAuB,KAAK,SAAS,kBAAoB,IAC7E,GAAY,eAAe,CAAC,GAAY,GAGzC,GAAM,GAAW,KAAK,SAAS,SAC3B,EAAK,EAET,AAAI,IAAa,GAChB,GAAM,KAAK,IAAI,GACf,EAAM,KAAK,IAAI,IAGhB,GAAM,GAAS,KAAK,OACpB,GAAgB,GAAI,IAAI,IAAM,IAAM,GAAI,GAAa,EAAQ,GAAa,EAAK,GAC/E,GAAgB,GAAI,IAAI,GAAK,IAAM,GAAI,GAAa,EAAQ,GAAa,EAAK,GAC9E,GAAgB,GAAI,IAAI,GAAK,GAAK,GAAI,GAAa,EAAQ,GAAa,EAAK,GAE7E,GAAK,IAAI,EAAG,GAEZ,GAAK,IAAI,EAAG,GAEZ,GAAK,IAAI,EAAG,GAGZ,GAAI,GAAY,EAAU,IAAI,kBAAkB,GAAK,GAAK,GAAK,GAAO,IAEtE,GAAI,IAAc,MAEjB,IAAgB,GAAI,IAAI,IAAM,GAAK,GAAI,GAAa,EAAQ,GAAa,EAAK,GAE9E,GAAK,IAAI,EAAG,GAEZ,EAAY,EAAU,IAAI,kBAAkB,GAAK,GAAK,GAAK,GAAO,IAE9D,IAAc,MACjB,OAIF,GAAM,GAAW,EAAU,IAAI,OAAO,WAAW,IACjD,AAAI,EAAW,EAAU,MAAQ,EAAW,EAAU,KACtD,EAAW,KAAK,CACf,SAAU,EACV,MAAO,GAAgB,QACvB,GAAI,GAAS,MAAM,GAAiB,GAAK,GAAK,GAAK,GAAM,GAAM,GAAM,GAAI,KACzE,KAAM,KACN,OAAQ,OAIV,KAAK,EAAQ,CACZ,aAAM,KAAK,GACP,EAAO,SAAW,QAAW,KAAK,OAAO,KAAK,EAAO,QACzD,KAAK,SAAW,EAAO,SAChB,MAKT,GAAO,UAAU,SAAW,GAE5B,YAAyB,EAAgB,EAAY,EAAQ,EAAO,EAAK,EAAK,CAE7E,GAAiB,WAAW,EAAgB,GAAQ,UAAU,IAAK,SAAS,GAG5E,AAAI,IAAQ,OACX,IAAiB,EAAI,EAAM,GAAiB,EAAI,EAAM,GAAiB,EACvE,GAAiB,EAAI,EAAM,GAAiB,EAAI,EAAM,GAAiB,GAEvE,GAAiB,KAAK,IAGvB,EAAe,KAAK,GACpB,EAAe,GAAK,GAAiB,EACrC,EAAe,GAAK,GAAiB,EAErC,EAAe,aAAa,IAG7B,GAAM,IAAqB,GAAI,GAEzB,GAAqB,GAAI,GAE/B,gBAAkB,GAAS,CAC1B,aAAc,CACb,QACA,KAAK,cAAgB,EACrB,KAAK,KAAO,MACZ,OAAO,iBAAiB,KAAM,CAC7B,OAAQ,CACP,WAAY,GACZ,MAAO,IAER,MAAO,CACN,MAAO,MAGT,KAAK,WAAa,GAGnB,KAAK,EAAQ,CACZ,MAAM,KAAK,EAAQ,IACnB,GAAM,GAAS,EAAO,OAEtB,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,IAAK,CAC9C,GAAM,GAAQ,EAAO,GACrB,KAAK,SAAS,EAAM,OAAO,QAAS,EAAM,UAG3C,YAAK,WAAa,EAAO,WAClB,KAGR,SAAS,EAAQ,EAAW,EAAG,CAC9B,EAAW,KAAK,IAAI,GACpB,GAAM,GAAS,KAAK,OAChB,EAEJ,IAAK,EAAI,EAAG,EAAI,EAAO,QAClB,IAAW,EAAO,GAAG,UADK,IAC9B,CAKD,SAAO,OAAO,EAAG,EAAG,CACnB,SAAU,EACV,OAAQ,IAET,KAAK,IAAI,GACF,KAGR,iBAAkB,CACjB,MAAO,MAAK,cAGb,qBAAqB,EAAU,CAC9B,GAAM,GAAS,KAAK,OAEpB,GAAI,EAAO,OAAS,EAAG,CACtB,GAAI,GAAG,EAEP,IAAK,EAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,GAC9B,IAAW,EAAO,GAAG,UADY,IACrC,CAKD,MAAO,GAAO,EAAI,GAAG,OAGtB,MAAO,MAGR,QAAQ,EAAW,EAAY,CAG9B,GAAI,AAFW,KAAK,OAET,OAAS,EAAG,CACtB,GAAM,sBAAsB,KAAK,aAEjC,GAAM,GAAW,EAAU,IAAI,OAAO,WAAW,IACjD,KAAK,qBAAqB,GAAU,QAAQ,EAAW,IAIzD,OAAO,EAAQ,CACd,GAAM,GAAS,KAAK,OAEpB,GAAI,EAAO,OAAS,EAAG,CACtB,GAAM,sBAAsB,EAAO,aAEnC,GAAM,sBAAsB,KAAK,aAEjC,GAAM,GAAW,GAAM,WAAW,IAAS,EAAO,KAClD,EAAO,GAAG,OAAO,QAAU,GAC3B,GAAI,GAAG,EAEP,IAAK,EAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,GAC9B,GAAY,EAAO,GAAG,SADW,IAEpC,EAAO,EAAI,GAAG,OAAO,QAAU,GAC/B,EAAO,GAAG,OAAO,QAAU,GAQ7B,IAFA,KAAK,cAAgB,EAAI,EAElB,EAAI,EAAG,IACb,EAAO,GAAG,OAAO,QAAU,IAK9B,OAAO,EAAM,CACZ,GAAM,GAAO,MAAM,OAAO,GAC1B,AAAI,KAAK,aAAe,IAAO,GAAK,OAAO,WAAa,IACxD,EAAK,OAAO,OAAS,GACrB,GAAM,GAAS,KAAK,OAEpB,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,IAAK,CAC9C,GAAM,GAAQ,EAAO,GACrB,EAAK,OAAO,OAAO,KAAK,CACvB,OAAQ,EAAM,OAAO,KACrB,SAAU,EAAM,WAIlB,MAAO,IAKT,GAAM,IAA6B,GAAI,GAEjC,GAA0B,GAAI,IAE9B,GAA2B,GAAI,IAE/B,GAAyB,GAAI,GAE7B,GAAuB,GAAI,IAEjC,gBAA0B,GAAK,CAC9B,YAAY,EAAU,EAAU,CAC/B,MAAM,EAAU,GAChB,KAAK,KAAO,cACZ,KAAK,SAAW,WAChB,KAAK,WAAa,GAAI,IACtB,KAAK,kBAAoB,GAAI,IAG9B,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,SAAW,EAAO,SACvB,KAAK,WAAW,KAAK,EAAO,YAC5B,KAAK,kBAAkB,KAAK,EAAO,mBACnC,KAAK,SAAW,EAAO,SAChB,KAGR,KAAK,EAAU,EAAY,CAC1B,KAAK,SAAW,EAEZ,IAAe,QAClB,MAAK,kBAAkB,IACvB,KAAK,SAAS,oBACd,EAAa,KAAK,aAGnB,KAAK,WAAW,KAAK,GACrB,KAAK,kBAAkB,KAAK,GAAY,SAGzC,MAAO,CACN,KAAK,SAAS,OAGf,sBAAuB,CACtB,GAAM,GAAS,GAAI,IACb,EAAa,KAAK,SAAS,WAAW,WAE5C,OAAS,GAAI,EAAG,EAAI,EAAW,MAAO,EAAI,EAAG,IAAK,CACjD,EAAO,EAAI,EAAW,KAAK,GAC3B,EAAO,EAAI,EAAW,KAAK,GAC3B,EAAO,EAAI,EAAW,KAAK,GAC3B,EAAO,EAAI,EAAW,KAAK,GAC3B,GAAM,GAAQ,EAAM,EAAO,kBAE3B,AAAI,IAAU,IACb,EAAO,eAAe,GAEtB,EAAO,IAAI,EAAG,EAAG,EAAG,GAGrB,EAAW,QAAQ,EAAG,EAAO,EAAG,EAAO,EAAG,EAAO,EAAG,EAAO,IAI7D,kBAAkB,EAAO,CACxB,MAAM,kBAAkB,GAExB,AAAI,KAAK,WAAa,WACrB,KAAK,kBAAkB,KAAK,KAAK,aAAa,SACxC,AAAI,KAAK,WAAa,WAC5B,KAAK,kBAAkB,KAAK,KAAK,YAAY,SAE7C,QAAQ,KAAK,6CAA+C,KAAK,UAInE,cAAc,EAAO,EAAQ,CAC5B,GAAM,GAAW,KAAK,SAChB,EAAW,KAAK,SAEtB,GAAW,oBAAoB,EAAS,WAAW,UAAW,GAE9D,GAAY,oBAAoB,EAAS,WAAW,WAAY,GAEhE,GAAc,KAAK,GAAQ,aAAa,KAAK,YAE7C,EAAO,IAAI,EAAG,EAAG,GAEjB,OAAS,GAAI,EAAG,EAAI,EAAG,IAAK,CAC3B,GAAM,GAAS,GAAY,aAAa,GAExC,GAAI,IAAW,EAAG,CACjB,GAAM,GAAY,GAAW,aAAa,GAE1C,GAAQ,iBAAiB,EAAS,MAAM,GAAW,YAAa,EAAS,aAAa,IAEtF,EAAO,gBAAgB,GAAU,KAAK,IAAe,aAAa,IAAU,IAI9E,MAAO,GAAO,aAAa,KAAK,oBAKlC,GAAY,UAAU,cAAgB,GAEtC,gBAAmB,GAAS,CAC3B,aAAc,CACb,QACA,KAAK,KAAO,QAKd,GAAK,UAAU,OAAS,GAExB,gBAA0B,GAAQ,CACjC,YAAY,EAAO,KAAM,EAAQ,EAAG,EAAS,EAAG,EAAQ,EAAM,EAAS,EAAO,EAAO,EAAY,GAAe,EAAY,GAAe,EAAY,EAAU,CAChK,MAAM,KAAM,EAAS,EAAO,EAAO,EAAW,EAAW,EAAQ,EAAM,EAAY,GACnF,KAAK,MAAQ,CACZ,KAAM,EACN,MAAO,EACP,OAAQ,GAET,KAAK,UAAY,EACjB,KAAK,UAAY,EACjB,KAAK,gBAAkB,GACvB,KAAK,MAAQ,GACb,KAAK,gBAAkB,EACvB,KAAK,YAAc,IAKrB,GAAY,UAAU,cAAgB,GAEtC,GAAM,IAA6B,GAAI,IAEjC,GAA+B,GAAI,IAEzC,QAAe,CACd,YAAY,EAAQ,GAAI,EAAe,GAAI,CAC1C,KAAK,KAAO,KACZ,KAAK,MAAQ,EAAM,MAAM,GACzB,KAAK,aAAe,EACpB,KAAK,aAAe,KACpB,KAAK,YAAc,KACnB,KAAK,gBAAkB,EACvB,KAAK,MAAQ,GACb,KAAK,OAGN,MAAO,CACN,GAAM,GAAQ,KAAK,MACb,EAAe,KAAK,aAG1B,GAFA,KAAK,aAAe,GAAI,cAAa,EAAM,OAAS,IAEhD,EAAa,SAAW,EAC3B,KAAK,4BAGD,EAAM,SAAW,EAAa,OAAQ,CACzC,QAAQ,KAAK,mFACb,KAAK,aAAe,GAEpB,OAAS,GAAI,EAAG,EAAK,KAAK,MAAM,OAAQ,EAAI,EAAI,IAC/C,KAAK,aAAa,KAAK,GAAI,MAM/B,mBAAoB,CACnB,KAAK,aAAa,OAAS,EAE3B,OAAS,GAAI,EAAG,EAAK,KAAK,MAAM,OAAQ,EAAI,EAAI,IAAK,CACpD,GAAM,GAAU,GAAI,IAEpB,AAAI,KAAK,MAAM,IACd,EAAQ,KAAK,KAAK,MAAM,GAAG,aAAa,SAGzC,KAAK,aAAa,KAAK,IAIzB,MAAO,CAEN,OAAS,GAAI,EAAG,EAAK,KAAK,MAAM,OAAQ,EAAI,EAAI,IAAK,CACpD,GAAM,GAAO,KAAK,MAAM,GAExB,AAAI,GACH,EAAK,YAAY,KAAK,KAAK,aAAa,IAAI,SAK9C,OAAS,GAAI,EAAG,EAAK,KAAK,MAAM,OAAQ,EAAI,EAAI,IAAK,CACpD,GAAM,GAAO,KAAK,MAAM,GAExB,AAAI,GACH,CAAI,EAAK,QAAU,EAAK,OAAO,OAC9B,GAAK,OAAO,KAAK,EAAK,OAAO,aAAa,SAC1C,EAAK,OAAO,SAAS,EAAK,cAE1B,EAAK,OAAO,KAAK,EAAK,aAGvB,EAAK,OAAO,UAAU,EAAK,SAAU,EAAK,WAAY,EAAK,SAK9D,QAAS,CACR,GAAM,GAAQ,KAAK,MACb,EAAe,KAAK,aACpB,EAAe,KAAK,aACpB,EAAc,KAAK,YAEzB,OAAS,GAAI,EAAG,EAAK,EAAM,OAAQ,EAAI,EAAI,IAAK,CAE/C,GAAM,GAAS,EAAM,GAAK,EAAM,GAAG,YAAc,GAEjD,GAAc,iBAAiB,EAAQ,EAAa,IAEpD,GAAc,QAAQ,EAAc,EAAI,IAGzC,AAAI,IAAgB,MACnB,GAAY,YAAc,IAI5B,OAAQ,CACP,MAAO,IAAI,IAAS,KAAK,MAAO,KAAK,cAGtC,oBAAqB,CAOpB,GAAI,GAAO,KAAK,KAAK,KAAK,MAAM,OAAS,GAEzC,EAAO,GAAe,GACtB,EAAO,KAAK,IAAI,EAAM,GACtB,GAAM,GAAe,GAAI,cAAa,EAAO,EAAO,GAEpD,EAAa,IAAI,KAAK,cAEtB,GAAM,GAAc,GAAI,IAAY,EAAc,EAAM,EAAM,GAAY,GAC1E,YAAK,aAAe,EACpB,KAAK,YAAc,EACnB,KAAK,gBAAkB,EAChB,KAGR,cAAc,EAAM,CACnB,OAAS,GAAI,EAAG,EAAK,KAAK,MAAM,OAAQ,EAAI,EAAI,IAAK,CACpD,GAAM,GAAO,KAAK,MAAM,GAExB,GAAI,EAAK,OAAS,EACjB,MAAO,IAOV,SAAU,CACT,AAAI,KAAK,cAAgB,MACxB,MAAK,YAAY,UACjB,KAAK,YAAc,MAIrB,SAAS,EAAM,EAAO,CACrB,KAAK,KAAO,EAAK,KAEjB,OAAS,GAAI,EAAG,EAAI,EAAK,MAAM,OAAQ,EAAI,EAAG,IAAK,CAClD,GAAM,GAAO,EAAK,MAAM,GACpB,EAAO,EAAM,GAEjB,AAAI,IAAS,QACZ,SAAQ,KAAK,2CAA4C,GACzD,EAAO,GAAI,KAGZ,KAAK,MAAM,KAAK,GAChB,KAAK,aAAa,KAAK,GAAI,MAAU,UAAU,EAAK,aAAa,KAGlE,YAAK,OACE,KAGR,QAAS,CACR,GAAM,GAAO,CACZ,SAAU,CACT,QAAS,IACT,KAAM,WACN,UAAW,mBAEZ,MAAO,GACP,aAAc,IAEf,EAAK,KAAO,KAAK,KACjB,GAAM,GAAQ,KAAK,MACb,EAAe,KAAK,aAE1B,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,IAAK,CAC7C,GAAM,GAAO,EAAM,GACnB,EAAK,MAAM,KAAK,EAAK,MACrB,GAAM,GAAc,EAAa,GACjC,EAAK,aAAa,KAAK,EAAY,WAGpC,MAAO,IAKT,gBAAuC,GAAgB,CACtD,YAAY,EAAO,EAAU,EAAY,EAAmB,EAAG,CAC9D,AAAI,MAAO,IAAe,UACzB,GAAmB,EACnB,EAAa,GACb,QAAQ,MAAM,kGAGf,MAAM,EAAO,EAAU,GACvB,KAAK,iBAAmB,EAGzB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,iBAAmB,EAAO,iBACxB,KAGR,QAAS,CACR,GAAM,GAAO,MAAM,SACnB,SAAK,iBAAmB,KAAK,iBAC7B,EAAK,2BAA6B,GAC3B,GAKT,GAAyB,UAAU,2BAA6B,GAEhE,GAAM,IAAoC,GAAI,IAExC,GAAoC,GAAI,IAExC,GAAsB,GAEtB,GAAqB,GAAI,IAE/B,gBAA4B,GAAK,CAChC,YAAY,EAAU,EAAU,EAAO,CACtC,MAAM,EAAU,GAChB,KAAK,eAAiB,GAAI,IAAyB,GAAI,cAAa,EAAQ,IAAK,IACjF,KAAK,cAAgB,KACrB,KAAK,MAAQ,EACb,KAAK,cAAgB,GAGtB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,eAAe,KAAK,EAAO,gBAC5B,EAAO,gBAAkB,MAAM,MAAK,cAAgB,EAAO,cAAc,SAC7E,KAAK,MAAQ,EAAO,MACb,KAGR,WAAW,EAAO,EAAO,CACxB,EAAM,UAAU,KAAK,cAAc,MAAO,EAAQ,GAGnD,YAAY,EAAO,EAAQ,CAC1B,EAAO,UAAU,KAAK,eAAe,MAAO,EAAQ,IAGrD,QAAQ,EAAW,EAAY,CAC9B,GAAM,GAAc,KAAK,YACnB,EAAe,KAAK,MAG1B,GAFA,GAAM,SAAW,KAAK,SACtB,GAAM,SAAW,KAAK,SAClB,GAAM,WAAa,OAEvB,OAAS,GAAa,EAAG,EAAa,EAAc,IAAc,CAEjE,KAAK,YAAY,EAAY,IAE7B,GAAqB,iBAAiB,EAAa,IAGnD,GAAM,YAAc,GAEpB,GAAM,QAAQ,EAAW,IAGzB,OAAS,GAAI,EAAG,EAAI,GAAoB,OAAQ,EAAI,EAAG,IAAK,CAC3D,GAAM,GAAY,GAAoB,GACtC,EAAU,WAAa,EACvB,EAAU,OAAS,KACnB,EAAW,KAAK,GAGjB,GAAoB,OAAS,GAI/B,WAAW,EAAO,EAAO,CACxB,AAAI,KAAK,gBAAkB,MAC1B,MAAK,cAAgB,GAAI,IAAyB,GAAI,cAAa,KAAK,eAAe,MAAQ,GAAI,IAGpG,EAAM,QAAQ,KAAK,cAAc,MAAO,EAAQ,GAGjD,YAAY,EAAO,EAAQ,CAC1B,EAAO,QAAQ,KAAK,eAAe,MAAO,EAAQ,IAGnD,oBAAqB,EAErB,SAAU,CACT,KAAK,cAAc,CAClB,KAAM,aAMT,GAAc,UAAU,gBAAkB,GAa1C,gBAAgC,GAAS,CACxC,YAAY,EAAY,CACvB,QACA,KAAK,KAAO,oBACZ,KAAK,MAAQ,GAAI,IAAM,UACvB,KAAK,UAAY,EACjB,KAAK,QAAU,QACf,KAAK,SAAW,QAChB,KAAK,UAAU,GAGhB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,MAAM,KAAK,EAAO,OACvB,KAAK,UAAY,EAAO,UACxB,KAAK,QAAU,EAAO,QACtB,KAAK,SAAW,EAAO,SAChB,MAKT,GAAkB,UAAU,oBAAsB,GAElD,GAAM,IAAwB,GAAI,GAE5B,GAAsB,GAAI,GAE1B,GAAgC,GAAI,IAEpC,GAAsB,GAAI,IAE1B,GAAyB,GAAI,IAEnC,gBAAmB,GAAS,CAC3B,YAAY,EAAW,GAAI,IAAkB,EAAW,GAAI,IAAqB,CAChF,QACA,KAAK,KAAO,OACZ,KAAK,SAAW,EAChB,KAAK,SAAW,EAChB,KAAK,qBAGN,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,SAAW,EAAO,SACvB,KAAK,SAAW,EAAO,SAChB,KAGR,sBAAuB,CACtB,GAAM,GAAW,KAAK,SAEtB,GAAI,EAAS,iBAEZ,GAAI,EAAS,QAAU,KAAM,CAC5B,GAAM,GAAoB,EAAS,WAAW,SACxC,EAAgB,CAAC,GAEvB,OAAS,GAAI,EAAG,EAAI,EAAkB,MAAO,EAAI,EAAG,IACnD,GAAS,oBAAoB,EAAmB,EAAI,GAEpD,GAAO,oBAAoB,EAAmB,GAE9C,EAAc,GAAK,EAAc,EAAI,GACrC,EAAc,IAAM,GAAS,WAAW,IAGzC,EAAS,aAAa,eAAgB,GAAI,IAAuB,EAAe,QAEhF,SAAQ,KAAK,qGAER,AAAI,GAAS,YACnB,QAAQ,MAAM,0GAGf,MAAO,MAGR,QAAQ,EAAW,EAAY,CAC9B,GAAM,GAAW,KAAK,SAChB,EAAc,KAAK,YACnB,EAAY,EAAU,OAAO,KAAK,UAClC,EAAY,EAAS,UAS3B,GAPI,EAAS,iBAAmB,MAAM,EAAS,wBAE/C,GAAU,KAAK,EAAS,gBAExB,GAAU,aAAa,GAEvB,GAAU,QAAU,EAChB,EAAU,IAAI,iBAAiB,MAAe,GAAO,OAEzD,GAAiB,KAAK,GAAa,SAEnC,GAAO,KAAK,EAAU,KAAK,aAAa,IAExC,GAAM,GAAiB,EAAc,OAAK,MAAM,EAAI,KAAK,MAAM,EAAI,KAAK,MAAM,GAAK,GAC7E,EAAmB,EAAiB,EACpC,EAAS,GAAI,GACb,EAAO,GAAI,GACX,EAAe,GAAI,GACnB,EAAW,GAAI,GACf,EAAO,KAAK,eAAiB,EAAI,EAEvC,GAAI,EAAS,iBAAkB,CAC9B,GAAM,GAAQ,EAAS,MAEjB,EAAoB,AADP,EAAS,WACS,SAErC,GAAI,IAAU,KAAM,CACnB,GAAM,GAAQ,KAAK,IAAI,EAAG,EAAU,OAC9B,EAAM,KAAK,IAAI,EAAM,MAAO,EAAU,MAAQ,EAAU,OAE9D,OAAS,GAAI,EAAO,EAAI,EAAM,EAAG,EAAI,EAAG,GAAK,EAAM,CAClD,GAAM,GAAI,EAAM,KAAK,GACf,EAAI,EAAM,KAAK,EAAI,GAMzB,GALA,EAAO,oBAAoB,EAAmB,GAC9C,EAAK,oBAAoB,EAAmB,GAIxC,AAFW,GAAO,oBAAoB,EAAQ,EAAM,EAAU,GAErD,EAAkB,SAC/B,EAAS,aAAa,KAAK,aAE3B,GAAM,GAAW,EAAU,IAAI,OAAO,WAAW,GACjD,AAAI,EAAW,EAAU,MAAQ,EAAW,EAAU,KACtD,EAAW,KAAK,CACf,SAAU,EAGV,MAAO,EAAa,QAAQ,aAAa,KAAK,aAC9C,MAAO,EACP,KAAM,KACN,UAAW,KACX,OAAQ,YAGJ,CACN,GAAM,GAAQ,KAAK,IAAI,EAAG,EAAU,OAC9B,EAAM,KAAK,IAAI,EAAkB,MAAO,EAAU,MAAQ,EAAU,OAE1E,OAAS,GAAI,EAAO,EAAI,EAAM,EAAG,EAAI,EAAG,GAAK,EAAM,CAMlD,GALA,EAAO,oBAAoB,EAAmB,GAC9C,EAAK,oBAAoB,EAAmB,EAAI,GAI5C,AAFW,GAAO,oBAAoB,EAAQ,EAAM,EAAU,GAErD,EAAkB,SAC/B,EAAS,aAAa,KAAK,aAE3B,GAAM,GAAW,EAAU,IAAI,OAAO,WAAW,GACjD,AAAI,EAAW,EAAU,MAAQ,EAAW,EAAU,KACtD,EAAW,KAAK,CACf,SAAU,EAGV,MAAO,EAAa,QAAQ,aAAa,KAAK,aAC9C,MAAO,EACP,KAAM,KACN,UAAW,KACX,OAAQ,aAIL,AAAI,GAAS,YACnB,QAAQ,MAAM,6FAIhB,oBAAqB,CACpB,GAAM,GAAW,KAAK,SAEtB,GAAI,EAAS,iBAAkB,CAC9B,GAAM,GAAkB,EAAS,gBAC3B,EAAO,OAAO,KAAK,GAEzB,GAAI,EAAK,OAAS,EAAG,CACpB,GAAM,GAAiB,EAAgB,EAAK,IAE5C,GAAI,IAAmB,OAAW,CACjC,KAAK,sBAAwB,GAC7B,KAAK,sBAAwB,GAE7B,OAAS,GAAI,EAAG,EAAK,EAAe,OAAQ,EAAI,EAAI,IAAK,CACxD,GAAM,GAAO,EAAe,GAAG,MAAQ,OAAO,GAC9C,KAAK,sBAAsB,KAAK,GAChC,KAAK,sBAAsB,GAAQ,SAIhC,CACN,GAAM,GAAe,EAAS,aAE9B,AAAI,IAAiB,QAAa,EAAa,OAAS,GACvD,QAAQ,MAAM,wGAOlB,GAAK,UAAU,OAAS,GAExB,GAAM,IAAsB,GAAI,GAE1B,GAAoB,GAAI,GAE9B,gBAA2B,GAAK,CAC/B,YAAY,EAAU,EAAU,CAC/B,MAAM,EAAU,GAChB,KAAK,KAAO,eAGb,sBAAuB,CACtB,GAAM,GAAW,KAAK,SAEtB,GAAI,EAAS,iBAEZ,GAAI,EAAS,QAAU,KAAM,CAC5B,GAAM,GAAoB,EAAS,WAAW,SACxC,EAAgB,GAEtB,OAAS,GAAI,EAAG,EAAI,EAAkB,MAAO,EAAI,EAAG,GAAK,EACxD,GAAO,oBAAoB,EAAmB,GAE9C,GAAK,oBAAoB,EAAmB,EAAI,GAEhD,EAAc,GAAK,IAAM,EAAI,EAAI,EAAc,EAAI,GACnD,EAAc,EAAI,GAAK,EAAc,GAAK,GAAO,WAAW,IAG7D,EAAS,aAAa,eAAgB,GAAI,IAAuB,EAAe,QAEhF,SAAQ,KAAK,6GAER,AAAI,GAAS,YACnB,QAAQ,MAAM,kHAGf,MAAO,OAKT,GAAa,UAAU,eAAiB,GAExC,gBAAuB,GAAK,CAC3B,YAAY,EAAU,EAAU,CAC/B,MAAM,EAAU,GAChB,KAAK,KAAO,YAKd,GAAS,UAAU,WAAa,GAehC,gBAA6B,GAAS,CACrC,YAAY,EAAY,CACvB,QACA,KAAK,KAAO,iBACZ,KAAK,MAAQ,GAAI,IAAM,UACvB,KAAK,IAAM,KACX,KAAK,SAAW,KAChB,KAAK,KAAO,EACZ,KAAK,gBAAkB,GACvB,KAAK,UAAU,GAGhB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,MAAM,KAAK,EAAO,OACvB,KAAK,IAAM,EAAO,IAClB,KAAK,SAAW,EAAO,SACvB,KAAK,KAAO,EAAO,KACnB,KAAK,gBAAkB,EAAO,gBACvB,MAKT,GAAe,UAAU,iBAAmB,GAE5C,GAAM,IAA8B,GAAI,IAElC,GAAoB,GAAI,IAExB,GAAuB,GAAI,IAE3B,GAA2B,GAAI,GAErC,gBAAqB,GAAS,CAC7B,YAAY,EAAW,GAAI,IAAkB,EAAW,GAAI,IAAkB,CAC7E,QACA,KAAK,KAAO,SACZ,KAAK,SAAW,EAChB,KAAK,SAAW,EAChB,KAAK,qBAGN,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,SAAW,EAAO,SACvB,KAAK,SAAW,EAAO,SAChB,KAGR,QAAQ,EAAW,EAAY,CAC9B,GAAM,GAAW,KAAK,SAChB,EAAc,KAAK,YACnB,EAAY,EAAU,OAAO,OAAO,UACpC,EAAY,EAAS,UAS3B,GAPI,EAAS,iBAAmB,MAAM,EAAS,wBAE/C,GAAQ,KAAK,EAAS,gBAEtB,GAAQ,aAAa,GAErB,GAAQ,QAAU,EACd,EAAU,IAAI,iBAAiB,MAAa,GAAO,OAEvD,GAAe,KAAK,GAAa,SAEjC,GAAK,KAAK,EAAU,KAAK,aAAa,IAEtC,GAAM,GAAiB,EAAc,OAAK,MAAM,EAAI,KAAK,MAAM,EAAI,KAAK,MAAM,GAAK,GAC7E,EAAmB,EAAiB,EAE1C,GAAI,EAAS,iBAAkB,CAC9B,GAAM,GAAQ,EAAS,MAEjB,EAAoB,AADP,EAAS,WACS,SAErC,GAAI,IAAU,KAAM,CACnB,GAAM,GAAQ,KAAK,IAAI,EAAG,EAAU,OAC9B,EAAM,KAAK,IAAI,EAAM,MAAO,EAAU,MAAQ,EAAU,OAE9D,OAAS,GAAI,EAAO,EAAK,EAAK,EAAI,EAAI,IAAK,CAC1C,GAAM,GAAI,EAAM,KAAK,GAErB,GAAY,oBAAoB,EAAmB,GAEnD,GAAU,GAAa,EAAG,EAAkB,EAAa,EAAW,EAAY,WAE3E,CACN,GAAM,GAAQ,KAAK,IAAI,EAAG,EAAU,OAC9B,EAAM,KAAK,IAAI,EAAkB,MAAO,EAAU,MAAQ,EAAU,OAE1E,OAAS,GAAI,EAAO,EAAI,EAAK,EAAI,EAAG,IACnC,GAAY,oBAAoB,EAAmB,GAEnD,GAAU,GAAa,EAAG,EAAkB,EAAa,EAAW,EAAY,WAIlF,SAAQ,MAAM,+FAIhB,oBAAqB,CACpB,GAAM,GAAW,KAAK,SAEtB,GAAI,EAAS,iBAAkB,CAC9B,GAAM,GAAkB,EAAS,gBAC3B,EAAO,OAAO,KAAK,GAEzB,GAAI,EAAK,OAAS,EAAG,CACpB,GAAM,GAAiB,EAAgB,EAAK,IAE5C,GAAI,IAAmB,OAAW,CACjC,KAAK,sBAAwB,GAC7B,KAAK,sBAAwB,GAE7B,OAAS,GAAI,EAAG,EAAK,EAAe,OAAQ,EAAI,EAAI,IAAK,CACxD,GAAM,GAAO,EAAe,GAAG,MAAQ,OAAO,GAC9C,KAAK,sBAAsB,KAAK,GAChC,KAAK,sBAAsB,GAAQ,SAIhC,CACN,GAAM,GAAe,EAAS,aAE9B,AAAI,IAAiB,QAAa,EAAa,OAAS,GACvD,QAAQ,MAAM,0GAOlB,GAAO,UAAU,SAAW,GAE5B,YAAmB,EAAO,EAAO,EAAkB,EAAa,EAAW,EAAY,EAAQ,CAC9F,GAAM,GAAqB,GAAK,kBAAkB,GAElD,GAAI,EAAqB,EAAkB,CAC1C,GAAM,GAAiB,GAAI,GAE3B,GAAK,oBAAoB,EAAO,GAEhC,EAAe,aAAa,GAC5B,GAAM,GAAW,EAAU,IAAI,OAAO,WAAW,GACjD,GAAI,EAAW,EAAU,MAAQ,EAAW,EAAU,IAAK,OAC3D,EAAW,KAAK,CACf,SAAU,EACV,cAAe,KAAK,KAAK,GACzB,MAAO,EACP,MAAO,EACP,KAAM,KACN,OAAQ,KAKX,gBAA2B,GAAQ,CAClC,YAAY,EAAO,EAAS,EAAO,EAAO,EAAW,EAAW,EAAQ,EAAM,EAAY,CACzF,MAAM,EAAO,EAAS,EAAO,EAAO,EAAW,EAAW,EAAQ,EAAM,GACxE,KAAK,OAAS,IAAW,OAAY,EAAS,GAC9C,KAAK,UAAY,IAAc,OAAY,EAAY,GACvD,KAAK,UAAY,IAAc,OAAY,EAAY,GACvD,KAAK,gBAAkB,GACvB,GAAM,GAAQ,KAEd,YAAuB,CACtB,EAAM,YAAc,GACpB,EAAM,0BAA0B,GAGjC,AAAI,6BAA+B,IAClC,EAAM,0BAA0B,GAIlC,OAAQ,CACP,MAAO,IAAI,MAAK,YAAY,KAAK,OAAO,KAAK,MAG9C,QAAS,CACR,GAAM,GAAQ,KAAK,MAGnB,AAAI,AAF2B,6BAA+B,KAEhC,IAAS,EAAM,YAAc,EAAM,mBAChE,MAAK,YAAc,KAMtB,GAAa,UAAU,eAAiB,GAExC,gBAAgC,GAAQ,CACvC,YAAY,EAAS,EAAO,EAAQ,EAAQ,EAAM,EAAS,EAAO,EAAO,EAAW,EAAW,EAAY,EAAU,CACpH,MAAM,KAAM,EAAS,EAAO,EAAO,EAAW,EAAW,EAAQ,EAAM,EAAY,GACnF,KAAK,MAAQ,CACZ,MAAO,EACP,OAAQ,GAET,KAAK,QAAU,EAGf,KAAK,MAAQ,GAGb,KAAK,gBAAkB,IAKzB,GAAkB,UAAU,oBAAsB,GAElD,gBAA4B,GAAQ,CACnC,YAAY,EAAQ,EAAS,EAAO,EAAO,EAAW,EAAW,EAAQ,EAAM,EAAY,CAC1F,MAAM,EAAQ,EAAS,EAAO,EAAO,EAAW,EAAW,EAAQ,EAAM,GACzE,KAAK,YAAc,IAKrB,GAAc,UAAU,gBAAkB,GAE1C,gBAA2B,GAAQ,CAClC,YAAY,EAAO,EAAQ,EAAM,EAAS,EAAO,EAAO,EAAW,EAAW,EAAY,EAAQ,CAGjG,GAFA,EAAS,IAAW,OAAY,EAAS,GAErC,IAAW,IAAe,IAAW,GACxC,KAAM,IAAI,OAAM,oFAGjB,AAAI,IAAS,QAAa,IAAW,IAAa,GAAO,IACrD,IAAS,QAAa,IAAW,IAAoB,GAAO,IAChE,MAAM,KAAM,EAAS,EAAO,EAAO,EAAW,EAAW,EAAQ,EAAM,GACvE,KAAK,MAAQ,CACZ,MAAO,EACP,OAAQ,GAET,KAAK,UAAY,IAAc,OAAY,EAAY,GACvD,KAAK,UAAY,IAAc,OAAY,EAAY,GACvD,KAAK,MAAQ,GACb,KAAK,gBAAkB,IAKzB,GAAa,UAAU,eAAiB,GAExC,gBAA6B,GAAe,CAC3C,YAAY,EAAS,EAAG,EAAW,EAAG,EAAa,EAAG,EAAc,KAAK,GAAK,EAAG,CAChF,QACA,KAAK,KAAO,iBACZ,KAAK,WAAa,CACjB,OAAQ,EACR,SAAU,EACV,WAAY,EACZ,YAAa,GAEd,EAAW,KAAK,IAAI,EAAG,GAEvB,GAAM,GAAU,GACV,EAAW,GACX,EAAU,GACV,EAAM,GAEN,EAAS,GAAI,GACb,EAAK,GAAI,IAEf,EAAS,KAAK,EAAG,EAAG,GACpB,EAAQ,KAAK,EAAG,EAAG,GACnB,EAAI,KAAK,GAAK,IAEd,OAAS,GAAI,EAAG,EAAI,EAAG,GAAK,EAAU,IAAK,GAAK,EAAG,CAClD,GAAM,GAAU,EAAa,EAAI,EAAW,EAE5C,EAAO,EAAI,EAAS,KAAK,IAAI,GAC7B,EAAO,EAAI,EAAS,KAAK,IAAI,GAC7B,EAAS,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,GAEzC,EAAQ,KAAK,EAAG,EAAG,GAEnB,EAAG,EAAK,GAAS,GAAK,EAAS,GAAK,EACpC,EAAG,EAAK,GAAS,EAAI,GAAK,EAAS,GAAK,EACxC,EAAI,KAAK,EAAG,EAAG,EAAG,GAInB,OAAS,GAAI,EAAG,GAAK,EAAU,IAC9B,EAAQ,KAAK,EAAG,EAAI,EAAG,GAIxB,KAAK,SAAS,GACd,KAAK,aAAa,WAAY,GAAI,IAAuB,EAAU,IACnE,KAAK,aAAa,SAAU,GAAI,IAAuB,EAAS,IAChE,KAAK,aAAa,KAAM,GAAI,IAAuB,EAAK,UAGlD,UAAS,EAAM,CACrB,MAAO,IAAI,IAAe,EAAK,OAAQ,EAAK,SAAU,EAAK,WAAY,EAAK,cAK9E,gBAA+B,GAAe,CAC7C,YAAY,EAAY,EAAG,EAAe,EAAG,EAAS,EAAG,EAAiB,EAAG,EAAiB,EAAG,EAAY,GAAO,EAAa,EAAG,EAAc,KAAK,GAAK,EAAG,CAC9J,QACA,KAAK,KAAO,mBACZ,KAAK,WAAa,CACjB,UAAW,EACX,aAAc,EACd,OAAQ,EACR,eAAgB,EAChB,eAAgB,EAChB,UAAW,EACX,WAAY,EACZ,YAAa,GAEd,GAAM,GAAQ,KACd,EAAiB,KAAK,MAAM,GAC5B,EAAiB,KAAK,MAAM,GAE5B,GAAM,GAAU,GACV,EAAW,GACX,EAAU,GACV,EAAM,GAER,EAAQ,EACN,EAAa,GACb,EAAa,EAAS,EACxB,EAAa,EAEjB,IAEI,IAAc,IACb,GAAY,GAAG,EAAY,IAC3B,EAAe,GAAG,EAAY,KAInC,KAAK,SAAS,GACd,KAAK,aAAa,WAAY,GAAI,IAAuB,EAAU,IACnE,KAAK,aAAa,SAAU,GAAI,IAAuB,EAAS,IAChE,KAAK,aAAa,KAAM,GAAI,IAAuB,EAAK,IAExD,YAAyB,CACxB,GAAM,GAAS,GAAI,GACb,EAAS,GAAI,GACf,EAAa,EAEX,EAAS,GAAe,GAAa,EAE3C,OAAS,GAAI,EAAG,GAAK,EAAgB,IAAK,CACzC,GAAM,GAAW,GACX,EAAI,EAAI,EAER,EAAS,EAAK,GAAe,GAAa,EAEhD,OAAS,IAAI,EAAG,IAAK,EAAgB,KAAK,CACzC,GAAM,GAAI,GAAI,EACR,EAAQ,EAAI,EAAc,EAC1B,EAAW,KAAK,IAAI,GACpB,EAAW,KAAK,IAAI,GAE1B,EAAO,EAAI,EAAS,EACpB,EAAO,EAAI,CAAC,EAAI,EAAS,EACzB,EAAO,EAAI,EAAS,EACpB,EAAS,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,GAEzC,EAAO,IAAI,EAAU,EAAO,GAAU,YACtC,EAAQ,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,GAExC,EAAI,KAAK,EAAG,EAAI,GAEhB,EAAS,KAAK,KAIf,EAAW,KAAK,GAIjB,OAAS,GAAI,EAAG,EAAI,EAAgB,IACnC,OAAS,GAAI,EAAG,EAAI,EAAgB,IAAK,CAExC,GAAM,GAAI,EAAW,GAAG,GAClB,EAAI,EAAW,EAAI,GAAG,GACtB,GAAI,EAAW,EAAI,GAAG,EAAI,GAC1B,EAAI,EAAW,GAAG,EAAI,GAE5B,EAAQ,KAAK,EAAG,EAAG,GACnB,EAAQ,KAAK,EAAG,GAAG,GAEnB,GAAc,EAKhB,EAAM,SAAS,EAAY,EAAY,GAEvC,GAAc,EAGf,WAAqB,EAAK,CAEzB,GAAM,GAAmB,EACnB,EAAK,GAAI,IACT,EAAS,GAAI,GACf,EAAa,EACX,EAAS,IAAQ,GAAO,EAAY,EACpC,EAAO,IAAQ,GAAO,EAAI,GAIhC,OAAS,IAAI,EAAG,IAAK,EAAgB,KAEpC,EAAS,KAAK,EAAG,EAAa,EAAM,GAEpC,EAAQ,KAAK,EAAG,EAAM,GAEtB,EAAI,KAAK,GAAK,IAEd,IAID,GAAM,GAAiB,EAEvB,OAAS,IAAI,EAAG,IAAK,EAAgB,KAAK,CAEzC,GAAM,GAAQ,AADJ,GAAI,EACI,EAAc,EAC1B,EAAW,KAAK,IAAI,GACpB,EAAW,KAAK,IAAI,GAE1B,EAAO,EAAI,EAAS,EACpB,EAAO,EAAI,EAAa,EACxB,EAAO,EAAI,EAAS,EACpB,EAAS,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,GAEzC,EAAQ,KAAK,EAAG,EAAM,GAEtB,EAAG,EAAI,EAAW,GAAM,GACxB,EAAG,EAAI,EAAW,GAAM,EAAO,GAC/B,EAAI,KAAK,EAAG,EAAG,EAAG,GAElB,IAID,OAAS,IAAI,EAAG,GAAI,EAAgB,KAAK,CACxC,GAAM,GAAI,EAAmB,GACvB,EAAI,EAAiB,GAE3B,AAAI,IAAQ,GAEX,EAAQ,KAAK,EAAG,EAAI,EAAG,GAGvB,EAAQ,KAAK,EAAI,EAAG,EAAG,GAGxB,GAAc,EAIf,EAAM,SAAS,EAAY,EAAY,IAAQ,GAAO,EAAI,GAE1D,GAAc,SAIT,UAAS,EAAM,CACrB,MAAO,IAAI,IAAiB,EAAK,UAAW,EAAK,aAAc,EAAK,OAAQ,EAAK,eAAgB,EAAK,eAAgB,EAAK,UAAW,EAAK,WAAY,EAAK,cAK9J,gBAA2B,GAAiB,CAC3C,YAAY,EAAS,EAAG,EAAS,EAAG,EAAiB,EAAG,EAAiB,EAAG,EAAY,GAAO,EAAa,EAAG,EAAc,KAAK,GAAK,EAAG,CACzI,MAAM,EAAG,EAAQ,EAAQ,EAAgB,EAAgB,EAAW,EAAY,GAChF,KAAK,KAAO,eACZ,KAAK,WAAa,CACjB,OAAQ,EACR,OAAQ,EACR,eAAgB,EAChB,eAAgB,EAChB,UAAW,EACX,WAAY,EACZ,YAAa,SAIR,UAAS,EAAM,CACrB,MAAO,IAAI,IAAa,EAAK,OAAQ,EAAK,OAAQ,EAAK,eAAgB,EAAK,eAAgB,EAAK,UAAW,EAAK,WAAY,EAAK,cAKpI,gBAAiC,GAAe,CAC/C,YAAY,EAAW,GAAI,EAAU,GAAI,EAAS,EAAG,EAAS,EAAG,CAChE,QACA,KAAK,KAAO,qBACZ,KAAK,WAAa,CACjB,SAAU,EACV,QAAS,EACT,OAAQ,EACR,OAAQ,GAGT,GAAM,GAAe,GACf,EAAW,GAEjB,EAAU,GAEV,EAAY,GAEZ,IAEA,KAAK,aAAa,WAAY,GAAI,IAAuB,EAAc,IACvE,KAAK,aAAa,SAAU,GAAI,IAAuB,EAAa,QAAS,IAC7E,KAAK,aAAa,KAAM,GAAI,IAAuB,EAAU,IAE7D,AAAI,IAAW,EACd,KAAK,uBAEL,KAAK,mBAIN,WAAmB,EAAQ,CAC1B,GAAM,GAAI,GAAI,GACR,EAAI,GAAI,GACR,EAAI,GAAI,GAEd,OAAS,GAAI,EAAG,EAAI,EAAQ,OAAQ,GAAK,EAExC,EAAiB,EAAQ,EAAI,GAAI,GACjC,EAAiB,EAAQ,EAAI,GAAI,GACjC,EAAiB,EAAQ,EAAI,GAAI,GAEjC,EAAc,EAAG,EAAG,EAAG,GAIzB,WAAuB,EAAG,EAAG,EAAG,EAAQ,CACvC,GAAM,GAAO,EAAS,EAEhB,EAAI,GAEV,OAAS,GAAI,EAAG,GAAK,EAAM,IAAK,CAC/B,EAAE,GAAK,GACP,GAAM,GAAK,EAAE,QAAQ,KAAK,EAAG,EAAI,GAC3B,EAAK,EAAE,QAAQ,KAAK,EAAG,EAAI,GAC3B,EAAO,EAAO,EAEpB,OAAS,IAAI,EAAG,IAAK,EAAM,KAC1B,AAAI,KAAM,GAAK,IAAM,EACpB,EAAE,GAAG,IAAK,EAEV,EAAE,GAAG,IAAK,EAAG,QAAQ,KAAK,EAAI,GAAI,GAMrC,OAAS,GAAI,EAAG,EAAI,EAAM,IACzB,OAAS,GAAI,EAAG,EAAI,EAAK,GAAO,GAAK,EAAG,IAAK,CAC5C,GAAM,GAAI,KAAK,MAAM,EAAI,GAEzB,AAAI,EAAI,GAAM,EACb,GAAW,EAAE,GAAG,EAAI,IACpB,EAAW,EAAE,EAAI,GAAG,IACpB,EAAW,EAAE,GAAG,KAEhB,GAAW,EAAE,GAAG,EAAI,IACpB,EAAW,EAAE,EAAI,GAAG,EAAI,IACxB,EAAW,EAAE,EAAI,GAAG,MAMxB,WAAqB,EAAQ,CAC5B,GAAM,GAAS,GAAI,GAEnB,OAAS,GAAI,EAAG,EAAI,EAAa,OAAQ,GAAK,EAC7C,EAAO,EAAI,EAAa,EAAI,GAC5B,EAAO,EAAI,EAAa,EAAI,GAC5B,EAAO,EAAI,EAAa,EAAI,GAC5B,EAAO,YAAY,eAAe,GAClC,EAAa,EAAI,GAAK,EAAO,EAC7B,EAAa,EAAI,GAAK,EAAO,EAC7B,EAAa,EAAI,GAAK,EAAO,EAI/B,YAAuB,CACtB,GAAM,GAAS,GAAI,GAEnB,OAAS,GAAI,EAAG,EAAI,EAAa,OAAQ,GAAK,EAAG,CAChD,EAAO,EAAI,EAAa,EAAI,GAC5B,EAAO,EAAI,EAAa,EAAI,GAC5B,EAAO,EAAI,EAAa,EAAI,GAC5B,GAAM,GAAI,EAAQ,GAAU,EAAI,KAAK,GAAK,GACpC,EAAI,EAAY,GAAU,KAAK,GAAK,GAC1C,EAAS,KAAK,EAAG,EAAI,GAGtB,IACA,IAGD,YAAuB,CAEtB,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,GAAK,EAAG,CAE5C,GAAM,GAAK,EAAS,EAAI,GAClB,EAAK,EAAS,EAAI,GAClB,EAAK,EAAS,EAAI,GAClB,EAAM,KAAK,IAAI,EAAI,EAAI,GACvB,EAAM,KAAK,IAAI,EAAI,EAAI,GAE7B,AAAI,EAAM,IAAO,EAAM,IAClB,GAAK,IAAK,GAAS,EAAI,IAAM,GAC7B,EAAK,IAAK,GAAS,EAAI,IAAM,GAC7B,EAAK,IAAK,GAAS,EAAI,IAAM,KAKpC,WAAoB,EAAQ,CAC3B,EAAa,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,GAG9C,WAA0B,EAAO,EAAQ,CACxC,GAAM,GAAS,EAAQ,EACvB,EAAO,EAAI,EAAS,EAAS,GAC7B,EAAO,EAAI,EAAS,EAAS,GAC7B,EAAO,EAAI,EAAS,EAAS,GAG9B,YAAsB,CACrB,GAAM,GAAI,GAAI,GACR,EAAI,GAAI,GACR,EAAI,GAAI,GACR,EAAW,GAAI,GACf,EAAM,GAAI,IACV,EAAM,GAAI,IACV,EAAM,GAAI,IAEhB,OAAS,GAAI,EAAG,EAAI,EAAG,EAAI,EAAa,OAAQ,GAAK,EAAG,GAAK,EAAG,CAC/D,EAAE,IAAI,EAAa,EAAI,GAAI,EAAa,EAAI,GAAI,EAAa,EAAI,IACjE,EAAE,IAAI,EAAa,EAAI,GAAI,EAAa,EAAI,GAAI,EAAa,EAAI,IACjE,EAAE,IAAI,EAAa,EAAI,GAAI,EAAa,EAAI,GAAI,EAAa,EAAI,IACjE,EAAI,IAAI,EAAS,EAAI,GAAI,EAAS,EAAI,IACtC,EAAI,IAAI,EAAS,EAAI,GAAI,EAAS,EAAI,IACtC,EAAI,IAAI,EAAS,EAAI,GAAI,EAAS,EAAI,IACtC,EAAS,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,aAAa,GAC5C,GAAM,GAAM,EAAQ,GACpB,EAAU,EAAK,EAAI,EAAG,EAAG,GACzB,EAAU,EAAK,EAAI,EAAG,EAAG,GACzB,EAAU,EAAK,EAAI,EAAG,EAAG,IAI3B,WAAmB,EAAI,EAAQ,EAAQ,EAAS,CAC/C,AAAI,EAAU,GAAK,EAAG,IAAM,GAC3B,GAAS,GAAU,EAAG,EAAI,GAGvB,EAAO,IAAM,GAAK,EAAO,IAAM,GAClC,GAAS,GAAU,EAAU,EAAI,KAAK,GAAK,IAK7C,WAAiB,EAAQ,CACxB,MAAO,MAAK,MAAM,EAAO,EAAG,CAAC,EAAO,GAIrC,WAAqB,EAAQ,CAC5B,MAAO,MAAK,MAAM,CAAC,EAAO,EAAG,KAAK,KAAK,EAAO,EAAI,EAAO,EAAI,EAAO,EAAI,EAAO,WAI1E,UAAS,EAAM,CACrB,MAAO,IAAI,IAAmB,EAAK,SAAU,EAAK,QAAS,EAAK,OAAQ,EAAK,UAK/E,gBAAmC,GAAmB,CACrD,YAAY,EAAS,EAAG,EAAS,EAAG,CACnC,GAAM,GAAK,GAAI,KAAK,KAAK,IAAM,EACzB,EAAI,EAAI,EACR,EAAW,CACjB,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EACjF,EAAG,CAAC,EAAG,CAAC,EAAG,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EAAG,EAAG,EAAG,EACrC,CAAC,EAAG,CAAC,EAAG,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EACrC,CAAC,EAAG,EAAG,CAAC,EAAG,EAAG,EAAG,CAAC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/B,EAAU,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GACpY,MAAM,EAAU,EAAS,EAAQ,GACjC,KAAK,KAAO,uBACZ,KAAK,WAAa,CACjB,OAAQ,EACR,OAAQ,SAIH,UAAS,EAAM,CACrB,MAAO,IAAI,IAAqB,EAAK,OAAQ,EAAK,SAKpD,GAAM,IAAM,GAAI,GAEV,GAAQ,GAAI,GAEZ,GAAU,GAAI,GAEd,GAAY,GAAI,IAEtB,gBAA4B,GAAe,CAC1C,YAAY,EAAW,KAAM,EAAiB,EAAG,CAChD,QAOA,GANA,KAAK,KAAO,gBACZ,KAAK,WAAa,CACjB,SAAU,EACV,eAAgB,GAGb,IAAa,KAAM,CAEtB,GAAM,GAAY,KAAK,IAAI,GADH,GAElB,EAAe,KAAK,IAAI,GAAU,GAClC,EAAY,EAAS,WACrB,EAAe,EAAS,aAAa,YACrC,EAAa,EAAY,EAAU,MAAQ,EAAa,MACxD,EAAW,CAAC,EAAG,EAAG,GAClB,EAAW,CAAC,IAAK,IAAK,KACtB,EAAS,GAAI,OAAM,GACnB,EAAW,GACX,EAAW,GAEjB,OAAS,GAAI,EAAG,EAAI,EAAY,GAAK,EAAG,CACvC,AAAI,EACH,GAAS,GAAK,EAAU,KAAK,GAC7B,EAAS,GAAK,EAAU,KAAK,EAAI,GACjC,EAAS,GAAK,EAAU,KAAK,EAAI,IAEjC,GAAS,GAAK,EACd,EAAS,GAAK,EAAI,EAClB,EAAS,GAAK,EAAI,GAGnB,GAAM,CACL,IACA,IACA,KACG,GAYJ,GAXA,EAAE,oBAAoB,EAAc,EAAS,IAC7C,EAAE,oBAAoB,EAAc,EAAS,IAC7C,EAAE,oBAAoB,EAAc,EAAS,IAE7C,GAAU,UAAU,IAGpB,EAAO,GAAK,GAAG,KAAK,MAAM,EAAE,EAAI,MAAc,KAAK,MAAM,EAAE,EAAI,MAAc,KAAK,MAAM,EAAE,EAAI,KAC9F,EAAO,GAAK,GAAG,KAAK,MAAM,EAAE,EAAI,MAAc,KAAK,MAAM,EAAE,EAAI,MAAc,KAAK,MAAM,EAAE,EAAI,KAC9F,EAAO,GAAK,GAAG,KAAK,MAAM,EAAE,EAAI,MAAc,KAAK,MAAM,EAAE,EAAI,MAAc,KAAK,MAAM,EAAE,EAAI,KAE1F,IAAO,KAAO,EAAO,IAAM,EAAO,KAAO,EAAO,IAAM,EAAO,KAAO,EAAO,IAK/E,OAAS,GAAI,EAAG,EAAI,EAAG,IAAK,CAE3B,GAAM,GAAS,GAAI,GAAK,EAClB,EAAW,EAAO,GAClB,EAAW,EAAO,GAClB,EAAK,GAAU,EAAS,IACxB,EAAK,GAAU,EAAS,IACxB,EAAO,GAAG,KAAY,IACtB,EAAc,GAAG,KAAY,IAEnC,AAAI,IAAe,IAAY,EAAS,GAGnC,IAAQ,IAAI,EAAS,GAAa,SAAW,GAChD,GAAS,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7B,EAAS,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAG9B,EAAS,GAAe,MACZ,IAAQ,IAEpB,GAAS,GAAQ,CAChB,OAAQ,EAAS,GACjB,OAAQ,EAAS,GACjB,OAAQ,GAAQ,WAOpB,OAAW,KAAO,GACjB,GAAI,EAAS,GAAM,CAClB,GAAM,CACL,SACA,UACG,EAAS,GAEb,GAAI,oBAAoB,EAAc,GAEtC,GAAM,oBAAoB,EAAc,GAExC,EAAS,KAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAChC,EAAS,KAAK,GAAM,EAAG,GAAM,EAAG,GAAM,GAIxC,KAAK,aAAa,WAAY,GAAI,IAAuB,EAAU,MAoCtE,QAAY,CACX,aAAc,CACb,KAAK,KAAO,QACZ,KAAK,mBAAqB,IAK3B,UAAW,CACV,eAAQ,KAAK,6CACN,KAKR,WAAW,EAAG,EAAgB,CAC7B,GAAM,GAAI,KAAK,eAAe,GAC9B,MAAO,MAAK,SAAS,EAAG,GAIzB,UAAU,EAAY,EAAG,CACxB,GAAM,GAAS,GAEf,OAAS,GAAI,EAAG,GAAK,EAAW,IAC/B,EAAO,KAAK,KAAK,SAAS,EAAI,IAG/B,MAAO,GAIR,gBAAgB,EAAY,EAAG,CAC9B,GAAM,GAAS,GAEf,OAAS,GAAI,EAAG,GAAK,EAAW,IAC/B,EAAO,KAAK,KAAK,WAAW,EAAI,IAGjC,MAAO,GAIR,WAAY,CACX,GAAM,GAAU,KAAK,aACrB,MAAO,GAAQ,EAAQ,OAAS,GAIjC,WAAW,EAAY,KAAK,mBAAoB,CAC/C,GAAI,KAAK,iBAAmB,KAAK,gBAAgB,SAAW,EAAY,GAAK,CAAC,KAAK,YAClF,MAAO,MAAK,gBAGb,KAAK,YAAc,GACnB,GAAM,GAAQ,GACV,EACF,EAAO,KAAK,SAAS,GACnB,EAAM,EACV,EAAM,KAAK,GAEX,OAAS,GAAI,EAAG,GAAK,EAAW,IAC/B,EAAU,KAAK,SAAS,EAAI,GAC5B,GAAO,EAAQ,WAAW,GAC1B,EAAM,KAAK,GACX,EAAO,EAGR,YAAK,gBAAkB,EAChB,EAGR,kBAAmB,CAClB,KAAK,YAAc,GACnB,KAAK,aAIN,eAAe,EAAG,EAAU,CAC3B,GAAM,GAAa,KAAK,aACpB,EAAI,EACF,EAAK,EAAW,OAClB,EAEJ,AAAI,EACH,EAAkB,EAElB,EAAkB,EAAI,EAAW,EAAK,GAIvC,GAAI,GAAM,EACR,EAAO,EAAK,EACZ,EAEF,KAAO,GAAO,GAKb,GAJA,EAAI,KAAK,MAAM,EAAO,GAAO,GAAO,GAEpC,EAAa,EAAW,GAAK,EAEzB,EAAa,EAChB,EAAM,EAAI,UACA,EAAa,EACvB,EAAO,EAAI,MACL,CACN,EAAO,EACP,MAMF,GAFA,EAAI,EAEA,EAAW,KAAO,EACrB,MAAO,GAAK,GAAK,GAIlB,GAAM,GAAe,EAAW,GAE1B,EAAgB,AADF,EAAW,EAAI,GACC,EAE9B,EAAmB,GAAkB,GAAgB,EAG3D,MADW,GAAI,GAAoB,GAAK,GAQzC,WAAW,EAAG,EAAgB,CAC7B,GAAM,GAAQ,KACV,EAAK,EAAI,EACT,EAAK,EAAI,EAEb,AAAI,EAAK,GAAG,GAAK,GACb,EAAK,GAAG,GAAK,GACjB,GAAM,GAAM,KAAK,SAAS,GACpB,EAAM,KAAK,SAAS,GACpB,EAAU,GAAmB,GAAI,UAAY,GAAI,IAAY,GAAI,IACvE,SAAQ,KAAK,GAAK,IAAI,GAAK,YACpB,EAGR,aAAa,EAAG,EAAgB,CAC/B,GAAM,GAAI,KAAK,eAAe,GAC9B,MAAO,MAAK,WAAW,EAAG,GAG3B,oBAAoB,EAAU,EAAQ,CAErC,GAAM,GAAS,GAAI,GACb,EAAW,GACX,EAAU,GACV,EAAY,GACZ,EAAM,GAAI,GACV,EAAM,GAAI,IAEhB,OAAS,GAAI,EAAG,GAAK,EAAU,IAAK,CACnC,GAAM,GAAI,EAAI,EACd,EAAS,GAAK,KAAK,aAAa,EAAG,GAAI,IAKxC,EAAQ,GAAK,GAAI,GACjB,EAAU,GAAK,GAAI,GACnB,GAAI,GAAM,OAAO,UACX,EAAK,KAAK,IAAI,EAAS,GAAG,GAC1B,EAAK,KAAK,IAAI,EAAS,GAAG,GAC1B,EAAK,KAAK,IAAI,EAAS,GAAG,GAEhC,AAAI,GAAM,GACT,GAAM,EACN,EAAO,IAAI,EAAG,EAAG,IAGd,GAAM,GACT,GAAM,EACN,EAAO,IAAI,EAAG,EAAG,IAGd,GAAM,GACT,EAAO,IAAI,EAAG,EAAG,GAGlB,EAAI,aAAa,EAAS,GAAI,GAAQ,YACtC,EAAQ,GAAG,aAAa,EAAS,GAAI,GACrC,EAAU,GAAG,aAAa,EAAS,GAAI,EAAQ,IAE/C,OAAS,GAAI,EAAG,GAAK,EAAU,IAAK,CAKnC,GAJA,EAAQ,GAAK,EAAQ,EAAI,GAAG,QAC5B,EAAU,GAAK,EAAU,EAAI,GAAG,QAChC,EAAI,aAAa,EAAS,EAAI,GAAI,EAAS,IAEvC,EAAI,SAAW,OAAO,QAAS,CAClC,EAAI,YACJ,GAAM,GAAQ,KAAK,KAAK,GAAM,EAAS,EAAI,GAAG,IAAI,EAAS,IAAK,GAAI,IAEpE,EAAQ,GAAG,aAAa,EAAI,iBAAiB,EAAK,IAGnD,EAAU,GAAG,aAAa,EAAS,GAAI,EAAQ,IAIhD,GAAI,IAAW,GAAM,CACpB,GAAI,GAAQ,KAAK,KAAK,GAAM,EAAQ,GAAG,IAAI,EAAQ,IAAY,GAAI,IACnE,GAAS,EAEL,EAAS,GAAG,IAAI,EAAI,aAAa,EAAQ,GAAI,EAAQ,KAAc,GACtE,GAAQ,CAAC,GAGV,OAAS,GAAI,EAAG,GAAK,EAAU,IAE9B,EAAQ,GAAG,aAAa,EAAI,iBAAiB,EAAS,GAAI,EAAQ,IAClE,EAAU,GAAG,aAAa,EAAS,GAAI,EAAQ,IAIjD,MAAO,CACN,SAAU,EACV,QAAS,EACT,UAAW,GAIb,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,MAGpC,KAAK,EAAQ,CACZ,YAAK,mBAAqB,EAAO,mBAC1B,KAGR,QAAS,CACR,GAAM,GAAO,CACZ,SAAU,CACT,QAAS,IACT,KAAM,QACN,UAAW,iBAGb,SAAK,mBAAqB,KAAK,mBAC/B,EAAK,KAAO,KAAK,KACV,EAGR,SAAS,EAAM,CACd,YAAK,mBAAqB,EAAK,mBACxB,MAKT,gBAA2B,GAAM,CAChC,YAAY,EAAK,EAAG,EAAK,EAAG,EAAU,EAAG,EAAU,EAAG,EAAc,EAAG,EAAY,KAAK,GAAK,EAAG,EAAa,GAAO,EAAY,EAAG,CAClI,QACA,KAAK,KAAO,eACZ,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,QAAU,EACf,KAAK,QAAU,EACf,KAAK,YAAc,EACnB,KAAK,UAAY,EACjB,KAAK,WAAa,EAClB,KAAK,UAAY,EAGlB,SAAS,EAAG,EAAgB,CAC3B,GAAM,GAAQ,GAAkB,GAAI,IAC9B,EAAQ,KAAK,GAAK,EACpB,EAAa,KAAK,UAAY,KAAK,YACjC,EAAa,KAAK,IAAI,GAAc,OAAO,QAEjD,KAAO,EAAa,GAAG,GAAc,EAErC,KAAO,EAAa,GAAO,GAAc,EAEzC,AAAI,EAAa,OAAO,SACvB,CAAI,EACH,EAAa,EAEb,EAAa,GAIX,KAAK,aAAe,IAAQ,CAAC,GAChC,CAAI,IAAe,EAClB,EAAa,CAAC,EAEd,EAAa,EAAa,GAI5B,GAAM,GAAQ,KAAK,YAAc,EAAI,EACjC,EAAI,KAAK,GAAK,KAAK,QAAU,KAAK,IAAI,GACtC,EAAI,KAAK,GAAK,KAAK,QAAU,KAAK,IAAI,GAE1C,GAAI,KAAK,YAAc,EAAG,CACzB,GAAM,GAAM,KAAK,IAAI,KAAK,WACpB,EAAM,KAAK,IAAI,KAAK,WACpB,EAAK,EAAI,KAAK,GACd,EAAK,EAAI,KAAK,GAEpB,EAAI,EAAK,EAAM,EAAK,EAAM,KAAK,GAC/B,EAAI,EAAK,EAAM,EAAK,EAAM,KAAK,GAGhC,MAAO,GAAM,IAAI,EAAG,GAGrB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,GAAK,EAAO,GACjB,KAAK,GAAK,EAAO,GACjB,KAAK,QAAU,EAAO,QACtB,KAAK,QAAU,EAAO,QACtB,KAAK,YAAc,EAAO,YAC1B,KAAK,UAAY,EAAO,UACxB,KAAK,WAAa,EAAO,WACzB,KAAK,UAAY,EAAO,UACjB,KAGR,QAAS,CACR,GAAM,GAAO,MAAM,SACnB,SAAK,GAAK,KAAK,GACf,EAAK,GAAK,KAAK,GACf,EAAK,QAAU,KAAK,QACpB,EAAK,QAAU,KAAK,QACpB,EAAK,YAAc,KAAK,YACxB,EAAK,UAAY,KAAK,UACtB,EAAK,WAAa,KAAK,WACvB,EAAK,UAAY,KAAK,UACf,EAGR,SAAS,EAAM,CACd,aAAM,SAAS,GACf,KAAK,GAAK,EAAK,GACf,KAAK,GAAK,EAAK,GACf,KAAK,QAAU,EAAK,QACpB,KAAK,QAAU,EAAK,QACpB,KAAK,YAAc,EAAK,YACxB,KAAK,UAAY,EAAK,UACtB,KAAK,WAAa,EAAK,WACvB,KAAK,UAAY,EAAK,UACf,MAKT,GAAa,UAAU,eAAiB,GAExC,gBAAuB,GAAa,CACnC,YAAY,EAAI,EAAI,EAAS,EAAa,EAAW,EAAY,CAChE,MAAM,EAAI,EAAI,EAAS,EAAS,EAAa,EAAW,GACxD,KAAK,KAAO,YAKd,GAAS,UAAU,WAAa,GAqBhC,aAAqB,CACpB,GAAI,GAAK,EACP,EAAK,EACL,EAAK,EACL,EAAK,EAUP,WAAc,EAAI,EAAI,EAAI,EAAI,CAC7B,EAAK,EACL,EAAK,EACL,EAAK,GAAK,EAAK,EAAI,EAAK,EAAI,EAAK,EACjC,EAAK,EAAI,EAAK,EAAI,EAAK,EAAK,EAG7B,MAAO,CACN,eAAgB,SAAU,EAAI,EAAI,EAAI,EAAI,EAAS,CAClD,EAAK,EAAI,EAAI,EAAW,GAAK,GAAK,EAAW,GAAK,KAEnD,yBAA0B,SAAU,EAAI,EAAI,EAAI,EAAI,EAAK,EAAK,EAAK,CAElE,GAAI,GAAM,GAAK,GAAM,EAAO,GAAK,GAAO,GAAM,GAAQ,GAAK,GAAM,EAC7D,EAAM,GAAK,GAAM,EAAO,GAAK,GAAO,GAAM,GAAQ,GAAK,GAAM,EAEjE,GAAM,EACN,GAAM,EACN,EAAK,EAAI,EAAI,EAAI,IAElB,KAAM,SAAU,EAAG,CAClB,GAAM,GAAK,EAAI,EACT,EAAK,EAAK,EAChB,MAAO,GAAK,EAAK,EAAI,EAAK,EAAK,EAAK,IAMvC,GAAM,IAAM,GAAI,GACV,GAAK,GAAI,IACZ,GAAK,GAAI,IACT,GAAK,GAAI,IAEZ,gBAA+B,GAAM,CACpC,YAAY,EAAS,GAAI,EAAS,GAAO,EAAY,cAAe,EAAU,GAAK,CAClF,QACA,KAAK,KAAO,mBACZ,KAAK,OAAS,EACd,KAAK,OAAS,EACd,KAAK,UAAY,EACjB,KAAK,QAAU,EAGhB,SAAS,EAAG,EAAiB,GAAI,GAAW,CAC3C,GAAM,GAAQ,EACR,EAAS,KAAK,OACd,EAAI,EAAO,OACX,EAAK,GAAK,MAAK,OAAS,EAAI,IAAM,EACpC,EAAW,KAAK,MAAM,GACtB,EAAS,EAAI,EAEjB,AAAI,KAAK,OACR,GAAY,EAAW,EAAI,EAAK,MAAK,MAAM,KAAK,IAAI,GAAY,GAAK,GAAK,EAChE,IAAW,GAAK,IAAa,EAAI,GAC3C,GAAW,EAAI,EACf,EAAS,GAGV,GAAI,GAAI,EAER,AAAI,KAAK,QAAU,EAAW,EAC7B,EAAK,EAAQ,GAAW,GAAK,GAG7B,IAAI,WAAW,EAAO,GAAI,EAAO,IAAI,IAAI,EAAO,IAChD,EAAK,IAGN,GAAM,GAAK,EAAO,EAAW,GACvB,EAAK,EAAQ,GAAW,GAAK,GAUnC,GARA,AAAI,KAAK,QAAU,EAAW,EAAI,EACjC,EAAK,EAAQ,GAAW,GAAK,GAG7B,IAAI,WAAW,EAAO,EAAI,GAAI,EAAO,EAAI,IAAI,IAAI,EAAO,EAAI,IAC5D,EAAK,IAGF,KAAK,YAAc,eAAiB,KAAK,YAAc,UAAW,CAErE,GAAM,GAAM,KAAK,YAAc,UAAY,GAAM,IAC7C,EAAM,KAAK,IAAI,EAAG,kBAAkB,GAAK,GACzC,EAAM,KAAK,IAAI,EAAG,kBAAkB,GAAK,GACzC,EAAM,KAAK,IAAI,EAAG,kBAAkB,GAAK,GAE7C,AAAI,EAAM,MAAM,GAAM,GAClB,EAAM,MAAM,GAAM,GAClB,EAAM,MAAM,GAAM,GACtB,GAAG,yBAAyB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAK,EAAK,GAC9D,GAAG,yBAAyB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAK,EAAK,GAC9D,GAAG,yBAAyB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAK,EAAK,OACxD,AAAI,MAAK,YAAc,cAC7B,IAAG,eAAe,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAK,SAC/C,GAAG,eAAe,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAK,SAC/C,GAAG,eAAe,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAK,UAGhD,SAAM,IAAI,GAAG,KAAK,GAAS,GAAG,KAAK,GAAS,GAAG,KAAK,IAC7C,EAGR,KAAK,EAAQ,CACZ,MAAM,KAAK,GACX,KAAK,OAAS,GAEd,OAAS,GAAI,EAAG,EAAI,EAAO,OAAO,OAAQ,EAAI,EAAG,IAAK,CACrD,GAAM,GAAQ,EAAO,OAAO,GAC5B,KAAK,OAAO,KAAK,EAAM,SAGxB,YAAK,OAAS,EAAO,OACrB,KAAK,UAAY,EAAO,UACxB,KAAK,QAAU,EAAO,QACf,KAGR,QAAS,CACR,GAAM,GAAO,MAAM,SACnB,EAAK,OAAS,GAEd,OAAS,GAAI,EAAG,EAAI,KAAK,OAAO,OAAQ,EAAI,EAAG,IAAK,CACnD,GAAM,GAAQ,KAAK,OAAO,GAC1B,EAAK,OAAO,KAAK,EAAM,WAGxB,SAAK,OAAS,KAAK,OACnB,EAAK,UAAY,KAAK,UACtB,EAAK,QAAU,KAAK,QACb,EAGR,SAAS,EAAM,CACd,MAAM,SAAS,GACf,KAAK,OAAS,GAEd,OAAS,GAAI,EAAG,EAAI,EAAK,OAAO,OAAQ,EAAI,EAAG,IAAK,CACnD,GAAM,GAAQ,EAAK,OAAO,GAC1B,KAAK,OAAO,KAAK,GAAI,KAAU,UAAU,IAG1C,YAAK,OAAS,EAAK,OACnB,KAAK,UAAY,EAAK,UACtB,KAAK,QAAU,EAAK,QACb,MAKT,GAAiB,UAAU,mBAAqB,GAMhD,YAAoB,EAAG,EAAI,EAAI,EAAI,EAAI,CACtC,GAAM,GAAM,GAAK,GAAM,GACjB,EAAM,GAAK,GAAM,GACjB,EAAK,EAAI,EACT,EAAK,EAAI,EACf,MAAQ,GAAI,EAAK,EAAI,EAAK,EAAK,GAAM,EAAM,IAAK,EAAK,EAAI,EAAK,EAAI,EAAK,GAAM,EAAK,EAAK,EAAI,EAI5F,YAA2B,EAAG,EAAG,CAChC,GAAM,GAAI,EAAI,EACd,MAAO,GAAI,EAAI,EAGhB,YAA2B,EAAG,EAAG,CAChC,MAAO,GAAK,GAAI,GAAK,EAAI,EAG1B,YAA2B,EAAG,EAAG,CAChC,MAAO,GAAI,EAAI,EAGhB,YAAyB,EAAG,EAAI,EAAI,EAAI,CACvC,MAAO,IAAkB,EAAG,GAAM,GAAkB,EAAG,GAAM,GAAkB,EAAG,GAInF,YAAuB,EAAG,EAAG,CAC5B,GAAM,GAAI,EAAI,EACd,MAAO,GAAI,EAAI,EAAI,EAGpB,YAAuB,EAAG,EAAG,CAC5B,GAAM,GAAI,EAAI,EACd,MAAO,GAAI,EAAI,EAAI,EAAI,EAGxB,YAAuB,EAAG,EAAG,CAC5B,MAAO,GAAK,GAAI,GAAK,EAAI,EAAI,EAG9B,YAAuB,EAAG,EAAG,CAC5B,MAAO,GAAI,EAAI,EAAI,EAGpB,YAAqB,EAAG,EAAI,EAAI,EAAI,EAAI,CACvC,MAAO,IAAc,EAAG,GAAM,GAAc,EAAG,GAAM,GAAc,EAAG,GAAM,GAAc,EAAG,GAG9F,gBAA+B,GAAM,CACpC,YAAY,EAAK,GAAI,IAAW,EAAK,GAAI,IAAW,EAAK,GAAI,IAAW,EAAK,GAAI,IAAW,CAC3F,QACA,KAAK,KAAO,mBACZ,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EAGX,SAAS,EAAG,EAAiB,GAAI,IAAW,CAC3C,GAAM,GAAQ,EACR,EAAK,KAAK,GACb,EAAK,KAAK,GACV,EAAK,KAAK,GACV,EAAK,KAAK,GACb,SAAM,IAAI,GAAY,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAY,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC/E,EAGR,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,GAAG,KAAK,EAAO,IACpB,KAAK,GAAG,KAAK,EAAO,IACpB,KAAK,GAAG,KAAK,EAAO,IACpB,KAAK,GAAG,KAAK,EAAO,IACb,KAGR,QAAS,CACR,GAAM,GAAO,MAAM,SACnB,SAAK,GAAK,KAAK,GAAG,UAClB,EAAK,GAAK,KAAK,GAAG,UAClB,EAAK,GAAK,KAAK,GAAG,UAClB,EAAK,GAAK,KAAK,GAAG,UACX,EAGR,SAAS,EAAM,CACd,aAAM,SAAS,GACf,KAAK,GAAG,UAAU,EAAK,IACvB,KAAK,GAAG,UAAU,EAAK,IACvB,KAAK,GAAG,UAAU,EAAK,IACvB,KAAK,GAAG,UAAU,EAAK,IAChB,MAKT,GAAiB,UAAU,mBAAqB,GAEhD,gBAAgC,GAAM,CACrC,YAAY,EAAK,GAAI,GAAW,EAAK,GAAI,GAAW,EAAK,GAAI,GAAW,EAAK,GAAI,GAAW,CAC3F,QACA,KAAK,KAAO,oBACZ,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EAGX,SAAS,EAAG,EAAiB,GAAI,GAAW,CAC3C,GAAM,GAAQ,EACR,EAAK,KAAK,GACb,EAAK,KAAK,GACV,EAAK,KAAK,GACV,EAAK,KAAK,GACb,SAAM,IAAI,GAAY,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAY,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAY,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACvH,EAGR,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,GAAG,KAAK,EAAO,IACpB,KAAK,GAAG,KAAK,EAAO,IACpB,KAAK,GAAG,KAAK,EAAO,IACpB,KAAK,GAAG,KAAK,EAAO,IACb,KAGR,QAAS,CACR,GAAM,GAAO,MAAM,SACnB,SAAK,GAAK,KAAK,GAAG,UAClB,EAAK,GAAK,KAAK,GAAG,UAClB,EAAK,GAAK,KAAK,GAAG,UAClB,EAAK,GAAK,KAAK,GAAG,UACX,EAGR,SAAS,EAAM,CACd,aAAM,SAAS,GACf,KAAK,GAAG,UAAU,EAAK,IACvB,KAAK,GAAG,UAAU,EAAK,IACvB,KAAK,GAAG,UAAU,EAAK,IACvB,KAAK,GAAG,UAAU,EAAK,IAChB,MAKT,GAAkB,UAAU,oBAAsB,GAElD,gBAAwB,GAAM,CAC7B,YAAY,EAAK,GAAI,IAAW,EAAK,GAAI,IAAW,CACnD,QACA,KAAK,KAAO,YACZ,KAAK,GAAK,EACV,KAAK,GAAK,EAGX,SAAS,EAAG,EAAiB,GAAI,IAAW,CAC3C,GAAM,GAAQ,EAEd,MAAI,KAAM,EACT,EAAM,KAAK,KAAK,IAEhB,GAAM,KAAK,KAAK,IAAI,IAAI,KAAK,IAC7B,EAAM,eAAe,GAAG,IAAI,KAAK,KAG3B,EAIR,WAAW,EAAG,EAAgB,CAC7B,MAAO,MAAK,SAAS,EAAG,GAGzB,WAAW,EAAG,EAAgB,CAC7B,GAAM,GAAU,GAAkB,GAAI,IACtC,SAAQ,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,YAC5B,EAGR,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,GAAG,KAAK,EAAO,IACpB,KAAK,GAAG,KAAK,EAAO,IACb,KAGR,QAAS,CACR,GAAM,GAAO,MAAM,SACnB,SAAK,GAAK,KAAK,GAAG,UAClB,EAAK,GAAK,KAAK,GAAG,UACX,EAGR,SAAS,EAAM,CACd,aAAM,SAAS,GACf,KAAK,GAAG,UAAU,EAAK,IACvB,KAAK,GAAG,UAAU,EAAK,IAChB,MAKT,GAAU,UAAU,YAAc,GAElC,gBAAyB,GAAM,CAC9B,YAAY,EAAK,GAAI,GAAW,EAAK,GAAI,GAAW,CACnD,QACA,KAAK,KAAO,aACZ,KAAK,aAAe,GACpB,KAAK,GAAK,EACV,KAAK,GAAK,EAGX,SAAS,EAAG,EAAiB,GAAI,GAAW,CAC3C,GAAM,GAAQ,EAEd,MAAI,KAAM,EACT,EAAM,KAAK,KAAK,IAEhB,GAAM,KAAK,KAAK,IAAI,IAAI,KAAK,IAC7B,EAAM,eAAe,GAAG,IAAI,KAAK,KAG3B,EAIR,WAAW,EAAG,EAAgB,CAC7B,MAAO,MAAK,SAAS,EAAG,GAGzB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,GAAG,KAAK,EAAO,IACpB,KAAK,GAAG,KAAK,EAAO,IACb,KAGR,QAAS,CACR,GAAM,GAAO,MAAM,SACnB,SAAK,GAAK,KAAK,GAAG,UAClB,EAAK,GAAK,KAAK,GAAG,UACX,EAGR,SAAS,EAAM,CACd,aAAM,SAAS,GACf,KAAK,GAAG,UAAU,EAAK,IACvB,KAAK,GAAG,UAAU,EAAK,IAChB,MAKT,gBAAmC,GAAM,CACxC,YAAY,EAAK,GAAI,IAAW,EAAK,GAAI,IAAW,EAAK,GAAI,IAAW,CACvE,QACA,KAAK,KAAO,uBACZ,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EAGX,SAAS,EAAG,EAAiB,GAAI,IAAW,CAC3C,GAAM,GAAQ,EACR,EAAK,KAAK,GACb,EAAK,KAAK,GACV,EAAK,KAAK,GACb,SAAM,IAAI,GAAgB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC3E,EAGR,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,GAAG,KAAK,EAAO,IACpB,KAAK,GAAG,KAAK,EAAO,IACpB,KAAK,GAAG,KAAK,EAAO,IACb,KAGR,QAAS,CACR,GAAM,GAAO,MAAM,SACnB,SAAK,GAAK,KAAK,GAAG,UAClB,EAAK,GAAK,KAAK,GAAG,UAClB,EAAK,GAAK,KAAK,GAAG,UACX,EAGR,SAAS,EAAM,CACd,aAAM,SAAS,GACf,KAAK,GAAG,UAAU,EAAK,IACvB,KAAK,GAAG,UAAU,EAAK,IACvB,KAAK,GAAG,UAAU,EAAK,IAChB,MAKT,GAAqB,UAAU,uBAAyB,GAExD,gBAAoC,GAAM,CACzC,YAAY,EAAK,GAAI,GAAW,EAAK,GAAI,GAAW,EAAK,GAAI,GAAW,CACvE,QACA,KAAK,KAAO,wBACZ,KAAK,GAAK,EACV,KAAK,GAAK,EACV,KAAK,GAAK,EAGX,SAAS,EAAG,EAAiB,GAAI,GAAW,CAC3C,GAAM,GAAQ,EACR,EAAK,KAAK,GACb,EAAK,KAAK,GACV,EAAK,KAAK,GACb,SAAM,IAAI,GAAgB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACjH,EAGR,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,GAAG,KAAK,EAAO,IACpB,KAAK,GAAG,KAAK,EAAO,IACpB,KAAK,GAAG,KAAK,EAAO,IACb,KAGR,QAAS,CACR,GAAM,GAAO,MAAM,SACnB,SAAK,GAAK,KAAK,GAAG,UAClB,EAAK,GAAK,KAAK,GAAG,UAClB,EAAK,GAAK,KAAK,GAAG,UACX,EAGR,SAAS,EAAM,CACd,aAAM,SAAS,GACf,KAAK,GAAG,UAAU,EAAK,IACvB,KAAK,GAAG,UAAU,EAAK,IACvB,KAAK,GAAG,UAAU,EAAK,IAChB,MAKT,GAAsB,UAAU,wBAA0B,GAE1D,gBAA0B,GAAM,CAC/B,YAAY,EAAS,GAAI,CACxB,QACA,KAAK,KAAO,cACZ,KAAK,OAAS,EAGf,SAAS,EAAG,EAAiB,GAAI,IAAW,CAC3C,GAAM,GAAQ,EACR,EAAS,KAAK,OACd,EAAK,GAAO,OAAS,GAAK,EAC1B,EAAW,KAAK,MAAM,GACtB,EAAS,EAAI,EACb,EAAK,EAAO,IAAa,EAAI,EAAW,EAAW,GACnD,EAAK,EAAO,GACZ,EAAK,EAAO,EAAW,EAAO,OAAS,EAAI,EAAO,OAAS,EAAI,EAAW,GAC1E,EAAK,EAAO,EAAW,EAAO,OAAS,EAAI,EAAO,OAAS,EAAI,EAAW,GAChF,SAAM,IAAI,GAAW,EAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAW,EAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACvF,EAGR,KAAK,EAAQ,CACZ,MAAM,KAAK,GACX,KAAK,OAAS,GAEd,OAAS,GAAI,EAAG,EAAI,EAAO,OAAO,OAAQ,EAAI,EAAG,IAAK,CACrD,GAAM,GAAQ,EAAO,OAAO,GAC5B,KAAK,OAAO,KAAK,EAAM,SAGxB,MAAO,MAGR,QAAS,CACR,GAAM,GAAO,MAAM,SACnB,EAAK,OAAS,GAEd,OAAS,GAAI,EAAG,EAAI,KAAK,OAAO,OAAQ,EAAI,EAAG,IAAK,CACnD,GAAM,GAAQ,KAAK,OAAO,GAC1B,EAAK,OAAO,KAAK,EAAM,WAGxB,MAAO,GAGR,SAAS,EAAM,CACd,MAAM,SAAS,GACf,KAAK,OAAS,GAEd,OAAS,GAAI,EAAG,EAAI,EAAK,OAAO,OAAQ,EAAI,EAAG,IAAK,CACnD,GAAM,GAAQ,EAAK,OAAO,GAC1B,KAAK,OAAO,KAAK,GAAI,MAAU,UAAU,IAG1C,MAAO,OAKT,GAAY,UAAU,cAAgB,GAEtC,GAAI,IAAsB,OAAO,OAAO,CACvC,UAAW,KACX,SAAU,GACV,iBAAkB,GAClB,iBAAkB,GAClB,kBAAmB,GACnB,aAAc,GACd,UAAW,GACX,WAAY,GACZ,qBAAsB,GACtB,sBAAuB,GACvB,YAAa,KAQd,gBAAwB,GAAM,CAC7B,aAAc,CACb,QACA,KAAK,KAAO,YACZ,KAAK,OAAS,GACd,KAAK,UAAY,GAGlB,IAAI,EAAO,CACV,KAAK,OAAO,KAAK,GAGlB,WAAY,CAEX,GAAM,GAAa,KAAK,OAAO,GAAG,SAAS,GACrC,EAAW,KAAK,OAAO,KAAK,OAAO,OAAS,GAAG,SAAS,GAE9D,AAAK,EAAW,OAAO,IACtB,KAAK,OAAO,KAAK,GAAI,IAAU,EAAU,IAW3C,SAAS,EAAG,EAAgB,CAC3B,GAAM,GAAI,EAAI,KAAK,YACb,EAAe,KAAK,kBACtB,EAAI,EAER,KAAO,EAAI,EAAa,QAAQ,CAC/B,GAAI,EAAa,IAAM,EAAG,CACzB,GAAM,GAAO,EAAa,GAAK,EACzB,EAAQ,KAAK,OAAO,GACpB,EAAgB,EAAM,YACtB,EAAI,IAAkB,EAAI,EAAI,EAAI,EAAO,EAC/C,MAAO,GAAM,WAAW,EAAG,GAG5B,IAGD,MAAO,MAMR,WAAY,CACX,GAAM,GAAO,KAAK,kBAClB,MAAO,GAAK,EAAK,OAAS,GAI3B,kBAAmB,CAClB,KAAK,YAAc,GACnB,KAAK,aAAe,KACpB,KAAK,kBAKN,iBAAkB,CAEjB,GAAI,KAAK,cAAgB,KAAK,aAAa,SAAW,KAAK,OAAO,OACjE,MAAO,MAAK,aAKb,GAAM,GAAU,GACZ,EAAO,EAEX,OAAS,GAAI,EAAG,EAAI,KAAK,OAAO,OAAQ,EAAI,EAAG,IAC9C,GAAQ,KAAK,OAAO,GAAG,YACvB,EAAQ,KAAK,GAGd,YAAK,aAAe,EACb,EAGR,gBAAgB,EAAY,GAAI,CAC/B,GAAM,GAAS,GAEf,OAAS,GAAI,EAAG,GAAK,EAAW,IAC/B,EAAO,KAAK,KAAK,SAAS,EAAI,IAG/B,MAAI,MAAK,WACR,EAAO,KAAK,EAAO,IAGb,EAGR,UAAU,EAAY,GAAI,CACzB,GAAM,GAAS,GACX,EAEJ,OAAS,GAAI,EAAG,EAAS,KAAK,OAAQ,EAAI,EAAO,OAAQ,IAAK,CAC7D,GAAM,GAAQ,EAAO,GACf,EAAa,GAAS,EAAM,eAAiB,EAAY,EAAI,GAAU,GAAM,aAAe,EAAM,cAAgB,EAAI,GAAS,EAAM,cAAgB,EAAY,EAAM,OAAO,OAAS,EACvL,EAAM,EAAM,UAAU,GAE5B,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,CACpC,GAAM,GAAQ,EAAI,GAClB,AAAI,GAAQ,EAAK,OAAO,IAExB,GAAO,KAAK,GACZ,EAAO,IAIT,MAAI,MAAK,WAAa,EAAO,OAAS,GAAK,CAAC,EAAO,EAAO,OAAS,GAAG,OAAO,EAAO,KACnF,EAAO,KAAK,EAAO,IAGb,EAGR,KAAK,EAAQ,CACZ,MAAM,KAAK,GACX,KAAK,OAAS,GAEd,OAAS,GAAI,EAAG,EAAI,EAAO,OAAO,OAAQ,EAAI,EAAG,IAAK,CACrD,GAAM,GAAQ,EAAO,OAAO,GAC5B,KAAK,OAAO,KAAK,EAAM,SAGxB,YAAK,UAAY,EAAO,UACjB,KAGR,QAAS,CACR,GAAM,GAAO,MAAM,SACnB,EAAK,UAAY,KAAK,UACtB,EAAK,OAAS,GAEd,OAAS,GAAI,EAAG,EAAI,KAAK,OAAO,OAAQ,EAAI,EAAG,IAAK,CACnD,GAAM,GAAQ,KAAK,OAAO,GAC1B,EAAK,OAAO,KAAK,EAAM,UAGxB,MAAO,GAGR,SAAS,EAAM,CACd,MAAM,SAAS,GACf,KAAK,UAAY,EAAK,UACtB,KAAK,OAAS,GAEd,OAAS,GAAI,EAAG,EAAI,EAAK,OAAO,OAAQ,EAAI,EAAG,IAAK,CACnD,GAAM,GAAQ,EAAK,OAAO,GAC1B,KAAK,OAAO,KAAK,GAAI,IAAO,EAAM,QAAQ,SAAS,IAGpD,MAAO,OAKT,gBAAmB,GAAU,CAC5B,YAAY,EAAQ,CACnB,QACA,KAAK,KAAO,OACZ,KAAK,aAAe,GAAI,IAEpB,GACH,KAAK,cAAc,GAIrB,cAAc,EAAQ,CACrB,KAAK,OAAO,EAAO,GAAG,EAAG,EAAO,GAAG,GAEnC,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,IACzC,KAAK,OAAO,EAAO,GAAG,EAAG,EAAO,GAAG,GAGpC,MAAO,MAGR,OAAO,EAAG,EAAG,CACZ,YAAK,aAAa,IAAI,EAAG,GAElB,KAGR,OAAO,EAAG,EAAG,CACZ,GAAM,GAAQ,GAAI,IAAU,KAAK,aAAa,QAAS,GAAI,IAAQ,EAAG,IACtE,YAAK,OAAO,KAAK,GACjB,KAAK,aAAa,IAAI,EAAG,GAClB,KAGR,iBAAiB,EAAM,EAAM,EAAI,EAAI,CACpC,GAAM,GAAQ,GAAI,IAAqB,KAAK,aAAa,QAAS,GAAI,IAAQ,EAAM,GAAO,GAAI,IAAQ,EAAI,IAC3G,YAAK,OAAO,KAAK,GACjB,KAAK,aAAa,IAAI,EAAI,GACnB,KAGR,cAAc,EAAO,EAAO,EAAO,EAAO,EAAI,EAAI,CACjD,GAAM,GAAQ,GAAI,IAAiB,KAAK,aAAa,QAAS,GAAI,IAAQ,EAAO,GAAQ,GAAI,IAAQ,EAAO,GAAQ,GAAI,IAAQ,EAAI,IACpI,YAAK,OAAO,KAAK,GACjB,KAAK,aAAa,IAAI,EAAI,GACnB,KAGR,WAAW,EAET,CACD,GAAM,GAAO,CAAC,KAAK,aAAa,SAAS,OAAO,GAC1C,EAAQ,GAAI,IAAY,GAC9B,YAAK,OAAO,KAAK,GACjB,KAAK,aAAa,KAAK,EAAI,EAAI,OAAS,IACjC,KAGR,IAAI,EAAI,EAAI,EAAS,EAAa,EAAW,EAAY,CACxD,GAAM,GAAK,KAAK,aAAa,EACvB,EAAK,KAAK,aAAa,EAC7B,YAAK,OAAO,EAAK,EAAI,EAAK,EAAI,EAAS,EAAa,EAAW,GACxD,KAGR,OAAO,EAAI,EAAI,EAAS,EAAa,EAAW,EAAY,CAC3D,YAAK,WAAW,EAAI,EAAI,EAAS,EAAS,EAAa,EAAW,GAC3D,KAGR,QAAQ,EAAI,EAAI,EAAS,EAAS,EAAa,EAAW,EAAY,EAAW,CAChF,GAAM,GAAK,KAAK,aAAa,EACvB,EAAK,KAAK,aAAa,EAC7B,YAAK,WAAW,EAAK,EAAI,EAAK,EAAI,EAAS,EAAS,EAAa,EAAW,EAAY,GACjF,KAGR,WAAW,EAAI,EAAI,EAAS,EAAS,EAAa,EAAW,EAAY,EAAW,CACnF,GAAM,GAAQ,GAAI,IAAa,EAAI,EAAI,EAAS,EAAS,EAAa,EAAW,EAAY,GAE7F,GAAI,KAAK,OAAO,OAAS,EAAG,CAE3B,GAAM,GAAa,EAAM,SAAS,GAElC,AAAK,EAAW,OAAO,KAAK,eAC3B,KAAK,OAAO,EAAW,EAAG,EAAW,GAIvC,KAAK,OAAO,KAAK,GACjB,GAAM,GAAY,EAAM,SAAS,GACjC,YAAK,aAAa,KAAK,GAChB,KAGR,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,aAAa,KAAK,EAAO,cACvB,KAGR,QAAS,CACR,GAAM,GAAO,MAAM,SACnB,SAAK,aAAe,KAAK,aAAa,UAC/B,EAGR,SAAS,EAAM,CACd,aAAM,SAAS,GACf,KAAK,aAAa,UAAU,EAAK,cAC1B,MAKT,gBAAoB,GAAK,CACxB,YAAY,EAAQ,CACnB,MAAM,GACN,KAAK,KAAO,KACZ,KAAK,KAAO,QACZ,KAAK,MAAQ,GAGd,eAAe,EAAW,CACzB,GAAM,GAAW,GAEjB,OAAS,GAAI,EAAG,EAAI,KAAK,MAAM,OAAQ,EAAI,EAAG,IAC7C,EAAS,GAAK,KAAK,MAAM,GAAG,UAAU,GAGvC,MAAO,GAIR,cAAc,EAAW,CACxB,MAAO,CACN,MAAO,KAAK,UAAU,GACtB,MAAO,KAAK,eAAe,IAI7B,KAAK,EAAQ,CACZ,MAAM,KAAK,GACX,KAAK,MAAQ,GAEb,OAAS,GAAI,EAAG,EAAI,EAAO,MAAM,OAAQ,EAAI,EAAG,IAAK,CACpD,GAAM,GAAO,EAAO,MAAM,GAC1B,KAAK,MAAM,KAAK,EAAK,SAGtB,MAAO,MAGR,QAAS,CACR,GAAM,GAAO,MAAM,SACnB,EAAK,KAAO,KAAK,KACjB,EAAK,MAAQ,GAEb,OAAS,GAAI,EAAG,EAAI,KAAK,MAAM,OAAQ,EAAI,EAAG,IAAK,CAClD,GAAM,GAAO,KAAK,MAAM,GACxB,EAAK,MAAM,KAAK,EAAK,UAGtB,MAAO,GAGR,SAAS,EAAM,CACd,MAAM,SAAS,GACf,KAAK,KAAO,EAAK,KACjB,KAAK,MAAQ,GAEb,OAAS,GAAI,EAAG,EAAI,EAAK,MAAM,OAAQ,EAAI,EAAG,IAAK,CAClD,GAAM,GAAO,EAAK,MAAM,GACxB,KAAK,MAAM,KAAK,GAAI,MAAO,SAAS,IAGrC,MAAO,OAQT,GAAM,IAAS,CACd,YAAa,SAAU,EAAM,EAAa,EAAM,EAAG,CAClD,GAAM,GAAW,GAAe,EAAY,OACtC,EAAW,EAAW,EAAY,GAAK,EAAM,EAAK,OACpD,EAAY,GAAW,EAAM,EAAG,EAAU,EAAK,IAC7C,EAAY,GAClB,GAAI,CAAC,GAAa,EAAU,OAAS,EAAU,KAAM,MAAO,GAC5D,GAAI,GAAM,EAAM,EAAM,EAAM,EAAG,EAAG,EAGlC,GAFI,GAAU,GAAY,GAAe,EAAM,EAAa,EAAW,IAEnE,EAAK,OAAS,GAAK,EAAK,CAC3B,EAAO,EAAO,EAAK,GACnB,EAAO,EAAO,EAAK,GAEnB,OAAS,GAAI,EAAK,EAAI,EAAU,GAAK,EACpC,EAAI,EAAK,GACT,EAAI,EAAK,EAAI,GACT,EAAI,GAAM,GAAO,GACjB,EAAI,GAAM,GAAO,GACjB,EAAI,GAAM,GAAO,GACjB,EAAI,GAAM,GAAO,GAItB,EAAU,KAAK,IAAI,EAAO,EAAM,EAAO,GACvC,EAAU,IAAY,EAAI,EAAI,EAAU,EAGzC,UAAa,EAAW,EAAW,EAAK,EAAM,EAAM,GAC7C,IAIT,YAAoB,EAAM,EAAO,EAAK,EAAK,EAAW,CACrD,GAAI,GAAG,EAEP,GAAI,IAAc,GAAW,EAAM,EAAO,EAAK,GAAO,EACrD,IAAK,EAAI,EAAO,EAAI,EAAK,GAAK,EAAK,EAAO,GAAW,EAAG,EAAK,GAAI,EAAK,EAAI,GAAI,OAE9E,KAAK,EAAI,EAAM,EAAK,GAAK,EAAO,GAAK,EAAK,EAAO,GAAW,EAAG,EAAK,GAAI,EAAK,EAAI,GAAI,GAGtF,MAAI,IAAQ,GAAO,EAAM,EAAK,OAC7B,IAAW,GACX,EAAO,EAAK,MAGN,EAIR,YAAsB,EAAO,EAAK,CACjC,GAAI,CAAC,EAAO,MAAO,GACnB,AAAK,GAAK,GAAM,GAChB,GAAI,GAAI,EACN,EAEF,EAGC,IAFA,EAAQ,GAEJ,CAAC,EAAE,SAAY,IAAO,EAAG,EAAE,OAAS,GAAK,EAAE,KAAM,EAAG,EAAE,QAAU,GAAI,CAGvE,GAFA,GAAW,GACX,EAAI,EAAM,EAAE,KACR,IAAM,EAAE,KAAM,MAClB,EAAQ,OAER,GAAI,EAAE,WAEC,GAAS,IAAM,GAExB,MAAO,GAIR,YAAsB,EAAK,EAAW,EAAK,EAAM,EAAM,EAAS,EAAM,CACrE,GAAI,CAAC,EAAK,OAEV,AAAI,CAAC,GAAQ,GAAS,GAAW,EAAK,EAAM,EAAM,GAClD,GAAI,GAAO,EACT,EACA,EAEF,KAAO,EAAI,OAAS,EAAI,MAAM,CAI7B,GAHA,EAAO,EAAI,KACX,EAAO,EAAI,KAEP,EAAU,GAAY,EAAK,EAAM,EAAM,GAAW,GAAM,GAAM,CAEjE,EAAU,KAAK,EAAK,EAAI,GACxB,EAAU,KAAK,EAAI,EAAI,GACvB,EAAU,KAAK,EAAK,EAAI,GACxB,GAAW,GAEX,EAAM,EAAK,KACX,EAAO,EAAK,KACZ,SAKD,GAFA,EAAM,EAEF,IAAQ,EAAM,CAEjB,AAAK,EAEE,AAAI,IAAS,EACnB,GAAM,GAAuB,GAAa,GAAM,EAAW,GAC3D,GAAa,EAAK,EAAW,EAAK,EAAM,EAAM,EAAS,IAC7C,IAAS,GACnB,GAAY,EAAK,EAAW,EAAK,EAAM,EAAM,GAL7C,GAAa,GAAa,GAAM,EAAW,EAAK,EAAM,EAAM,EAAS,GAQtE,QAMH,YAAe,EAAK,CACnB,GAAM,GAAI,EAAI,KACX,EAAI,EACJ,EAAI,EAAI,KACX,GAAI,GAAK,EAAG,EAAG,IAAM,EAAG,MAAO,GAG/B,GAAI,GAAI,EAAI,KAAK,KAEjB,KAAO,IAAM,EAAI,MAAM,CACtB,GAAI,GAAgB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,IAAM,GAAK,EAAE,KAAM,EAAG,EAAE,OAAS,EAAG,MAAO,GACpG,EAAI,EAAE,KAGP,MAAO,GAGR,YAAqB,EAAK,EAAM,EAAM,EAAS,CAC9C,GAAM,GAAI,EAAI,KACX,EAAI,EACJ,EAAI,EAAI,KACX,GAAI,GAAK,EAAG,EAAG,IAAM,EAAG,MAAO,GAG/B,GAAM,GAAQ,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EACnE,EAAQ,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAChE,EAAQ,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAChE,EAAQ,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAE7D,EAAO,GAAO,EAAO,EAAO,EAAM,EAAM,GAC3C,EAAO,GAAO,EAAO,EAAO,EAAM,EAAM,GACvC,EAAI,EAAI,MACV,EAAI,EAAI,MAEV,KAAO,GAAK,EAAE,GAAK,GAAQ,GAAK,EAAE,GAAK,GAAM,CAG5C,GAFI,IAAM,EAAI,MAAQ,IAAM,EAAI,MAAQ,GAAgB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,IAAM,GAAK,EAAE,KAAM,EAAG,EAAE,OAAS,GAC9H,GAAI,EAAE,MACF,IAAM,EAAI,MAAQ,IAAM,EAAI,MAAQ,GAAgB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,IAAM,GAAK,EAAE,KAAM,EAAG,EAAE,OAAS,GAAG,MAAO,GACxI,EAAI,EAAE,MAIP,KAAO,GAAK,EAAE,GAAK,GAAM,CACxB,GAAI,IAAM,EAAI,MAAQ,IAAM,EAAI,MAAQ,GAAgB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,IAAM,GAAK,EAAE,KAAM,EAAG,EAAE,OAAS,EAAG,MAAO,GACxI,EAAI,EAAE,MAIP,KAAO,GAAK,EAAE,GAAK,GAAM,CACxB,GAAI,IAAM,EAAI,MAAQ,IAAM,EAAI,MAAQ,GAAgB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,IAAM,GAAK,EAAE,KAAM,EAAG,EAAE,OAAS,EAAG,MAAO,GACxI,EAAI,EAAE,MAGP,MAAO,GAIR,YAAgC,EAAO,EAAW,EAAK,CACtD,GAAI,GAAI,EAER,EAAG,CACF,GAAM,GAAI,EAAE,KACT,EAAI,EAAE,KAAK,KAEd,AAAI,CAAC,GAAO,EAAG,IAAM,GAAW,EAAG,EAAG,EAAE,KAAM,IAAM,GAAc,EAAG,IAAM,GAAc,EAAG,IAC3F,GAAU,KAAK,EAAE,EAAI,GACrB,EAAU,KAAK,EAAE,EAAI,GACrB,EAAU,KAAK,EAAE,EAAI,GAErB,GAAW,GACX,GAAW,EAAE,MACb,EAAI,EAAQ,GAGb,EAAI,EAAE,WACE,IAAM,GAEf,MAAO,IAAa,GAIrB,YAAqB,EAAO,EAAW,EAAK,EAAM,EAAM,EAAS,CAEhE,GAAI,GAAI,EAER,EAAG,CACF,GAAI,GAAI,EAAE,KAAK,KAEf,KAAO,IAAM,EAAE,MAAM,CACpB,GAAI,EAAE,IAAM,EAAE,GAAK,GAAgB,EAAG,GAAI,CAEzC,GAAI,GAAI,GAAa,EAAG,GAExB,EAAI,GAAa,EAAG,EAAE,MACtB,EAAI,GAAa,EAAG,EAAE,MAEtB,GAAa,EAAG,EAAW,EAAK,EAAM,EAAM,GAC5C,GAAa,EAAG,EAAW,EAAK,EAAM,EAAM,GAC5C,OAGD,EAAI,EAAE,KAGP,EAAI,EAAE,WACE,IAAM,GAIhB,YAAwB,EAAM,EAAa,EAAW,EAAK,CAC1D,GAAM,GAAQ,GACV,EAAG,EAAK,EAAO,EAAK,EAExB,IAAK,EAAI,EAAG,EAAM,EAAY,OAAQ,EAAI,EAAK,IAC9C,EAAQ,EAAY,GAAK,EACzB,EAAM,EAAI,EAAM,EAAI,EAAY,EAAI,GAAK,EAAM,EAAK,OACpD,EAAO,GAAW,EAAM,EAAO,EAAK,EAAK,IACrC,IAAS,EAAK,MAAM,GAAK,QAAU,IACvC,EAAM,KAAK,GAAY,IAKxB,IAFA,EAAM,KAAK,IAEN,EAAI,EAAG,EAAI,EAAM,OAAQ,IAC7B,GAAc,EAAM,GAAI,GACxB,EAAY,GAAa,EAAW,EAAU,MAG/C,MAAO,GAGR,YAAkB,EAAG,EAAG,CACvB,MAAO,GAAE,EAAI,EAAE,EAIhB,YAAuB,EAAM,EAAW,CAGvC,GAFA,EAAY,GAAe,EAAM,GAE7B,EAAW,CACd,GAAM,GAAI,GAAa,EAAW,GAElC,GAAa,EAAW,EAAU,MAClC,GAAa,EAAG,EAAE,OAKpB,YAAwB,EAAM,EAAW,CACxC,GAAI,GAAI,EACF,EAAK,EAAK,EACV,EAAK,EAAK,EACZ,EAAK,KACP,EAGF,EAAG,CACF,GAAI,GAAM,EAAE,GAAK,GAAM,EAAE,KAAK,GAAK,EAAE,KAAK,IAAM,EAAE,EAAG,CACpD,GAAM,GAAI,EAAE,EAAK,GAAK,EAAE,GAAM,GAAE,KAAK,EAAI,EAAE,GAAM,GAAE,KAAK,EAAI,EAAE,GAE9D,GAAI,GAAK,GAAM,EAAI,EAAI,CAGtB,GAFA,EAAK,EAED,IAAM,EAAI,CACb,GAAI,IAAO,EAAE,EAAG,MAAO,GACvB,GAAI,IAAO,EAAE,KAAK,EAAG,MAAO,GAAE,KAG/B,EAAI,EAAE,EAAI,EAAE,KAAK,EAAI,EAAI,EAAE,MAI7B,EAAI,EAAE,WACE,IAAM,GAEf,GAAI,CAAC,EAAG,MAAO,MACf,GAAI,IAAO,EAAI,MAAO,GAKtB,GAAM,GAAO,EACV,EAAK,EAAE,EACP,EAAK,EAAE,EACN,EAAS,IACX,EACF,EAAI,EAEJ,EACC,AAAI,IAAM,EAAE,GAAK,EAAE,GAAK,GAAM,IAAO,EAAE,GAAK,GAAgB,EAAK,EAAK,EAAK,EAAI,EAAI,EAAI,EAAI,EAAK,EAAK,EAAK,EAAI,EAAI,EAAE,EAAG,EAAE,IACxH,GAAM,KAAK,IAAI,EAAK,EAAE,GAAM,GAAK,EAAE,GAE/B,GAAc,EAAG,IAAU,GAAM,GAAU,IAAQ,GAAW,GAAE,EAAI,EAAE,GAAK,EAAE,IAAM,EAAE,GAAK,GAAqB,EAAG,MACrH,GAAI,EACJ,EAAS,IAIX,EAAI,EAAE,WACE,IAAM,GAEf,MAAO,GAIR,YAA8B,EAAG,EAAG,CACnC,MAAO,IAAK,EAAE,KAAM,EAAG,EAAE,MAAQ,GAAK,GAAK,EAAE,KAAM,EAAG,EAAE,MAAQ,EAIjE,YAAoB,EAAO,EAAM,EAAM,EAAS,CAC/C,GAAI,GAAI,EAER,EACC,AAAI,GAAE,IAAM,MAAM,GAAE,EAAI,GAAO,EAAE,EAAG,EAAE,EAAG,EAAM,EAAM,IACrD,EAAE,MAAQ,EAAE,KACZ,EAAE,MAAQ,EAAE,KACZ,EAAI,EAAE,WACE,IAAM,GAEf,EAAE,MAAM,MAAQ,KAChB,EAAE,MAAQ,KACV,GAAW,GAKZ,YAAoB,EAAM,CACzB,GAAI,GACF,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAAS,EAEX,EAAG,CAMF,IALA,EAAI,EACJ,EAAO,KACP,EAAO,KACP,EAAY,EAEL,GAAG,CAKT,IAJA,IACA,EAAI,EACJ,EAAQ,EAEH,EAAI,EAAG,EAAI,GACf,KACA,EAAI,EAAE,MACF,EAAC,GAHkB,IAGvB,CAKD,IAFA,EAAQ,EAED,EAAQ,GAAK,EAAQ,GAAK,GAChC,AAAI,IAAU,GAAM,KAAU,GAAK,CAAC,GAAK,EAAE,GAAK,EAAE,GACjD,GAAI,EACJ,EAAI,EAAE,MACN,KAEA,GAAI,EACJ,EAAI,EAAE,MACN,KAGD,AAAI,EAAM,EAAK,MAAQ,EAAO,EAAO,EACrC,EAAE,MAAQ,EACV,EAAO,EAGR,EAAI,EAGL,EAAK,MAAQ,KACb,GAAU,QACF,EAAY,GAErB,MAAO,GAIR,YAAgB,EAAG,EAAG,EAAM,EAAM,EAAS,CAE1C,SAAI,MAAS,GAAI,GAAQ,EACzB,EAAI,MAAS,GAAI,GAAQ,EACzB,EAAK,GAAI,GAAK,GAAK,SACnB,EAAK,GAAI,GAAK,GAAK,UACnB,EAAK,GAAI,GAAK,GAAK,UACnB,EAAK,GAAI,GAAK,GAAK,WACnB,EAAK,GAAI,GAAK,GAAK,SACnB,EAAK,GAAI,GAAK,GAAK,UACnB,EAAK,GAAI,GAAK,GAAK,UACnB,EAAK,GAAI,GAAK,GAAK,WACZ,EAAI,GAAK,EAIjB,YAAqB,EAAO,CAC3B,GAAI,GAAI,EACN,EAAW,EAEb,EACC,AAAI,GAAE,EAAI,EAAS,GAAK,EAAE,IAAM,EAAS,GAAK,EAAE,EAAI,EAAS,IAAG,GAAW,GAC3E,EAAI,EAAE,WACE,IAAM,GAEf,MAAO,GAIR,YAAyB,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,CACxD,MAAQ,GAAK,GAAO,GAAK,GAAO,GAAK,GAAO,GAAK,IAAO,GAAM,GAAK,GAAO,GAAK,GAAO,GAAK,GAAO,GAAK,IAAO,GAAM,GAAK,GAAO,GAAK,GAAO,GAAK,GAAO,GAAK,IAAO,EAIrK,YAAyB,EAAG,EAAG,CAC9B,MAAO,GAAE,KAAK,IAAM,EAAE,GAAK,EAAE,KAAK,IAAM,EAAE,GAAK,CAAC,GAAkB,EAAG,IAAO,IAAc,EAAG,IAAM,GAAc,EAAG,IAAM,GAAa,EAAG,IAAO,IAAK,EAAE,KAAM,EAAG,EAAE,OAAS,GAAK,EAAG,EAAE,KAAM,KAC5L,GAAO,EAAG,IAAM,GAAK,EAAE,KAAM,EAAG,EAAE,MAAQ,GAAK,GAAK,EAAE,KAAM,EAAG,EAAE,MAAQ,GAI1E,YAAc,EAAG,EAAG,EAAG,CACtB,MAAQ,GAAE,EAAI,EAAE,GAAM,GAAE,EAAI,EAAE,GAAM,GAAE,EAAI,EAAE,GAAM,GAAE,EAAI,EAAE,GAI3D,YAAgB,EAAI,EAAI,CACvB,MAAO,GAAG,IAAM,EAAG,GAAK,EAAG,IAAM,EAAG,EAIrC,YAAoB,EAAI,EAAI,EAAI,EAAI,CACnC,GAAM,GAAK,GAAK,GAAK,EAAI,EAAI,IACvB,EAAK,GAAK,GAAK,EAAI,EAAI,IACvB,EAAK,GAAK,GAAK,EAAI,EAAI,IACvB,EAAK,GAAK,GAAK,EAAI,EAAI,IAS7B,MARI,OAAO,GAAM,IAAO,GAEpB,IAAO,GAAK,GAAU,EAAI,EAAI,IAE9B,IAAO,GAAK,GAAU,EAAI,EAAI,IAE9B,IAAO,GAAK,GAAU,EAAI,EAAI,IAE9B,IAAO,GAAK,GAAU,EAAI,EAAI,IAMnC,YAAmB,EAAG,EAAG,EAAG,CAC3B,MAAO,GAAE,GAAK,KAAK,IAAI,EAAE,EAAG,EAAE,IAAM,EAAE,GAAK,KAAK,IAAI,EAAE,EAAG,EAAE,IAAM,EAAE,GAAK,KAAK,IAAI,EAAE,EAAG,EAAE,IAAM,EAAE,GAAK,KAAK,IAAI,EAAE,EAAG,EAAE,GAGtH,YAAc,EAAK,CAClB,MAAO,GAAM,EAAI,EAAI,EAAM,EAAI,GAAK,EAIrC,YAA2B,EAAG,EAAG,CAChC,GAAI,GAAI,EAER,EAAG,CACF,GAAI,EAAE,IAAM,EAAE,GAAK,EAAE,KAAK,IAAM,EAAE,GAAK,EAAE,IAAM,EAAE,GAAK,EAAE,KAAK,IAAM,EAAE,GAAK,GAAW,EAAG,EAAE,KAAM,EAAG,GAAI,MAAO,GAC9G,EAAI,EAAE,WACE,IAAM,GAEf,MAAO,GAIR,YAAuB,EAAG,EAAG,CAC5B,MAAO,IAAK,EAAE,KAAM,EAAG,EAAE,MAAQ,EAAI,GAAK,EAAG,EAAG,EAAE,OAAS,GAAK,GAAK,EAAG,EAAE,KAAM,IAAM,EAAI,GAAK,EAAG,EAAG,EAAE,MAAQ,GAAK,GAAK,EAAG,EAAE,KAAM,GAAK,EAI1I,YAAsB,EAAG,EAAG,CAC3B,GAAI,GAAI,EACN,EAAS,GACL,EAAM,GAAE,EAAI,EAAE,GAAK,EACtB,EAAM,GAAE,EAAI,EAAE,GAAK,EAEtB,EACC,AAAI,GAAE,EAAI,GAAO,EAAE,KAAK,EAAI,GAAM,EAAE,KAAK,IAAM,EAAE,GAAK,EAAM,GAAE,KAAK,EAAI,EAAE,GAAM,GAAK,EAAE,GAAM,GAAE,KAAK,EAAI,EAAE,GAAK,EAAE,GAAG,GAAS,CAAC,GAC7H,EAAI,EAAE,WACE,IAAM,GAEf,MAAO,GAKR,YAAsB,EAAG,EAAG,CAC3B,GAAM,GAAK,GAAI,IAAK,EAAE,EAAG,EAAE,EAAG,EAAE,GAC7B,EAAK,GAAI,IAAK,EAAE,EAAG,EAAE,EAAG,EAAE,GAC1B,EAAK,EAAE,KACP,EAAK,EAAE,KACV,SAAE,KAAO,EACT,EAAE,KAAO,EACT,EAAG,KAAO,EACV,EAAG,KAAO,EACV,EAAG,KAAO,EACV,EAAG,KAAO,EACV,EAAG,KAAO,EACV,EAAG,KAAO,EACH,EAIR,YAAoB,EAAG,EAAG,EAAG,EAAM,CAClC,GAAM,GAAI,GAAI,IAAK,EAAG,EAAG,GAEzB,MAAK,GAIJ,GAAE,KAAO,EAAK,KACd,EAAE,KAAO,EACT,EAAK,KAAK,KAAO,EACjB,EAAK,KAAO,GANZ,GAAE,KAAO,EACT,EAAE,KAAO,GAQH,EAGR,YAAoB,EAAG,CACtB,EAAE,KAAK,KAAO,EAAE,KAChB,EAAE,KAAK,KAAO,EAAE,KACZ,EAAE,OAAO,GAAE,MAAM,MAAQ,EAAE,OAC3B,EAAE,OAAO,GAAE,MAAM,MAAQ,EAAE,OAGhC,YAAc,EAAG,EAAG,EAAG,CAEtB,KAAK,EAAI,EAET,KAAK,EAAI,EACT,KAAK,EAAI,EAET,KAAK,KAAO,KACZ,KAAK,KAAO,KAEZ,KAAK,EAAI,KAET,KAAK,MAAQ,KACb,KAAK,MAAQ,KAEb,KAAK,QAAU,GAGhB,YAAoB,EAAM,EAAO,EAAK,EAAK,CAC1C,GAAI,GAAM,EAEV,OAAS,GAAI,EAAO,EAAI,EAAM,EAAK,EAAI,EAAK,GAAK,EAChD,GAAQ,GAAK,GAAK,EAAK,IAAO,GAAK,EAAI,GAAK,EAAK,EAAI,IACrD,EAAI,EAGL,MAAO,GAGR,QAAiB,OAET,MAAK,EAAS,CACpB,GAAM,GAAI,EAAQ,OACd,EAAI,EAER,OAAS,GAAI,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,EAAI,IACrC,GAAK,EAAQ,GAAG,EAAI,EAAQ,GAAG,EAAI,EAAQ,GAAG,EAAI,EAAQ,GAAG,EAG9D,MAAO,GAAI,SAGL,aAAY,EAAK,CACvB,MAAO,IAAW,KAAK,GAAO,QAGxB,kBAAiB,EAAS,EAAO,CACvC,GAAM,GAAW,GAEX,EAAc,GAEd,EAAQ,GAEd,GAAgB,GAChB,GAAW,EAAU,GAErB,GAAI,GAAY,EAAQ,OACxB,EAAM,QAAQ,IAEd,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,IACjC,EAAY,KAAK,GACjB,GAAa,EAAM,GAAG,OACtB,GAAW,EAAU,EAAM,IAI5B,GAAM,GAAY,GAAO,YAAY,EAAU,GAE/C,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,GAAK,EAC1C,EAAM,KAAK,EAAU,MAAM,EAAG,EAAI,IAGnC,MAAO,IAKT,YAAyB,EAAQ,CAChC,GAAM,GAAI,EAAO,OAEjB,AAAI,EAAI,GAAK,EAAO,EAAI,GAAG,OAAO,EAAO,KACxC,EAAO,MAIT,YAAoB,EAAU,EAAS,CACtC,OAAS,GAAI,EAAG,EAAI,EAAQ,OAAQ,IACnC,EAAS,KAAK,EAAQ,GAAG,GACzB,EAAS,KAAK,EAAQ,GAAG,GA0B3B,gBAA8B,GAAe,CAC5C,YAAY,EAAS,GAAI,IAAM,CAAC,GAAI,IAAQ,GAAK,IAAM,GAAI,IAAQ,IAAM,IAAM,GAAI,IAAQ,IAAM,KAAO,GAAI,IAAQ,GAAK,OAAS,EAAU,GAAI,CAC/I,QACA,KAAK,KAAO,kBACZ,KAAK,WAAa,CACjB,OAAQ,EACR,QAAS,GAEV,EAAS,MAAM,QAAQ,GAAU,EAAS,CAAC,GAC3C,GAAM,GAAQ,KACR,EAAgB,GAChB,EAAU,GAEhB,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,IAAK,CAC9C,GAAM,GAAQ,EAAO,GACrB,EAAS,GAIV,KAAK,aAAa,WAAY,GAAI,IAAuB,EAAe,IACxE,KAAK,aAAa,KAAM,GAAI,IAAuB,EAAS,IAC5D,KAAK,uBAEL,WAAkB,EAAO,CACxB,GAAM,GAAc,GAEd,EAAgB,EAAQ,gBAAkB,OAAY,EAAQ,cAAgB,GAC9E,EAAQ,EAAQ,QAAU,OAAY,EAAQ,MAAQ,EACxD,EAAQ,EAAQ,QAAU,OAAY,EAAQ,MAAQ,EACtD,EAAe,EAAQ,eAAiB,OAAY,EAAQ,aAAe,GAC3E,EAAiB,EAAQ,iBAAmB,OAAY,EAAQ,eAAiB,GACjF,EAAY,EAAQ,YAAc,OAAY,EAAQ,UAAY,EAAiB,GACnF,EAAc,EAAQ,cAAgB,OAAY,EAAQ,YAAc,EACxE,EAAgB,EAAQ,gBAAkB,OAAY,EAAQ,cAAgB,EAC5E,EAAc,EAAQ,YACtB,EAAQ,EAAQ,cAAgB,OAAY,EAAQ,YAAc,GAExE,AAAI,EAAQ,SAAW,QACtB,SAAQ,KAAK,kEACb,EAAQ,EAAQ,QAIjB,GAAI,GACF,EAAgB,GACd,EAAY,EAAU,EAAQ,EAElC,AAAI,GACH,GAAa,EAAY,gBAAgB,GACzC,EAAgB,GAChB,EAAe,GAIf,EAAa,EAAY,oBAAoB,EAAO,IAEpD,EAAW,GAAI,GACf,EAAS,GAAI,GACb,EAAY,GAAI,IAIZ,GACJ,GAAgB,EAChB,EAAiB,EACjB,EAAY,EACZ,EAAc,GAIf,GAAM,GAAc,EAAM,cAAc,GACpC,EAAW,EAAY,MACrB,EAAQ,EAAY,MAG1B,GAFgB,CAAC,GAAW,YAAY,GAE3B,CACZ,EAAW,EAAS,UAEpB,OAAS,IAAI,EAAG,GAAK,EAAM,OAAQ,GAAI,GAAI,KAAK,CAC/C,GAAM,IAAQ,EAAM,IAEpB,AAAI,GAAW,YAAY,KAC1B,GAAM,IAAK,GAAM,YAKpB,GAAM,GAAQ,GAAW,iBAAiB,EAAU,GAG9C,EAAU,EAEhB,OAAS,IAAI,EAAG,GAAK,EAAM,OAAQ,GAAI,GAAI,KAAK,CAC/C,GAAM,IAAQ,EAAM,IACpB,EAAW,EAAS,OAAO,IAG5B,WAAkB,GAAI,GAAK,GAAM,CAChC,MAAK,KAAK,QAAQ,MAAM,6CACjB,GAAI,QAAQ,eAAe,IAAM,IAAI,IAG7C,GAAM,GAAO,EAAS,OACnB,GAAO,EAAM,OAEhB,YAAqB,GAAM,GAAQ,GAAQ,CAO1C,GAAI,IAAW,GAAW,EAIpB,EAAW,GAAK,EAAI,GAAO,EAC9B,GAAW,GAAK,EAAI,GAAO,EACxB,GAAW,GAAO,EAAI,GAAK,EAC9B,GAAW,GAAO,EAAI,GAAK,EACxB,GAAe,EAAW,EAAW,GAAW,GAEhD,GAAa,EAAW,GAAW,GAAW,GAEpD,GAAI,KAAK,IAAI,IAAc,OAAO,QAAS,CAG1C,GAAM,IAAa,KAAK,KAAK,IACvB,GAAa,KAAK,KAAK,GAAW,GAAW,GAAW,IAExD,GAAgB,GAAO,EAAI,GAAW,GACtC,EAAgB,GAAO,EAAI,EAAW,GACtC,GAAgB,GAAO,EAAI,GAAW,GACtC,GAAgB,GAAO,EAAI,GAAW,GAEtC,GAAO,KAAgB,IAAiB,GAAY,IAAgB,GAAiB,IAAa,GAAW,GAAW,GAAW,IAEzI,GAAY,GAAgB,EAAW,GAAK,GAAK,EACjD,GAAY,EAAgB,GAAW,GAAK,GAAK,EAGjD,GAAM,IAAgB,GAAY,GAAY,GAAY,GAE1D,GAAI,IAAiB,EACpB,MAAO,IAAI,IAAQ,GAAW,IAE9B,EAAY,KAAK,KAAK,GAAgB,OAEjC,CAEN,GAAI,IAAe,GAEnB,AAAI,EAAW,OAAO,QACjB,GAAW,OAAO,SACrB,IAAe,IAGhB,AAAI,EAAW,CAAC,OAAO,QAClB,GAAW,CAAC,OAAO,SACtB,IAAe,IAGZ,KAAK,KAAK,MAAc,KAAK,KAAK,KACrC,IAAe,IAKlB,AAAI,GAEH,IAAY,CAAC,GACb,GAAY,EACZ,EAAY,KAAK,KAAK,KAGtB,IAAY,EACZ,GAAY,GACZ,EAAY,KAAK,KAAK,GAAe,IAIvC,MAAO,IAAI,IAAQ,GAAY,EAAW,GAAY,GAGvD,GAAM,IAAmB,GAEzB,OAAS,IAAI,EAAG,GAAK,EAAQ,OAAQ,GAAI,GAAK,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,KAAK,KAAK,KAC7E,AAAI,KAAM,IAAI,IAAI,GACd,KAAM,IAAI,IAAI,GAGlB,GAAiB,IAAK,GAAY,EAAQ,IAAI,EAAQ,IAAI,EAAQ,KAGnE,GAAM,IAAiB,GACnB,GACF,GAAoB,GAAiB,SAEvC,OAAS,IAAI,EAAG,GAAK,EAAM,OAAQ,GAAI,GAAI,KAAK,CAC/C,GAAM,IAAQ,EAAM,IACpB,GAAmB,GAEnB,OAAS,IAAI,EAAG,GAAK,GAAM,OAAQ,EAAI,GAAK,EAAG,EAAI,GAAI,EAAG,GAAI,GAAI,KAAK,IAAK,IAC3E,AAAI,IAAM,IAAI,GAAI,GACd,IAAM,IAAI,GAAI,GAElB,GAAiB,IAAK,GAAY,GAAM,IAAI,GAAM,GAAI,GAAM,IAG7D,GAAe,KAAK,IACpB,GAAoB,GAAkB,OAAO,IAI9C,OAAS,IAAI,EAAG,GAAI,EAAe,KAAK,CAEvC,GAAM,IAAI,GAAI,EACR,GAAI,EAAiB,KAAK,IAAI,GAAI,KAAK,GAAK,GAC5C,GAAK,EAAY,KAAK,IAAI,GAAI,KAAK,GAAK,GAAK,EAEnD,OAAS,IAAI,EAAG,EAAK,EAAQ,OAAQ,GAAI,EAAI,KAAK,CACjD,GAAM,GAAO,EAAS,EAAQ,IAAI,GAAiB,IAAI,IACvD,GAAE,EAAK,EAAG,EAAK,EAAG,CAAC,IAIpB,OAAS,IAAI,EAAG,EAAK,EAAM,OAAQ,GAAI,EAAI,KAAK,CAC/C,GAAM,GAAQ,EAAM,IACpB,GAAmB,GAAe,IAElC,OAAS,IAAI,EAAG,GAAK,EAAM,OAAQ,GAAI,GAAI,KAAK,CAC/C,GAAM,IAAO,EAAS,EAAM,IAAI,GAAiB,IAAI,IACrD,GAAE,GAAK,EAAG,GAAK,EAAG,CAAC,MAKtB,GAAM,IAAK,EAAY,EAEvB,OAAS,IAAI,EAAG,GAAI,EAAM,KAAK,CAC9B,GAAM,IAAO,EAAe,EAAS,EAAS,IAAI,GAAkB,IAAI,IAAM,EAAS,IAEvF,AAAK,EAIJ,GAAO,KAAK,EAAW,QAAQ,IAAI,eAAe,GAAK,GACvD,EAAS,KAAK,EAAW,UAAU,IAAI,eAAe,GAAK,GAC3D,EAAU,KAAK,EAAW,IAAI,IAAI,GAAQ,IAAI,GAC9C,GAAE,EAAU,EAAG,EAAU,EAAG,EAAU,IANtC,GAAE,GAAK,EAAG,GAAK,EAAG,GAYpB,OAAS,IAAI,EAAG,IAAK,EAAO,KAC3B,OAAS,IAAI,EAAG,GAAI,EAAM,KAAK,CAC9B,GAAM,IAAO,EAAe,EAAS,EAAS,IAAI,GAAkB,IAAI,IAAM,EAAS,IAEvF,AAAK,EAIJ,GAAO,KAAK,EAAW,QAAQ,KAAI,eAAe,GAAK,GACvD,EAAS,KAAK,EAAW,UAAU,KAAI,eAAe,GAAK,GAC3D,EAAU,KAAK,EAAW,KAAI,IAAI,GAAQ,IAAI,GAC9C,GAAE,EAAU,EAAG,EAAU,EAAG,EAAU,IANtC,GAAE,GAAK,EAAG,GAAK,EAAG,EAAQ,EAAQ,IAarC,OAAS,IAAI,EAAgB,EAAG,IAAK,EAAG,KAAK,CAC5C,GAAM,IAAI,GAAI,EACR,GAAI,EAAiB,KAAK,IAAI,GAAI,KAAK,GAAK,GAC5C,GAAK,EAAY,KAAK,IAAI,GAAI,KAAK,GAAK,GAAK,EAEnD,OAAS,IAAI,EAAG,EAAK,EAAQ,OAAQ,GAAI,EAAI,KAAK,CACjD,GAAM,GAAO,EAAS,EAAQ,IAAI,GAAiB,IAAI,IACvD,GAAE,EAAK,EAAG,EAAK,EAAG,EAAQ,IAI3B,OAAS,IAAI,EAAG,EAAK,EAAM,OAAQ,GAAI,EAAI,KAAK,CAC/C,GAAM,GAAQ,EAAM,IACpB,GAAmB,GAAe,IAElC,OAAS,IAAI,EAAG,GAAK,EAAM,OAAQ,GAAI,GAAI,KAAK,CAC/C,GAAM,IAAO,EAAS,EAAM,IAAI,GAAiB,IAAI,IAErD,AAAK,EAGJ,GAAE,GAAK,EAAG,GAAK,EAAI,EAAW,EAAQ,GAAG,EAAG,EAAW,EAAQ,GAAG,EAAI,IAFtE,GAAE,GAAK,EAAG,GAAK,EAAG,EAAQ,MAW9B,KAEA,KAEA,aAAyB,CACxB,GAAM,IAAQ,EAAc,OAAS,EAErC,GAAI,EAAc,CACjB,GAAI,IAAQ,EAER,GAAS,EAAO,GAEpB,OAAS,IAAI,EAAG,GAAI,GAAM,KAAK,CAC9B,GAAM,IAAO,EAAM,IACnB,GAAG,GAAK,GAAK,GAAQ,GAAK,GAAK,GAAQ,GAAK,GAAK,IAGlD,GAAQ,EAAQ,EAAgB,EAChC,GAAS,EAAO,GAEhB,OAAS,IAAI,EAAG,GAAI,GAAM,KAAK,CAC9B,GAAM,IAAO,EAAM,IACnB,GAAG,GAAK,GAAK,GAAQ,GAAK,GAAK,GAAQ,GAAK,GAAK,SAE5C,CAEN,OAAS,IAAI,EAAG,GAAI,GAAM,KAAK,CAC9B,GAAM,IAAO,EAAM,IACnB,GAAG,GAAK,GAAI,GAAK,GAAI,GAAK,IAI3B,OAAS,IAAI,EAAG,GAAI,GAAM,KAAK,CAC9B,GAAM,IAAO,EAAM,IACnB,GAAG,GAAK,GAAK,EAAO,EAAO,GAAK,GAAK,EAAO,EAAO,GAAK,GAAK,EAAO,IAItE,EAAM,SAAS,GAAO,EAAc,OAAS,EAAI,GAAO,GAIzD,aAA0B,CACzB,GAAM,IAAQ,EAAc,OAAS,EACjC,GAAc,EAClB,EAAU,EAAS,IACnB,IAAe,EAAQ,OAEvB,OAAS,IAAI,EAAG,GAAK,EAAM,OAAQ,GAAI,GAAI,KAAK,CAC/C,GAAM,IAAQ,EAAM,IACpB,EAAU,GAAO,IAEjB,IAAe,GAAM,OAGtB,EAAM,SAAS,GAAO,EAAc,OAAS,EAAI,GAAO,GAGzD,WAAmB,GAAS,GAAa,CACxC,GAAI,IAAI,GAAQ,OAEhB,KAAO,EAAE,IAAK,GAAG,CAChB,GAAM,IAAI,GACN,GAAI,GAAI,EACZ,AAAI,GAAI,GAAG,IAAI,GAAQ,OAAS,GAEhC,OAAS,GAAI,EAAG,EAAK,EAAQ,EAAgB,EAAG,EAAI,EAAI,IAAK,CAC5D,GAAM,IAAQ,EAAO,EACf,GAAQ,EAAQ,GAAI,GACpB,GAAI,GAAc,GAAI,GACzB,GAAI,GAAc,GAAI,GACtB,GAAI,GAAc,GAAI,GACtB,GAAI,GAAc,GAAI,GACzB,GAAG,GAAG,GAAG,GAAG,MAKf,YAAW,GAAG,GAAG,GAAG,CACnB,EAAY,KAAK,IACjB,EAAY,KAAK,IACjB,EAAY,KAAK,IAGlB,YAAY,GAAG,GAAG,GAAG,CACpB,GAAU,IACV,GAAU,IACV,GAAU,IACV,GAAM,IAAY,EAAc,OAAS,EACnC,GAAM,EAAM,cAAc,EAAO,EAAe,GAAY,EAAG,GAAY,EAAG,GAAY,GAChG,GAAM,GAAI,IACV,GAAM,GAAI,IACV,GAAM,GAAI,IAGX,YAAY,GAAG,GAAG,GAAG,GAAG,CACvB,GAAU,IACV,GAAU,IACV,GAAU,IACV,GAAU,IACV,GAAU,IACV,GAAU,IACV,GAAM,IAAY,EAAc,OAAS,EACnC,EAAM,EAAM,mBAAmB,EAAO,EAAe,GAAY,EAAG,GAAY,EAAG,GAAY,EAAG,GAAY,GACpH,GAAM,EAAI,IACV,GAAM,EAAI,IACV,GAAM,EAAI,IACV,GAAM,EAAI,IACV,GAAM,EAAI,IACV,GAAM,EAAI,IAGX,YAAmB,GAAO,CACzB,EAAc,KAAK,EAAY,GAAQ,EAAI,IAC3C,EAAc,KAAK,EAAY,GAAQ,EAAI,IAC3C,EAAc,KAAK,EAAY,GAAQ,EAAI,IAG5C,YAAe,GAAS,CACvB,EAAQ,KAAK,GAAQ,GACrB,EAAQ,KAAK,GAAQ,KAKxB,QAAS,CACR,GAAM,GAAO,MAAM,SACb,EAAS,KAAK,WAAW,OACzB,EAAU,KAAK,WAAW,QAChC,MAAO,IAAS,EAAQ,EAAS,SAG3B,UAAS,EAAM,EAAQ,CAC7B,GAAM,GAAiB,GAEvB,OAAS,GAAI,EAAG,EAAK,EAAK,OAAO,OAAQ,EAAI,EAAI,IAAK,CACrD,GAAM,GAAQ,EAAO,EAAK,OAAO,IACjC,EAAe,KAAK,GAGrB,GAAM,GAAc,EAAK,QAAQ,YAEjC,MAAI,KAAgB,QACnB,GAAK,QAAQ,YAAc,GAAI,IAAO,EAAY,QAAQ,SAAS,IAG7D,GAAI,IAAgB,EAAgB,EAAK,UAKlD,GAAM,IAAmB,CACxB,cAAe,SAAU,EAAU,EAAU,EAAQ,EAAQ,EAAQ,CACpE,GAAM,GAAM,EAAS,EAAS,GACxB,EAAM,EAAS,EAAS,EAAI,GAC5B,EAAM,EAAS,EAAS,GACxB,EAAM,EAAS,EAAS,EAAI,GAC5B,EAAM,EAAS,EAAS,GACxB,EAAM,EAAS,EAAS,EAAI,GAClC,MAAO,CAAC,GAAI,IAAQ,EAAK,GAAM,GAAI,IAAQ,EAAK,GAAM,GAAI,IAAQ,EAAK,KAExE,mBAAoB,SAAU,EAAU,EAAU,EAAQ,EAAQ,EAAQ,EAAQ,CACjF,GAAM,GAAM,EAAS,EAAS,GACxB,EAAM,EAAS,EAAS,EAAI,GAC5B,EAAM,EAAS,EAAS,EAAI,GAC5B,EAAM,EAAS,EAAS,GACxB,EAAM,EAAS,EAAS,EAAI,GAC5B,EAAM,EAAS,EAAS,EAAI,GAC5B,EAAM,EAAS,EAAS,GACxB,EAAM,EAAS,EAAS,EAAI,GAC5B,EAAM,EAAS,EAAS,EAAI,GAC5B,EAAM,EAAS,EAAS,GACxB,EAAM,EAAS,EAAS,EAAI,GAC5B,EAAM,EAAS,EAAS,EAAI,GAElC,MAAI,MAAK,IAAI,EAAM,GAAO,KAAK,IAAI,EAAM,GACjC,CAAC,GAAI,IAAQ,EAAK,EAAI,GAAM,GAAI,IAAQ,EAAK,EAAI,GAAM,GAAI,IAAQ,EAAK,EAAI,GAAM,GAAI,IAAQ,EAAK,EAAI,IAEvG,CAAC,GAAI,IAAQ,EAAK,EAAI,GAAM,GAAI,IAAQ,EAAK,EAAI,GAAM,GAAI,IAAQ,EAAK,EAAI,GAAM,GAAI,IAAQ,EAAK,EAAI,MAKjH,YAAkB,EAAQ,EAAS,EAAM,CAGxC,GAFA,EAAK,OAAS,GAEV,MAAM,QAAQ,GACjB,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,IAAK,CAC9C,GAAM,GAAQ,EAAO,GACrB,EAAK,OAAO,KAAK,EAAM,UAGxB,GAAK,OAAO,KAAK,EAAO,MAGzB,MAAI,GAAQ,cAAgB,QAAW,GAAK,QAAQ,YAAc,EAAQ,YAAY,UAC/E,EAGR,gBAAkC,GAAmB,CACpD,YAAY,EAAS,EAAG,EAAS,EAAG,CACnC,GAAM,GAAK,GAAI,KAAK,KAAK,IAAM,EACzB,EAAW,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GACjI,EAAU,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5M,MAAM,EAAU,EAAS,EAAQ,GACjC,KAAK,KAAO,sBACZ,KAAK,WAAa,CACjB,OAAQ,EACR,OAAQ,SAIH,UAAS,EAAM,CACrB,MAAO,IAAI,IAAoB,EAAK,OAAQ,EAAK,SAKnD,gBAA4B,GAAe,CAC1C,YAAY,EAAS,CAAC,GAAI,IAAQ,EAAG,IAAM,GAAI,IAAQ,GAAK,GAAI,GAAI,IAAQ,EAAG,MAAQ,EAAW,GAAI,EAAW,EAAG,EAAY,KAAK,GAAK,EAAG,CAC5I,QACA,KAAK,KAAO,gBACZ,KAAK,WAAa,CACjB,OAAQ,EACR,SAAU,EACV,SAAU,EACV,UAAW,GAEZ,EAAW,KAAK,MAAM,GAEtB,EAAY,GAAM,EAAW,EAAG,KAAK,GAAK,GAE1C,GAAM,GAAU,GACV,EAAW,GACX,EAAM,GAEN,EAAkB,EAAM,EACxB,EAAS,GAAI,GACb,EAAK,GAAI,IAEf,OAAS,GAAI,EAAG,GAAK,EAAU,IAAK,CACnC,GAAM,GAAM,EAAW,EAAI,EAAkB,EACvC,EAAM,KAAK,IAAI,GACf,EAAM,KAAK,IAAI,GAErB,OAAS,GAAI,EAAG,GAAK,EAAO,OAAS,EAAG,IAEvC,EAAO,EAAI,EAAO,GAAG,EAAI,EACzB,EAAO,EAAI,EAAO,GAAG,EACrB,EAAO,EAAI,EAAO,GAAG,EAAI,EACzB,EAAS,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,GAEzC,EAAG,EAAI,EAAI,EACX,EAAG,EAAI,EAAK,GAAO,OAAS,GAC5B,EAAI,KAAK,EAAG,EAAG,EAAG,GAKpB,OAAS,GAAI,EAAG,EAAI,EAAU,IAC7B,OAAS,GAAI,EAAG,EAAI,EAAO,OAAS,EAAG,IAAK,CAC3C,GAAM,GAAO,EAAI,EAAI,EAAO,OACtB,EAAI,EACJ,EAAI,EAAO,EAAO,OAClB,EAAI,EAAO,EAAO,OAAS,EAC3B,EAAI,EAAO,EAEjB,EAAQ,KAAK,EAAG,EAAG,GACnB,EAAQ,KAAK,EAAG,EAAG,GAYrB,GAPA,KAAK,SAAS,GACd,KAAK,aAAa,WAAY,GAAI,IAAuB,EAAU,IACnE,KAAK,aAAa,KAAM,GAAI,IAAuB,EAAK,IAExD,KAAK,uBAGD,IAAc,KAAK,GAAK,EAAG,CAC9B,GAAM,GAAU,KAAK,WAAW,OAAO,MACjC,EAAK,GAAI,GACT,EAAK,GAAI,GACT,EAAI,GAAI,GAER,EAAO,EAAW,EAAO,OAAS,EAExC,OAAS,GAAI,EAAG,EAAI,EAAG,EAAI,EAAO,OAAQ,IAAK,GAAK,EAEnD,EAAG,EAAI,EAAQ,EAAI,GACnB,EAAG,EAAI,EAAQ,EAAI,GACnB,EAAG,EAAI,EAAQ,EAAI,GAEnB,EAAG,EAAI,EAAQ,EAAO,EAAI,GAC1B,EAAG,EAAI,EAAQ,EAAO,EAAI,GAC1B,EAAG,EAAI,EAAQ,EAAO,EAAI,GAE1B,EAAE,WAAW,EAAI,GAAI,YAErB,EAAQ,EAAI,GAAK,EAAQ,EAAO,EAAI,GAAK,EAAE,EAC3C,EAAQ,EAAI,GAAK,EAAQ,EAAO,EAAI,GAAK,EAAE,EAC3C,EAAQ,EAAI,GAAK,EAAQ,EAAO,EAAI,GAAK,EAAE,SAKvC,UAAS,EAAM,CACrB,MAAO,IAAI,IAAc,EAAK,OAAQ,EAAK,SAAU,EAAK,SAAU,EAAK,YAK3E,gBAAiC,GAAmB,CACnD,YAAY,EAAS,EAAG,EAAS,EAAG,CACnC,GAAM,GAAW,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACjE,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtF,MAAM,EAAU,EAAS,EAAQ,GACjC,KAAK,KAAO,qBACZ,KAAK,WAAa,CACjB,OAAQ,EACR,OAAQ,SAIH,UAAS,EAAM,CACrB,MAAO,IAAI,IAAmB,EAAK,OAAQ,EAAK,SAKlD,gBAA2B,GAAe,CACzC,YAAY,EAAc,GAAK,EAAc,EAAG,EAAgB,EAAG,EAAc,EAAG,EAAa,EAAG,EAAc,KAAK,GAAK,EAAG,CAC9H,QACA,KAAK,KAAO,eACZ,KAAK,WAAa,CACjB,YAAa,EACb,YAAa,EACb,cAAe,EACf,YAAa,EACb,WAAY,EACZ,YAAa,GAEd,EAAgB,KAAK,IAAI,EAAG,GAC5B,EAAc,KAAK,IAAI,EAAG,GAE1B,GAAM,GAAU,GACV,EAAW,GACX,EAAU,GACV,EAAM,GAER,EAAS,EACP,EAAc,GAAc,GAAe,EAC3C,EAAS,GAAI,GACb,EAAK,GAAI,IAEf,OAAS,GAAI,EAAG,GAAK,EAAa,IAAK,CACtC,OAAS,GAAI,EAAG,GAAK,EAAe,IAAK,CAExC,GAAM,GAAU,EAAa,EAAI,EAAgB,EAEjD,EAAO,EAAI,EAAS,KAAK,IAAI,GAC7B,EAAO,EAAI,EAAS,KAAK,IAAI,GAC7B,EAAS,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,GAEzC,EAAQ,KAAK,EAAG,EAAG,GAEnB,EAAG,EAAK,GAAO,EAAI,EAAc,GAAK,EACtC,EAAG,EAAK,GAAO,EAAI,EAAc,GAAK,EACtC,EAAI,KAAK,EAAG,EAAG,EAAG,GAInB,GAAU,EAIX,OAAS,GAAI,EAAG,EAAI,EAAa,IAAK,CACrC,GAAM,GAAoB,EAAK,GAAgB,GAE/C,OAAS,GAAI,EAAG,EAAI,EAAe,IAAK,CACvC,GAAM,GAAU,EAAI,EACd,EAAI,EACJ,EAAI,EAAU,EAAgB,EAC9B,EAAI,EAAU,EAAgB,EAC9B,EAAI,EAAU,EAEpB,EAAQ,KAAK,EAAG,EAAG,GACnB,EAAQ,KAAK,EAAG,EAAG,IAKrB,KAAK,SAAS,GACd,KAAK,aAAa,WAAY,GAAI,IAAuB,EAAU,IACnE,KAAK,aAAa,SAAU,GAAI,IAAuB,EAAS,IAChE,KAAK,aAAa,KAAM,GAAI,IAAuB,EAAK,UAGlD,UAAS,EAAM,CACrB,MAAO,IAAI,IAAa,EAAK,YAAa,EAAK,YAAa,EAAK,cAAe,EAAK,YAAa,EAAK,WAAY,EAAK,cAK1H,gBAA4B,GAAe,CAC1C,YAAY,EAAS,GAAI,IAAM,CAAC,GAAI,IAAQ,EAAG,IAAM,GAAI,IAAQ,IAAM,KAAO,GAAI,IAAQ,GAAK,OAAS,EAAgB,GAAI,CAC3H,QACA,KAAK,KAAO,gBACZ,KAAK,WAAa,CACjB,OAAQ,EACR,cAAe,GAGhB,GAAM,GAAU,GACV,EAAW,GACX,EAAU,GACV,EAAM,GAER,EAAa,EACb,EAAa,EAEjB,GAAI,MAAM,QAAQ,KAAY,GAC7B,EAAS,OAET,QAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,IAClC,EAAS,EAAO,IAChB,KAAK,SAAS,EAAY,EAAY,GAEtC,GAAc,EACd,EAAa,EAKf,KAAK,SAAS,GACd,KAAK,aAAa,WAAY,GAAI,IAAuB,EAAU,IACnE,KAAK,aAAa,SAAU,GAAI,IAAuB,EAAS,IAChE,KAAK,aAAa,KAAM,GAAI,IAAuB,EAAK,IAExD,WAAkB,EAAO,CACxB,GAAM,GAAc,EAAS,OAAS,EAChC,EAAS,EAAM,cAAc,GAC/B,EAAgB,EAAO,MACrB,EAAa,EAAO,MAE1B,AAAI,GAAW,YAAY,KAAmB,IAC7C,GAAgB,EAAc,WAG/B,OAAS,GAAI,EAAG,EAAI,EAAW,OAAQ,EAAI,EAAG,IAAK,CAClD,GAAM,GAAY,EAAW,GAE7B,AAAI,GAAW,YAAY,KAAe,IACzC,GAAW,GAAK,EAAU,WAI5B,GAAM,GAAQ,GAAW,iBAAiB,EAAe,GAEzD,OAAS,GAAI,EAAG,EAAI,EAAW,OAAQ,EAAI,EAAG,IAAK,CAClD,GAAM,GAAY,EAAW,GAC7B,EAAgB,EAAc,OAAO,GAItC,OAAS,GAAI,EAAG,EAAI,EAAc,OAAQ,EAAI,EAAG,IAAK,CACrD,GAAM,GAAS,EAAc,GAC7B,EAAS,KAAK,EAAO,EAAG,EAAO,EAAG,GAClC,EAAQ,KAAK,EAAG,EAAG,GACnB,EAAI,KAAK,EAAO,EAAG,EAAO,GAI3B,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,IAAK,CAC7C,GAAM,GAAO,EAAM,GACb,EAAI,EAAK,GAAK,EACd,EAAI,EAAK,GAAK,EACd,EAAI,EAAK,GAAK,EACpB,EAAQ,KAAK,EAAG,EAAG,GACnB,GAAc,IAKjB,QAAS,CACR,GAAM,GAAO,MAAM,SACb,EAAS,KAAK,WAAW,OAC/B,MAAO,IAAO,EAAQ,SAGhB,UAAS,EAAM,EAAQ,CAC7B,GAAM,GAAiB,GAEvB,OAAS,GAAI,EAAG,EAAK,EAAK,OAAO,OAAQ,EAAI,EAAI,IAAK,CACrD,GAAM,GAAQ,EAAO,EAAK,OAAO,IACjC,EAAe,KAAK,GAGrB,MAAO,IAAI,IAAc,EAAgB,EAAK,gBAKhD,YAAgB,EAAQ,EAAM,CAG7B,GAFA,EAAK,OAAS,GAEV,MAAM,QAAQ,GACjB,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,IAAK,CAC9C,GAAM,GAAQ,EAAO,GACrB,EAAK,OAAO,KAAK,EAAM,UAGxB,GAAK,OAAO,KAAK,EAAO,MAGzB,MAAO,GAGR,gBAA6B,GAAe,CAC3C,YAAY,EAAS,EAAG,EAAgB,GAAI,EAAiB,GAAI,EAAW,EAAG,EAAY,KAAK,GAAK,EAAG,EAAa,EAAG,EAAc,KAAK,GAAI,CAC9I,QACA,KAAK,KAAO,iBACZ,KAAK,WAAa,CACjB,OAAQ,EACR,cAAe,EACf,eAAgB,EAChB,SAAU,EACV,UAAW,EACX,WAAY,EACZ,YAAa,GAEd,EAAgB,KAAK,IAAI,EAAG,KAAK,MAAM,IACvC,EAAiB,KAAK,IAAI,EAAG,KAAK,MAAM,IACxC,GAAM,GAAW,KAAK,IAAI,EAAa,EAAa,KAAK,IACrD,EAAQ,EACN,EAAO,GACP,EAAS,GAAI,GACb,EAAS,GAAI,GAEb,EAAU,GACV,EAAW,GACX,EAAU,GACV,EAAM,GAEZ,OAAS,GAAK,EAAG,GAAM,EAAgB,IAAM,CAC5C,GAAM,GAAc,GACd,EAAI,EAAK,EAEX,EAAU,EAEd,AAAI,GAAM,GAAK,GAAc,EAC5B,EAAU,GAAM,EACN,GAAM,GAAkB,GAAY,KAAK,IACnD,GAAU,IAAO,GAGlB,OAAS,GAAK,EAAG,GAAM,EAAe,IAAM,CAC3C,GAAM,GAAI,EAAK,EAEf,EAAO,EAAI,CAAC,EAAS,KAAK,IAAI,EAAW,EAAI,GAAa,KAAK,IAAI,EAAa,EAAI,GACpF,EAAO,EAAI,EAAS,KAAK,IAAI,EAAa,EAAI,GAC9C,EAAO,EAAI,EAAS,KAAK,IAAI,EAAW,EAAI,GAAa,KAAK,IAAI,EAAa,EAAI,GACnF,EAAS,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,GAEzC,EAAO,KAAK,GAAQ,YACpB,EAAQ,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,GAExC,EAAI,KAAK,EAAI,EAAS,EAAI,GAC1B,EAAY,KAAK,KAGlB,EAAK,KAAK,GAIX,OAAS,GAAK,EAAG,EAAK,EAAgB,IACrC,OAAS,GAAK,EAAG,EAAK,EAAe,IAAM,CAC1C,GAAM,GAAI,EAAK,GAAI,EAAK,GAClB,EAAI,EAAK,GAAI,GACb,EAAI,EAAK,EAAK,GAAG,GACjB,EAAI,EAAK,EAAK,GAAG,EAAK,GAC5B,AAAI,KAAO,GAAK,EAAa,IAAG,EAAQ,KAAK,EAAG,EAAG,GAC/C,KAAO,EAAiB,GAAK,EAAW,KAAK,KAAI,EAAQ,KAAK,EAAG,EAAG,GAK1E,KAAK,SAAS,GACd,KAAK,aAAa,WAAY,GAAI,IAAuB,EAAU,IACnE,KAAK,aAAa,SAAU,GAAI,IAAuB,EAAS,IAChE,KAAK,aAAa,KAAM,GAAI,IAAuB,EAAK,UAGlD,UAAS,EAAM,CACrB,MAAO,IAAI,IAAe,EAAK,OAAQ,EAAK,cAAe,EAAK,eAAgB,EAAK,SAAU,EAAK,UAAW,EAAK,WAAY,EAAK,cAKvI,gBAAkC,GAAmB,CACpD,YAAY,EAAS,EAAG,EAAS,EAAG,CACnC,GAAM,GAAW,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,IAClD,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClD,MAAM,EAAU,EAAS,EAAQ,GACjC,KAAK,KAAO,sBACZ,KAAK,WAAa,CACjB,OAAQ,EACR,OAAQ,SAIH,UAAS,EAAM,CACrB,MAAO,IAAI,IAAoB,EAAK,OAAQ,EAAK,SAKnD,gBAA4B,GAAe,CAC1C,YAAY,EAAS,EAAG,EAAO,GAAK,EAAiB,EAAG,EAAkB,EAAG,EAAM,KAAK,GAAK,EAAG,CAC/F,QACA,KAAK,KAAO,gBACZ,KAAK,WAAa,CACjB,OAAQ,EACR,KAAM,EACN,eAAgB,EAChB,gBAAiB,EACjB,IAAK,GAEN,EAAiB,KAAK,MAAM,GAC5B,EAAkB,KAAK,MAAM,GAE7B,GAAM,GAAU,GACV,EAAW,GACX,EAAU,GACV,EAAM,GAEN,EAAS,GAAI,GACb,EAAS,GAAI,GACb,EAAS,GAAI,GAEnB,OAAS,GAAI,EAAG,GAAK,EAAgB,IACpC,OAAS,GAAI,EAAG,GAAK,EAAiB,IAAK,CAC1C,GAAM,GAAI,EAAI,EAAkB,EAC1B,EAAI,EAAI,EAAiB,KAAK,GAAK,EAEzC,EAAO,EAAK,GAAS,EAAO,KAAK,IAAI,IAAM,KAAK,IAAI,GACpD,EAAO,EAAK,GAAS,EAAO,KAAK,IAAI,IAAM,KAAK,IAAI,GACpD,EAAO,EAAI,EAAO,KAAK,IAAI,GAC3B,EAAS,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,GAEzC,EAAO,EAAI,EAAS,KAAK,IAAI,GAC7B,EAAO,EAAI,EAAS,KAAK,IAAI,GAC7B,EAAO,WAAW,EAAQ,GAAQ,YAClC,EAAQ,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,GAExC,EAAI,KAAK,EAAI,GACb,EAAI,KAAK,EAAI,GAKf,OAAS,GAAI,EAAG,GAAK,EAAgB,IACpC,OAAS,GAAI,EAAG,GAAK,EAAiB,IAAK,CAE1C,GAAM,GAAK,GAAkB,GAAK,EAAI,EAAI,EACpC,EAAK,GAAkB,GAAM,GAAI,GAAK,EAAI,EAC1C,EAAK,GAAkB,GAAM,GAAI,GAAK,EACtC,EAAK,GAAkB,GAAK,EAAI,EAEtC,EAAQ,KAAK,EAAG,EAAG,GACnB,EAAQ,KAAK,EAAG,EAAG,GAKrB,KAAK,SAAS,GACd,KAAK,aAAa,WAAY,GAAI,IAAuB,EAAU,IACnE,KAAK,aAAa,SAAU,GAAI,IAAuB,EAAS,IAChE,KAAK,aAAa,KAAM,GAAI,IAAuB,EAAK,UAGlD,UAAS,EAAM,CACrB,MAAO,IAAI,IAAc,EAAK,OAAQ,EAAK,KAAM,EAAK,eAAgB,EAAK,gBAAiB,EAAK,MAKnG,gBAAgC,GAAe,CAC9C,YAAY,EAAS,EAAG,EAAO,GAAK,EAAkB,GAAI,EAAiB,EAAG,EAAI,EAAG,EAAI,EAAG,CAC3F,QACA,KAAK,KAAO,oBACZ,KAAK,WAAa,CACjB,OAAQ,EACR,KAAM,EACN,gBAAiB,EACjB,eAAgB,EAChB,EAAG,EACH,EAAG,GAEJ,EAAkB,KAAK,MAAM,GAC7B,EAAiB,KAAK,MAAM,GAE5B,GAAM,GAAU,GACV,EAAW,GACX,EAAU,GACV,EAAM,GAEN,EAAS,GAAI,GACb,EAAS,GAAI,GACb,EAAK,GAAI,GACT,EAAK,GAAI,GACT,EAAI,GAAI,GACR,EAAI,GAAI,GACR,EAAI,GAAI,GAEd,OAAS,GAAI,EAAG,GAAK,EAAiB,EAAE,EAAG,CAE1C,GAAM,GAAI,EAAI,EAAkB,EAAI,KAAK,GAAK,EAG9C,EAAyB,EAAG,EAAG,EAAG,EAAQ,GAC1C,EAAyB,EAAI,IAAM,EAAG,EAAG,EAAQ,GAEjD,EAAE,WAAW,EAAI,GACjB,EAAE,WAAW,EAAI,GACjB,EAAE,aAAa,EAAG,GAClB,EAAE,aAAa,EAAG,GAElB,EAAE,YACF,EAAE,YAEF,OAAS,GAAI,EAAG,GAAK,EAAgB,EAAE,EAAG,CAGzC,GAAM,GAAI,EAAI,EAAiB,KAAK,GAAK,EACnC,EAAK,CAAC,EAAO,KAAK,IAAI,GACtB,EAAK,EAAO,KAAK,IAAI,GAG3B,EAAO,EAAI,EAAG,EAAK,GAAK,EAAE,EAAI,EAAK,EAAE,GACrC,EAAO,EAAI,EAAG,EAAK,GAAK,EAAE,EAAI,EAAK,EAAE,GACrC,EAAO,EAAI,EAAG,EAAK,GAAK,EAAE,EAAI,EAAK,EAAE,GACrC,EAAS,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,GAEzC,EAAO,WAAW,EAAQ,GAAI,YAC9B,EAAQ,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,GAExC,EAAI,KAAK,EAAI,GACb,EAAI,KAAK,EAAI,IAKf,OAAS,GAAI,EAAG,GAAK,EAAiB,IACrC,OAAS,GAAI,EAAG,GAAK,EAAgB,IAAK,CAEzC,GAAM,GAAK,GAAiB,GAAM,GAAI,GAAM,GAAI,GAC1C,EAAK,GAAiB,GAAK,EAAK,GAAI,GACpC,EAAK,GAAiB,GAAK,EAAI,EAC/B,EAAK,GAAiB,GAAM,GAAI,GAAK,EAE3C,EAAQ,KAAK,EAAG,EAAG,GACnB,EAAQ,KAAK,EAAG,EAAG,GAKrB,KAAK,SAAS,GACd,KAAK,aAAa,WAAY,GAAI,IAAuB,EAAU,IACnE,KAAK,aAAa,SAAU,GAAI,IAAuB,EAAS,IAChE,KAAK,aAAa,KAAM,GAAI,IAAuB,EAAK,IAExD,WAAkC,EAAG,EAAG,EAAG,EAAQ,EAAU,CAC5D,GAAM,GAAK,KAAK,IAAI,GACd,EAAK,KAAK,IAAI,GACd,EAAU,EAAI,EAAI,EAClB,EAAK,KAAK,IAAI,GACpB,EAAS,EAAI,EAAU,GAAI,GAAM,GAAM,EACvC,EAAS,EAAI,EAAU,GAAI,GAAM,EAAK,GACtC,EAAS,EAAI,EAAS,KAAK,IAAI,GAAW,UAIrC,UAAS,EAAM,CACrB,MAAO,IAAI,IAAkB,EAAK,OAAQ,EAAK,KAAM,EAAK,gBAAiB,EAAK,eAAgB,EAAK,EAAG,EAAK,IAK/G,gBAA2B,GAAe,CACzC,YAAY,EAAO,GAAI,IAAsB,GAAI,GAAQ,GAAI,GAAI,GAAI,GAAI,GAAQ,GAAI,EAAG,GAAI,GAAI,GAAQ,EAAG,EAAG,IAAK,EAAkB,GAAI,EAAS,EAAG,EAAiB,EAAG,EAAS,GAAO,CACxL,QACA,KAAK,KAAO,eACZ,KAAK,WAAa,CACjB,KAAM,EACN,gBAAiB,EACjB,OAAQ,EACR,eAAgB,EAChB,OAAQ,GAET,GAAM,GAAS,EAAK,oBAAoB,EAAiB,GAEzD,KAAK,SAAW,EAAO,SACvB,KAAK,QAAU,EAAO,QACtB,KAAK,UAAY,EAAO,UAExB,GAAM,GAAS,GAAI,GACb,EAAS,GAAI,GACb,EAAK,GAAI,IACX,EAAI,GAAI,GAEN,EAAW,GACX,EAAU,GACV,EAAM,GACN,EAAU,GAEhB,IAEA,KAAK,SAAS,GACd,KAAK,aAAa,WAAY,GAAI,IAAuB,EAAU,IACnE,KAAK,aAAa,SAAU,GAAI,IAAuB,EAAS,IAChE,KAAK,aAAa,KAAM,GAAI,IAAuB,EAAK,IAExD,YAA8B,CAC7B,OAAS,GAAI,EAAG,EAAI,EAAiB,IACpC,EAAgB,GAOjB,EAAgB,IAAW,GAAQ,EAAkB,GAGrD,IAEA,IAGD,WAAyB,EAAG,CAE3B,EAAI,EAAK,WAAW,EAAI,EAAiB,GAEzC,GAAM,GAAI,EAAO,QAAQ,GACnB,EAAI,EAAO,UAAU,GAE3B,OAAS,GAAI,EAAG,GAAK,EAAgB,IAAK,CACzC,GAAM,GAAI,EAAI,EAAiB,KAAK,GAAK,EACnC,EAAM,KAAK,IAAI,GACf,EAAM,CAAC,KAAK,IAAI,GAEtB,EAAO,EAAI,EAAM,EAAE,EAAI,EAAM,EAAE,EAC/B,EAAO,EAAI,EAAM,EAAE,EAAI,EAAM,EAAE,EAC/B,EAAO,EAAI,EAAM,EAAE,EAAI,EAAM,EAAE,EAC/B,EAAO,YACP,EAAQ,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,GAExC,EAAO,EAAI,EAAE,EAAI,EAAS,EAAO,EACjC,EAAO,EAAI,EAAE,EAAI,EAAS,EAAO,EACjC,EAAO,EAAI,EAAE,EAAI,EAAS,EAAO,EACjC,EAAS,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,IAI3C,YAA2B,CAC1B,OAAS,GAAI,EAAG,GAAK,EAAiB,IACrC,OAAS,GAAI,EAAG,GAAK,EAAgB,IAAK,CACzC,GAAM,GAAK,GAAiB,GAAM,GAAI,GAAM,GAAI,GAC1C,EAAK,GAAiB,GAAK,EAAK,GAAI,GACpC,EAAK,GAAiB,GAAK,EAAI,EAC/B,EAAK,GAAiB,GAAM,GAAI,GAAK,EAE3C,EAAQ,KAAK,EAAG,EAAG,GACnB,EAAQ,KAAK,EAAG,EAAG,IAKtB,YAAuB,CACtB,OAAS,GAAI,EAAG,GAAK,EAAiB,IACrC,OAAS,GAAI,EAAG,GAAK,EAAgB,IACpC,EAAG,EAAI,EAAI,EACX,EAAG,EAAI,EAAI,EACX,EAAI,KAAK,EAAG,EAAG,EAAG,IAMtB,QAAS,CACR,GAAM,GAAO,MAAM,SACnB,SAAK,KAAO,KAAK,WAAW,KAAK,SAC1B,QAGD,UAAS,EAAM,CAGrB,MAAO,IAAI,IAAa,GAAI,IAAO,EAAK,KAAK,QAAQ,SAAS,EAAK,MAAO,EAAK,gBAAiB,EAAK,OAAQ,EAAK,eAAgB,EAAK,SAKzI,gBAAgC,GAAe,CAC9C,YAAY,EAAW,KAAM,CAC5B,QAMA,GALA,KAAK,KAAO,oBACZ,KAAK,WAAa,CACjB,SAAU,GAGP,IAAa,KAAM,CAEtB,GAAM,GAAW,GACX,EAAQ,GAAI,KAEZ,EAAQ,GAAI,GACZ,EAAM,GAAI,GAEhB,GAAI,EAAS,QAAU,KAAM,CAE5B,GAAM,GAAW,EAAS,WAAW,SAC/B,EAAU,EAAS,MACrB,EAAS,EAAS,OAEtB,AAAI,EAAO,SAAW,GACrB,GAAS,CAAC,CACT,MAAO,EACP,MAAO,EAAQ,MACf,cAAe,KAKjB,OAAS,GAAI,EAAG,EAAK,EAAO,OAAQ,EAAI,EAAI,EAAE,EAAG,CAChD,GAAM,GAAQ,EAAO,GACf,EAAa,EAAM,MACnB,EAAa,EAAM,MAEzB,OAAS,GAAI,EAAY,EAAI,EAAa,EAAY,EAAI,EAAG,GAAK,EACjE,OAAS,GAAI,EAAG,EAAI,EAAG,IAAK,CAC3B,GAAM,GAAS,EAAQ,KAAK,EAAI,GAC1B,EAAS,EAAQ,KAAK,EAAK,GAAI,GAAK,GAC1C,EAAM,oBAAoB,EAAU,GACpC,EAAI,oBAAoB,EAAU,GAE9B,GAAa,EAAO,EAAK,KAAW,IACvC,GAAS,KAAK,EAAM,EAAG,EAAM,EAAG,EAAM,GACtC,EAAS,KAAK,EAAI,EAAG,EAAI,EAAG,EAAI,UAK9B,CAEN,GAAM,GAAW,EAAS,WAAW,SAErC,OAAS,GAAI,EAAG,EAAI,EAAS,MAAQ,EAAG,EAAI,EAAG,IAC9C,OAAS,GAAI,EAAG,EAAI,EAAG,IAAK,CAG3B,GAAM,GAAS,EAAI,EAAI,EACjB,EAAS,EAAI,EAAK,GAAI,GAAK,EACjC,EAAM,oBAAoB,EAAU,GACpC,EAAI,oBAAoB,EAAU,GAE9B,GAAa,EAAO,EAAK,KAAW,IACvC,GAAS,KAAK,EAAM,EAAG,EAAM,EAAG,EAAM,GACtC,EAAS,KAAK,EAAI,EAAG,EAAI,EAAG,EAAI,KAOpC,KAAK,aAAa,WAAY,GAAI,IAAuB,EAAU,MAMtE,YAAsB,EAAO,EAAK,EAAO,CACxC,GAAM,GAAQ,GAAG,EAAM,KAAK,EAAM,KAAK,EAAM,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,IAClE,EAAQ,GAAG,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAAM,KAAK,EAAM,KAAK,EAAM,IAExE,MAAI,GAAM,IAAI,KAAW,IAAQ,EAAM,IAAI,KAAW,GAC9C,GAEP,GAAM,IAAI,EAAO,GACV,IAIT,GAAI,IAA0B,OAAO,OAAO,CAC3C,UAAW,KACX,YAAa,GACb,kBAAmB,GACnB,eAAgB,GAChB,qBAAsB,GACtB,aAAc,GACd,mBAAoB,GACpB,iBAAkB,GAClB,uBAAwB,GACxB,qBAAsB,GACtB,2BAA4B,GAC5B,cAAe,GACf,gBAAiB,GACjB,sBAAuB,GACvB,oBAAqB,GACrB,0BAA2B,GAC3B,cAAe,GACf,oBAAqB,GACrB,mBAAoB,GACpB,yBAA0B,GAC1B,cAAe,GACf,oBAAqB,GACrB,mBAAoB,GACpB,yBAA0B,GAC1B,aAAc,GACd,mBAAoB,GACpB,cAAe,GACf,oBAAqB,GACrB,eAAgB,GAChB,qBAAsB,GACtB,oBAAqB,GACrB,0BAA2B,GAC3B,cAAe,GACf,oBAAqB,GACrB,kBAAmB,GACnB,wBAAyB,GACzB,aAAc,GACd,mBAAoB,GACpB,kBAAmB,KASpB,gBAA6B,GAAS,CACrC,YAAY,EAAY,CACvB,QACA,KAAK,KAAO,iBACZ,KAAK,MAAQ,GAAI,IAAM,GACvB,KAAK,YAAc,GACnB,KAAK,UAAU,GAGhB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,MAAM,KAAK,EAAO,OAChB,MAKT,GAAe,UAAU,iBAAmB,GAkD5C,gBAAmC,GAAS,CAC3C,YAAY,EAAY,CACvB,QACA,KAAK,QAAU,CACd,SAAY,IAEb,KAAK,KAAO,uBACZ,KAAK,MAAQ,GAAI,IAAM,UAEvB,KAAK,UAAY,EACjB,KAAK,UAAY,EACjB,KAAK,IAAM,KACX,KAAK,SAAW,KAChB,KAAK,kBAAoB,EACzB,KAAK,MAAQ,KACb,KAAK,eAAiB,EACtB,KAAK,SAAW,GAAI,IAAM,GAC1B,KAAK,kBAAoB,EACzB,KAAK,YAAc,KACnB,KAAK,QAAU,KACf,KAAK,UAAY,EACjB,KAAK,UAAY,KACjB,KAAK,cAAgB,GACrB,KAAK,YAAc,GAAI,IAAQ,EAAG,GAClC,KAAK,gBAAkB,KACvB,KAAK,kBAAoB,EACzB,KAAK,iBAAmB,EACxB,KAAK,aAAe,KACpB,KAAK,aAAe,KACpB,KAAK,SAAW,KAChB,KAAK,OAAS,KACd,KAAK,gBAAkB,EACvB,KAAK,gBAAkB,IACvB,KAAK,UAAY,GACjB,KAAK,mBAAqB,EAC1B,KAAK,iBAAmB,QACxB,KAAK,kBAAoB,QACzB,KAAK,YAAc,GACnB,KAAK,UAAU,GAGhB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,QAAU,CACd,SAAY,IAEb,KAAK,MAAM,KAAK,EAAO,OACvB,KAAK,UAAY,EAAO,UACxB,KAAK,UAAY,EAAO,UACxB,KAAK,IAAM,EAAO,IAClB,KAAK,SAAW,EAAO,SACvB,KAAK,kBAAoB,EAAO,kBAChC,KAAK,MAAQ,EAAO,MACpB,KAAK,eAAiB,EAAO,eAC7B,KAAK,SAAS,KAAK,EAAO,UAC1B,KAAK,YAAc,EAAO,YAC1B,KAAK,kBAAoB,EAAO,kBAChC,KAAK,QAAU,EAAO,QACtB,KAAK,UAAY,EAAO,UACxB,KAAK,UAAY,EAAO,UACxB,KAAK,cAAgB,EAAO,cAC5B,KAAK,YAAY,KAAK,EAAO,aAC7B,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,kBAAoB,EAAO,kBAChC,KAAK,iBAAmB,EAAO,iBAC/B,KAAK,aAAe,EAAO,aAC3B,KAAK,aAAe,EAAO,aAC3B,KAAK,SAAW,EAAO,SACvB,KAAK,OAAS,EAAO,OACrB,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,UAAY,EAAO,UACxB,KAAK,mBAAqB,EAAO,mBACjC,KAAK,iBAAmB,EAAO,iBAC/B,KAAK,kBAAoB,EAAO,kBAChC,KAAK,YAAc,EAAO,YACnB,MAKT,GAAqB,UAAU,uBAAyB,GAiCxD,gBAAmC,GAAqB,CACvD,YAAY,EAAY,CACvB,QACA,KAAK,QAAU,CACd,SAAY,GACZ,SAAY,IAEb,KAAK,KAAO,uBACZ,KAAK,aAAe,KACpB,KAAK,mBAAqB,EAC1B,KAAK,sBAAwB,KAC7B,KAAK,qBAAuB,GAAI,IAAQ,EAAG,GAC3C,KAAK,mBAAqB,KAC1B,KAAK,IAAM,IACX,OAAO,eAAe,KAAM,eAAgB,CAC3C,IAAK,UAAY,CAChB,MAAO,IAAM,IAAO,MAAK,IAAM,GAAM,MAAK,IAAM,GAAI,EAAG,IAExD,IAAK,SAAU,EAAc,CAC5B,KAAK,IAAO,GAAI,GAAM,GAAiB,GAAI,GAAM,MAGnD,KAAK,UAAY,GAAI,IAAM,GAC3B,KAAK,eAAiB,EACtB,KAAK,gBAAkB,KACvB,KAAK,UAAY,IACjB,KAAK,aAAe,KACpB,KAAK,oBAAsB,EAC3B,KAAK,gBAAkB,GAAI,IAAM,EAAG,EAAG,GACvC,KAAK,kBAAoB,EACzB,KAAK,qBAAuB,KAC5B,KAAK,aAAe,GAAI,IAAM,EAAG,EAAG,GACpC,KAAK,gBAAkB,KACvB,KAAK,OAAS,EACd,KAAK,WAAa,EAClB,KAAK,cAAgB,EACrB,KAAK,UAAU,MAGZ,QAAQ,CACX,MAAO,MAAK,UAGT,OAAM,EAAO,CAChB,AAAI,KAAK,OAAS,GAAM,EAAQ,GAC/B,KAAK,UAGN,KAAK,OAAS,KAGX,YAAY,CACf,MAAO,MAAK,cAGT,WAAU,EAAO,CACpB,AAAI,KAAK,WAAa,GAAM,EAAQ,GACnC,KAAK,UAGN,KAAK,WAAa,KAGf,eAAe,CAClB,MAAO,MAAK,iBAGT,cAAa,EAAO,CACvB,AAAI,KAAK,cAAgB,GAAM,EAAQ,GACtC,KAAK,UAGN,KAAK,cAAgB,EAGtB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,QAAU,CACd,SAAY,GACZ,SAAY,IAEb,KAAK,UAAY,EAAO,UACxB,KAAK,aAAe,EAAO,aAC3B,KAAK,mBAAqB,EAAO,mBACjC,KAAK,sBAAwB,EAAO,sBACpC,KAAK,mBAAqB,EAAO,mBACjC,KAAK,qBAAqB,KAAK,EAAO,sBACtC,KAAK,IAAM,EAAO,IAClB,KAAK,MAAQ,EAAO,MACpB,KAAK,UAAU,KAAK,EAAO,WAC3B,KAAK,eAAiB,EAAO,eAC7B,KAAK,aAAe,EAAO,aAC3B,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,UAAY,EAAO,UACxB,KAAK,aAAe,EAAO,aAC3B,KAAK,oBAAsB,EAAO,oBAClC,KAAK,gBAAgB,KAAK,EAAO,iBACjC,KAAK,kBAAoB,EAAO,kBAChC,KAAK,qBAAuB,EAAO,qBACnC,KAAK,aAAa,KAAK,EAAO,cAC9B,KAAK,gBAAkB,EAAO,gBACvB,MAKT,GAAqB,UAAU,uBAAyB,GAgDxD,gBAAgC,GAAS,CACxC,YAAY,EAAY,CACvB,QACA,KAAK,KAAO,oBACZ,KAAK,MAAQ,GAAI,IAAM,UAEvB,KAAK,SAAW,GAAI,IAAM,SAC1B,KAAK,UAAY,GACjB,KAAK,IAAM,KACX,KAAK,SAAW,KAChB,KAAK,kBAAoB,EACzB,KAAK,MAAQ,KACb,KAAK,eAAiB,EACtB,KAAK,SAAW,GAAI,IAAM,GAC1B,KAAK,kBAAoB,EACzB,KAAK,YAAc,KACnB,KAAK,QAAU,KACf,KAAK,UAAY,EACjB,KAAK,UAAY,KACjB,KAAK,cAAgB,GACrB,KAAK,YAAc,GAAI,IAAQ,EAAG,GAClC,KAAK,gBAAkB,KACvB,KAAK,kBAAoB,EACzB,KAAK,iBAAmB,EACxB,KAAK,YAAc,KACnB,KAAK,SAAW,KAChB,KAAK,OAAS,KACd,KAAK,QAAU,GACf,KAAK,aAAe,EACpB,KAAK,gBAAkB,IACvB,KAAK,UAAY,GACjB,KAAK,mBAAqB,EAC1B,KAAK,iBAAmB,QACxB,KAAK,kBAAoB,QACzB,KAAK,YAAc,GACnB,KAAK,UAAU,GAGhB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,MAAM,KAAK,EAAO,OACvB,KAAK,SAAS,KAAK,EAAO,UAC1B,KAAK,UAAY,EAAO,UACxB,KAAK,IAAM,EAAO,IAClB,KAAK,SAAW,EAAO,SACvB,KAAK,kBAAoB,EAAO,kBAChC,KAAK,MAAQ,EAAO,MACpB,KAAK,eAAiB,EAAO,eAC7B,KAAK,SAAS,KAAK,EAAO,UAC1B,KAAK,YAAc,EAAO,YAC1B,KAAK,kBAAoB,EAAO,kBAChC,KAAK,QAAU,EAAO,QACtB,KAAK,UAAY,EAAO,UACxB,KAAK,UAAY,EAAO,UACxB,KAAK,cAAgB,EAAO,cAC5B,KAAK,YAAY,KAAK,EAAO,aAC7B,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,kBAAoB,EAAO,kBAChC,KAAK,iBAAmB,EAAO,iBAC/B,KAAK,YAAc,EAAO,YAC1B,KAAK,SAAW,EAAO,SACvB,KAAK,OAAS,EAAO,OACrB,KAAK,QAAU,EAAO,QACtB,KAAK,aAAe,EAAO,aAC3B,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,UAAY,EAAO,UACxB,KAAK,mBAAqB,EAAO,mBACjC,KAAK,iBAAmB,EAAO,iBAC/B,KAAK,kBAAoB,EAAO,kBAChC,KAAK,YAAc,EAAO,YACnB,MAKT,GAAkB,UAAU,oBAAsB,GAsClD,gBAA+B,GAAS,CACvC,YAAY,EAAY,CACvB,QACA,KAAK,QAAU,CACd,KAAQ,IAET,KAAK,KAAO,mBACZ,KAAK,MAAQ,GAAI,IAAM,UACvB,KAAK,IAAM,KACX,KAAK,YAAc,KACnB,KAAK,SAAW,KAChB,KAAK,kBAAoB,EACzB,KAAK,MAAQ,KACb,KAAK,eAAiB,EACtB,KAAK,SAAW,GAAI,IAAM,GAC1B,KAAK,kBAAoB,EACzB,KAAK,YAAc,KACnB,KAAK,QAAU,KACf,KAAK,UAAY,EACjB,KAAK,UAAY,KACjB,KAAK,cAAgB,GACrB,KAAK,YAAc,GAAI,IAAQ,EAAG,GAClC,KAAK,gBAAkB,KACvB,KAAK,kBAAoB,EACzB,KAAK,iBAAmB,EACxB,KAAK,SAAW,KAChB,KAAK,UAAY,GACjB,KAAK,mBAAqB,EAC1B,KAAK,iBAAmB,QACxB,KAAK,kBAAoB,QACzB,KAAK,UAAU,GAGhB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,MAAM,KAAK,EAAO,OACvB,KAAK,IAAM,EAAO,IAClB,KAAK,YAAc,EAAO,YAC1B,KAAK,SAAW,EAAO,SACvB,KAAK,kBAAoB,EAAO,kBAChC,KAAK,MAAQ,EAAO,MACpB,KAAK,eAAiB,EAAO,eAC7B,KAAK,SAAS,KAAK,EAAO,UAC1B,KAAK,YAAc,EAAO,YAC1B,KAAK,kBAAoB,EAAO,kBAChC,KAAK,QAAU,EAAO,QACtB,KAAK,UAAY,EAAO,UACxB,KAAK,UAAY,EAAO,UACxB,KAAK,cAAgB,EAAO,cAC5B,KAAK,YAAY,KAAK,EAAO,aAC7B,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,kBAAoB,EAAO,kBAChC,KAAK,iBAAmB,EAAO,iBAC/B,KAAK,SAAW,EAAO,SACvB,KAAK,UAAY,EAAO,UACxB,KAAK,mBAAqB,EAAO,mBACjC,KAAK,iBAAmB,EAAO,iBAC/B,KAAK,kBAAoB,EAAO,kBACzB,MAKT,GAAiB,UAAU,mBAAqB,GAwBhD,gBAAiC,GAAS,CACzC,YAAY,EAAY,CACvB,QACA,KAAK,KAAO,qBACZ,KAAK,QAAU,KACf,KAAK,UAAY,EACjB,KAAK,UAAY,KACjB,KAAK,cAAgB,GACrB,KAAK,YAAc,GAAI,IAAQ,EAAG,GAClC,KAAK,gBAAkB,KACvB,KAAK,kBAAoB,EACzB,KAAK,iBAAmB,EACxB,KAAK,UAAY,GACjB,KAAK,mBAAqB,EAC1B,KAAK,IAAM,GACX,KAAK,YAAc,GACnB,KAAK,UAAU,GAGhB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,QAAU,EAAO,QACtB,KAAK,UAAY,EAAO,UACxB,KAAK,UAAY,EAAO,UACxB,KAAK,cAAgB,EAAO,cAC5B,KAAK,YAAY,KAAK,EAAO,aAC7B,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,kBAAoB,EAAO,kBAChC,KAAK,iBAAmB,EAAO,iBAC/B,KAAK,UAAY,EAAO,UACxB,KAAK,mBAAqB,EAAO,mBACjC,KAAK,YAAc,EAAO,YACnB,MAKT,GAAmB,UAAU,qBAAuB,GAkCpD,gBAAkC,GAAS,CAC1C,YAAY,EAAY,CACvB,QACA,KAAK,KAAO,sBACZ,KAAK,MAAQ,GAAI,IAAM,UAEvB,KAAK,IAAM,KACX,KAAK,SAAW,KAChB,KAAK,kBAAoB,EACzB,KAAK,MAAQ,KACb,KAAK,eAAiB,EACtB,KAAK,SAAW,GAAI,IAAM,GAC1B,KAAK,kBAAoB,EACzB,KAAK,YAAc,KACnB,KAAK,YAAc,KACnB,KAAK,SAAW,KAChB,KAAK,OAAS,KACd,KAAK,QAAU,GACf,KAAK,aAAe,EACpB,KAAK,gBAAkB,IACvB,KAAK,UAAY,GACjB,KAAK,mBAAqB,EAC1B,KAAK,iBAAmB,QACxB,KAAK,kBAAoB,QACzB,KAAK,UAAU,GAGhB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,MAAM,KAAK,EAAO,OACvB,KAAK,IAAM,EAAO,IAClB,KAAK,SAAW,EAAO,SACvB,KAAK,kBAAoB,EAAO,kBAChC,KAAK,MAAQ,EAAO,MACpB,KAAK,eAAiB,EAAO,eAC7B,KAAK,SAAS,KAAK,EAAO,UAC1B,KAAK,YAAc,EAAO,YAC1B,KAAK,kBAAoB,EAAO,kBAChC,KAAK,YAAc,EAAO,YAC1B,KAAK,SAAW,EAAO,SACvB,KAAK,OAAS,EAAO,OACrB,KAAK,QAAU,EAAO,QACtB,KAAK,aAAe,EAAO,aAC3B,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,UAAY,EAAO,UACxB,KAAK,mBAAqB,EAAO,mBACjC,KAAK,iBAAmB,EAAO,iBAC/B,KAAK,kBAAoB,EAAO,kBACzB,MAKT,GAAoB,UAAU,sBAAwB,GA4BtD,gBAAiC,GAAS,CACzC,YAAY,EAAY,CACvB,QACA,KAAK,QAAU,CACd,OAAU,IAEX,KAAK,KAAO,qBACZ,KAAK,MAAQ,GAAI,IAAM,UAEvB,KAAK,OAAS,KACd,KAAK,IAAM,KACX,KAAK,QAAU,KACf,KAAK,UAAY,EACjB,KAAK,UAAY,KACjB,KAAK,cAAgB,GACrB,KAAK,YAAc,GAAI,IAAQ,EAAG,GAClC,KAAK,gBAAkB,KACvB,KAAK,kBAAoB,EACzB,KAAK,iBAAmB,EACxB,KAAK,SAAW,KAChB,KAAK,YAAc,GACnB,KAAK,UAAU,GAGhB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,QAAU,CACd,OAAU,IAEX,KAAK,MAAM,KAAK,EAAO,OACvB,KAAK,OAAS,EAAO,OACrB,KAAK,IAAM,EAAO,IAClB,KAAK,QAAU,EAAO,QACtB,KAAK,UAAY,EAAO,UACxB,KAAK,UAAY,EAAO,UACxB,KAAK,cAAgB,EAAO,cAC5B,KAAK,YAAY,KAAK,EAAO,aAC7B,KAAK,gBAAkB,EAAO,gBAC9B,KAAK,kBAAoB,EAAO,kBAChC,KAAK,iBAAmB,EAAO,iBAC/B,KAAK,SAAW,EAAO,SACvB,KAAK,YAAc,EAAO,YACnB,MAKT,GAAmB,UAAU,qBAAuB,GAepD,gBAAiC,GAAkB,CAClD,YAAY,EAAY,CACvB,QACA,KAAK,KAAO,qBACZ,KAAK,MAAQ,EACb,KAAK,SAAW,EAChB,KAAK,QAAU,EACf,KAAK,UAAU,GAGhB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,MAAQ,EAAO,MACpB,KAAK,SAAW,EAAO,SACvB,KAAK,QAAU,EAAO,QACf,MAKT,GAAmB,UAAU,qBAAuB,GAEpD,GAAI,IAAyB,OAAO,OAAO,CAC1C,UAAW,KACX,eAAgB,GAChB,eAAgB,GAChB,kBAAmB,GACnB,eAAgB,GAChB,eAAgB,GAChB,qBAAsB,GACtB,qBAAsB,GACtB,kBAAmB,GACnB,iBAAkB,GAClB,mBAAoB,GACpB,oBAAqB,GACrB,kBAAmB,GACnB,qBAAsB,GACtB,kBAAmB,GACnB,mBAAoB,GACpB,mBAAoB,GACpB,kBAAmB,GACnB,SAAU,KAGX,GAAM,IAAiB,CAEtB,WAAY,SAAU,EAAO,EAAM,EAAI,CACtC,MAAI,IAAe,aAAa,GAGxB,GAAI,GAAM,YAAY,EAAM,SAAS,EAAM,IAAO,OAAY,EAAK,EAAM,SAG1E,EAAM,MAAM,EAAM,IAG1B,aAAc,SAAU,EAAO,EAAM,EAAY,CAChD,MAAI,CAAC,GACL,CAAC,GAAc,EAAM,cAAgB,EAAa,EAE9C,MAAO,GAAK,mBAAsB,SAC9B,GAAI,GAAK,GAGV,MAAM,UAAU,MAAM,KAAK,IAEnC,aAAc,SAAU,EAAQ,CAC/B,MAAO,aAAY,OAAO,IAAW,CAAE,aAAkB,YAG1D,iBAAkB,SAAU,EAAO,CAClC,WAAqB,EAAG,EAAG,CAC1B,MAAO,GAAM,GAAK,EAAM,GAGzB,GAAM,GAAI,EAAM,OACV,EAAS,GAAI,OAAM,GAEzB,OAAS,GAAI,EAAG,IAAM,EAAG,EAAE,EAAG,EAAO,GAAK,EAE1C,SAAO,KAAK,GACL,GAGR,YAAa,SAAU,EAAQ,EAAQ,EAAO,CAC7C,GAAM,GAAU,EAAO,OACjB,EAAS,GAAI,GAAO,YAAY,GAEtC,OAAS,GAAI,EAAG,EAAY,EAAG,IAAc,EAAS,EAAE,EAAG,CAC1D,GAAM,GAAY,EAAM,GAAK,EAE7B,OAAS,GAAI,EAAG,IAAM,EAAQ,EAAE,EAC/B,EAAO,KAAe,EAAO,EAAY,GAI3C,MAAO,IAGR,YAAa,SAAU,EAAU,EAAO,EAAQ,EAAmB,CAClE,GAAI,GAAI,EACN,EAAM,EAAS,GAEjB,KAAO,IAAQ,QAAa,EAAI,KAAuB,QACtD,EAAM,EAAS,KAGhB,GAAI,IAAQ,OAAW,OAEvB,GAAI,GAAQ,EAAI,GAChB,GAAI,IAAU,OAEd,GAAI,MAAM,QAAQ,GACjB,EACC,GAAQ,EAAI,GAER,IAAU,QACb,GAAM,KAAK,EAAI,MACf,EAAO,KAAK,MAAM,EAAQ,IAG3B,EAAM,EAAS,WACP,IAAQ,gBACP,EAAM,UAAY,OAE5B,EACC,GAAQ,EAAI,GAER,IAAU,QACb,GAAM,KAAK,EAAI,MACf,EAAM,QAAQ,EAAQ,EAAO,SAG9B,EAAM,EAAS,WACP,IAAQ,YAGjB,GACC,GAAQ,EAAI,GAER,IAAU,QACb,GAAM,KAAK,EAAI,MACf,EAAO,KAAK,IAGb,EAAM,EAAS,WACP,IAAQ,SAGnB,QAAS,SAAU,EAAY,EAAM,EAAY,EAAU,EAAM,GAAI,CACpE,GAAM,GAAO,EAAW,QACxB,EAAK,KAAO,EACZ,GAAM,GAAS,GAEf,OAAS,GAAI,EAAG,EAAI,EAAK,OAAO,OAAQ,EAAE,EAAG,CAC5C,GAAM,GAAQ,EAAK,OAAO,GACpB,EAAY,EAAM,eAClB,EAAQ,GACR,EAAS,GAEf,OAAS,GAAI,EAAG,EAAI,EAAM,MAAM,OAAQ,EAAE,EAAG,CAC5C,GAAM,GAAQ,EAAM,MAAM,GAAK,EAC/B,GAAI,IAAQ,GAAc,GAAS,GACnC,GAAM,KAAK,EAAM,MAAM,IAEvB,OAAS,GAAI,EAAG,EAAI,EAAW,EAAE,EAChC,EAAO,KAAK,EAAM,OAAO,EAAI,EAAY,KAI3C,AAAI,EAAM,SAAW,GACrB,GAAM,MAAQ,GAAe,aAAa,EAAO,EAAM,MAAM,aAC7D,EAAM,OAAS,GAAe,aAAa,EAAQ,EAAM,OAAO,aAChE,EAAO,KAAK,IAGb,EAAK,OAAS,EAEd,GAAI,GAAe,IAEnB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAO,OAAQ,EAAE,EACzC,AAAI,EAAe,EAAK,OAAO,GAAG,MAAM,IACvC,GAAe,EAAK,OAAO,GAAG,MAAM,IAKtC,OAAS,GAAI,EAAG,EAAI,EAAK,OAAO,OAAQ,EAAE,EACzC,EAAK,OAAO,GAAG,MAAM,GAAK,GAG3B,SAAK,gBACE,GAER,iBAAkB,SAAU,EAAY,EAAiB,EAAG,EAAgB,EAAY,EAAM,GAAI,CACjG,AAAI,GAAO,GAAG,GAAM,IACpB,GAAM,GAAY,EAAc,OAAO,OACjC,EAAgB,EAAiB,EAEvC,OAAS,GAAI,EAAG,EAAI,EAAW,EAAE,EAAG,CACnC,GAAM,GAAiB,EAAc,OAAO,GACtC,EAAqB,EAAe,cAE1C,GAAI,IAAuB,QAAU,IAAuB,SAAU,SAEtE,GAAM,GAAc,EAAW,OAAO,KAAK,SAAU,EAAO,CAC3D,MAAO,GAAM,OAAS,EAAe,MAAQ,EAAM,gBAAkB,IAEtE,GAAI,IAAgB,OAAW,SAC/B,GAAI,GAAkB,EAChB,EAAqB,EAAe,eAE1C,AAAI,EAAe,kBAAkB,2CACpC,GAAkB,EAAqB,GAGxC,GAAI,GAAe,EACb,EAAkB,EAAY,eAEpC,AAAI,EAAY,kBAAkB,2CACjC,GAAe,EAAkB,GAGlC,GAAM,GAAY,EAAe,MAAM,OAAS,EAC5C,EAEJ,GAAI,GAAiB,EAAe,MAAM,GAAI,CAE7C,GAAM,GAAa,EACb,EAAW,EAAqB,EACtC,EAAiB,GAAe,WAAW,EAAe,OAAQ,EAAY,WACpE,GAAiB,EAAe,MAAM,GAAY,CAE5D,GAAM,GAAa,EAAY,EAAqB,EAC9C,EAAW,EAAa,EAAqB,EACnD,EAAiB,GAAe,WAAW,EAAe,OAAQ,EAAY,OACxE,CAEN,GAAM,GAAc,EAAe,oBAC7B,EAAa,EACb,EAAW,EAAqB,EACtC,EAAY,SAAS,GACrB,EAAiB,GAAe,WAAW,EAAY,aAAc,EAAY,GAIlF,AAAI,IAAuB,cAE1B,AADsB,GAAI,MAAa,UAAU,GAAgB,YAAY,YAC/D,QAAQ,GAIvB,GAAM,GAAW,EAAY,MAAM,OAEnC,OAAS,GAAI,EAAG,EAAI,EAAU,EAAE,EAAG,CAClC,GAAM,GAAa,EAAI,EAAkB,EAEzC,GAAI,IAAuB,aAE1B,GAAW,wBAAwB,EAAY,OAAQ,EAAY,EAAgB,EAAG,EAAY,OAAQ,OACpG,CACN,GAAM,GAAW,EAAkB,EAAe,EAElD,OAAS,GAAI,EAAG,EAAI,EAAU,EAAE,EAC/B,EAAY,OAAO,EAAa,IAAM,EAAe,KAMzD,SAAW,UAAY,GAChB,IAwBT,QAAkB,CACjB,YAAY,EAAoB,EAAc,EAAY,EAAc,CACvE,KAAK,mBAAqB,EAC1B,KAAK,aAAe,EACpB,KAAK,aAAe,IAAiB,OAAY,EAAe,GAAI,GAAa,YAAY,GAC7F,KAAK,aAAe,EACpB,KAAK,UAAY,EACjB,KAAK,SAAW,KAChB,KAAK,iBAAmB,GAGzB,SAAS,EAAG,CACX,GAAM,GAAK,KAAK,mBACZ,EAAK,KAAK,aACZ,EAAK,EAAG,GACR,EAAK,EAAG,EAAK,GAEf,EAAmB,CAClB,EAAM,CACL,GAAI,GAEJ,EAAa,CAKZ,EAAc,GAAI,CAAE,GAAI,GAAK,CAC5B,OAAS,GAAW,EAAK,IAAK,CAC7B,GAAI,IAAO,OAAW,CACrB,GAAI,EAAI,EAAI,QAEZ,SAAK,EAAG,OACR,KAAK,aAAe,EACb,KAAK,UAAU,EAAK,EAAG,EAAG,GAGlC,GAAI,IAAO,EAAU,MAKrB,GAHA,EAAK,EACL,EAAK,EAAG,EAAE,GAEN,EAAI,EAEP,QAKF,EAAQ,EAAG,OACX,QAKD,GAAI,CAAE,IAAK,GAAK,CAEf,GAAM,GAAW,EAAG,GAEpB,AAAI,EAAI,GACP,GAAK,EAEL,EAAK,GAIN,OAAS,GAAW,EAAK,IAAK,CAC7B,GAAI,IAAO,OAEV,YAAK,aAAe,EACb,KAAK,aAAa,EAAG,EAAG,GAGhC,GAAI,IAAO,EAAU,MAKrB,GAHA,EAAK,EACL,EAAK,EAAG,EAAE,EAAK,GAEX,GAAK,EAER,QAKF,EAAQ,EACR,EAAK,EACL,QAID,QAKD,KAAO,EAAK,GAAO,CAClB,GAAM,GAAM,EAAK,IAAU,EAE3B,AAAI,EAAI,EAAG,GACV,EAAQ,EAER,EAAK,EAAM,EAOb,GAHA,EAAK,EAAG,GACR,EAAK,EAAG,EAAK,GAET,IAAO,OACV,YAAK,aAAe,EACb,KAAK,aAAa,EAAG,EAAG,GAGhC,GAAI,IAAO,OACV,SAAK,EAAG,OACR,KAAK,aAAe,EACb,KAAK,UAAU,EAAK,EAAG,EAAI,GAKpC,KAAK,aAAe,EACpB,KAAK,iBAAiB,EAAI,EAAI,GAI/B,MAAO,MAAK,aAAa,EAAI,EAAI,EAAG,GAGrC,cAAe,CACd,MAAO,MAAK,UAAY,KAAK,iBAG9B,iBAAiB,EAAO,CAEvB,GAAM,GAAS,KAAK,aACjB,EAAS,KAAK,aACd,EAAS,KAAK,UACd,EAAS,EAAQ,EAEpB,OAAS,GAAI,EAAG,IAAM,EAAQ,EAAE,EAC/B,EAAO,GAAK,EAAO,EAAS,GAG7B,MAAO,GAIR,cAAe,CACd,KAAM,IAAI,OAAM,2BAGjB,kBAAmB,GAMpB,GAAY,UAAU,aAAe,GAAY,UAAU,iBAC3D,GAAY,UAAU,UAAY,GAAY,UAAU,iBAUxD,gBAA+B,GAAY,CAC1C,YAAY,EAAoB,EAAc,EAAY,EAAc,CACvE,MAAM,EAAoB,EAAc,EAAY,GACpD,KAAK,YAAc,GACnB,KAAK,YAAc,GACnB,KAAK,YAAc,GACnB,KAAK,YAAc,GACnB,KAAK,iBAAmB,CACvB,YAAa,GACb,UAAW,IAIb,iBAAiB,EAAI,EAAI,EAAI,CAC5B,GAAM,GAAK,KAAK,mBACZ,EAAQ,EAAK,EACf,EAAQ,EAAK,EACb,EAAQ,EAAG,GACX,EAAQ,EAAG,GAEb,GAAI,IAAU,OACb,OAAQ,KAAK,eAAe,iBACtB,IAEJ,EAAQ,EACR,EAAQ,EAAI,EAAK,EACjB,UAEI,IAEJ,EAAQ,EAAG,OAAS,EACpB,EAAQ,EAAK,EAAG,GAAS,EAAG,EAAQ,GACpC,cAKA,EAAQ,EACR,EAAQ,EAIX,GAAI,IAAU,OACb,OAAQ,KAAK,eAAe,eACtB,IAEJ,EAAQ,EACR,EAAQ,EAAI,EAAK,EACjB,UAEI,IAEJ,EAAQ,EACR,EAAQ,EAAK,EAAG,GAAK,EAAG,GACxB,cAKA,EAAQ,EAAK,EACb,EAAQ,EAIX,GAAM,GAAU,GAAK,GAAM,GACxB,EAAS,KAAK,UACjB,KAAK,YAAc,EAAU,GAAK,GAClC,KAAK,YAAc,EAAU,GAAQ,GACrC,KAAK,YAAc,EAAQ,EAC3B,KAAK,YAAc,EAAQ,EAG5B,aAAa,EAAI,EAAI,EAAG,EAAI,CAC3B,GAAM,GAAS,KAAK,aACjB,EAAS,KAAK,aACd,EAAS,KAAK,UACd,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,KAAK,YACV,EAAK,KAAK,YACV,EAAK,KAAK,YACV,EAAK,KAAK,YACV,EAAK,GAAI,GAAO,GAAK,GACrB,EAAK,EAAI,EACT,EAAM,EAAK,EAER,EAAK,CAAC,EAAK,EAAM,EAAI,EAAK,EAAK,EAAK,EACpC,EAAM,GAAI,GAAM,EAAO,MAAO,EAAI,GAAM,EAAM,KAAO,GAAM,EAAI,EAC/D,EAAM,IAAK,GAAM,EAAO,KAAM,GAAM,EAAK,GAAM,EAC/C,EAAK,EAAK,EAAM,EAAK,EAE3B,OAAS,GAAI,EAAG,IAAM,EAAQ,EAAE,EAC/B,EAAO,GAAK,EAAK,EAAO,EAAK,GAAK,EAAK,EAAO,EAAK,GAAK,EAAK,EAAO,EAAK,GAAK,EAAK,EAAO,EAAK,GAGhG,MAAO,IAKT,gBAAgC,GAAY,CAC3C,YAAY,EAAoB,EAAc,EAAY,EAAc,CACvE,MAAM,EAAoB,EAAc,EAAY,GAGrD,aAAa,EAAI,EAAI,EAAG,EAAI,CAC3B,GAAM,GAAS,KAAK,aACjB,EAAS,KAAK,aACd,EAAS,KAAK,UACd,EAAU,EAAK,EACf,EAAU,EAAU,EACpB,EAAW,GAAI,GAAO,GAAK,GAC3B,EAAU,EAAI,EAEjB,OAAS,GAAI,EAAG,IAAM,EAAQ,EAAE,EAC/B,EAAO,GAAK,EAAO,EAAU,GAAK,EAAU,EAAO,EAAU,GAAK,EAGnE,MAAO,IAWT,gBAAkC,GAAY,CAC7C,YAAY,EAAoB,EAAc,EAAY,EAAc,CACvE,MAAM,EAAoB,EAAc,EAAY,GAGrD,aAAa,EAEX,CACD,MAAO,MAAK,iBAAiB,EAAK,IAKpC,QAAoB,CACnB,YAAY,EAAM,EAAO,EAAQ,EAAe,CAC/C,GAAI,IAAS,OAAW,KAAM,IAAI,OAAM,gDACxC,GAAI,IAAU,QAAa,EAAM,SAAW,EAAG,KAAM,IAAI,OAAM,oDAAsD,GACrH,KAAK,KAAO,EACZ,KAAK,MAAQ,GAAe,aAAa,EAAO,KAAK,gBACrD,KAAK,OAAS,GAAe,aAAa,EAAQ,KAAK,iBACvD,KAAK,iBAAiB,GAAiB,KAAK,4BAKtC,QAAO,EAAO,CACpB,GAAM,GAAY,EAAM,YACpB,EAEJ,GAAI,EAAU,SAAW,KAAK,OAC7B,EAAO,EAAU,OAAO,OAClB,CAEN,EAAO,CACN,KAAQ,EAAM,KACd,MAAS,GAAe,aAAa,EAAM,MAAO,OAClD,OAAU,GAAe,aAAa,EAAM,OAAQ,QAErD,GAAM,GAAgB,EAAM,mBAE5B,AAAI,IAAkB,EAAM,sBAC3B,GAAK,cAAgB,GAIvB,SAAK,KAAO,EAAM,cAEX,EAGR,iCAAiC,EAAQ,CACxC,MAAO,IAAI,IAAoB,KAAK,MAAO,KAAK,OAAQ,KAAK,eAAgB,GAG9E,+BAA+B,EAAQ,CACtC,MAAO,IAAI,IAAkB,KAAK,MAAO,KAAK,OAAQ,KAAK,eAAgB,GAG5E,+BAA+B,EAAQ,CACtC,MAAO,IAAI,IAAiB,KAAK,MAAO,KAAK,OAAQ,KAAK,eAAgB,GAG3E,iBAAiB,EAAe,CAC/B,GAAI,GAEJ,OAAQ,OACF,IACJ,EAAgB,KAAK,iCACrB,UAEI,IACJ,EAAgB,KAAK,+BACrB,UAEI,IACJ,EAAgB,KAAK,+BACrB,MAGF,GAAI,IAAkB,OAAW,CAChC,GAAM,GAAU,iCAAmC,KAAK,cAAgB,yBAA2B,KAAK,KAExG,GAAI,KAAK,oBAAsB,OAE9B,GAAI,IAAkB,KAAK,qBAC1B,KAAK,iBAAiB,KAAK,0BAE3B,MAAM,IAAI,OAAM,GAIlB,eAAQ,KAAK,uBAAwB,GAC9B,KAGR,YAAK,kBAAoB,EAClB,KAGR,kBAAmB,CAClB,OAAQ,KAAK,uBACP,MAAK,iCACT,MAAO,QAEH,MAAK,+BACT,MAAO,QAEH,MAAK,+BACT,MAAO,KAIV,cAAe,CACd,MAAO,MAAK,OAAO,OAAS,KAAK,MAAM,OAIxC,MAAM,EAAY,CACjB,GAAI,IAAe,EAAK,CACvB,GAAM,GAAQ,KAAK,MAEnB,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,IAAM,EAAG,EAAE,EAC5C,EAAM,IAAM,EAId,MAAO,MAIR,MAAM,EAAW,CAChB,GAAI,IAAc,EAAK,CACtB,GAAM,GAAQ,KAAK,MAEnB,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,IAAM,EAAG,EAAE,EAC5C,EAAM,IAAM,EAId,MAAO,MAKR,KAAK,EAAW,EAAS,CACxB,GAAM,GAAQ,KAAK,MAChB,EAAQ,EAAM,OACb,EAAO,EACT,EAAK,EAAQ,EAEf,KAAO,IAAS,GAAS,EAAM,GAAQ,GACtC,EAAE,EAGH,KAAO,IAAO,IAAM,EAAM,GAAM,GAC/B,EAAE,EAKH,GAFA,EAAE,EAEE,IAAS,GAAK,IAAO,EAAO,CAE/B,AAAI,GAAQ,GACX,GAAK,KAAK,IAAI,EAAI,GAClB,EAAO,EAAK,GAGb,GAAM,GAAS,KAAK,eACpB,KAAK,MAAQ,GAAe,WAAW,EAAO,EAAM,GACpD,KAAK,OAAS,GAAe,WAAW,KAAK,OAAQ,EAAO,EAAQ,EAAK,GAG1E,MAAO,MAIR,UAAW,CACV,GAAI,GAAQ,GACN,EAAY,KAAK,eAEvB,AAAI,EAAY,KAAK,MAAM,IAAe,GACzC,SAAQ,MAAM,oDAAqD,MACnE,EAAQ,IAGT,GAAM,GAAQ,KAAK,MAChB,EAAS,KAAK,OACd,EAAQ,EAAM,OAEjB,AAAI,IAAU,GACb,SAAQ,MAAM,uCAAwC,MACtD,EAAQ,IAGT,GAAI,GAAW,KAEf,OAAS,GAAI,EAAG,IAAM,EAAO,IAAK,CACjC,GAAM,GAAW,EAAM,GAEvB,GAAI,MAAO,IAAa,UAAY,MAAM,GAAW,CACpD,QAAQ,MAAM,mDAAoD,KAAM,EAAG,GAC3E,EAAQ,GACR,MAGD,GAAI,IAAa,MAAQ,EAAW,EAAU,CAC7C,QAAQ,MAAM,0CAA2C,KAAM,EAAG,EAAU,GAC5E,EAAQ,GACR,MAGD,EAAW,EAGZ,GAAI,IAAW,QACV,GAAe,aAAa,GAC/B,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,IAAM,EAAG,EAAE,EAAG,CAChD,GAAM,GAAQ,EAAO,GAErB,GAAI,MAAM,GAAQ,CACjB,QAAQ,MAAM,oDAAqD,KAAM,EAAG,GAC5E,EAAQ,GACR,OAMJ,MAAO,GAKR,UAAW,CAEV,GAAM,GAAQ,GAAe,WAAW,KAAK,OAC1C,EAAS,GAAe,WAAW,KAAK,QACxC,EAAS,KAAK,eACd,EAAsB,KAAK,qBAAuB,GAClD,EAAY,EAAM,OAAS,EAC1B,EAAa,EAEjB,OAAS,GAAI,EAAG,EAAI,EAAW,EAAE,EAAG,CACnC,GAAI,GAAO,GACL,EAAO,EAAM,GACb,EAAW,EAAM,EAAI,GAE3B,GAAI,IAAS,GAAa,KAAM,GAAK,IAAS,EAAM,IACnD,GAAK,EAeJ,EAAO,OAfkB,CAEzB,GAAM,GAAS,EAAI,EAChB,EAAU,EAAS,EACnB,EAAU,EAAS,EAEtB,OAAS,GAAI,EAAG,IAAM,EAAQ,EAAE,EAAG,CAClC,GAAM,GAAQ,EAAO,EAAS,GAE9B,GAAI,IAAU,EAAO,EAAU,IAAM,IAAU,EAAO,EAAU,GAAI,CACnE,EAAO,GACP,QASJ,GAAI,EAAM,CACT,GAAI,IAAM,EAAY,CACrB,EAAM,GAAc,EAAM,GAC1B,GAAM,GAAa,EAAI,EACpB,EAAc,EAAa,EAE9B,OAAS,GAAI,EAAG,IAAM,EAAQ,EAAE,EAC/B,EAAO,EAAc,GAAK,EAAO,EAAa,GAIhD,EAAE,GAKJ,GAAI,EAAY,EAAG,CAClB,EAAM,GAAc,EAAM,GAE1B,OAAS,GAAa,EAAY,EAAQ,EAAc,EAAa,EAAQ,EAAI,EAAG,IAAM,EAAQ,EAAE,EACnG,EAAO,EAAc,GAAK,EAAO,EAAa,GAG/C,EAAE,EAGH,MAAI,KAAe,EAAM,OACxB,MAAK,MAAQ,GAAe,WAAW,EAAO,EAAG,GACjD,KAAK,OAAS,GAAe,WAAW,EAAQ,EAAG,EAAa,IAEhE,MAAK,MAAQ,EACb,KAAK,OAAS,GAGR,KAGR,OAAQ,CACP,GAAM,GAAQ,GAAe,WAAW,KAAK,MAAO,GAC9C,EAAS,GAAe,WAAW,KAAK,OAAQ,GAChD,EAAqB,KAAK,YAC1B,EAAQ,GAAI,GAAmB,KAAK,KAAM,EAAO,GAEvD,SAAM,kBAAoB,KAAK,kBACxB,GAKT,GAAc,UAAU,eAAiB,aACzC,GAAc,UAAU,gBAAkB,aAC1C,GAAc,UAAU,qBAAuB,GAM/C,gBAAmC,GAAc,EAEjD,GAAqB,UAAU,cAAgB,OAC/C,GAAqB,UAAU,gBAAkB,MACjD,GAAqB,UAAU,qBAAuB,GACtD,GAAqB,UAAU,+BAAiC,OAChE,GAAqB,UAAU,+BAAiC,OAMhE,gBAAiC,GAAc,EAE/C,GAAmB,UAAU,cAAgB,QAM7C,gBAAkC,GAAc,EAEhD,GAAoB,UAAU,cAAgB,SAM9C,gBAA0C,GAAY,CACrD,YAAY,EAAoB,EAAc,EAAY,EAAc,CACvE,MAAM,EAAoB,EAAc,EAAY,GAGrD,aAAa,EAAI,EAAI,EAAG,EAAI,CAC3B,GAAM,GAAS,KAAK,aACjB,EAAS,KAAK,aACd,EAAS,KAAK,UACd,EAAS,GAAI,GAAO,GAAK,GACxB,EAAS,EAAK,EAElB,OAAS,GAAM,EAAS,EAAQ,IAAW,EAAK,GAAU,EACzD,GAAW,UAAU,EAAQ,EAAG,EAAQ,EAAS,EAAQ,EAAQ,EAAQ,GAG1E,MAAO,IAST,gBAAsC,GAAc,CACnD,+BAA+B,EAAQ,CACtC,MAAO,IAAI,IAA4B,KAAK,MAAO,KAAK,OAAQ,KAAK,eAAgB,IAKvF,GAAwB,UAAU,cAAgB,aAElD,GAAwB,UAAU,qBAAuB,GACzD,GAAwB,UAAU,+BAAiC,OAMnE,gBAAkC,GAAc,EAEhD,GAAoB,UAAU,cAAgB,SAC9C,GAAoB,UAAU,gBAAkB,MAChD,GAAoB,UAAU,qBAAuB,GACrD,GAAoB,UAAU,+BAAiC,OAC/D,GAAoB,UAAU,+BAAiC,OAM/D,gBAAkC,GAAc,EAEhD,GAAoB,UAAU,cAAgB,SAE9C,QAAoB,CACnB,YAAY,EAAM,EAAW,GAAI,EAAQ,EAAY,GAA0B,CAC9E,KAAK,KAAO,EACZ,KAAK,OAAS,EACd,KAAK,SAAW,EAChB,KAAK,UAAY,EACjB,KAAK,KAAO,KAER,KAAK,SAAW,GACnB,KAAK,sBAIA,OAAM,EAAM,CAClB,GAAM,GAAS,GACZ,EAAa,EAAK,OAClB,EAAY,EAAO,GAAK,KAAO,GAElC,OAAS,GAAI,EAAG,EAAI,EAAW,OAAQ,IAAM,EAAG,EAAE,EACjD,EAAO,KAAK,GAAmB,EAAW,IAAI,MAAM,IAGrD,GAAM,GAAO,GAAI,MAAK,EAAK,KAAM,EAAK,SAAU,EAAQ,EAAK,WAC7D,SAAK,KAAO,EAAK,KACV,QAGD,QAAO,EAAM,CACnB,GAAM,GAAS,GACZ,EAAa,EAAK,OACf,EAAO,CACZ,KAAQ,EAAK,KACb,SAAY,EAAK,SACjB,OAAU,EACV,KAAQ,EAAK,KACb,UAAa,EAAK,WAGnB,OAAS,GAAI,EAAG,EAAI,EAAW,OAAQ,IAAM,EAAG,EAAE,EACjD,EAAO,KAAK,GAAc,OAAO,EAAW,KAG7C,MAAO,SAGD,+BAA8B,EAAM,EAAqB,EAAK,EAAQ,CAC5E,GAAM,GAAkB,EAAoB,OACtC,EAAS,GAEf,OAAS,GAAI,EAAG,EAAI,EAAiB,IAAK,CACzC,GAAI,GAAQ,GACR,EAAS,GACb,EAAM,KAAM,GAAI,EAAkB,GAAK,EAAiB,EAAI,GAAI,GAAK,GACrE,EAAO,KAAK,EAAG,EAAG,GAClB,GAAM,GAAQ,GAAe,iBAAiB,GAC9C,EAAQ,GAAe,YAAY,EAAO,EAAG,GAC7C,EAAS,GAAe,YAAY,EAAQ,EAAG,GAG3C,CAAC,GAAU,EAAM,KAAO,GAC3B,GAAM,KAAK,GACX,EAAO,KAAK,EAAO,KAGpB,EAAO,KAAK,GAAI,IAAoB,0BAA4B,EAAoB,GAAG,KAAO,IAAK,EAAO,GAAQ,MAAM,EAAM,IAG/H,MAAO,IAAI,MAAK,EAAM,GAAI,SAGpB,YAAW,EAAmB,EAAM,CAC1C,GAAI,GAAY,EAEhB,GAAI,CAAC,MAAM,QAAQ,GAAoB,CACtC,GAAM,GAAI,EACV,EAAY,EAAE,UAAY,EAAE,SAAS,YAAc,EAAE,WAGtD,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IACrC,GAAI,EAAU,GAAG,OAAS,EACzB,MAAO,GAAU,GAInB,MAAO,YAGD,qCAAoC,EAAc,EAAK,EAAQ,CACrE,GAAM,GAA0B,GAG1B,EAAU,qBAGhB,OAAS,GAAI,EAAG,EAAK,EAAa,OAAQ,EAAI,EAAI,IAAK,CACtD,GAAM,GAAc,EAAa,GAC3B,EAAQ,EAAY,KAAK,MAAM,GAErC,GAAI,GAAS,EAAM,OAAS,EAAG,CAC9B,GAAM,GAAO,EAAM,GACf,EAAwB,EAAwB,GAEpD,AAAK,GACJ,GAAwB,GAAQ,EAAwB,IAGzD,EAAsB,KAAK,IAI7B,GAAM,GAAQ,GAEd,OAAW,KAAQ,GAClB,EAAM,KAAK,KAAK,8BAA8B,EAAM,EAAwB,GAAO,EAAK,IAGzF,MAAO,SAID,gBAAe,EAAW,EAAO,CACvC,GAAI,CAAC,EACJ,eAAQ,MAAM,yDACP,KAGR,GAAM,GAAmB,SAAU,EAAW,EAAW,EAAe,EAAc,EAAY,CAEjG,GAAI,EAAc,SAAW,EAAG,CAC/B,GAAM,GAAQ,GACR,EAAS,GACf,GAAe,YAAY,EAAe,EAAO,EAAQ,GAErD,EAAM,SAAW,GACpB,EAAW,KAAK,GAAI,GAAU,EAAW,EAAO,MAK7C,EAAS,GACT,EAAW,EAAU,MAAQ,UAC7B,EAAM,EAAU,KAAO,GACvB,EAAY,EAAU,UAExB,EAAW,EAAU,QAAU,GAC7B,EAAkB,EAAU,WAAa,GAE/C,OAAS,GAAI,EAAG,EAAI,EAAgB,OAAQ,IAAK,CAChD,GAAM,GAAgB,EAAgB,GAAG,KAEzC,GAAI,GAAC,GAAiB,EAAc,SAAW,GAE/C,GAAI,EAAc,GAAG,aAAc,CAElC,GAAM,GAAmB,GACrB,EAEJ,IAAK,EAAI,EAAG,EAAI,EAAc,OAAQ,IACrC,GAAI,EAAc,GAAG,aACpB,OAAS,GAAI,EAAG,EAAI,EAAc,GAAG,aAAa,OAAQ,IACzD,EAAiB,EAAc,GAAG,aAAa,IAAM,GAQxD,OAAW,KAAmB,GAAkB,CAC/C,GAAM,GAAQ,GACR,EAAS,GAEf,OAAS,GAAI,EAAG,IAAM,EAAc,GAAG,aAAa,OAAQ,EAAE,EAAG,CAChE,GAAM,GAAe,EAAc,GACnC,EAAM,KAAK,EAAa,MACxB,EAAO,KAAK,EAAa,cAAgB,EAAkB,EAAI,GAGhE,EAAO,KAAK,GAAI,IAAoB,yBAA2B,EAAkB,IAAK,EAAO,IAG9F,EAAW,EAAiB,OAAU,IAAO,OACvC,CAEN,GAAM,GAAW,UAAY,EAAM,GAAG,KAAO,IAC7C,EAAiB,GAAqB,EAAW,YAAa,EAAe,MAAO,GACpF,EAAiB,GAAyB,EAAW,cAAe,EAAe,MAAO,GAC1F,EAAiB,GAAqB,EAAW,SAAU,EAAe,MAAO,IAInF,MAAI,GAAO,SAAW,EACd,KAGK,GAAI,MAAK,EAAU,EAAU,EAAQ,GAInD,eAAgB,CACf,GAAM,GAAS,KAAK,OAChB,EAAW,EAEf,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,IAAM,EAAG,EAAE,EAAG,CAChD,GAAM,GAAQ,KAAK,OAAO,GAC1B,EAAW,KAAK,IAAI,EAAU,EAAM,MAAM,EAAM,MAAM,OAAS,IAGhE,YAAK,SAAW,EACT,KAGR,MAAO,CACN,OAAS,GAAI,EAAG,EAAI,KAAK,OAAO,OAAQ,IACvC,KAAK,OAAO,GAAG,KAAK,EAAG,KAAK,UAG7B,MAAO,MAGR,UAAW,CACV,GAAI,GAAQ,GAEZ,OAAS,GAAI,EAAG,EAAI,KAAK,OAAO,OAAQ,IACvC,EAAQ,GAAS,KAAK,OAAO,GAAG,WAGjC,MAAO,GAGR,UAAW,CACV,OAAS,GAAI,EAAG,EAAI,KAAK,OAAO,OAAQ,IACvC,KAAK,OAAO,GAAG,WAGhB,MAAO,MAGR,OAAQ,CACP,GAAM,GAAS,GAEf,OAAS,GAAI,EAAG,EAAI,KAAK,OAAO,OAAQ,IACvC,EAAO,KAAK,KAAK,OAAO,GAAG,SAG5B,MAAO,IAAI,MAAK,YAAY,KAAK,KAAM,KAAK,SAAU,EAAQ,KAAK,WAGpE,QAAS,CACR,MAAO,MAAK,YAAY,OAAO,OAKjC,YAAsC,EAAU,CAC/C,OAAQ,EAAS,mBACX,aACA,aACA,YACA,aACA,UACJ,MAAO,QAEH,aACA,cACA,cACA,UACJ,MAAO,QAEH,QACJ,MAAO,QAEH,aACJ,MAAO,QAEH,WACA,UACJ,MAAO,QAEH,SACJ,MAAO,IAGT,KAAM,IAAI,OAAM,8CAAgD,GAGjE,YAA4B,EAAM,CACjC,GAAI,EAAK,OAAS,OACjB,KAAM,IAAI,OAAM,4DAGjB,GAAM,GAAY,GAA6B,EAAK,MAEpD,GAAI,EAAK,QAAU,OAAW,CAC7B,GAAM,GAAQ,GACX,EAAS,GACZ,GAAe,YAAY,EAAK,KAAM,EAAO,EAAQ,SACrD,EAAK,MAAQ,EACb,EAAK,OAAS,EAIf,MAAI,GAAU,QAAU,OAChB,EAAU,MAAM,GAGhB,GAAI,GAAU,EAAK,KAAM,EAAK,MAAO,EAAK,OAAQ,EAAK,eAIhE,GAAM,IAAQ,CACb,QAAS,GACT,MAAO,GACP,IAAK,SAAU,EAAK,EAAM,CACzB,AAAI,KAAK,UAAY,IAErB,MAAK,MAAM,GAAO,IAEnB,IAAK,SAAU,EAAK,CACnB,GAAI,KAAK,UAAY,GAErB,MAAO,MAAK,MAAM,IAEnB,OAAQ,SAAU,EAAK,CACtB,MAAO,MAAK,MAAM,IAEnB,MAAO,UAAY,CAClB,KAAK,MAAQ,KAIf,QAAqB,CACpB,YAAY,EAAQ,EAAY,EAAS,CACxC,GAAM,GAAQ,KACV,EAAY,GACZ,EAAc,EACd,EAAa,EACb,EACE,EAAW,GAGjB,KAAK,QAAU,OACf,KAAK,OAAS,EACd,KAAK,WAAa,EAClB,KAAK,QAAU,EAEf,KAAK,UAAY,SAAU,EAAK,CAC/B,IAEI,IAAc,IACb,EAAM,UAAY,QACrB,EAAM,QAAQ,EAAK,EAAa,GAIlC,EAAY,IAGb,KAAK,QAAU,SAAU,EAAK,CAC7B,IAEI,EAAM,aAAe,QACxB,EAAM,WAAW,EAAK,EAAa,GAGhC,IAAgB,GACnB,GAAY,GAER,EAAM,SAAW,QACpB,EAAM,WAKT,KAAK,UAAY,SAAU,EAAK,CAC/B,AAAI,EAAM,UAAY,QACrB,EAAM,QAAQ,IAIhB,KAAK,WAAa,SAAU,EAAK,CAChC,MAAI,GACI,EAAY,GAGb,GAGR,KAAK,eAAiB,SAAU,EAAW,CAC1C,SAAc,EACP,MAGR,KAAK,WAAa,SAAU,EAAO,EAAQ,CAC1C,SAAS,KAAK,EAAO,GACd,MAGR,KAAK,cAAgB,SAAU,EAAO,CACrC,GAAM,GAAQ,EAAS,QAAQ,GAE/B,MAAI,KAAU,IACb,EAAS,OAAO,EAAO,GAGjB,MAGR,KAAK,WAAa,SAAU,EAAM,CACjC,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,EAAI,EAAG,GAAK,EAAG,CACnD,GAAM,GAAQ,EAAS,GACjB,EAAS,EAAS,EAAI,GAG5B,GAFI,EAAM,QAAQ,GAAM,UAAY,GAEhC,EAAM,KAAK,GACd,MAAO,GAIT,MAAO,QAMV,GAAM,IAAwB,GAAI,IAElC,QAAa,CACZ,YAAY,EAAS,CACpB,KAAK,QAAU,IAAY,OAAY,EAAU,GACjD,KAAK,YAAc,YACnB,KAAK,gBAAkB,GACvB,KAAK,KAAO,GACZ,KAAK,aAAe,GACpB,KAAK,cAAgB,GAGtB,MAAO,EAEP,UAAU,EAAK,EAAY,CAC1B,GAAM,GAAQ,KACd,MAAO,IAAI,SAAQ,SAAU,EAAS,EAAQ,CAC7C,EAAM,KAAK,EAAK,EAAS,EAAY,KAIvC,OAAQ,EAER,eAAe,EAAa,CAC3B,YAAK,YAAc,EACZ,KAGR,mBAAmB,EAAO,CACzB,YAAK,gBAAkB,EAChB,KAGR,QAAQ,EAAM,CACb,YAAK,KAAO,EACL,KAGR,gBAAgB,EAAc,CAC7B,YAAK,aAAe,EACb,KAGR,iBAAiB,EAAe,CAC/B,YAAK,cAAgB,EACd,MAKT,GAAM,IAAU,GAEhB,gBAAyB,GAAO,CAC/B,YAAY,EAAS,CACpB,MAAM,GAGP,KAAK,EAAK,EAAQ,EAAY,EAAS,CACtC,AAAI,IAAQ,QAAW,GAAM,IACzB,KAAK,OAAS,QAAW,GAAM,KAAK,KAAO,GAC/C,EAAM,KAAK,QAAQ,WAAW,GAC9B,GAAM,GAAS,GAAM,IAAI,GAEzB,GAAI,IAAW,OACd,YAAK,QAAQ,UAAU,GACvB,WAAW,IAAM,CAChB,AAAI,GAAQ,EAAO,GACnB,KAAK,QAAQ,QAAQ,IACnB,GACI,EAIR,GAAI,GAAQ,KAAS,OAAW,CAC/B,GAAQ,GAAK,KAAK,CACjB,OAAQ,EACR,WAAY,EACZ,QAAS,IAEV,OAID,GAAQ,GAAO,GACf,GAAQ,GAAK,KAAK,CACjB,OAAQ,EACR,WAAY,EACZ,QAAS,IAGV,GAAM,GAAM,GAAI,SAAQ,EAAK,CAC5B,QAAS,GAAI,SAAQ,KAAK,eAC1B,YAAa,KAAK,gBAAkB,UAAY,gBAIjD,MAAM,GAAK,KAAK,GAAY,CAC3B,GAAI,EAAS,SAAW,KAAO,EAAS,SAAW,EAAG,CAGrD,AAAI,EAAS,SAAW,GACvB,QAAQ,KAAK,6CAGd,GAAM,GAAY,GAAQ,GACpB,EAAS,EAAS,KAAK,YACvB,EAAgB,EAAS,QAAQ,IAAI,kBACrC,EAAQ,EAAgB,SAAS,GAAiB,EAClD,EAAmB,IAAU,EAC/B,EAAS,EAEb,MAAO,IAAI,gBAAe,CACzB,MAAM,EAAY,CACjB,IAEA,YAAoB,CACnB,EAAO,OAAO,KAAK,CAAC,CACnB,OACA,WACK,CACL,GAAI,EACH,EAAW,YACL,CACN,GAAU,EAAM,WAChB,GAAM,GAAQ,GAAI,eAAc,WAAY,CAC3C,mBACA,SACA,UAGD,OAAS,GAAI,EAAG,EAAK,EAAU,OAAQ,EAAI,EAAI,IAAK,CACnD,GAAM,GAAW,EAAU,GAC3B,AAAI,EAAS,YAAY,EAAS,WAAW,GAG9C,EAAW,QAAQ,GACnB,eAQL,MAAM,OAAM,cAAc,EAAS,uBAAuB,EAAS,WAAW,EAAS,gBAEtF,KAAK,GAAU,CACjB,GAAM,GAAW,GAAI,UAAS,GAE9B,OAAQ,KAAK,kBACP,cACJ,MAAO,GAAS,kBAEZ,OACJ,MAAO,GAAS,WAEZ,WACJ,MAAO,GAAS,OAAO,KAAK,GAEpB,AADQ,GAAI,aACL,gBAAgB,EAAM,KAAK,eAGtC,OACJ,MAAO,GAAS,eAGhB,MAAO,GAAS,UAEhB,KAAK,GAAQ,CAGf,GAAM,IAAI,EAAK,GACf,GAAM,GAAY,GAAQ,GAC1B,MAAO,IAAQ,GAEf,OAAS,GAAI,EAAG,EAAK,EAAU,OAAQ,EAAI,EAAI,IAAK,CACnD,GAAM,GAAW,EAAU,GAC3B,AAAI,EAAS,QAAQ,EAAS,OAAO,GAGtC,KAAK,QAAQ,QAAQ,KACnB,MAAM,GAAO,CAEf,GAAM,GAAY,GAAQ,GAC1B,MAAO,IAAQ,GAEf,OAAS,GAAI,EAAG,EAAK,EAAU,OAAQ,EAAI,EAAI,IAAK,CACnD,GAAM,GAAW,EAAU,GAC3B,AAAI,EAAS,SAAS,EAAS,QAAQ,GAGxC,KAAK,QAAQ,UAAU,GACvB,KAAK,QAAQ,QAAQ,KAEtB,KAAK,QAAQ,UAAU,GAGxB,gBAAgB,EAAO,CACtB,YAAK,aAAe,EACb,KAGR,YAAY,EAAO,CAClB,YAAK,SAAW,EACT,MAKT,gBAA8B,GAAO,CACpC,YAAY,EAAS,CACpB,MAAM,GAGP,KAAK,EAAK,EAAQ,EAAY,EAAS,CACtC,GAAM,GAAQ,KACR,EAAS,GAAI,IAAW,KAAK,SACnC,EAAO,QAAQ,KAAK,MACpB,EAAO,iBAAiB,KAAK,eAC7B,EAAO,mBAAmB,KAAK,iBAC/B,EAAO,KAAK,EAAK,SAAU,EAAM,CAChC,GAAI,CACH,EAAO,EAAM,MAAM,KAAK,MAAM,WACtB,EAAP,CACD,AAAI,EACH,EAAQ,GAER,QAAQ,MAAM,GAGf,EAAM,QAAQ,UAAU,KAEvB,EAAY,GAGhB,MAAM,EAAM,CACX,GAAM,GAAa,GAEnB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CACrC,GAAM,GAAO,GAAc,MAAM,EAAK,IACtC,EAAW,KAAK,GAGjB,MAAO,IAWT,gBAAsC,GAAO,CAC5C,YAAY,EAAS,CACpB,MAAM,GAGP,KAAK,EAAK,EAAQ,EAAY,EAAS,CACtC,GAAM,GAAQ,KACR,EAAS,GACT,EAAU,GAAI,IACd,EAAS,GAAI,IAAW,KAAK,SACnC,EAAO,QAAQ,KAAK,MACpB,EAAO,gBAAgB,eACvB,EAAO,iBAAiB,KAAK,eAC7B,EAAO,mBAAmB,EAAM,iBAChC,GAAI,GAAS,EAEb,WAAqB,EAAG,CACvB,EAAO,KAAK,EAAI,GAAI,SAAU,EAAQ,CACrC,GAAM,GAAW,EAAM,MAAM,EAAQ,IACrC,EAAO,GAAK,CACX,MAAO,EAAS,MAChB,OAAQ,EAAS,OACjB,OAAQ,EAAS,OACjB,QAAS,EAAS,SAEnB,GAAU,EAEN,IAAW,GACV,GAAS,cAAgB,GAAG,GAAQ,UAAY,IACpD,EAAQ,MAAQ,EAChB,EAAQ,OAAS,EAAS,OAC1B,EAAQ,YAAc,GAClB,GAAQ,EAAO,KAElB,EAAY,GAGhB,GAAI,MAAM,QAAQ,GACjB,OAAS,GAAI,EAAG,EAAK,EAAI,OAAQ,EAAI,EAAI,EAAE,EAC1C,EAAY,OAIb,GAAO,KAAK,EAAK,SAAU,EAAQ,CAClC,GAAM,GAAW,EAAM,MAAM,EAAQ,IAErC,GAAI,EAAS,UAAW,CACvB,GAAM,GAAQ,EAAS,QAAQ,OAAS,EAAS,YAEjD,OAAS,GAAI,EAAG,EAAI,EAAO,IAAK,CAC/B,EAAO,GAAK,CACX,QAAS,IAGV,OAAS,GAAI,EAAG,EAAI,EAAS,YAAa,IACzC,EAAO,GAAG,QAAQ,KAAK,EAAS,QAAQ,EAAI,EAAS,YAAc,IACnE,EAAO,GAAG,OAAS,EAAS,OAC5B,EAAO,GAAG,MAAQ,EAAS,MAC3B,EAAO,GAAG,OAAS,EAAS,OAI9B,EAAQ,MAAQ,MAEhB,GAAQ,MAAM,MAAQ,EAAS,MAC/B,EAAQ,MAAM,OAAS,EAAS,OAChC,EAAQ,QAAU,EAAS,QAG5B,AAAI,EAAS,cAAgB,GAC5B,GAAQ,UAAY,IAGrB,EAAQ,OAAS,EAAS,OAC1B,EAAQ,YAAc,GAClB,GAAQ,EAAO,IACjB,EAAY,GAGhB,MAAO,IAKT,gBAA0B,GAAO,CAChC,YAAY,EAAS,CACpB,MAAM,GAGP,KAAK,EAAK,EAAQ,EAAY,EAAS,CACtC,AAAI,KAAK,OAAS,QAAW,GAAM,KAAK,KAAO,GAC/C,EAAM,KAAK,QAAQ,WAAW,GAC9B,GAAM,GAAQ,KACR,EAAS,GAAM,IAAI,GAEzB,GAAI,IAAW,OACd,SAAM,QAAQ,UAAU,GACxB,WAAW,UAAY,CACtB,AAAI,GAAQ,EAAO,GACnB,EAAM,QAAQ,QAAQ,IACpB,GACI,EAGR,GAAM,GAAQ,GAAgB,OAE9B,YAAuB,CACtB,IACA,GAAM,IAAI,EAAK,MACX,GAAQ,EAAO,MACnB,EAAM,QAAQ,QAAQ,GAGvB,WAAsB,EAAO,CAC5B,IACI,GAAS,EAAQ,GACrB,EAAM,QAAQ,UAAU,GACxB,EAAM,QAAQ,QAAQ,GAGvB,YAAgC,CAC/B,EAAM,oBAAoB,OAAQ,EAAa,IAC/C,EAAM,oBAAoB,QAAS,EAAc,IAGlD,SAAM,iBAAiB,OAAQ,EAAa,IAC5C,EAAM,iBAAiB,QAAS,EAAc,IAE1C,EAAI,OAAO,EAAG,KAAO,SACpB,KAAK,cAAgB,QAAW,GAAM,YAAc,KAAK,aAG9D,EAAM,QAAQ,UAAU,GACxB,EAAM,IAAM,EACL,GAKT,gBAAgC,GAAO,CACtC,YAAY,EAAS,CACpB,MAAM,GAGP,KAAK,EAAM,EAAQ,EAAY,EAAS,CACvC,GAAM,GAAU,GAAI,IACd,EAAS,GAAI,IAAY,KAAK,SACpC,EAAO,eAAe,KAAK,aAC3B,EAAO,QAAQ,KAAK,MACpB,GAAI,GAAS,EAEb,WAAqB,EAAG,CACvB,EAAO,KAAK,EAAK,GAAI,SAAU,EAAO,CACrC,EAAQ,OAAO,GAAK,EACpB,IAEI,IAAW,GACd,GAAQ,YAAc,GAClB,GAAQ,EAAO,KAElB,OAAW,GAGf,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,EAAE,EAClC,EAAY,GAGb,MAAO,IAWT,gBAAgC,GAAO,CACtC,YAAY,EAAS,CACpB,MAAM,GAGP,KAAK,EAAK,EAAQ,EAAY,EAAS,CACtC,GAAM,GAAQ,KACR,EAAU,GAAI,IACd,EAAS,GAAI,IAAW,KAAK,SACnC,SAAO,gBAAgB,eACvB,EAAO,iBAAiB,KAAK,eAC7B,EAAO,QAAQ,KAAK,MACpB,EAAO,mBAAmB,EAAM,iBAChC,EAAO,KAAK,EAAK,SAAU,EAAQ,CAClC,GAAM,GAAU,EAAM,MAAM,GAC5B,AAAI,CAAC,GAEL,CAAI,EAAQ,QAAU,OACrB,EAAQ,MAAQ,EAAQ,MACd,EAAQ,OAAS,QAC3B,GAAQ,MAAM,MAAQ,EAAQ,MAC9B,EAAQ,MAAM,OAAS,EAAQ,OAC/B,EAAQ,MAAM,KAAO,EAAQ,MAG9B,EAAQ,MAAQ,EAAQ,QAAU,OAAY,EAAQ,MAAQ,GAC9D,EAAQ,MAAQ,EAAQ,QAAU,OAAY,EAAQ,MAAQ,GAC9D,EAAQ,UAAY,EAAQ,YAAc,OAAY,EAAQ,UAAY,GAC1E,EAAQ,UAAY,EAAQ,YAAc,OAAY,EAAQ,UAAY,GAC1E,EAAQ,WAAa,EAAQ,aAAe,OAAY,EAAQ,WAAa,EAEzE,EAAQ,WAAa,QACxB,GAAQ,SAAW,EAAQ,UAGxB,EAAQ,QAAU,QACrB,GAAQ,MAAQ,EAAQ,OAGrB,EAAQ,SAAW,QACtB,GAAQ,OAAS,EAAQ,QAGtB,EAAQ,OAAS,QACpB,GAAQ,KAAO,EAAQ,MAGpB,EAAQ,UAAY,QACvB,GAAQ,QAAU,EAAQ,QAC1B,EAAQ,UAAY,IAGjB,EAAQ,cAAgB,GAC3B,GAAQ,UAAY,IAGjB,EAAQ,kBAAoB,QAC/B,GAAQ,gBAAkB,EAAQ,iBAGnC,EAAQ,YAAc,GAClB,GAAQ,EAAO,EAAS,KAC1B,EAAY,GACR,GAKT,gBAA4B,GAAO,CAClC,YAAY,EAAS,CACpB,MAAM,GAGP,KAAK,EAAK,EAAQ,EAAY,EAAS,CACtC,GAAM,GAAU,GAAI,IACd,EAAS,GAAI,IAAY,KAAK,SACpC,SAAO,eAAe,KAAK,aAC3B,EAAO,QAAQ,KAAK,MACpB,EAAO,KAAK,EAAK,SAAU,EAAO,CACjC,EAAQ,MAAQ,EAChB,EAAQ,YAAc,GAElB,IAAW,QACd,EAAO,IAEN,EAAY,GACR,GAKT,gBAAoB,GAAS,CAC5B,YAAY,EAAO,EAAY,EAAG,CACjC,QACA,KAAK,KAAO,QACZ,KAAK,MAAQ,GAAI,IAAM,GACvB,KAAK,UAAY,EAGlB,SAAU,EAGV,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,MAAM,KAAK,EAAO,OACvB,KAAK,UAAY,EAAO,UACjB,KAGR,OAAO,EAAM,CACZ,GAAM,GAAO,MAAM,OAAO,GAC1B,SAAK,OAAO,MAAQ,KAAK,MAAM,SAC/B,EAAK,OAAO,UAAY,KAAK,UACzB,KAAK,cAAgB,QAAW,GAAK,OAAO,YAAc,KAAK,YAAY,UAC3E,KAAK,WAAa,QAAW,GAAK,OAAO,SAAW,KAAK,UACzD,KAAK,QAAU,QAAW,GAAK,OAAO,MAAQ,KAAK,OACnD,KAAK,QAAU,QAAW,GAAK,OAAO,MAAQ,KAAK,OACnD,KAAK,WAAa,QAAW,GAAK,OAAO,SAAW,KAAK,UACzD,KAAK,SAAW,QAAW,GAAK,OAAO,OAAS,KAAK,OAAO,UACzD,GAKT,GAAM,UAAU,QAAU,GAE1B,gBAA8B,GAAM,CACnC,YAAY,EAAU,EAAa,EAAW,CAC7C,MAAM,EAAU,GAChB,KAAK,KAAO,kBACZ,KAAK,SAAS,KAAK,GAAS,WAC5B,KAAK,eACL,KAAK,YAAc,GAAI,IAAM,GAG9B,KAAK,EAAQ,CACZ,UAAM,UAAU,KAAK,KAAK,KAAM,GAChC,KAAK,YAAY,KAAK,EAAO,aACtB,MAKT,GAAgB,UAAU,kBAAoB,GAE9C,GAAM,IAAmC,GAAI,IAEvC,GAAqC,GAAI,GAEzC,GAA6B,GAAI,GAEvC,QAAkB,CACjB,YAAY,EAAQ,CACnB,KAAK,OAAS,EACd,KAAK,KAAO,EACZ,KAAK,WAAa,EAClB,KAAK,OAAS,EACd,KAAK,YAAc,EACnB,KAAK,QAAU,GAAI,IAAQ,IAAK,KAChC,KAAK,IAAM,KACX,KAAK,QAAU,KACf,KAAK,OAAS,GAAI,IAClB,KAAK,WAAa,GAClB,KAAK,YAAc,GACnB,KAAK,SAAW,GAAI,IACpB,KAAK,cAAgB,GAAI,IAAQ,EAAG,GACpC,KAAK,eAAiB,EACtB,KAAK,WAAa,CAAC,GAAI,IAAQ,EAAG,EAAG,EAAG,IAGzC,kBAAmB,CAClB,MAAO,MAAK,eAGb,YAAa,CACZ,MAAO,MAAK,SAGb,eAAe,EAAO,CACrB,GAAM,GAAe,KAAK,OACpB,EAAe,KAAK,OAE1B,GAAsB,sBAAsB,EAAM,aAElD,EAAa,SAAS,KAAK,IAE3B,GAAc,sBAAsB,EAAM,OAAO,aAEjD,EAAa,OAAO,IACpB,EAAa,oBAEb,GAAoB,iBAAiB,EAAa,iBAAkB,EAAa,oBAEjF,KAAK,SAAS,wBAAwB,IAEtC,EAAa,IAAI,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAC5F,EAAa,SAAS,EAAa,kBACnC,EAAa,SAAS,EAAa,oBAGpC,YAAY,EAAe,CAC1B,MAAO,MAAK,WAAW,GAGxB,iBAAkB,CACjB,MAAO,MAAK,cAGb,SAAU,CACT,AAAI,KAAK,KACR,KAAK,IAAI,UAGN,KAAK,SACR,KAAK,QAAQ,UAIf,KAAK,EAAQ,CACZ,YAAK,OAAS,EAAO,OAAO,QAC5B,KAAK,KAAO,EAAO,KACnB,KAAK,OAAS,EAAO,OACrB,KAAK,QAAQ,KAAK,EAAO,SAClB,KAGR,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,MAGpC,QAAS,CACR,GAAM,GAAS,GACf,MAAI,MAAK,OAAS,GAAG,GAAO,KAAO,KAAK,MACpC,KAAK,aAAe,GAAG,GAAO,WAAa,KAAK,YAChD,KAAK,SAAW,GAAG,GAAO,OAAS,KAAK,QACxC,MAAK,QAAQ,IAAM,KAAO,KAAK,QAAQ,IAAM,MAAK,GAAO,QAAU,KAAK,QAAQ,WACpF,EAAO,OAAS,KAAK,OAAO,OAAO,IAAO,OAC1C,MAAO,GAAO,OAAO,OACd,GAKT,gBAA8B,GAAY,CACzC,aAAc,CACb,MAAM,GAAI,IAAkB,GAAI,EAAG,GAAK,MACxC,KAAK,MAAQ,EAGd,eAAe,EAAO,CACrB,GAAM,GAAS,KAAK,OACd,EAAM,GAAU,EAAI,EAAM,MAAQ,KAAK,MACvC,EAAS,KAAK,QAAQ,MAAQ,KAAK,QAAQ,OAC3C,EAAM,EAAM,UAAY,EAAO,IAErC,AAAI,KAAQ,EAAO,KAAO,IAAW,EAAO,QAAU,IAAQ,EAAO,MACpE,GAAO,IAAM,EACb,EAAO,OAAS,EAChB,EAAO,IAAM,EACb,EAAO,0BAGR,MAAM,eAAe,GAGtB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,MAAQ,EAAO,MACb,MAKT,GAAgB,UAAU,kBAAoB,GAE9C,gBAAwB,GAAM,CAC7B,YAAY,EAAO,EAAW,EAAW,EAAG,EAAQ,KAAK,GAAK,EAAG,EAAW,EAAG,EAAQ,EAAG,CACzF,MAAM,EAAO,GACb,KAAK,KAAO,YACZ,KAAK,SAAS,KAAK,GAAS,WAC5B,KAAK,eACL,KAAK,OAAS,GAAI,IAClB,KAAK,SAAW,EAChB,KAAK,MAAQ,EACb,KAAK,SAAW,EAChB,KAAK,MAAQ,EAEb,KAAK,OAAS,GAAI,OAGf,QAAQ,CAGX,MAAO,MAAK,UAAY,KAAK,MAG1B,OAAM,EAAO,CAEhB,KAAK,UAAY,EAAQ,KAAK,GAG/B,SAAU,CACT,KAAK,OAAO,UAGb,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,SAAW,EAAO,SACvB,KAAK,MAAQ,EAAO,MACpB,KAAK,SAAW,EAAO,SACvB,KAAK,MAAQ,EAAO,MACpB,KAAK,OAAS,EAAO,OAAO,QAC5B,KAAK,OAAS,EAAO,OAAO,QACrB,MAKT,GAAU,UAAU,YAAc,GAElC,GAAM,IAAiC,GAAI,IAErC,GAAmC,GAAI,GAEvC,GAA2B,GAAI,GAErC,gBAA+B,GAAY,CAC1C,aAAc,CACb,MAAM,GAAI,IAAkB,GAAI,EAAG,GAAK,MACxC,KAAK,cAAgB,GAAI,IAAQ,EAAG,GACpC,KAAK,eAAiB,EACtB,KAAK,WAAa,CAalB,GAAI,IAAQ,EAAG,EAAG,EAAG,GACrB,GAAI,IAAQ,EAAG,EAAG,EAAG,GACrB,GAAI,IAAQ,EAAG,EAAG,EAAG,GACrB,GAAI,IAAQ,EAAG,EAAG,EAAG,GACrB,GAAI,IAAQ,EAAG,EAAG,EAAG,GACrB,GAAI,IAAQ,EAAG,EAAG,EAAG,IACrB,KAAK,gBAAkB,CAAC,GAAI,GAAQ,EAAG,EAAG,GAAI,GAAI,GAAQ,GAAI,EAAG,GAAI,GAAI,GAAQ,EAAG,EAAG,GAAI,GAAI,GAAQ,EAAG,EAAG,IAAK,GAAI,GAAQ,EAAG,EAAG,GAAI,GAAI,GAAQ,EAAG,GAAI,IAC3J,KAAK,SAAW,CAAC,GAAI,GAAQ,EAAG,EAAG,GAAI,GAAI,GAAQ,EAAG,EAAG,GAAI,GAAI,GAAQ,EAAG,EAAG,GAAI,GAAI,GAAQ,EAAG,EAAG,GAAI,GAAI,GAAQ,EAAG,EAAG,GAAI,GAAI,GAAQ,EAAG,EAAG,KAGlJ,eAAe,EAAO,EAAgB,EAAG,CACxC,GAAM,GAAS,KAAK,OACd,EAAe,KAAK,OACpB,EAAM,EAAM,UAAY,EAAO,IAErC,AAAI,IAAQ,EAAO,KAClB,GAAO,IAAM,EACb,EAAO,0BAGR,GAAoB,sBAAsB,EAAM,aAEhD,EAAO,SAAS,KAAK,IAErB,GAAY,KAAK,EAAO,UAExB,GAAY,IAAI,KAAK,gBAAgB,IAErC,EAAO,GAAG,KAAK,KAAK,SAAS,IAC7B,EAAO,OAAO,IACd,EAAO,oBACP,EAAa,gBAAgB,CAAC,GAAoB,EAAG,CAAC,GAAoB,EAAG,CAAC,GAAoB,GAElG,GAAkB,iBAAiB,EAAO,iBAAkB,EAAO,oBAEnE,KAAK,SAAS,wBAAwB,KAKxC,GAAiB,UAAU,mBAAqB,GAEhD,gBAAyB,GAAM,CAC9B,YAAY,EAAO,EAAW,EAAW,EAAG,EAAQ,EAAG,CACtD,MAAM,EAAO,GACb,KAAK,KAAO,aACZ,KAAK,SAAW,EAChB,KAAK,MAAQ,EAEb,KAAK,OAAS,GAAI,OAGf,QAAQ,CAGX,MAAO,MAAK,UAAY,EAAI,KAAK,MAG9B,OAAM,EAAO,CAEhB,KAAK,UAAY,EAAS,GAAI,KAAK,IAGpC,SAAU,CACT,KAAK,OAAO,UAGb,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,SAAW,EAAO,SACvB,KAAK,MAAQ,EAAO,MACpB,KAAK,OAAS,EAAO,OAAO,QACrB,MAKT,GAAW,UAAU,aAAe,GAEpC,gBAAqC,GAAY,CAChD,aAAc,CACb,MAAM,GAAI,IAAmB,GAAI,EAAG,EAAG,GAAI,GAAK,OAKlD,GAAuB,UAAU,yBAA2B,GAE5D,gBAA+B,GAAM,CACpC,YAAY,EAAO,EAAW,CAC7B,MAAM,EAAO,GACb,KAAK,KAAO,mBACZ,KAAK,SAAS,KAAK,GAAS,WAC5B,KAAK,eACL,KAAK,OAAS,GAAI,IAClB,KAAK,OAAS,GAAI,IAGnB,SAAU,CACT,KAAK,OAAO,UAGb,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,OAAS,EAAO,OAAO,QAC5B,KAAK,OAAS,EAAO,OAAO,QACrB,MAKT,GAAiB,UAAU,mBAAqB,GAEhD,gBAA2B,GAAM,CAChC,YAAY,EAAO,EAAW,CAC7B,MAAM,EAAO,GACb,KAAK,KAAO,gBAKd,GAAa,UAAU,eAAiB,GAExC,gBAA4B,GAAM,CACjC,YAAY,EAAO,EAAW,EAAQ,GAAI,EAAS,GAAI,CACtD,MAAM,EAAO,GACb,KAAK,KAAO,gBACZ,KAAK,MAAQ,EACb,KAAK,OAAS,KAGX,QAAQ,CAEX,MAAO,MAAK,UAAY,KAAK,MAAQ,KAAK,OAAS,KAAK,MAGrD,OAAM,EAAO,CAEhB,KAAK,UAAY,EAAS,MAAK,MAAQ,KAAK,OAAS,KAAK,IAG3D,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,MAAQ,EAAO,MACpB,KAAK,OAAS,EAAO,OACd,KAGR,OAAO,EAAM,CACZ,GAAM,GAAO,MAAM,OAAO,GAC1B,SAAK,OAAO,MAAQ,KAAK,MACzB,EAAK,OAAO,OAAS,KAAK,OACnB,GAKT,GAAc,UAAU,gBAAkB,GAW1C,QAA0B,CACzB,aAAc,CACb,KAAK,aAAe,GAEpB,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,KAAK,aAAa,KAAK,GAAI,IAI7B,IAAI,EAAc,CACjB,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,KAAK,aAAa,GAAG,KAAK,EAAa,IAGxC,MAAO,MAGR,MAAO,CACN,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,KAAK,aAAa,GAAG,IAAI,EAAG,EAAG,GAGhC,MAAO,MAKR,MAAM,EAAQ,EAAQ,CAErB,GAAM,GAAI,EAAO,EACd,EAAI,EAAO,EACX,EAAI,EAAO,EACR,EAAQ,KAAK,aAEnB,SAAO,KAAK,EAAM,IAAI,eAAe,SAErC,EAAO,gBAAgB,EAAM,GAAI,QAAW,GAC5C,EAAO,gBAAgB,EAAM,GAAI,QAAW,GAC5C,EAAO,gBAAgB,EAAM,GAAI,QAAW,GAE5C,EAAO,gBAAgB,EAAM,GAAI,SAAY,GAAI,IACjD,EAAO,gBAAgB,EAAM,GAAI,SAAY,GAAI,IACjD,EAAO,gBAAgB,EAAM,GAAI,QAAY,GAAM,EAAI,EAAI,IAC3D,EAAO,gBAAgB,EAAM,GAAI,SAAY,GAAI,IACjD,EAAO,gBAAgB,EAAM,GAAI,QAAY,GAAI,EAAI,EAAI,IAClD,EAMR,gBAAgB,EAAQ,EAAQ,CAE/B,GAAM,GAAI,EAAO,EACd,EAAI,EAAO,EACX,EAAI,EAAO,EACR,EAAQ,KAAK,aAEnB,SAAO,KAAK,EAAM,IAAI,eAAe,SAGrC,EAAO,gBAAgB,EAAM,GAAI,EAAM,QAAW,GAElD,EAAO,gBAAgB,EAAM,GAAI,EAAM,QAAW,GAClD,EAAO,gBAAgB,EAAM,GAAI,EAAM,QAAW,GAElD,EAAO,gBAAgB,EAAM,GAAI,EAAM,QAAW,EAAI,GAEtD,EAAO,gBAAgB,EAAM,GAAI,EAAM,QAAW,EAAI,GACtD,EAAO,gBAAgB,EAAM,GAAI,QAAW,EAAI,EAAI,SAEpD,EAAO,gBAAgB,EAAM,GAAI,EAAM,QAAW,EAAI,GACtD,EAAO,gBAAgB,EAAM,GAAI,QAAY,GAAI,EAAI,EAAI,IAElD,EAGR,IAAI,EAAI,CACP,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,KAAK,aAAa,GAAG,IAAI,EAAG,aAAa,IAG1C,MAAO,MAGR,YAAY,EAAI,EAAG,CAClB,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,KAAK,aAAa,GAAG,gBAAgB,EAAG,aAAa,GAAI,GAG1D,MAAO,MAGR,MAAM,EAAG,CACR,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,KAAK,aAAa,GAAG,eAAe,GAGrC,MAAO,MAGR,KAAK,EAAI,EAAO,CACf,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,KAAK,aAAa,GAAG,KAAK,EAAG,aAAa,GAAI,GAG/C,MAAO,MAGR,OAAO,EAAI,CACV,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,GAAI,CAAC,KAAK,aAAa,GAAG,OAAO,EAAG,aAAa,IAChD,MAAO,GAIT,MAAO,GAGR,KAAK,EAAI,CACR,MAAO,MAAK,IAAI,EAAG,cAGpB,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,MAGpC,UAAU,EAAO,EAAS,EAAG,CAC5B,GAAM,GAAe,KAAK,aAE1B,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,EAAa,GAAG,UAAU,EAAO,EAAS,EAAI,GAG/C,MAAO,MAGR,QAAQ,EAAQ,GAAI,EAAS,EAAG,CAC/B,GAAM,GAAe,KAAK,aAE1B,OAAS,GAAI,EAAG,EAAI,EAAG,IACtB,EAAa,GAAG,QAAQ,EAAO,EAAS,EAAI,GAG7C,MAAO,SAKD,YAAW,EAAQ,EAAS,CAElC,GAAM,GAAI,EAAO,EACd,EAAI,EAAO,EACX,EAAI,EAAO,EAEd,EAAQ,GAAK,QAEb,EAAQ,GAAK,QAAW,EACxB,EAAQ,GAAK,QAAW,EACxB,EAAQ,GAAK,QAAW,EAExB,EAAQ,GAAK,SAAW,EAAI,EAC5B,EAAQ,GAAK,SAAW,EAAI,EAC5B,EAAQ,GAAK,QAAY,GAAI,EAAI,EAAI,GACrC,EAAQ,GAAK,SAAW,EAAI,EAC5B,EAAQ,GAAK,QAAY,GAAI,EAAI,EAAI,IAKvC,GAAoB,UAAU,sBAAwB,GAEtD,gBAAyB,GAAM,CAC9B,YAAY,EAAK,GAAI,IAAuB,EAAY,EAAG,CAC1D,MAAM,OAAW,GACjB,KAAK,GAAK,EAGX,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,GAAG,KAAK,EAAO,IACb,KAGR,SAAS,EAAM,CACd,YAAK,UAAY,EAAK,UAEtB,KAAK,GAAG,UAAU,EAAK,IAChB,KAGR,OAAO,EAAM,CACZ,GAAM,GAAO,MAAM,OAAO,GAC1B,SAAK,OAAO,GAAK,KAAK,GAAG,UAClB,GAKT,GAAW,UAAU,aAAe,GAEpC,gBAA6B,GAAO,CACnC,YAAY,EAAS,CACpB,MAAM,GACN,KAAK,SAAW,GAGjB,KAAK,EAAK,EAAQ,EAAY,EAAS,CACtC,GAAM,GAAQ,KACR,EAAS,GAAI,IAAW,EAAM,SACpC,EAAO,QAAQ,EAAM,MACrB,EAAO,iBAAiB,EAAM,eAC9B,EAAO,mBAAmB,EAAM,iBAChC,EAAO,KAAK,EAAK,SAAU,EAAM,CAChC,GAAI,CACH,EAAO,EAAM,MAAM,KAAK,MAAM,WACtB,EAAP,CACD,AAAI,EACH,EAAQ,GAER,QAAQ,MAAM,GAGf,EAAM,QAAQ,UAAU,KAEvB,EAAY,GAGhB,MAAM,EAAM,CACX,GAAM,GAAW,KAAK,SAEtB,WAAoB,EAAM,CACzB,MAAI,GAAS,KAAU,QACtB,QAAQ,KAAK,0CAA2C,GAGlD,EAAS,GAGjB,GAAM,GAAW,GAAI,IAAU,EAAK,MAqEpC,GApEI,EAAK,OAAS,QAAW,GAAS,KAAO,EAAK,MAC9C,EAAK,OAAS,QAAW,GAAS,KAAO,EAAK,MAC9C,EAAK,QAAU,QAAa,EAAS,QAAU,QAAW,EAAS,MAAM,OAAO,EAAK,OACrF,EAAK,YAAc,QAAW,GAAS,UAAY,EAAK,WACxD,EAAK,YAAc,QAAW,GAAS,UAAY,EAAK,WACxD,EAAK,QAAU,QAAW,GAAS,MAAQ,EAAK,OAChD,EAAK,YAAc,QAAW,GAAS,UAAY,GAAI,MAAQ,OAAO,EAAK,YAC3E,EAAK,iBAAmB,QAAW,GAAS,eAAiB,EAAK,gBAClE,EAAK,WAAa,QAAa,EAAS,WAAa,QAAW,EAAS,SAAS,OAAO,EAAK,UAC9F,EAAK,WAAa,QAAa,EAAS,WAAa,QAAW,EAAS,SAAS,OAAO,EAAK,UAC9F,EAAK,oBAAsB,QAAW,GAAS,kBAAoB,EAAK,mBACxE,EAAK,eAAiB,QAAa,EAAS,eAAiB,QAAW,EAAS,aAAa,OAAO,EAAK,cAC1G,EAAK,YAAc,QAAW,GAAS,UAAY,EAAK,WACxD,EAAK,YAAc,QAAW,GAAS,UAAY,EAAK,WACxD,EAAK,qBAAuB,QAAW,GAAS,mBAAqB,EAAK,oBAC1E,EAAK,eAAiB,QAAW,GAAS,aAAe,EAAK,cAC9D,EAAK,YAAc,QAAW,GAAS,UAAY,EAAK,WACxD,EAAK,sBAAwB,QAAW,GAAS,oBAAsB,EAAK,qBAC5E,EAAK,kBAAoB,QAAa,EAAS,kBAAoB,QAAW,EAAS,gBAAgB,OAAO,EAAK,iBACnH,EAAK,MAAQ,QAAW,GAAS,IAAM,EAAK,KAC5C,EAAK,cAAgB,QAAW,GAAS,YAAc,EAAK,aAC5D,EAAK,WAAa,QAAW,GAAS,SAAW,EAAK,UACtD,EAAK,UAAY,QAAW,GAAS,QAAU,EAAK,SACpD,EAAK,OAAS,QAAW,GAAS,KAAO,EAAK,MAC9C,EAAK,aAAe,QAAW,GAAS,WAAa,EAAK,YAC1D,EAAK,UAAY,QAAW,GAAS,QAAU,EAAK,SACpD,EAAK,SAAW,QAAW,GAAS,OAAS,EAAK,QAClD,EAAK,cAAgB,QAAW,GAAS,YAAc,EAAK,aAC5D,EAAK,YAAc,QAAW,GAAS,UAAY,EAAK,WACxD,EAAK,YAAc,QAAW,GAAS,UAAY,EAAK,WACxD,EAAK,aAAe,QAAW,GAAS,WAAa,EAAK,YAC1D,EAAK,aAAe,QAAW,GAAS,WAAa,EAAK,YAC1D,EAAK,eAAiB,QAAW,GAAS,aAAe,EAAK,cAC9D,EAAK,mBAAqB,QAAW,GAAS,iBAAmB,EAAK,kBACtE,EAAK,cAAgB,QAAW,GAAS,YAAc,EAAK,aAC5D,EAAK,aAAe,QAAW,GAAS,WAAa,EAAK,YAC1D,EAAK,kBAAoB,QAAW,GAAS,gBAAkB,EAAK,iBACpE,EAAK,cAAgB,QAAW,GAAS,YAAc,EAAK,aAC5D,EAAK,eAAiB,QAAW,GAAS,aAAe,EAAK,cAC9D,EAAK,eAAiB,QAAW,GAAS,aAAe,EAAK,cAC9D,EAAK,YAAc,QAAW,GAAS,UAAY,EAAK,WACxD,EAAK,qBAAuB,QAAW,GAAS,mBAAqB,EAAK,oBAC1E,EAAK,mBAAqB,QAAW,GAAS,iBAAmB,EAAK,kBACtE,EAAK,oBAAsB,QAAW,GAAS,kBAAoB,EAAK,mBACxE,EAAK,WAAa,QAAW,GAAS,SAAW,EAAK,UACtD,EAAK,YAAc,GAAG,GAAS,UAAY,EAAK,WAChD,EAAK,WAAa,QAAW,GAAS,SAAW,EAAK,UACtD,EAAK,UAAY,QAAW,GAAS,QAAU,EAAK,SACpD,EAAK,QAAU,QAAW,GAAS,MAAQ,EAAK,OAChD,EAAK,gBAAkB,QAAW,GAAS,cAAgB,EAAK,eAChE,EAAK,sBAAwB,QAAW,GAAS,oBAAsB,EAAK,qBAC5E,EAAK,qBAAuB,QAAW,GAAS,mBAAqB,EAAK,oBAC1E,EAAK,YAAc,QAAW,GAAS,UAAY,EAAK,WACxD,EAAK,kBAAoB,QAAW,GAAS,gBAAkB,EAAK,iBACpE,EAAK,qBAAuB,QAAW,GAAS,mBAAqB,EAAK,oBAC1E,EAAK,UAAY,QAAW,GAAS,QAAU,EAAK,SACpD,EAAK,aAAe,QAAW,GAAS,WAAa,EAAK,YAC1D,EAAK,WAAa,QAAW,GAAS,SAAW,EAAK,UAEtD,EAAK,eAAiB,QACzB,CAAI,MAAO,GAAK,cAAiB,SAChC,EAAS,aAAe,EAAK,aAAe,EAE5C,EAAS,aAAe,EAAK,cAK3B,EAAK,WAAa,OACrB,OAAW,KAAQ,GAAK,SAAU,CACjC,GAAM,GAAU,EAAK,SAAS,GAG9B,OAFA,EAAS,SAAS,GAAQ,GAElB,EAAQ,UACV,IACJ,EAAS,SAAS,GAAM,MAAQ,EAAW,EAAQ,OACnD,UAEI,IACJ,EAAS,SAAS,GAAM,MAAQ,GAAI,MAAQ,OAAO,EAAQ,OAC3D,UAEI,KACJ,EAAS,SAAS,GAAM,MAAQ,GAAI,MAAU,UAAU,EAAQ,OAChE,UAEI,KACJ,EAAS,SAAS,GAAM,MAAQ,GAAI,KAAU,UAAU,EAAQ,OAChE,UAEI,KACJ,EAAS,SAAS,GAAM,MAAQ,GAAI,MAAU,UAAU,EAAQ,OAChE,UAEI,KACJ,EAAS,SAAS,GAAM,MAAQ,GAAI,MAAU,UAAU,EAAQ,OAChE,UAEI,KACJ,EAAS,SAAS,GAAM,MAAQ,GAAI,MAAU,UAAU,EAAQ,OAChE,cAGA,EAAS,SAAS,GAAM,MAAQ,EAAQ,OAS5C,GAJI,EAAK,UAAY,QAAW,GAAS,QAAU,EAAK,SACpD,EAAK,eAAiB,QAAW,GAAS,aAAe,EAAK,cAC9D,EAAK,iBAAmB,QAAW,GAAS,eAAiB,EAAK,gBAElE,EAAK,aAAe,OACvB,OAAW,KAAO,GAAK,WACtB,EAAS,WAAW,GAAO,EAAK,WAAW,GAmB7C,GAdI,EAAK,UAAY,QAAW,GAAS,YAAc,EAAK,UAAY,GAGpE,EAAK,OAAS,QAAW,GAAS,KAAO,EAAK,MAC9C,EAAK,kBAAoB,QAAW,GAAS,gBAAkB,EAAK,iBAEpE,EAAK,MAAQ,QAAW,GAAS,IAAM,EAAW,EAAK,MACvD,EAAK,SAAW,QAAW,GAAS,OAAS,EAAW,EAAK,SAC7D,EAAK,WAAa,QAAW,GAAS,SAAW,EAAW,EAAK,WACjE,EAAK,UAAY,QAAW,GAAS,QAAU,EAAW,EAAK,UAC/D,EAAK,YAAc,QAAW,GAAS,UAAY,EAAK,WACxD,EAAK,YAAc,QAAW,GAAS,UAAY,EAAW,EAAK,YACnE,EAAK,gBAAkB,QAAW,GAAS,cAAgB,EAAK,eAEhE,EAAK,cAAgB,OAAW,CACnC,GAAI,GAAc,EAAK,YAEvB,AAAI,MAAM,QAAQ,KAAiB,IAElC,GAAc,CAAC,EAAa,IAG7B,EAAS,YAAc,GAAI,MAAU,UAAU,GAGhD,MAAI,GAAK,kBAAoB,QAAW,GAAS,gBAAkB,EAAW,EAAK,kBAC/E,EAAK,oBAAsB,QAAW,GAAS,kBAAoB,EAAK,mBACxE,EAAK,mBAAqB,QAAW,GAAS,iBAAmB,EAAK,kBACtE,EAAK,eAAiB,QAAW,GAAS,aAAe,EAAW,EAAK,eACzE,EAAK,eAAiB,QAAW,GAAS,aAAe,EAAW,EAAK,eACzE,EAAK,cAAgB,QAAW,GAAS,YAAc,EAAW,EAAK,cACvE,EAAK,oBAAsB,QAAW,GAAS,kBAAoB,EAAK,mBACxE,EAAK,cAAgB,QAAW,GAAS,YAAc,EAAW,EAAK,cACvE,EAAK,uBAAyB,QAAW,GAAS,qBAAuB,EAAW,EAAK,uBACzF,EAAK,kBAAoB,QAAW,GAAS,gBAAkB,EAAW,EAAK,kBAC/E,EAAK,SAAW,QAAW,GAAS,OAAS,EAAW,EAAK,SAC7D,EAAK,kBAAoB,QAAW,GAAS,gBAAkB,EAAK,iBACpE,EAAK,eAAiB,QAAW,GAAS,aAAe,EAAK,cAC9D,EAAK,kBAAoB,QAAW,GAAS,gBAAkB,EAAK,iBACpE,EAAK,WAAa,QAAW,GAAS,SAAW,EAAW,EAAK,WACjE,EAAK,oBAAsB,QAAW,GAAS,kBAAoB,EAAK,mBACxE,EAAK,QAAU,QAAW,GAAS,MAAQ,EAAW,EAAK,QAC3D,EAAK,iBAAmB,QAAW,GAAS,eAAiB,EAAK,gBAClE,EAAK,cAAgB,QAAW,GAAS,YAAc,EAAW,EAAK,cACvE,EAAK,eAAiB,QAAW,GAAS,aAAe,EAAW,EAAK,eACzE,EAAK,wBAA0B,QAAW,GAAS,sBAAwB,EAAW,EAAK,wBAC3F,EAAK,qBAAuB,QAAW,GAAS,mBAAqB,EAAW,EAAK,qBACrF,EAAK,uBAAyB,QAAW,GAAS,qBAAuB,GAAI,MAAU,UAAU,EAAK,uBACtG,EAAK,kBAAoB,QAAW,GAAS,gBAAkB,EAAW,EAAK,kBAC/E,EAAK,eAAiB,QAAW,GAAS,aAAe,EAAW,EAAK,eACtE,EAGR,YAAY,EAAO,CAClB,YAAK,SAAW,EACT,MAKT,QAAkB,OACV,YAAW,EAAO,CACxB,GAAI,MAAO,cAAgB,YAC1B,MAAO,IAAI,eAAc,OAAO,GAKjC,GAAI,GAAI,GAER,OAAS,GAAI,EAAG,EAAK,EAAM,OAAQ,EAAI,EAAI,IAE1C,GAAK,OAAO,aAAa,EAAM,IAGhC,GAAI,CAEH,MAAO,oBAAmB,OAAO,UACzB,EAAP,CAED,MAAO,UAIF,gBAAe,EAAK,CAC1B,GAAM,GAAQ,EAAI,YAAY,KAC9B,MAAI,KAAU,GAAW,KAClB,EAAI,OAAO,EAAG,EAAQ,SAGvB,YAAW,EAAK,EAAM,CAE5B,MAAI,OAAO,IAAQ,UAAY,IAAQ,GAAW,GAE9C,iBAAgB,KAAK,IAAS,MAAM,KAAK,IAC5C,GAAO,EAAK,QAAQ,0BAA2B,OAI5C,mBAAmB,KAAK,IAExB,gBAAgB,KAAK,IAErB,aAAa,KAAK,GAAa,EAE5B,EAAO,IAKhB,gBAAsC,GAAe,CACpD,aAAc,CACb,QACA,KAAK,KAAO,0BACZ,KAAK,cAAgB,IAGtB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,cAAgB,EAAO,cACrB,KAGR,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,MAGpC,QAAS,CACR,GAAM,GAAO,MAAM,OAAO,MAC1B,SAAK,cAAgB,KAAK,cAC1B,EAAK,0BAA4B,GAC1B,GAKT,GAAwB,UAAU,0BAA4B,GAE9D,gBAAmC,GAAO,CACzC,YAAY,EAAS,CACpB,MAAM,GAGP,KAAK,EAAK,EAAQ,EAAY,EAAS,CACtC,GAAM,GAAQ,KACR,EAAS,GAAI,IAAW,EAAM,SACpC,EAAO,QAAQ,EAAM,MACrB,EAAO,iBAAiB,EAAM,eAC9B,EAAO,mBAAmB,EAAM,iBAChC,EAAO,KAAK,EAAK,SAAU,EAAM,CAChC,GAAI,CACH,EAAO,EAAM,MAAM,KAAK,MAAM,WACtB,EAAP,CACD,AAAI,EACH,EAAQ,GAER,QAAQ,MAAM,GAGf,EAAM,QAAQ,UAAU,KAEvB,EAAY,GAGhB,MAAM,EAAM,CACX,GAAM,GAAuB,GACvB,EAAiB,GAEvB,WAA8B,EAAM,EAAM,CACzC,GAAI,EAAqB,KAAU,OAAW,MAAO,GAAqB,GAE1E,GAAM,GAAoB,AADC,EAAK,mBACa,GACvC,EAAS,EAAe,EAAM,EAAkB,QAChD,EAAQ,GAAc,EAAkB,KAAM,GAC9C,EAAK,GAAI,IAAkB,EAAO,EAAkB,QAC1D,SAAG,KAAO,EAAkB,KAC5B,EAAqB,GAAQ,EACtB,EAGR,WAAwB,EAAM,EAAM,CACnC,GAAI,EAAe,KAAU,OAAW,MAAO,GAAe,GAE9D,GAAM,GAAc,AADC,EAAK,aACO,GAC3B,EAAK,GAAI,aAAY,GAAa,OACxC,SAAe,GAAQ,EAChB,EAGR,GAAM,GAAW,EAAK,0BAA4B,GAAI,IAA4B,GAAI,IAChF,EAAQ,EAAK,KAAK,MAExB,GAAI,IAAU,OAAW,CACxB,GAAM,GAAa,GAAc,EAAM,KAAM,EAAM,OACnD,EAAS,SAAS,GAAI,IAAgB,EAAY,IAGnD,GAAM,GAAa,EAAK,KAAK,WAE7B,OAAW,KAAO,GAAY,CAC7B,GAAM,GAAY,EAAW,GACzB,EAEJ,GAAI,EAAU,6BAA8B,CAC3C,GAAM,GAAoB,EAAqB,EAAK,KAAM,EAAU,MACpE,EAAkB,GAAI,IAA2B,EAAmB,EAAU,SAAU,EAAU,OAAQ,EAAU,gBAC9G,CACN,GAAM,GAAa,GAAc,EAAU,KAAM,EAAU,OACrD,EAAwB,EAAU,2BAA6B,GAA2B,GAChG,EAAkB,GAAI,GAAsB,EAAY,EAAU,SAAU,EAAU,YAGvF,AAAI,EAAU,OAAS,QAAW,GAAgB,KAAO,EAAU,MAC/D,EAAU,QAAU,QAAW,EAAgB,SAAS,EAAU,OAElE,EAAU,cAAgB,QAC7B,GAAgB,YAAY,OAAS,EAAU,YAAY,OAC3D,EAAgB,YAAY,MAAQ,EAAU,YAAY,OAG3D,EAAS,aAAa,EAAK,GAG5B,GAAM,GAAkB,EAAK,KAAK,gBAElC,GAAI,EACH,OAAW,KAAO,GAAiB,CAClC,GAAM,GAAiB,EAAgB,GACjC,EAAQ,GAEd,OAAS,GAAI,EAAG,EAAK,EAAe,OAAQ,EAAI,EAAI,IAAK,CACxD,GAAM,GAAY,EAAe,GAC7B,EAEJ,GAAI,EAAU,6BAA8B,CAC3C,GAAM,GAAoB,EAAqB,EAAK,KAAM,EAAU,MACpE,EAAkB,GAAI,IAA2B,EAAmB,EAAU,SAAU,EAAU,OAAQ,EAAU,gBAC9G,CACN,GAAM,GAAa,GAAc,EAAU,KAAM,EAAU,OAC3D,EAAkB,GAAI,IAAgB,EAAY,EAAU,SAAU,EAAU,YAGjF,AAAI,EAAU,OAAS,QAAW,GAAgB,KAAO,EAAU,MACnE,EAAM,KAAK,GAGZ,EAAS,gBAAgB,GAAO,EAMlC,AAAI,AAFyB,EAAK,KAAK,sBAGtC,GAAS,qBAAuB,IAGjC,GAAM,GAAS,EAAK,KAAK,QAAU,EAAK,KAAK,WAAa,EAAK,KAAK,QAEpE,GAAI,IAAW,OACd,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,IAAM,EAAG,EAAE,EAAG,CAChD,GAAM,GAAQ,EAAO,GACrB,EAAS,SAAS,EAAM,MAAO,EAAM,MAAO,EAAM,eAIpD,GAAM,GAAiB,EAAK,KAAK,eAEjC,GAAI,IAAmB,OAAW,CACjC,GAAM,GAAS,GAAI,GAEnB,AAAI,EAAe,SAAW,QAC7B,EAAO,UAAU,EAAe,QAGjC,EAAS,eAAiB,GAAI,IAAO,EAAQ,EAAe,QAG7D,MAAI,GAAK,MAAM,GAAS,KAAO,EAAK,MAChC,EAAK,UAAU,GAAS,SAAW,EAAK,UACrC,GAKT,gBAA2B,GAAO,CACjC,YAAY,EAAS,CACpB,MAAM,GAGP,KAAK,EAAK,EAAQ,EAAY,EAAS,CACtC,GAAM,GAAQ,KACR,EAAO,KAAK,OAAS,GAAK,GAAY,eAAe,GAAO,KAAK,KACvE,KAAK,aAAe,KAAK,cAAgB,EACzC,GAAM,GAAS,GAAI,IAAW,KAAK,SACnC,EAAO,QAAQ,KAAK,MACpB,EAAO,iBAAiB,KAAK,eAC7B,EAAO,mBAAmB,KAAK,iBAC/B,EAAO,KAAK,EAAK,SAAU,EAAM,CAChC,GAAI,GAAO,KAEX,GAAI,CACH,EAAO,KAAK,MAAM,SACV,EAAP,CACD,AAAI,IAAY,QAAW,EAAQ,GACnC,QAAQ,MAAM,mCAAsC,EAAM,IAAK,EAAM,SACrE,OAGD,GAAM,GAAW,EAAK,SAEtB,GAAI,IAAa,QAAa,EAAS,OAAS,QAAa,EAAS,KAAK,gBAAkB,WAAY,CACxG,QAAQ,MAAM,kCAAqC,GACnD,OAGD,EAAM,MAAM,EAAM,IAChB,EAAY,QAGV,WAAU,EAAK,EAAY,CAChC,GAAM,GAAQ,KACR,EAAO,KAAK,OAAS,GAAK,GAAY,eAAe,GAAO,KAAK,KACvE,KAAK,aAAe,KAAK,cAAgB,EACzC,GAAM,GAAS,GAAI,IAAW,KAAK,SACnC,EAAO,QAAQ,KAAK,MACpB,EAAO,iBAAiB,KAAK,eAC7B,EAAO,mBAAmB,KAAK,iBAC/B,GAAM,GAAO,KAAM,GAAO,UAAU,EAAK,GACnC,EAAO,KAAK,MAAM,GAClB,EAAW,EAAK,SAEtB,GAAI,IAAa,QAAa,EAAS,OAAS,QAAa,EAAS,KAAK,gBAAkB,WAC5F,KAAM,IAAI,OAAM,kCAAqC,GAGtD,MAAO,MAAM,GAAM,WAAW,GAG/B,MAAM,EAAM,EAAQ,CACnB,GAAM,GAAa,KAAK,gBAAgB,EAAK,YACvC,EAAS,KAAK,YAAY,EAAK,QAC/B,EAAa,KAAK,gBAAgB,EAAK,WAAY,GACnD,EAAS,KAAK,YAAY,EAAK,OAAQ,UAAY,CACxD,AAAI,IAAW,QAAW,EAAO,KAE5B,EAAW,KAAK,cAAc,EAAK,SAAU,GAC7C,EAAY,KAAK,eAAe,EAAK,UAAW,GAChD,EAAS,KAAK,YAAY,EAAK,OAAQ,EAAY,EAAW,EAAU,GACxE,EAAY,KAAK,eAAe,EAAK,UAAW,GAGtD,GAFA,KAAK,cAAc,EAAQ,GAEvB,IAAW,OAAW,CACzB,GAAI,GAAY,GAEhB,OAAW,KAAQ,GAClB,GAAI,EAAO,YAAiB,kBAAkB,CAC7C,EAAY,GACZ,MAIF,AAAI,IAAc,IAAO,EAAO,GAGjC,MAAO,QAGF,YAAW,EAAM,CACtB,GAAM,GAAa,KAAK,gBAAgB,EAAK,YACvC,EAAS,KAAK,YAAY,EAAK,QAC/B,EAAa,KAAK,gBAAgB,EAAK,WAAY,GACnD,EAAS,KAAM,MAAK,iBAAiB,EAAK,QAC1C,EAAW,KAAK,cAAc,EAAK,SAAU,GAC7C,EAAY,KAAK,eAAe,EAAK,UAAW,GAChD,EAAS,KAAK,YAAY,EAAK,OAAQ,EAAY,EAAW,EAAU,GACxE,EAAY,KAAK,eAAe,EAAK,UAAW,GACtD,YAAK,cAAc,EAAQ,GACpB,EAGR,YAAY,EAAM,CACjB,GAAM,GAAS,GAEf,GAAI,IAAS,OACZ,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,EAAI,EAAG,IAAK,CAC5C,GAAM,GAAQ,GAAI,MAAQ,SAAS,EAAK,IACxC,EAAO,EAAM,MAAQ,EAIvB,MAAO,GAGR,eAAe,EAAM,EAAQ,CAC5B,GAAM,GAAY,GACZ,EAAQ,GAMd,GAJA,EAAO,SAAS,SAAU,EAAO,CAChC,AAAI,EAAM,QAAQ,GAAM,EAAM,MAAQ,KAGnC,IAAS,OACZ,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,EAAI,EAAG,IAAK,CAC5C,GAAM,GAAW,GAAI,MAAW,SAAS,EAAK,GAAI,GAClD,EAAU,EAAS,MAAQ,EAI7B,MAAO,GAGR,gBAAgB,EAAM,EAAQ,CAC7B,GAAM,GAAa,GAEnB,GAAI,IAAS,OAAW,CACvB,GAAM,GAAuB,GAAI,IAEjC,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,EAAI,EAAG,IAAK,CAC5C,GAAI,GACE,EAAO,EAAK,GAElB,OAAQ,EAAK,UACP,qBACA,0BACJ,EAAW,EAAqB,MAAM,GACtC,UAEI,WACJ,QAAQ,MAAM,wEACd,cAGA,AAAI,EAAK,OAAQ,IAChB,EAAW,GAAW,EAAK,MAAM,SAAS,EAAM,GAEhD,QAAQ,KAAK,kDAAkD,EAAK,SAKvE,EAAS,KAAO,EAAK,KACjB,EAAK,OAAS,QAAW,GAAS,KAAO,EAAK,MAC9C,EAAS,mBAAqB,IAAQ,EAAK,WAAa,QAAW,GAAS,SAAW,EAAK,UAChG,EAAW,EAAK,MAAQ,GAI1B,MAAO,GAGR,eAAe,EAAM,EAAU,CAC9B,GAAM,GAAQ,GAER,EAAY,GAElB,GAAI,IAAS,OAAW,CACvB,GAAM,GAAS,GAAI,IACnB,EAAO,YAAY,GAEnB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,EAAI,EAAG,IAAK,CAC5C,GAAM,GAAO,EAAK,GAElB,GAAI,EAAK,OAAS,gBAAiB,CAElC,GAAM,GAAQ,GAEd,OAAS,GAAI,EAAG,EAAI,EAAK,UAAU,OAAQ,IAAK,CAC/C,GAAM,GAAW,EAAK,UAAU,GAEhC,AAAI,EAAM,EAAS,QAAU,QAC5B,GAAM,EAAS,MAAQ,EAAO,MAAM,IAGrC,EAAM,KAAK,EAAM,EAAS,OAG3B,EAAU,EAAK,MAAQ,MAEvB,AAAI,GAAM,EAAK,QAAU,QACxB,GAAM,EAAK,MAAQ,EAAO,MAAM,IAGjC,EAAU,EAAK,MAAQ,EAAM,EAAK,OAKrC,MAAO,GAGR,gBAAgB,EAAM,CACrB,GAAM,GAAa,GAEnB,GAAI,IAAS,OACZ,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CACrC,GAAM,GAAO,EAAK,GACZ,EAAO,GAAc,MAAM,GACjC,EAAW,EAAK,MAAQ,EAI1B,MAAO,GAGR,YAAY,EAAM,EAAQ,CACzB,GAAM,GAAQ,KACR,EAAS,GACX,EAEJ,WAAmB,EAAK,CACvB,SAAM,QAAQ,UAAU,GACjB,EAAO,KAAK,EAAK,UAAY,CACnC,EAAM,QAAQ,QAAQ,IACpB,OAAW,UAAY,CACzB,EAAM,QAAQ,UAAU,GACxB,EAAM,QAAQ,QAAQ,KAIxB,WAA0B,EAAO,CAChC,GAAI,MAAO,IAAU,SAAU,CAC9B,GAAM,GAAM,EACN,EAAO,4BAA4B,KAAK,GAAO,EAAM,EAAM,aAAe,EAChF,MAAO,GAAU,OAEjB,OAAI,GAAM,KACF,CACN,KAAM,GAAc,EAAM,KAAM,EAAM,MACtC,MAAO,EAAM,MACb,OAAQ,EAAM,QAGR,KAKV,GAAI,IAAS,QAAa,EAAK,OAAS,EAAG,CAC1C,GAAM,GAAU,GAAI,IAAe,GACnC,EAAS,GAAI,IAAY,GACzB,EAAO,eAAe,KAAK,aAE3B,OAAS,GAAI,EAAG,EAAK,EAAK,OAAQ,EAAI,EAAI,IAAK,CAC9C,GAAM,GAAQ,EAAK,GACb,EAAM,EAAM,IAElB,GAAI,MAAM,QAAQ,GAAM,CAEvB,EAAO,EAAM,MAAQ,GAErB,OAAS,GAAI,EAAG,EAAK,EAAI,OAAQ,EAAI,EAAI,IAAK,CAC7C,GAAM,GAAa,EAAI,GACjB,EAAoB,EAAiB,GAE3C,AAAI,IAAsB,MACzB,CAAI,YAA6B,kBAChC,EAAO,EAAM,MAAM,KAAK,GAGxB,EAAO,EAAM,MAAM,KAAK,GAAI,IAAY,EAAkB,KAAM,EAAkB,MAAO,EAAkB,eAIxG,CAEN,GAAM,GAAoB,EAAiB,EAAM,KAEjD,AAAI,IAAsB,MACzB,GAAO,EAAM,MAAQ,KAMzB,MAAO,QAGF,kBAAiB,EAAM,CAC5B,GAAM,GAAQ,KACR,EAAS,GACX,EAEJ,iBAAgC,EAAO,CACtC,GAAI,MAAO,IAAU,SAAU,CAC9B,GAAM,GAAM,EACN,EAAO,4BAA4B,KAAK,GAAO,EAAM,EAAM,aAAe,EAChF,MAAO,MAAM,GAAO,UAAU,OAE9B,OAAI,GAAM,KACF,CACN,KAAM,GAAc,EAAM,KAAM,EAAM,MACtC,MAAO,EAAM,MACb,OAAQ,EAAM,QAGR,KAKV,GAAI,IAAS,QAAa,EAAK,OAAS,EAAG,CAC1C,EAAS,GAAI,IAAY,KAAK,SAC9B,EAAO,eAAe,KAAK,aAE3B,OAAS,GAAI,EAAG,EAAK,EAAK,OAAQ,EAAI,EAAI,IAAK,CAC9C,GAAM,GAAQ,EAAK,GACb,EAAM,EAAM,IAElB,GAAI,MAAM,QAAQ,GAAM,CAEvB,EAAO,EAAM,MAAQ,GAErB,OAAS,GAAI,EAAG,EAAK,EAAI,OAAQ,EAAI,EAAI,IAAK,CAC7C,GAAM,GAAa,EAAI,GACjB,EAAoB,KAAM,GAAiB,GAEjD,AAAI,IAAsB,MACzB,CAAI,YAA6B,kBAChC,EAAO,EAAM,MAAM,KAAK,GAGxB,EAAO,EAAM,MAAM,KAAK,GAAI,IAAY,EAAkB,KAAM,EAAkB,MAAO,EAAkB,eAIxG,CAEN,GAAM,GAAoB,KAAM,GAAiB,EAAM,KAEvD,AAAI,IAAsB,MACzB,GAAO,EAAM,MAAQ,KAMzB,MAAO,GAGR,cAAc,EAAM,EAAQ,CAC3B,WAAuB,EAAO,EAAM,CACnC,MAAI,OAAO,IAAU,SAAiB,EACtC,SAAQ,KAAK,uEAAwE,GAC9E,EAAK,IAGb,GAAM,GAAW,GAEjB,GAAI,IAAS,OACZ,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,EAAI,EAAG,IAAK,CAC5C,GAAM,GAAO,EAAK,GAElB,AAAI,EAAK,QAAU,QAClB,QAAQ,KAAK,+CAAgD,EAAK,MAG/D,EAAO,EAAK,SAAW,QAC1B,QAAQ,KAAK,sCAAuC,EAAK,OAG1D,GAAI,GACE,EAAQ,EAAO,EAAK,OAE1B,AAAI,MAAM,QAAQ,GACjB,GAAU,GAAI,IAAY,GACtB,EAAM,SAAW,GAAG,GAAQ,YAAc,KAE9C,CAAI,GAAS,EAAM,KAClB,EAAU,GAAI,IAAY,EAAM,KAAM,EAAM,MAAO,EAAM,QAEzD,EAAU,GAAI,IAAQ,GAGnB,GAAO,GAAQ,YAAc,KAGlC,EAAQ,KAAO,EAAK,KAChB,EAAK,OAAS,QAAW,GAAQ,KAAO,EAAK,MAC7C,EAAK,UAAY,QAAW,GAAQ,QAAU,EAAc,EAAK,QAAS,KAC1E,EAAK,SAAW,QAAW,EAAQ,OAAO,UAAU,EAAK,QACzD,EAAK,SAAW,QAAW,EAAQ,OAAO,UAAU,EAAK,QACzD,EAAK,SAAW,QAAW,EAAQ,OAAO,UAAU,EAAK,QACzD,EAAK,WAAa,QAAW,GAAQ,SAAW,EAAK,UAErD,EAAK,OAAS,QACjB,GAAQ,MAAQ,EAAc,EAAK,KAAK,GAAI,IAC5C,EAAQ,MAAQ,EAAc,EAAK,KAAK,GAAI,KAGzC,EAAK,SAAW,QAAW,GAAQ,OAAS,EAAK,QACjD,EAAK,OAAS,QAAW,GAAQ,KAAO,EAAK,MAC7C,EAAK,WAAa,QAAW,GAAQ,SAAW,EAAK,UACrD,EAAK,YAAc,QAAW,GAAQ,UAAY,EAAc,EAAK,UAAW,KAChF,EAAK,YAAc,QAAW,GAAQ,UAAY,EAAc,EAAK,UAAW,KAChF,EAAK,aAAe,QAAW,GAAQ,WAAa,EAAK,YACzD,EAAK,QAAU,QAAW,GAAQ,MAAQ,EAAK,OAC/C,EAAK,mBAAqB,QAAW,GAAQ,iBAAmB,EAAK,kBACrE,EAAK,kBAAoB,QAAW,GAAQ,gBAAkB,EAAK,iBACnE,EAAK,WAAa,QAAW,GAAQ,SAAW,EAAK,UACzD,EAAS,EAAK,MAAQ,EAIxB,MAAO,GAGR,YAAY,EAAM,EAAY,EAAW,EAAU,EAAY,CAC9D,GAAI,GAEJ,WAAqB,EAAM,CAC1B,MAAI,GAAW,KAAU,QACxB,QAAQ,KAAK,yCAA0C,GAGjD,EAAW,GAGnB,WAAqB,EAAM,CAC1B,GAAI,IAAS,OAEb,IAAI,MAAM,QAAQ,GAAO,CACxB,GAAM,GAAQ,GAEd,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,EAAI,EAAG,IAAK,CAC5C,GAAM,GAAO,EAAK,GAElB,AAAI,EAAU,KAAU,QACvB,QAAQ,KAAK,yCAA0C,GAGxD,EAAM,KAAK,EAAU,IAGtB,MAAO,GAGR,MAAI,GAAU,KAAU,QACvB,QAAQ,KAAK,yCAA0C,GAGjD,EAAU,IAGlB,WAAoB,EAAM,CACzB,MAAI,GAAS,KAAU,QACtB,QAAQ,KAAK,wCAAyC,GAGhD,EAAS,GAGjB,GAAI,GAAU,EAEd,OAAQ,EAAK,UACP,QACJ,EAAS,GAAI,IAET,EAAK,aAAe,QACvB,CAAI,OAAO,UAAU,EAAK,YACzB,EAAO,WAAa,GAAI,IAAM,EAAK,YAEnC,EAAO,WAAa,EAAW,EAAK,aAIlC,EAAK,cAAgB,QACxB,GAAO,YAAc,EAAW,EAAK,cAGlC,EAAK,MAAQ,QAChB,CAAI,EAAK,IAAI,OAAS,MACrB,EAAO,IAAM,GAAI,IAAI,EAAK,IAAI,MAAO,EAAK,IAAI,KAAM,EAAK,IAAI,KACnD,EAAK,IAAI,OAAS,WAC5B,GAAO,IAAM,GAAI,IAAQ,EAAK,IAAI,MAAO,EAAK,IAAI,WAIpD,UAEI,oBACJ,EAAS,GAAI,IAAkB,EAAK,IAAK,EAAK,OAAQ,EAAK,KAAM,EAAK,KAClE,EAAK,QAAU,QAAW,GAAO,MAAQ,EAAK,OAC9C,EAAK,OAAS,QAAW,GAAO,KAAO,EAAK,MAC5C,EAAK,YAAc,QAAW,GAAO,UAAY,EAAK,WACtD,EAAK,aAAe,QAAW,GAAO,WAAa,EAAK,YACxD,EAAK,OAAS,QAAW,GAAO,KAAO,OAAO,OAAO,GAAI,EAAK,OAClE,UAEI,qBACJ,EAAS,GAAI,IAAmB,EAAK,KAAM,EAAK,MAAO,EAAK,IAAK,EAAK,OAAQ,EAAK,KAAM,EAAK,KAC1F,EAAK,OAAS,QAAW,GAAO,KAAO,EAAK,MAC5C,EAAK,OAAS,QAAW,GAAO,KAAO,OAAO,OAAO,GAAI,EAAK,OAClE,UAEI,eACJ,EAAS,GAAI,IAAa,EAAK,MAAO,EAAK,WAC3C,UAEI,mBACJ,EAAS,GAAI,IAAiB,EAAK,MAAO,EAAK,WAC/C,UAEI,aACJ,EAAS,GAAI,IAAW,EAAK,MAAO,EAAK,UAAW,EAAK,SAAU,EAAK,OACxE,UAEI,gBACJ,EAAS,GAAI,IAAc,EAAK,MAAO,EAAK,UAAW,EAAK,MAAO,EAAK,QACxE,UAEI,YACJ,EAAS,GAAI,IAAU,EAAK,MAAO,EAAK,UAAW,EAAK,SAAU,EAAK,MAAO,EAAK,SAAU,EAAK,OAClG,UAEI,kBACJ,EAAS,GAAI,IAAgB,EAAK,MAAO,EAAK,YAAa,EAAK,WAChE,UAEI,aACJ,EAAS,GAAI,MAAa,SAAS,GACnC,UAEI,cACJ,EAAW,EAAY,EAAK,UAC5B,EAAW,EAAY,EAAK,UAC5B,EAAS,GAAI,IAAY,EAAU,GAC/B,EAAK,WAAa,QAAW,GAAO,SAAW,EAAK,UACpD,EAAK,aAAe,QAAW,EAAO,WAAW,UAAU,EAAK,YAChE,EAAK,WAAa,QAAW,GAAO,SAAW,EAAK,UACxD,UAEI,OACJ,EAAW,EAAY,EAAK,UAC5B,EAAW,EAAY,EAAK,UAC5B,EAAS,GAAI,IAAK,EAAU,GAC5B,UAEI,gBACJ,EAAW,EAAY,EAAK,UAC5B,EAAW,EAAY,EAAK,UAC5B,GAAM,GAAQ,EAAK,MACb,EAAiB,EAAK,eACtB,EAAgB,EAAK,cAC3B,EAAS,GAAI,IAAc,EAAU,EAAU,GAC/C,EAAO,eAAiB,GAAI,IAAyB,GAAI,cAAa,EAAe,OAAQ,IACzF,IAAkB,QAAW,GAAO,cAAgB,GAAI,IAAyB,GAAI,cAAa,EAAc,OAAQ,EAAc,WAC1I,UAEI,MACJ,EAAS,GAAI,IACb,UAEI,OACJ,EAAS,GAAI,IAAK,EAAY,EAAK,UAAW,EAAY,EAAK,WAC/D,UAEI,WACJ,EAAS,GAAI,IAAS,EAAY,EAAK,UAAW,EAAY,EAAK,WACnE,UAEI,eACJ,EAAS,GAAI,IAAa,EAAY,EAAK,UAAW,EAAY,EAAK,WACvE,UAEI,iBACA,SACJ,EAAS,GAAI,IAAO,EAAY,EAAK,UAAW,EAAY,EAAK,WACjE,UAEI,SACJ,EAAS,GAAI,IAAO,EAAY,EAAK,WACrC,UAEI,QACJ,EAAS,GAAI,IACb,UAEI,OACJ,EAAS,GAAI,IACb,cAGA,EAAS,GAAI,IAkCf,GA/BA,EAAO,KAAO,EAAK,KACf,EAAK,OAAS,QAAW,GAAO,KAAO,EAAK,MAEhD,AAAI,EAAK,SAAW,OACnB,GAAO,OAAO,UAAU,EAAK,QACzB,EAAK,mBAAqB,QAAW,GAAO,iBAAmB,EAAK,kBACpE,EAAO,kBAAkB,EAAO,OAAO,UAAU,EAAO,SAAU,EAAO,WAAY,EAAO,QAE5F,GAAK,WAAa,QAAW,EAAO,SAAS,UAAU,EAAK,UAC5D,EAAK,WAAa,QAAW,EAAO,SAAS,UAAU,EAAK,UAC5D,EAAK,aAAe,QAAW,EAAO,WAAW,UAAU,EAAK,YAChE,EAAK,QAAU,QAAW,EAAO,MAAM,UAAU,EAAK,QAGvD,EAAK,aAAe,QAAW,GAAO,WAAa,EAAK,YACxD,EAAK,gBAAkB,QAAW,GAAO,cAAgB,EAAK,eAE9D,EAAK,QACJ,GAAK,OAAO,OAAS,QAAW,GAAO,OAAO,KAAO,EAAK,OAAO,MACjE,EAAK,OAAO,aAAe,QAAW,GAAO,OAAO,WAAa,EAAK,OAAO,YAC7E,EAAK,OAAO,SAAW,QAAW,GAAO,OAAO,OAAS,EAAK,OAAO,QACrE,EAAK,OAAO,UAAY,QAAW,EAAO,OAAO,QAAQ,UAAU,EAAK,OAAO,SAC/E,EAAK,OAAO,SAAW,QAAW,GAAO,OAAO,OAAS,KAAK,YAAY,EAAK,OAAO,UAGvF,EAAK,UAAY,QAAW,GAAO,QAAU,EAAK,SAClD,EAAK,gBAAkB,QAAW,GAAO,cAAgB,EAAK,eAC9D,EAAK,cAAgB,QAAW,GAAO,YAAc,EAAK,aAC1D,EAAK,WAAa,QAAW,GAAO,SAAW,EAAK,UACpD,EAAK,SAAW,QAAW,GAAO,OAAO,KAAO,EAAK,QAErD,EAAK,WAAa,OAAW,CAChC,GAAM,GAAW,EAAK,SAEtB,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IACpC,EAAO,IAAI,KAAK,YAAY,EAAS,GAAI,EAAY,EAAW,EAAU,IAI5E,GAAI,EAAK,aAAe,OAAW,CAClC,GAAM,GAAmB,EAAK,WAE9B,OAAS,GAAI,EAAG,EAAI,EAAiB,OAAQ,IAAK,CACjD,GAAM,GAAO,EAAiB,GAC9B,EAAO,WAAW,KAAK,EAAW,KAIpC,GAAI,EAAK,OAAS,MAAO,CACxB,AAAI,EAAK,aAAe,QAAW,GAAO,WAAa,EAAK,YAC5D,GAAM,GAAS,EAAK,OAEpB,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,IAAK,CACvC,GAAM,GAAQ,EAAO,GACf,EAAQ,EAAO,oBAAoB,OAAQ,EAAM,QAEvD,AAAI,IAAU,QACb,EAAO,SAAS,EAAO,EAAM,WAKhC,MAAO,GAGR,cAAc,EAAQ,EAAW,CAChC,AAAI,OAAO,KAAK,GAAW,SAAW,GACtC,EAAO,SAAS,SAAU,EAAO,CAChC,GAAI,EAAM,gBAAkB,IAAQ,EAAM,WAAa,OAAW,CACjE,GAAM,GAAW,EAAU,EAAM,UAEjC,AAAI,IAAa,OAChB,QAAQ,KAAK,mDAAoD,EAAM,UAEvE,EAAM,KAAK,EAAU,EAAM,eAQ/B,eAAe,EAAO,CACrB,eAAQ,KAAK,iFACN,KAAK,gBAAgB,IAK9B,GAAM,IAAkB,CACvB,UAAW,GACX,sBAAuB,GACvB,sBAAuB,GACvB,iCAAkC,GAClC,iCAAkC,GAClC,wBAAyB,GACzB,wBAAyB,IAEpB,GAAmB,CACxB,eAAgB,GAChB,oBAAqB,GACrB,uBAAwB,IAEnB,GAAiB,CACtB,cAAe,GACf,2BAA4B,GAC5B,0BAA2B,GAC3B,aAAc,GACd,0BAA2B,GAC3B,yBAA0B,IAG3B,gBAAgC,GAAO,CACtC,YAAY,EAAS,CACpB,MAAM,GAEN,AAAI,MAAO,oBAAsB,aAChC,QAAQ,KAAK,+DAGV,MAAO,QAAU,aACpB,QAAQ,KAAK,mDAGd,KAAK,QAAU,CACd,iBAAkB,QAIpB,WAAW,EAAS,CACnB,YAAK,QAAU,EACR,KAGR,KAAK,EAAK,EAAQ,EAAY,EAAS,CACtC,AAAI,IAAQ,QAAW,GAAM,IACzB,KAAK,OAAS,QAAW,GAAM,KAAK,KAAO,GAC/C,EAAM,KAAK,QAAQ,WAAW,GAC9B,GAAM,GAAQ,KACR,EAAS,GAAM,IAAI,GAEzB,GAAI,IAAW,OACd,SAAM,QAAQ,UAAU,GACxB,WAAW,UAAY,CACtB,AAAI,GAAQ,EAAO,GACnB,EAAM,QAAQ,QAAQ,IACpB,GACI,EAGR,GAAM,GAAe,GACrB,EAAa,YAAc,KAAK,cAAgB,YAAc,cAAgB,UAC9E,EAAa,QAAU,KAAK,cAC5B,MAAM,EAAK,GAAc,KAAK,SAAU,EAAK,CAC5C,MAAO,GAAI,SACT,KAAK,SAAU,EAAM,CACvB,MAAO,mBAAkB,EAAM,OAAO,OAAO,EAAM,QAAS,CAC3D,qBAAsB,YAErB,KAAK,SAAU,EAAa,CAC9B,GAAM,IAAI,EAAK,GACX,GAAQ,EAAO,GACnB,EAAM,QAAQ,QAAQ,KACpB,MAAM,SAAU,EAAG,CACrB,AAAI,GAAS,EAAQ,GACrB,EAAM,QAAQ,UAAU,GACxB,EAAM,QAAQ,QAAQ,KAEvB,EAAM,QAAQ,UAAU,IAK1B,GAAkB,UAAU,oBAAsB,GAElD,GAAI,IAEE,GAAe,CACpB,WAAY,UAAY,CACvB,MAAI,MAAa,QAChB,IAAW,GAAK,QAAO,cAAgB,OAAO,qBAGxC,IAER,WAAY,SAAU,EAAO,CAC5B,GAAW,IAIb,gBAA0B,GAAO,CAChC,YAAY,EAAS,CACpB,MAAM,GAGP,KAAK,EAAK,EAAQ,EAAY,EAAS,CACtC,GAAM,GAAQ,KACR,EAAS,GAAI,IAAW,KAAK,SACnC,EAAO,gBAAgB,eACvB,EAAO,QAAQ,KAAK,MACpB,EAAO,iBAAiB,KAAK,eAC7B,EAAO,mBAAmB,KAAK,iBAC/B,EAAO,KAAK,EAAK,SAAU,EAAQ,CAClC,GAAI,CAGH,GAAM,GAAa,EAAO,MAAM,GAEhC,AADgB,GAAa,aACrB,gBAAgB,EAAY,SAAU,EAAa,CAC1D,EAAO,WAEA,EAAP,CACD,AAAI,EACH,EAAQ,GAER,QAAQ,MAAM,GAGf,EAAM,QAAQ,UAAU,KAEvB,EAAY,IAKjB,gBAAmC,GAAW,CAC7C,YAAY,EAAU,EAAa,EAAY,EAAG,CACjD,MAAM,OAAW,GACjB,GAAM,GAAS,GAAI,MAAQ,IAAI,GACzB,EAAS,GAAI,MAAQ,IAAI,GACzB,EAAM,GAAI,GAAQ,EAAO,EAAG,EAAO,EAAG,EAAO,GAC7C,EAAS,GAAI,GAAQ,EAAO,EAAG,EAAO,EAAG,EAAO,GAEhD,EAAK,KAAK,KAAK,KAAK,IACpB,EAAK,EAAK,KAAK,KAAK,KAC1B,KAAK,GAAG,aAAa,GAAG,KAAK,GAAK,IAAI,GAAQ,eAAe,GAC7D,KAAK,GAAG,aAAa,GAAG,KAAK,GAAK,IAAI,GAAQ,eAAe,IAK/D,GAAqB,UAAU,uBAAyB,GAExD,gBAAgC,GAAW,CAC1C,YAAY,EAAO,EAAY,EAAG,CACjC,MAAM,OAAW,GACjB,GAAM,GAAS,GAAI,MAAQ,IAAI,GAE/B,KAAK,GAAG,aAAa,GAAG,IAAI,EAAO,EAAG,EAAO,EAAG,EAAO,GAAG,eAAe,EAAI,KAAK,KAAK,KAAK,MAK9F,GAAkB,UAAU,oBAAsB,GAElD,GAAM,IAAyB,GAAI,IAE7B,GAAwB,GAAI,IAElC,QAAmB,CAClB,aAAc,CACb,KAAK,KAAO,eACZ,KAAK,OAAS,EACd,KAAK,OAAS,KACd,KAAK,QAAU,GAAI,IACnB,KAAK,QAAQ,OAAO,OAAO,GAC3B,KAAK,QAAQ,iBAAmB,GAChC,KAAK,QAAU,GAAI,IACnB,KAAK,QAAQ,OAAO,OAAO,GAC3B,KAAK,QAAQ,iBAAmB,GAChC,KAAK,OAAS,CACb,MAAO,KACP,IAAK,KACL,OAAQ,KACR,KAAM,KACN,IAAK,KACL,KAAM,KACN,OAAQ,MAIV,OAAO,EAAQ,CACd,GAAM,GAAQ,KAAK,OAGnB,GAFoB,EAAM,QAAU,EAAO,OAAS,EAAM,MAAQ,EAAO,KAAO,EAAM,SAAW,EAAO,OAAS,KAAK,QAAU,EAAM,OAAS,EAAO,MAAQ,EAAM,MAAQ,EAAO,KAAO,EAAM,OAAS,EAAO,MAAQ,EAAM,SAAW,KAAK,OAE7N,CAChB,EAAM,MAAQ,EAAO,MACrB,EAAM,IAAM,EAAO,IACnB,EAAM,OAAS,EAAO,OAAS,KAAK,OACpC,EAAM,KAAO,EAAO,KACpB,EAAM,IAAM,EAAO,IACnB,EAAM,KAAO,EAAO,KACpB,EAAM,OAAS,KAAK,OAGpB,GAAM,GAAmB,EAAO,iBAAiB,QAC3C,EAAa,EAAM,OAAS,EAC5B,EAAqB,EAAa,EAAM,KAAO,EAAM,MACrD,EAAO,EAAM,KAAO,KAAK,IAAI,GAAU,EAAM,IAAM,IAAO,EAAM,KAClE,EAAM,EAEV,GAAS,SAAS,IAAM,CAAC,EACzB,GAAU,SAAS,IAAM,EAEzB,EAAO,CAAC,EAAO,EAAM,OAAS,EAC9B,EAAO,EAAO,EAAM,OAAS,EAC7B,EAAiB,SAAS,GAAK,EAAI,EAAM,KAAQ,GAAO,GACxD,EAAiB,SAAS,GAAM,GAAO,GAAS,GAAO,GACvD,KAAK,QAAQ,iBAAiB,KAAK,GAEnC,EAAO,CAAC,EAAO,EAAM,OAAS,EAC9B,EAAO,EAAO,EAAM,OAAS,EAC7B,EAAiB,SAAS,GAAK,EAAI,EAAM,KAAQ,GAAO,GACxD,EAAiB,SAAS,GAAM,GAAO,GAAS,GAAO,GACvD,KAAK,QAAQ,iBAAiB,KAAK,GAGpC,KAAK,QAAQ,YAAY,KAAK,EAAO,aAAa,SAAS,IAC3D,KAAK,QAAQ,YAAY,KAAK,EAAO,aAAa,SAAS,KAK7D,QAAY,CACX,YAAY,EAAY,GAAM,CAC7B,KAAK,UAAY,EACjB,KAAK,UAAY,EACjB,KAAK,QAAU,EACf,KAAK,YAAc,EACnB,KAAK,QAAU,GAGhB,OAAQ,CACP,KAAK,UAAY,KACjB,KAAK,QAAU,KAAK,UACpB,KAAK,YAAc,EACnB,KAAK,QAAU,GAGhB,MAAO,CACN,KAAK,iBACL,KAAK,QAAU,GACf,KAAK,UAAY,GAGlB,gBAAiB,CAChB,YAAK,WACE,KAAK,YAGb,UAAW,CACV,GAAI,GAAO,EAEX,GAAI,KAAK,WAAa,CAAC,KAAK,QAC3B,YAAK,QACE,EAGR,GAAI,KAAK,QAAS,CACjB,GAAM,GAAU,KAChB,EAAQ,GAAU,KAAK,SAAW,IAClC,KAAK,QAAU,EACf,KAAK,aAAe,EAGrB,MAAO,IAKT,aAAe,CACd,MAAQ,OAAO,cAAgB,YAAc,KAAO,aAAa,MAGlE,GAAM,IAA2B,GAAI,GAE/B,GAA6B,GAAI,IAEjC,GAAwB,GAAI,GAE5B,GAA8B,GAAI,GAExC,gBAA4B,GAAS,CACpC,aAAc,CACb,QACA,KAAK,KAAO,gBACZ,KAAK,QAAU,GAAa,aAC5B,KAAK,KAAO,KAAK,QAAQ,aACzB,KAAK,KAAK,QAAQ,KAAK,QAAQ,aAC/B,KAAK,OAAS,KACd,KAAK,UAAY,EAEjB,KAAK,OAAS,GAAI,IAGnB,UAAW,CACV,MAAO,MAAK,KAGb,cAAe,CACd,MAAI,MAAK,SAAW,MACnB,MAAK,KAAK,WAAW,KAAK,QAC1B,KAAK,OAAO,WAAW,KAAK,QAAQ,aACpC,KAAK,KAAK,QAAQ,KAAK,QAAQ,aAC/B,KAAK,OAAS,MAGR,KAGR,WAAY,CACX,MAAO,MAAK,OAGb,UAAU,EAAO,CAChB,MAAI,MAAK,SAAW,KACnB,MAAK,KAAK,WAAW,KAAK,QAC1B,KAAK,OAAO,WAAW,KAAK,QAAQ,cAEpC,KAAK,KAAK,WAAW,KAAK,QAAQ,aAGnC,KAAK,OAAS,EACd,KAAK,KAAK,QAAQ,KAAK,QACvB,KAAK,OAAO,QAAQ,KAAK,QAAQ,aAC1B,KAGR,iBAAkB,CACjB,MAAO,MAAK,KAAK,KAAK,MAGvB,gBAAgB,EAAO,CACtB,YAAK,KAAK,KAAK,gBAAgB,EAAO,KAAK,QAAQ,YAAa,KACzD,KAGR,kBAAkB,EAAO,CACxB,MAAM,kBAAkB,GACxB,GAAM,GAAW,KAAK,QAAQ,SACxB,EAAK,KAAK,GAMhB,GALA,KAAK,UAAY,KAAK,OAAO,WAC7B,KAAK,YAAY,UAAU,GAAa,GAAe,IAEvD,GAAe,IAAI,EAAG,EAAG,IAAI,gBAAgB,IAEzC,EAAS,UAAW,CAEvB,GAAM,GAAU,KAAK,QAAQ,YAAc,KAAK,UAChD,EAAS,UAAU,wBAAwB,GAAY,EAAG,GAC1D,EAAS,UAAU,wBAAwB,GAAY,EAAG,GAC1D,EAAS,UAAU,wBAAwB,GAAY,EAAG,GAC1D,EAAS,SAAS,wBAAwB,GAAe,EAAG,GAC5D,EAAS,SAAS,wBAAwB,GAAe,EAAG,GAC5D,EAAS,SAAS,wBAAwB,GAAe,EAAG,GAC5D,EAAS,IAAI,wBAAwB,EAAG,EAAG,GAC3C,EAAS,IAAI,wBAAwB,EAAG,EAAG,GAC3C,EAAS,IAAI,wBAAwB,EAAG,EAAG,OAE3C,GAAS,YAAY,GAAY,EAAG,GAAY,EAAG,GAAY,GAC/D,EAAS,eAAe,GAAe,EAAG,GAAe,EAAG,GAAe,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAMhG,gBAAoB,GAAS,CAC5B,YAAY,EAAU,CACrB,QACA,KAAK,KAAO,QACZ,KAAK,SAAW,EAChB,KAAK,QAAU,EAAS,QACxB,KAAK,KAAO,KAAK,QAAQ,aACzB,KAAK,KAAK,QAAQ,EAAS,YAC3B,KAAK,SAAW,GAChB,KAAK,OAAS,KACd,KAAK,OAAS,EACd,KAAK,KAAO,GACZ,KAAK,UAAY,EACjB,KAAK,QAAU,EACf,KAAK,OAAS,EACd,KAAK,SAAW,OAChB,KAAK,aAAe,EACpB,KAAK,UAAY,GACjB,KAAK,mBAAqB,GAC1B,KAAK,OAAS,KACd,KAAK,WAAa,QAClB,KAAK,WAAa,EAClB,KAAK,UAAY,EACjB,KAAK,WAAa,GAClB,KAAK,QAAU,GAGhB,WAAY,CACX,MAAO,MAAK,KAGb,cAAc,EAAW,CACxB,YAAK,mBAAqB,GAC1B,KAAK,WAAa,YAClB,KAAK,OAAS,EACd,KAAK,UACE,KAGR,sBAAsB,EAAc,CACnC,YAAK,mBAAqB,GAC1B,KAAK,WAAa,YAClB,KAAK,OAAS,KAAK,QAAQ,yBAAyB,GACpD,KAAK,UACE,KAGR,qBAAqB,EAAa,CACjC,YAAK,mBAAqB,GAC1B,KAAK,WAAa,kBAClB,KAAK,OAAS,KAAK,QAAQ,wBAAwB,GACnD,KAAK,UACE,KAGR,UAAU,EAAa,CACtB,YAAK,OAAS,EACd,KAAK,WAAa,SACd,KAAK,UAAU,KAAK,OACjB,KAGR,KAAK,EAAQ,EAAG,CACf,GAAI,KAAK,YAAc,GAAM,CAC5B,QAAQ,KAAK,0CACb,OAGD,GAAI,KAAK,qBAAuB,GAAO,CACtC,QAAQ,KAAK,oDACb,OAGD,KAAK,WAAa,KAAK,QAAQ,YAAc,EAC7C,GAAM,GAAS,KAAK,QAAQ,qBAC5B,SAAO,OAAS,KAAK,OACrB,EAAO,KAAO,KAAK,KACnB,EAAO,UAAY,KAAK,UACxB,EAAO,QAAU,KAAK,QACtB,EAAO,QAAU,KAAK,QAAQ,KAAK,MACnC,EAAO,MAAM,KAAK,WAAY,KAAK,UAAY,KAAK,OAAQ,KAAK,UACjE,KAAK,UAAY,GACjB,KAAK,OAAS,EACd,KAAK,UAAU,KAAK,QACpB,KAAK,gBAAgB,KAAK,cACnB,KAAK,UAGb,OAAQ,CACP,GAAI,KAAK,qBAAuB,GAAO,CACtC,QAAQ,KAAK,oDACb,OAGD,MAAI,MAAK,YAAc,IAEtB,MAAK,WAAa,KAAK,IAAI,KAAK,QAAQ,YAAc,KAAK,WAAY,GAAK,KAAK,aAE7E,KAAK,OAAS,IAEjB,MAAK,UAAY,KAAK,UAAa,MAAK,UAAY,KAAK,OAAO,WAGjE,KAAK,OAAO,OACZ,KAAK,OAAO,QAAU,KACtB,KAAK,UAAY,IAGX,KAGR,MAAO,CACN,GAAI,KAAK,qBAAuB,GAAO,CACtC,QAAQ,KAAK,oDACb,OAGD,YAAK,UAAY,EACjB,KAAK,OAAO,OACZ,KAAK,OAAO,QAAU,KACtB,KAAK,UAAY,GACV,KAGR,SAAU,CACT,GAAI,KAAK,QAAQ,OAAS,EAAG,CAC5B,KAAK,OAAO,QAAQ,KAAK,QAAQ,IAEjC,OAAS,GAAI,EAAG,EAAI,KAAK,QAAQ,OAAQ,EAAI,EAAG,IAC/C,KAAK,QAAQ,EAAI,GAAG,QAAQ,KAAK,QAAQ,IAG1C,KAAK,QAAQ,KAAK,QAAQ,OAAS,GAAG,QAAQ,KAAK,iBAEnD,MAAK,OAAO,QAAQ,KAAK,aAG1B,YAAK,WAAa,GACX,KAGR,YAAa,CACZ,GAAI,KAAK,QAAQ,OAAS,EAAG,CAC5B,KAAK,OAAO,WAAW,KAAK,QAAQ,IAEpC,OAAS,GAAI,EAAG,EAAI,KAAK,QAAQ,OAAQ,EAAI,EAAG,IAC/C,KAAK,QAAQ,EAAI,GAAG,WAAW,KAAK,QAAQ,IAG7C,KAAK,QAAQ,KAAK,QAAQ,OAAS,GAAG,WAAW,KAAK,iBAEtD,MAAK,OAAO,WAAW,KAAK,aAG7B,YAAK,WAAa,GACX,KAGR,YAAa,CACZ,MAAO,MAAK,QAGb,WAAW,EAAO,CACjB,MAAK,IAAO,GAAQ,IAEpB,AAAI,KAAK,aAAe,GACvB,MAAK,aACL,KAAK,QAAU,EAAM,QACrB,KAAK,WAEL,KAAK,QAAU,EAAM,QAGf,KAGR,UAAU,EAAO,CAEhB,GADA,KAAK,OAAS,EACV,KAAK,OAAO,SAAW,OAE3B,MAAI,MAAK,YAAc,IACtB,KAAK,OAAO,OAAO,gBAAgB,KAAK,OAAQ,KAAK,QAAQ,YAAa,KAGpE,KAGR,WAAY,CACX,MAAO,MAAK,OAGb,WAAY,CACX,MAAO,MAAK,aAAa,GAG1B,UAAU,EAAQ,CACjB,MAAO,MAAK,WAAW,EAAS,CAAC,GAAU,IAG5C,gBAAgB,EAAO,CACtB,GAAI,KAAK,qBAAuB,GAAO,CACtC,QAAQ,KAAK,oDACb,OAGD,YAAK,aAAe,EAEhB,KAAK,YAAc,IACtB,KAAK,OAAO,aAAa,gBAAgB,KAAK,aAAc,KAAK,QAAQ,YAAa,KAGhF,KAGR,iBAAkB,CACjB,MAAO,MAAK,aAGb,SAAU,CACT,KAAK,UAAY,GAGlB,SAAU,CACT,MAAI,MAAK,qBAAuB,GAC/B,SAAQ,KAAK,oDACN,IAGD,KAAK,KAGb,QAAQ,EAAO,CACd,GAAI,KAAK,qBAAuB,GAAO,CACtC,QAAQ,KAAK,oDACb,OAGD,YAAK,KAAO,EAER,KAAK,YAAc,IACtB,MAAK,OAAO,KAAO,KAAK,MAGlB,KAGR,aAAa,EAAO,CACnB,YAAK,UAAY,EACV,KAGR,WAAW,EAAO,CACjB,YAAK,QAAU,EACR,KAGR,WAAY,CACX,MAAO,MAAK,KAAK,KAAK,MAGvB,UAAU,EAAO,CAChB,YAAK,KAAK,KAAK,gBAAgB,EAAO,KAAK,QAAQ,YAAa,KACzD,MAKT,GAAM,IAAyB,GAAI,GAE7B,GAA2B,GAAI,IAE/B,GAAsB,GAAI,GAE1B,GAA4B,GAAI,GAEtC,gBAA8B,GAAM,CACnC,YAAY,EAAU,CACrB,MAAM,GACN,KAAK,OAAS,KAAK,QAAQ,eAC3B,KAAK,OAAO,aAAe,OAC3B,KAAK,OAAO,QAAQ,KAAK,MAG1B,WAAY,CACX,MAAO,MAAK,OAGb,gBAAiB,CAChB,MAAO,MAAK,OAAO,YAGpB,eAAe,EAAO,CACrB,YAAK,OAAO,YAAc,EACnB,KAGR,kBAAmB,CAClB,MAAO,MAAK,OAAO,cAGpB,iBAAiB,EAAO,CACvB,YAAK,OAAO,cAAgB,EACrB,KAGR,kBAAmB,CAClB,MAAO,MAAK,OAAO,cAGpB,iBAAiB,EAAO,CACvB,YAAK,OAAO,cAAgB,EACrB,KAGR,gBAAiB,CAChB,MAAO,MAAK,OAAO,YAGpB,eAAe,EAAO,CACrB,YAAK,OAAO,YAAc,EACnB,KAGR,mBAAmB,EAAgB,EAAgB,EAAe,CACjE,YAAK,OAAO,eAAiB,EAC7B,KAAK,OAAO,eAAiB,EAC7B,KAAK,OAAO,cAAgB,EACrB,KAGR,kBAAkB,EAAO,CAExB,GADA,MAAM,kBAAkB,GACpB,KAAK,qBAAuB,IAAQ,KAAK,YAAc,GAAO,OAClE,KAAK,YAAY,UAAU,GAAW,GAAa,IAEnD,GAAa,IAAI,EAAG,EAAG,GAAG,gBAAgB,IAE1C,GAAM,GAAS,KAAK,OAEpB,GAAI,EAAO,UAAW,CAErB,GAAM,GAAU,KAAK,QAAQ,YAAc,KAAK,SAAS,UACzD,EAAO,UAAU,wBAAwB,GAAU,EAAG,GACtD,EAAO,UAAU,wBAAwB,GAAU,EAAG,GACtD,EAAO,UAAU,wBAAwB,GAAU,EAAG,GACtD,EAAO,aAAa,wBAAwB,GAAa,EAAG,GAC5D,EAAO,aAAa,wBAAwB,GAAa,EAAG,GAC5D,EAAO,aAAa,wBAAwB,GAAa,EAAG,OAE5D,GAAO,YAAY,GAAU,EAAG,GAAU,EAAG,GAAU,GACvD,EAAO,eAAe,GAAa,EAAG,GAAa,EAAG,GAAa,IAMtE,QAAoB,CACnB,YAAY,EAAO,EAAU,KAAM,CAClC,KAAK,SAAW,EAAM,QAAQ,iBAC9B,KAAK,SAAS,QAAU,EACxB,KAAK,KAAO,GAAI,YAAW,KAAK,SAAS,mBACzC,EAAM,YAAY,QAAQ,KAAK,UAGhC,kBAAmB,CAClB,YAAK,SAAS,qBAAqB,KAAK,MACjC,KAAK,KAGb,qBAAsB,CACrB,GAAI,GAAQ,EACN,EAAO,KAAK,mBAElB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAChC,GAAS,EAAK,GAGf,MAAO,GAAQ,EAAK,QAKtB,QAAoB,CACnB,YAAY,EAAS,EAAU,EAAW,CACzC,KAAK,QAAU,EACf,KAAK,UAAY,EACjB,GAAI,GAAa,EAAqB,EAgBtC,OAAQ,OACF,aACJ,EAAc,KAAK,OACnB,EAAsB,KAAK,eAC3B,EAAc,KAAK,+BACnB,KAAK,OAAS,GAAI,cAAa,EAAY,GAC3C,KAAK,WAAa,EAClB,UAEI,aACA,OACJ,EAAc,KAAK,QAGnB,EAAsB,KAAK,QAC3B,EAAc,KAAK,0BACnB,KAAK,OAAS,GAAI,OAAM,EAAY,GACpC,cAGA,EAAc,KAAK,MACnB,EAAsB,KAAK,cAC3B,EAAc,KAAK,4BACnB,KAAK,OAAS,GAAI,cAAa,EAAY,GAG7C,KAAK,iBAAmB,EACxB,KAAK,yBAA2B,EAChC,KAAK,aAAe,EACpB,KAAK,WAAa,EAClB,KAAK,UAAY,EACjB,KAAK,iBAAmB,EACxB,KAAK,yBAA2B,EAChC,KAAK,SAAW,EAChB,KAAK,eAAiB,EAIvB,WAAW,EAAW,EAAQ,CAG7B,GAAM,GAAS,KAAK,OACjB,EAAS,KAAK,UACd,EAAS,EAAY,EAAS,EAC7B,EAAgB,KAAK,iBAEzB,GAAI,IAAkB,EAAG,CAExB,OAAS,GAAI,EAAG,IAAM,EAAQ,EAAE,EAC/B,EAAO,EAAS,GAAK,EAAO,GAG7B,EAAgB,MACV,CAEN,GAAiB,EACjB,GAAM,GAAM,EAAS,EAErB,KAAK,iBAAiB,EAAQ,EAAQ,EAAG,EAAK,GAG/C,KAAK,iBAAmB,EAIzB,mBAAmB,EAAQ,CAC1B,GAAM,GAAS,KAAK,OACjB,EAAS,KAAK,UACd,EAAS,EAAS,KAAK,UAE1B,AAAI,KAAK,2BAA6B,GAErC,KAAK,eAIN,KAAK,yBAAyB,EAAQ,EAAQ,EAAG,EAAQ,GAEzD,KAAK,0BAA4B,EAIlC,MAAM,EAAW,CAChB,GAAM,GAAS,KAAK,UACjB,EAAS,KAAK,OACd,EAAS,EAAY,EAAS,EAC9B,EAAS,KAAK,iBACd,EAAiB,KAAK,yBACtB,EAAU,KAAK,QAIlB,GAHA,KAAK,iBAAmB,EACxB,KAAK,yBAA2B,EAE5B,EAAS,EAAG,CAEf,GAAM,GAAsB,EAAS,KAAK,WAE1C,KAAK,iBAAiB,EAAQ,EAAQ,EAAqB,EAAI,EAAQ,GAGxE,AAAI,EAAiB,GAEpB,KAAK,yBAAyB,EAAQ,EAAQ,KAAK,UAAY,EAAQ,EAAG,GAG3E,OAAS,GAAI,EAAQ,EAAI,EAAS,EAAQ,IAAM,EAAG,EAAE,EACpD,GAAI,EAAO,KAAO,EAAO,EAAI,GAAS,CAErC,EAAQ,SAAS,EAAQ,GACzB,OAMH,mBAAoB,CACnB,GAAM,GAAU,KAAK,QACf,EAAS,KAAK,OACjB,EAAS,KAAK,UACd,EAAsB,EAAS,KAAK,WACvC,EAAQ,SAAS,EAAQ,GAEzB,OAAS,GAAI,EAAQ,EAAI,EAAqB,IAAM,EAAG,EAAE,EACxD,EAAO,GAAK,EAAO,EAAsB,EAAI,GAI9C,KAAK,eAEL,KAAK,iBAAmB,EACxB,KAAK,yBAA2B,EAIjC,sBAAuB,CACtB,GAAM,GAAsB,KAAK,UAAY,EAC7C,KAAK,QAAQ,SAAS,KAAK,OAAQ,GAGpC,6BAA8B,CAC7B,GAAM,GAAa,KAAK,UAAY,KAAK,UACnC,EAAW,EAAa,KAAK,UAEnC,OAAS,GAAI,EAAY,EAAI,EAAU,IACtC,KAAK,OAAO,GAAK,EAInB,gCAAiC,CAChC,KAAK,8BAEL,KAAK,OAAO,KAAK,UAAY,KAAK,UAAY,GAAK,EAGpD,2BAA4B,CAC3B,GAAM,GAAa,KAAK,WAAa,KAAK,UACpC,EAAc,KAAK,UAAY,KAAK,UAE1C,OAAS,GAAI,EAAG,EAAI,KAAK,UAAW,IACnC,KAAK,OAAO,EAAc,GAAK,KAAK,OAAO,EAAa,GAK1D,QAAQ,EAAQ,EAAW,EAAW,EAAG,EAAQ,CAChD,GAAI,GAAK,GACR,OAAS,GAAI,EAAG,IAAM,EAAQ,EAAE,EAC/B,EAAO,EAAY,GAAK,EAAO,EAAY,GAK9C,OAAO,EAAQ,EAAW,EAAW,EAAG,CACvC,GAAW,UAAU,EAAQ,EAAW,EAAQ,EAAW,EAAQ,EAAW,GAG/E,eAAe,EAAQ,EAAW,EAAW,EAAG,EAAQ,CACvD,GAAM,GAAa,KAAK,WAAa,EAErC,GAAW,wBAAwB,EAAQ,EAAY,EAAQ,EAAW,EAAQ,GAElF,GAAW,UAAU,EAAQ,EAAW,EAAQ,EAAW,EAAQ,EAAY,GAGhF,MAAM,EAAQ,EAAW,EAAW,EAAG,EAAQ,CAC9C,GAAM,GAAI,EAAI,EAEd,OAAS,GAAI,EAAG,IAAM,EAAQ,EAAE,EAAG,CAClC,GAAM,GAAI,EAAY,EACtB,EAAO,GAAK,EAAO,GAAK,EAAI,EAAO,EAAY,GAAK,GAItD,cAAc,EAAQ,EAAW,EAAW,EAAG,EAAQ,CACtD,OAAS,GAAI,EAAG,IAAM,EAAQ,EAAE,EAAG,CAClC,GAAM,GAAI,EAAY,EACtB,EAAO,GAAK,EAAO,GAAK,EAAO,EAAY,GAAK,IAOnD,GAAM,IAAqB,gBAErB,GAAc,GAAI,QAAO,IAAM,GAAqB,IAAK,KAKzD,GAAY,KAAO,GAAqB,IAExC,GAAiB,KAAO,GAAmB,QAAQ,MAAO,IAAM,IAIhE,GAAe,kBAAkB,OAAO,QAAQ,KAAM,IAGtD,GAAU,WAAW,OAAO,QAAQ,OAAQ,IAI5C,GAAY,4BAA4B,OAAO,QAAQ,KAAM,IAI7D,GAAc,uBAAuB,OAAO,QAAQ,KAAM,IAE1D,GAAW,GAAI,QAAO,IAAW,GAAe,GAAU,GAAY,GAAc,KAEpF,GAAwB,CAAC,WAAY,YAAa,SAExD,QAAgB,CACf,YAAY,EAAa,EAAM,EAAoB,CAClD,GAAM,GAAa,GAAsB,GAAgB,eAAe,GACxE,KAAK,aAAe,EACpB,KAAK,UAAY,EAAY,WAAW,EAAM,GAG/C,SAAS,EAAO,EAAQ,CACvB,KAAK,OAEL,GAAM,GAAkB,KAAK,aAAa,gBACvC,EAAU,KAAK,UAAU,GAE5B,AAAI,IAAY,QAAW,EAAQ,SAAS,EAAO,GAGpD,SAAS,EAAO,EAAQ,CACvB,GAAM,GAAW,KAAK,UAEtB,OAAS,GAAI,KAAK,aAAa,gBAAiB,EAAI,EAAS,OAAQ,IAAM,EAAG,EAAE,EAC/E,EAAS,GAAG,SAAS,EAAO,GAI9B,MAAO,CACN,GAAM,GAAW,KAAK,UAEtB,OAAS,GAAI,KAAK,aAAa,gBAAiB,EAAI,EAAS,OAAQ,IAAM,EAAG,EAAE,EAC/E,EAAS,GAAG,OAId,QAAS,CACR,GAAM,GAAW,KAAK,UAEtB,OAAS,GAAI,KAAK,aAAa,gBAAiB,EAAI,EAAS,OAAQ,IAAM,EAAG,EAAE,EAC/E,EAAS,GAAG,UAWf,QAAsB,CACrB,YAAY,EAAU,EAAM,EAAY,CACvC,KAAK,KAAO,EACZ,KAAK,WAAa,GAAc,GAAgB,eAAe,GAC/D,KAAK,KAAO,GAAgB,SAAS,EAAU,KAAK,WAAW,WAAa,EAC5E,KAAK,SAAW,EAEhB,KAAK,SAAW,KAAK,kBACrB,KAAK,SAAW,KAAK,wBAGf,QAAO,EAAM,EAAM,EAAY,CACrC,MAAM,IAAQ,EAAK,uBAGX,GAAI,IAAgB,UAAU,EAAM,EAAM,GAF1C,GAAI,IAAgB,EAAM,EAAM,SAclC,kBAAiB,EAAM,CAC7B,MAAO,GAAK,QAAQ,MAAO,KAAK,QAAQ,GAAa,UAG/C,gBAAe,EAAW,CAChC,GAAM,GAAU,GAAS,KAAK,GAE9B,GAAI,CAAC,EACJ,KAAM,IAAI,OAAM,4CAA8C,GAG/D,GAAM,GAAU,CAEf,SAAU,EAAQ,GAClB,WAAY,EAAQ,GACpB,YAAa,EAAQ,GACrB,aAAc,EAAQ,GAEtB,cAAe,EAAQ,IAElB,EAAU,EAAQ,UAAY,EAAQ,SAAS,YAAY,KAEjE,GAAI,IAAY,QAAa,IAAY,GAAI,CAC5C,GAAM,GAAa,EAAQ,SAAS,UAAU,EAAU,GAKxD,AAAI,GAAsB,QAAQ,KAAgB,IACjD,GAAQ,SAAW,EAAQ,SAAS,UAAU,EAAG,GACjD,EAAQ,WAAa,GAIvB,GAAI,EAAQ,eAAiB,MAAQ,EAAQ,aAAa,SAAW,EACpE,KAAM,IAAI,OAAM,+DAAiE,GAGlF,MAAO,SAGD,UAAS,EAAM,EAAU,CAC/B,GAAI,CAAC,GAAY,IAAa,IAAM,IAAa,KAAO,IAAa,IAAM,IAAa,EAAK,MAAQ,IAAa,EAAK,KACtH,MAAO,GAIR,GAAI,EAAK,SAAU,CAClB,GAAM,GAAO,EAAK,SAAS,cAAc,GAEzC,GAAI,IAAS,OACZ,MAAO,GAKT,GAAI,EAAK,SAAU,CAClB,GAAM,GAAoB,SAAU,EAAU,CAC7C,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CACzC,GAAM,GAAY,EAAS,GAE3B,GAAI,EAAU,OAAS,GAAY,EAAU,OAAS,EACrD,MAAO,GAGR,GAAM,GAAS,EAAkB,EAAU,UAC3C,GAAI,EAAQ,MAAO,GAGpB,MAAO,OAGF,EAAc,EAAkB,EAAK,UAE3C,GAAI,EACH,MAAO,GAIT,MAAO,MAIR,uBAAwB,EAExB,uBAAwB,EAGxB,iBAAiB,EAAQ,EAAQ,CAChC,EAAO,GAAU,KAAK,aAAa,KAAK,cAGzC,gBAAgB,EAAQ,EAAQ,CAC/B,GAAM,GAAS,KAAK,iBAEpB,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,IAAM,EAAG,EAAE,EAC7C,EAAO,KAAY,EAAO,GAI5B,uBAAuB,EAAQ,EAAQ,CACtC,EAAO,GAAU,KAAK,iBAAiB,KAAK,eAG7C,kBAAkB,EAAQ,EAAQ,CACjC,KAAK,iBAAiB,QAAQ,EAAQ,GAIvC,iBAAiB,EAAQ,EAAQ,CAChC,KAAK,aAAa,KAAK,cAAgB,EAAO,GAG/C,gCAAgC,EAAQ,EAAQ,CAC/C,KAAK,aAAa,KAAK,cAAgB,EAAO,GAC9C,KAAK,aAAa,YAAc,GAGjC,2CAA2C,EAAQ,EAAQ,CAC1D,KAAK,aAAa,KAAK,cAAgB,EAAO,GAC9C,KAAK,aAAa,uBAAyB,GAI5C,gBAAgB,EAAQ,EAAQ,CAC/B,GAAM,GAAO,KAAK,iBAElB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAAM,EAAG,EAAE,EAC3C,EAAK,GAAK,EAAO,KAInB,+BAA+B,EAAQ,EAAQ,CAC9C,GAAM,GAAO,KAAK,iBAElB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAAM,EAAG,EAAE,EAC3C,EAAK,GAAK,EAAO,KAGlB,KAAK,aAAa,YAAc,GAGjC,0CAA0C,EAAQ,EAAQ,CACzD,GAAM,GAAO,KAAK,iBAElB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAAM,EAAG,EAAE,EAC3C,EAAK,GAAK,EAAO,KAGlB,KAAK,aAAa,uBAAyB,GAI5C,uBAAuB,EAAQ,EAAQ,CACtC,KAAK,iBAAiB,KAAK,eAAiB,EAAO,GAGpD,sCAAsC,EAAQ,EAAQ,CACrD,KAAK,iBAAiB,KAAK,eAAiB,EAAO,GACnD,KAAK,aAAa,YAAc,GAGjC,iDAAiD,EAAQ,EAAQ,CAChE,KAAK,iBAAiB,KAAK,eAAiB,EAAO,GACnD,KAAK,aAAa,uBAAyB,GAI5C,oBAAoB,EAAQ,EAAQ,CACnC,KAAK,iBAAiB,UAAU,EAAQ,GAGzC,mCAAmC,EAAQ,EAAQ,CAClD,KAAK,iBAAiB,UAAU,EAAQ,GACxC,KAAK,aAAa,YAAc,GAGjC,8CAA8C,EAAQ,EAAQ,CAC7D,KAAK,iBAAiB,UAAU,EAAQ,GACxC,KAAK,aAAa,uBAAyB,GAG5C,kBAAkB,EAAa,EAAQ,CACtC,KAAK,OACL,KAAK,SAAS,EAAa,GAG5B,kBAAkB,EAAa,EAAQ,CACtC,KAAK,OACL,KAAK,SAAS,EAAa,GAI5B,MAAO,CACN,GAAI,GAAe,KAAK,KAClB,EAAa,KAAK,WAClB,EAAa,EAAW,WACxB,EAAe,EAAW,aAC5B,EAAgB,EAAW,cAW/B,GATK,GACJ,GAAe,GAAgB,SAAS,KAAK,SAAU,EAAW,WAAa,KAAK,SACpF,KAAK,KAAO,GAIb,KAAK,SAAW,KAAK,sBACrB,KAAK,SAAW,KAAK,sBAEjB,CAAC,EAAc,CAClB,QAAQ,MAAM,2DAA6D,KAAK,KAAO,yBACvF,OAGD,GAAI,EAAY,CACf,GAAI,GAAc,EAAW,YAE7B,OAAQ,OACF,YACJ,GAAI,CAAC,EAAa,SAAU,CAC3B,QAAQ,MAAM,oFAAqF,MACnG,OAGD,GAAI,CAAC,EAAa,SAAS,UAAW,CACrC,QAAQ,MAAM,8GAA+G,MAC7H,OAGD,EAAe,EAAa,SAAS,UACrC,UAEI,QACJ,GAAI,CAAC,EAAa,SAAU,CAC3B,QAAQ,MAAM,iFAAkF,MAChG,OAKD,EAAe,EAAa,SAAS,MAErC,OAAS,GAAI,EAAG,EAAI,EAAa,OAAQ,IACxC,GAAI,EAAa,GAAG,OAAS,EAAa,CACzC,EAAc,EACd,MAIF,cAGA,GAAI,EAAa,KAAgB,OAAW,CAC3C,QAAQ,MAAM,uEAAwE,MACtF,OAGD,EAAe,EAAa,GAG9B,GAAI,IAAgB,OAAW,CAC9B,GAAI,EAAa,KAAiB,OAAW,CAC5C,QAAQ,MAAM,wFAAyF,KAAM,GAC7G,OAGD,EAAe,EAAa,IAK9B,GAAM,GAAe,EAAa,GAElC,GAAI,IAAiB,OAAW,CAC/B,GAAM,GAAW,EAAW,SAC5B,QAAQ,MAAM,+DAAiE,EAAW,IAAM,EAAe,wBAA0B,GACzI,OAID,GAAI,GAAa,KAAK,WAAW,KACjC,KAAK,aAAe,EAEpB,AAAI,EAAa,cAAgB,OAEhC,EAAa,KAAK,WAAW,YACnB,EAAa,yBAA2B,QAElD,GAAa,KAAK,WAAW,wBAI9B,GAAI,GAAc,KAAK,YAAY,OAEnC,GAAI,IAAkB,OAAW,CAEhC,GAAI,IAAiB,wBAAyB,CAG7C,GAAI,CAAC,EAAa,SAAU,CAC3B,QAAQ,MAAM,sGAAuG,MACrH,OAGD,GAAI,EAAa,SAAS,iBAAkB,CAC3C,GAAI,CAAC,EAAa,SAAS,gBAAiB,CAC3C,QAAQ,MAAM,sHAAuH,MACrI,OAGD,AAAI,EAAa,sBAAsB,KAAmB,QACzD,GAAgB,EAAa,sBAAsB,QAE9C,CACN,QAAQ,MAAM,oHAAqH,MACnI,QAIF,EAAc,KAAK,YAAY,aAC/B,KAAK,iBAAmB,EACxB,KAAK,cAAgB,MACf,AAAI,GAAa,YAAc,QAAa,EAAa,UAAY,OAE3E,GAAc,KAAK,YAAY,eAC/B,KAAK,iBAAmB,GAClB,AAAI,MAAM,QAAQ,GACxB,GAAc,KAAK,YAAY,YAC/B,KAAK,iBAAmB,GAExB,KAAK,aAAe,EAIrB,KAAK,SAAW,KAAK,oBAAoB,GACzC,KAAK,SAAW,KAAK,iCAAiC,GAAa,GAGpE,QAAS,CACR,KAAK,KAAO,KAGZ,KAAK,SAAW,KAAK,kBACrB,KAAK,SAAW,KAAK,mBAKvB,GAAgB,UAAY,GAC5B,GAAgB,UAAU,YAAc,CACvC,OAAQ,EACR,YAAa,EACb,aAAc,EACd,eAAgB,GAEjB,GAAgB,UAAU,WAAa,CACtC,KAAM,EACN,YAAa,EACb,uBAAwB,GAEzB,GAAgB,UAAU,oBAAsB,CAAC,GAAgB,UAAU,iBAAkB,GAAgB,UAAU,gBAAiB,GAAgB,UAAU,uBAAwB,GAAgB,UAAU,mBACpN,GAAgB,UAAU,iCAAmC,CAAC,CAC9D,GAAgB,UAAU,iBAAkB,GAAgB,UAAU,gCAAiC,GAAgB,UAAU,4CAA6C,CAC9K,GAAgB,UAAU,gBAAiB,GAAgB,UAAU,+BAAgC,GAAgB,UAAU,2CAA4C,CAC3K,GAAgB,UAAU,uBAAwB,GAAgB,UAAU,sCAAuC,GAAgB,UAAU,kDAAmD,CAChM,GAAgB,UAAU,oBAAqB,GAAgB,UAAU,mCAAoC,GAAgB,UAAU,gDA+BvI,QAA2B,CAC1B,aAAc,CACb,KAAK,KAAO,KAEZ,KAAK,SAAW,MAAM,UAAU,MAAM,KAAK,WAC3C,KAAK,gBAAkB,EAGvB,GAAM,GAAU,GAChB,KAAK,eAAiB,EAEtB,OAAS,GAAI,EAAG,EAAI,UAAU,OAAQ,IAAM,EAAG,EAAE,EAChD,EAAQ,UAAU,GAAG,MAAQ,EAG9B,KAAK,OAAS,GAEd,KAAK,aAAe,GAEpB,KAAK,UAAY,GAEjB,KAAK,uBAAyB,GAE9B,GAAM,GAAQ,KACd,KAAK,MAAQ,CACZ,QAAS,IACJ,QAAQ,CACX,MAAO,GAAM,SAAS,WAGnB,QAAQ,CACX,MAAO,MAAK,MAAQ,EAAM,qBAKxB,oBAAoB,CACvB,MAAO,GAAM,UAAU,SAM1B,KAAM,CACL,GAAM,GAAU,KAAK,SAClB,EAAgB,KAAK,eACrB,EAAQ,KAAK,OACb,EAAc,KAAK,aACnB,EAAW,KAAK,UAChB,EAAY,EAAS,OACpB,EACF,EAAW,EAAQ,OACnB,EAAiB,KAAK,gBAExB,OAAS,GAAI,EAAG,EAAI,UAAU,OAAQ,IAAM,EAAG,EAAE,EAAG,CACnD,GAAM,GAAS,UAAU,GACtB,EAAO,EAAO,KACb,EAAQ,EAAc,GAE1B,GAAI,IAAU,OAAW,CAExB,EAAQ,IACR,EAAc,GAAQ,EACtB,EAAQ,KAAK,GAEb,OAAS,GAAI,EAAG,EAAI,EAAW,IAAM,EAAG,EAAE,EACzC,EAAS,GAAG,KAAK,GAAI,IAAgB,EAAQ,EAAM,GAAI,EAAY,aAE1D,EAAQ,EAAgB,CAClC,EAAc,EAAQ,GAEtB,GAAM,GAAmB,EAAE,EACxB,EAAmB,EAAQ,GAC9B,EAAc,EAAiB,MAAQ,EACvC,EAAQ,GAAS,EACjB,EAAc,GAAQ,EACtB,EAAQ,GAAoB,EAE5B,OAAS,GAAI,EAAG,EAAI,EAAW,IAAM,EAAG,EAAE,EAAG,CAC5C,GAAM,GAAkB,EAAS,GAC9B,EAAa,EAAgB,GAC5B,EAAU,EAAgB,GAC9B,EAAgB,GAAS,EAErB,IAAY,QAIf,GAAU,GAAI,IAAgB,EAAQ,EAAM,GAAI,EAAY,KAG7D,EAAgB,GAAoB,OAE/B,AAAI,GAAQ,KAAW,GAC7B,QAAQ,MAAM,sJAMhB,KAAK,gBAAkB,EAGxB,QAAS,CACR,GAAM,GAAU,KAAK,SAClB,EAAgB,KAAK,eACrB,EAAW,KAAK,UAChB,EAAY,EAAS,OACpB,EAAiB,KAAK,gBAE1B,OAAS,GAAI,EAAG,EAAI,UAAU,OAAQ,IAAM,EAAG,EAAE,EAAG,CACnD,GAAM,GAAS,UAAU,GACtB,EAAO,EAAO,KACd,EAAQ,EAAc,GAEzB,GAAI,IAAU,QAAa,GAAS,EAAgB,CAEnD,GAAM,GAAkB,IACrB,EAAoB,EAAQ,GAC/B,EAAc,EAAkB,MAAQ,EACxC,EAAQ,GAAS,EACjB,EAAc,GAAQ,EACtB,EAAQ,GAAmB,EAE3B,OAAS,GAAI,EAAG,EAAI,EAAW,IAAM,EAAG,EAAE,EAAG,CAC5C,GAAM,GAAkB,EAAS,GAC9B,EAAc,EAAgB,GAC9B,EAAU,EAAgB,GAC7B,EAAgB,GAAS,EACzB,EAAgB,GAAmB,IAMtC,KAAK,gBAAkB,EAIxB,SAAU,CACT,GAAM,GAAU,KAAK,SAClB,EAAgB,KAAK,eACrB,EAAW,KAAK,UAChB,EAAY,EAAS,OACpB,EAAiB,KAAK,gBACxB,EAAW,EAAQ,OAErB,OAAS,GAAI,EAAG,EAAI,UAAU,OAAQ,IAAM,EAAG,EAAE,EAAG,CACnD,GAAM,GAAS,UAAU,GACtB,EAAO,EAAO,KACd,EAAQ,EAAc,GAEzB,GAAI,IAAU,OAGb,GAFA,MAAO,GAAc,GAEjB,EAAQ,EAAgB,CAE3B,GAAM,GAAmB,EAAE,EACxB,EAAmB,EAAQ,GAC3B,EAAY,EAAE,EACd,EAAa,EAAQ,GAExB,EAAc,EAAiB,MAAQ,EACvC,EAAQ,GAAS,EAEjB,EAAc,EAAW,MAAQ,EACjC,EAAQ,GAAoB,EAC5B,EAAQ,MAER,OAAS,GAAI,EAAG,EAAI,EAAW,IAAM,EAAG,EAAE,EAAG,CAC5C,GAAM,GAAkB,EAAS,GAC9B,EAAa,EAAgB,GAC7B,EAAO,EAAgB,GAC1B,EAAgB,GAAS,EACzB,EAAgB,GAAoB,EACpC,EAAgB,WAEX,CAEN,GAAM,GAAY,EAAE,EACjB,EAAa,EAAQ,GAExB,AAAI,EAAY,GACf,GAAc,EAAW,MAAQ,GAGlC,EAAQ,GAAS,EACjB,EAAQ,MAER,OAAS,GAAI,EAAG,EAAI,EAAW,IAAM,EAAG,EAAE,EAAG,CAC5C,GAAM,GAAkB,EAAS,GACjC,EAAgB,GAAS,EAAgB,GACzC,EAAgB,QASpB,KAAK,gBAAkB,EAIxB,WAAW,EAAM,EAAY,CAG5B,GAAM,GAAgB,KAAK,uBACvB,EAAQ,EAAc,GACpB,EAAW,KAAK,UACtB,GAAI,IAAU,OAAW,MAAO,GAAS,GACzC,GAAM,GAAQ,KAAK,OAChB,EAAc,KAAK,aACnB,EAAU,KAAK,SACf,EAAW,EAAQ,OACnB,EAAiB,KAAK,gBACtB,EAAkB,GAAI,OAAM,GAC/B,EAAQ,EAAS,OACjB,EAAc,GAAQ,EACtB,EAAM,KAAK,GACX,EAAY,KAAK,GACjB,EAAS,KAAK,GAEd,OAAS,GAAI,EAAgB,EAAI,EAAQ,OAAQ,IAAM,EAAG,EAAE,EAAG,CAC9D,GAAM,GAAS,EAAQ,GACvB,EAAgB,GAAK,GAAI,IAAgB,EAAQ,EAAM,GAGxD,MAAO,GAGR,aAAa,EAAM,CAGlB,GAAM,GAAgB,KAAK,uBACxB,EAAQ,EAAc,GAEzB,GAAI,IAAU,OAAW,CACxB,GAAM,GAAQ,KAAK,OAChB,EAAc,KAAK,aACnB,EAAW,KAAK,UAChB,EAAoB,EAAS,OAAS,EACtC,EAAe,EAAS,GACxB,EAAmB,EAAK,GAC3B,EAAc,GAAoB,EAClC,EAAS,GAAS,EAClB,EAAS,MACT,EAAY,GAAS,EAAY,GACjC,EAAY,MACZ,EAAM,GAAS,EAAM,GACrB,EAAM,QAMT,GAAqB,UAAU,uBAAyB,GAExD,QAAsB,CACrB,YAAY,EAAO,EAAM,EAAY,KAAM,EAAY,EAAK,UAAW,CACtE,KAAK,OAAS,EACd,KAAK,MAAQ,EACb,KAAK,WAAa,EAClB,KAAK,UAAY,EACjB,GAAM,GAAS,EAAK,OACjB,EAAU,EAAO,OACjB,EAAe,GAAI,OAAM,GACtB,EAAsB,CAC3B,YAAa,GACb,UAAW,IAGZ,OAAS,GAAI,EAAG,IAAM,EAAS,EAAE,EAAG,CACnC,GAAM,GAAc,EAAO,GAAG,kBAAkB,MAChD,EAAa,GAAK,EAClB,EAAY,SAAW,EAGxB,KAAK,qBAAuB,EAC5B,KAAK,cAAgB,EAGrB,KAAK,kBAAoB,GAAI,OAAM,GACnC,KAAK,YAAc,KAEnB,KAAK,kBAAoB,KAEzB,KAAK,sBAAwB,KAC7B,KAAK,mBAAqB,KAC1B,KAAK,KAAO,GACZ,KAAK,WAAa,GAGlB,KAAK,WAAa,KAGlB,KAAK,KAAO,EACZ,KAAK,UAAY,EACjB,KAAK,oBAAsB,EAC3B,KAAK,OAAS,EACd,KAAK,iBAAmB,EACxB,KAAK,YAAc,IAEnB,KAAK,OAAS,GAEd,KAAK,QAAU,GAEf,KAAK,kBAAoB,GAEzB,KAAK,iBAAmB,GAExB,KAAK,eAAiB,GAIvB,MAAO,CACN,YAAK,OAAO,gBAAgB,MAErB,KAGR,MAAO,CACN,YAAK,OAAO,kBAAkB,MAEvB,KAAK,QAGb,OAAQ,CACP,YAAK,OAAS,GACd,KAAK,QAAU,GACf,KAAK,KAAO,EAEZ,KAAK,WAAa,GAElB,KAAK,WAAa,KAEX,KAAK,aAAa,cAG1B,WAAY,CACX,MAAO,MAAK,SAAW,CAAC,KAAK,QAAU,KAAK,YAAc,GAAK,KAAK,aAAe,MAAQ,KAAK,OAAO,gBAAgB,MAIxH,aAAc,CACb,MAAO,MAAK,OAAO,gBAAgB,MAGpC,QAAQ,EAAM,CACb,YAAK,WAAa,EACX,KAGR,QAAQ,EAAM,EAAa,CAC1B,YAAK,KAAO,EACZ,KAAK,YAAc,EACZ,KAOR,mBAAmB,EAAQ,CAC1B,YAAK,OAAS,EAEd,KAAK,iBAAmB,KAAK,QAAU,EAAS,EACzC,KAAK,aAIb,oBAAqB,CACpB,MAAO,MAAK,iBAGb,OAAO,EAAU,CAChB,MAAO,MAAK,gBAAgB,EAAU,EAAG,GAG1C,QAAQ,EAAU,CACjB,MAAO,MAAK,gBAAgB,EAAU,EAAG,GAG1C,cAAc,EAAe,EAAU,EAAM,CAI5C,GAHA,EAAc,QAAQ,GACtB,KAAK,OAAO,GAER,EAAM,CACT,GAAM,GAAiB,KAAK,MAAM,SAC/B,EAAkB,EAAc,MAAM,SACtC,EAAgB,EAAkB,EAClC,EAAgB,EAAiB,EACpC,EAAc,KAAK,EAAK,EAAe,GACvC,KAAK,KAAK,EAAe,EAAK,GAG/B,MAAO,MAGR,YAAY,EAAc,EAAU,EAAM,CACzC,MAAO,GAAa,cAAc,KAAM,EAAU,GAGnD,YAAa,CACZ,GAAM,GAAoB,KAAK,mBAE/B,MAAI,KAAsB,MACzB,MAAK,mBAAqB,KAE1B,KAAK,OAAO,4BAA4B,IAGlC,KAOR,sBAAsB,EAAW,CAChC,YAAK,UAAY,EACjB,KAAK,oBAAsB,KAAK,OAAS,EAAI,EACtC,KAAK,cAIb,uBAAwB,CACvB,MAAO,MAAK,oBAGb,YAAY,EAAU,CACrB,YAAK,UAAY,KAAK,MAAM,SAAW,EAChC,KAAK,cAGb,SAAS,EAAQ,CAChB,YAAK,KAAO,EAAO,KACnB,KAAK,UAAY,EAAO,UACjB,KAAK,cAGb,KAAK,EAAU,CACd,MAAO,MAAK,KAAK,KAAK,oBAAqB,EAAG,GAG/C,KAAK,EAAgB,EAAc,EAAU,CAC5C,GAAM,GAAQ,KAAK,OAChB,EAAM,EAAM,KACZ,EAAY,KAAK,UAChB,EAAc,KAAK,sBAEvB,AAAI,IAAgB,MACnB,GAAc,EAAM,0BACpB,KAAK,sBAAwB,GAG9B,GAAM,GAAQ,EAAY,mBACvB,EAAS,EAAY,aACxB,SAAM,GAAK,EACX,EAAM,GAAK,EAAM,EACjB,EAAO,GAAK,EAAiB,EAC7B,EAAO,GAAK,EAAe,EACpB,KAGR,aAAc,CACb,GAAM,GAAuB,KAAK,sBAElC,MAAI,KAAyB,MAC5B,MAAK,sBAAwB,KAE7B,KAAK,OAAO,4BAA4B,IAGlC,KAIR,UAAW,CACV,MAAO,MAAK,OAGb,SAAU,CACT,MAAO,MAAK,MAGb,SAAU,CACT,MAAO,MAAK,YAAc,KAAK,OAAO,MAIvC,QAAQ,EAAM,EAAW,EAAe,EAAW,CAElD,GAAI,CAAC,KAAK,QAAS,CAElB,KAAK,cAAc,GAEnB,OAGD,GAAM,GAAY,KAAK,WAEvB,GAAI,IAAc,KAAM,CAEvB,GAAM,GAAe,GAAO,GAAa,EAEzC,GAAI,EAAc,GAAK,IAAkB,EACxC,OAID,KAAK,WAAa,KAElB,EAAY,EAAgB,EAI7B,GAAa,KAAK,iBAAiB,GAEnC,GAAM,GAAW,KAAK,YAAY,GAI5B,EAAS,KAAK,cAAc,GAElC,GAAI,EAAS,EAAG,CACf,GAAM,GAAe,KAAK,cACpB,EAAiB,KAAK,kBAE5B,OAAQ,KAAK,eACP,IACJ,OAAS,GAAI,EAAG,EAAI,EAAa,OAAQ,IAAM,EAAG,EAAE,EACnD,EAAa,GAAG,SAAS,GACzB,EAAe,GAAG,mBAAmB,GAGtC,UAEI,YAEJ,OAAS,GAAI,EAAG,EAAI,EAAa,OAAQ,IAAM,EAAG,EAAE,EACnD,EAAa,GAAG,SAAS,GACzB,EAAe,GAAG,WAAW,EAAW,KAO7C,cAAc,EAAM,CACnB,GAAI,GAAS,EAEb,GAAI,KAAK,QAAS,CACjB,EAAS,KAAK,OACd,GAAM,GAAc,KAAK,mBAEzB,GAAI,IAAgB,KAAM,CACzB,GAAM,GAAmB,EAAY,SAAS,GAAM,GACpD,GAAU,EAEN,EAAO,EAAY,mBAAmB,IACzC,MAAK,aAED,IAAqB,GAExB,MAAK,QAAU,MAMnB,YAAK,iBAAmB,EACjB,EAGR,iBAAiB,EAAM,CACtB,GAAI,GAAY,EAEhB,GAAI,CAAC,KAAK,OAAQ,CACjB,EAAY,KAAK,UACjB,GAAM,GAAc,KAAK,sBAEzB,AAAI,IAAgB,MAEnB,IADyB,EAAY,SAAS,GAAM,GAGhD,EAAO,EAAY,mBAAmB,IACzC,MAAK,cAEL,AAAI,IAAc,EAEjB,KAAK,OAAS,GAGd,KAAK,UAAY,IAMrB,YAAK,oBAAsB,EACpB,EAGR,YAAY,EAAW,CACtB,GAAM,GAAW,KAAK,MAAM,SACtB,EAAO,KAAK,KACd,EAAO,KAAK,KAAO,EACnB,EAAY,KAAK,WACf,EAAW,IAAS,GAE1B,GAAI,IAAc,EACjB,MAAI,KAAc,GAAW,EACtB,GAAa,GAAY,IAAO,EAAI,EAAW,EAAO,EAG9D,GAAI,IAAS,GAAU,CACtB,AAAI,IAAc,IAEjB,MAAK,WAAa,EAElB,KAAK,YAAY,GAAM,GAAM,KAG9B,EAAa,CACZ,GAAI,GAAQ,EACX,EAAO,UACG,EAAO,EACjB,EAAO,MACD,CACN,KAAK,KAAO,EACZ,QAGD,AAAI,KAAK,kBAAmB,KAAK,OAAS,GAAU,KAAK,QAAU,GACnE,KAAK,KAAO,EAEZ,KAAK,OAAO,cAAc,CACzB,KAAM,WACN,OAAQ,KACR,UAAW,EAAY,EAAI,GAAK,SAG5B,CAgBN,GAdI,IAAc,IAEjB,CAAI,GAAa,EAChB,GAAY,EAEZ,KAAK,YAAY,GAAM,KAAK,cAAgB,EAAG,IAK/C,KAAK,YAAY,KAAK,cAAgB,EAAG,GAAM,IAI7C,GAAQ,GAAY,EAAO,EAAG,CAEjC,GAAM,GAAY,KAAK,MAAM,EAAO,GAEpC,GAAQ,EAAW,EACnB,GAAa,KAAK,IAAI,GACtB,GAAM,GAAU,KAAK,YAAc,EAEnC,GAAI,GAAW,EAEd,AAAI,KAAK,kBAAmB,KAAK,OAAS,GAAU,KAAK,QAAU,GACnE,EAAO,EAAY,EAAI,EAAW,EAClC,KAAK,KAAO,EAEZ,KAAK,OAAO,cAAc,CACzB,KAAM,WACN,OAAQ,KACR,UAAW,EAAY,EAAI,EAAI,SAE1B,CAEN,GAAI,IAAY,EAAG,CAElB,GAAM,GAAU,EAAY,EAE5B,KAAK,YAAY,EAAS,CAAC,EAAS,OAEpC,MAAK,YAAY,GAAO,GAAO,GAGhC,KAAK,WAAa,EAClB,KAAK,KAAO,EAEZ,KAAK,OAAO,cAAc,CACzB,KAAM,OACN,OAAQ,KACR,UAAW,SAIb,MAAK,KAAO,EAGb,GAAI,GAAa,GAAY,IAAO,EAEnC,MAAO,GAAW,EAIpB,MAAO,GAGR,YAAY,EAAS,EAAO,EAAU,CACrC,GAAM,GAAW,KAAK,qBAEtB,AAAI,EACH,GAAS,YAAc,GACvB,EAAS,UAAY,IAGrB,CAAI,EACH,EAAS,YAAc,KAAK,iBAAmB,GAAkB,GAEjE,EAAS,YAAc,GAGxB,AAAI,EACH,EAAS,UAAY,KAAK,eAAiB,GAAkB,GAE7D,EAAS,UAAY,IAKxB,gBAAgB,EAAU,EAAW,EAAY,CAChD,GAAM,GAAQ,KAAK,OAChB,EAAM,EAAM,KACX,EAAc,KAAK,mBAEvB,AAAI,IAAgB,MACnB,GAAc,EAAM,0BACpB,KAAK,mBAAqB,GAG3B,GAAM,GAAQ,EAAY,mBACvB,EAAS,EAAY,aACxB,SAAM,GAAK,EACX,EAAO,GAAK,EACZ,EAAM,GAAK,EAAM,EACjB,EAAO,GAAK,EACL,MAKT,gBAA6B,GAAgB,CAC5C,YAAY,EAAM,CACjB,QACA,KAAK,MAAQ,EAEb,KAAK,qBAEL,KAAK,WAAa,EAClB,KAAK,KAAO,EACZ,KAAK,UAAY,EAGlB,YAAY,EAAQ,EAAiB,CACpC,GAAM,GAAO,EAAO,YAAc,KAAK,MACpC,EAAS,EAAO,MAAM,OACtB,EAAU,EAAO,OACjB,EAAW,EAAO,kBAClB,EAAe,EAAO,cACtB,EAAW,EAAK,KAChB,EAAiB,KAAK,uBACrB,EAAiB,EAAe,GAEpC,AAAI,IAAmB,QACtB,GAAiB,GACjB,EAAe,GAAY,GAG5B,OAAS,GAAI,EAAG,IAAM,EAAS,EAAE,EAAG,CACnC,GAAM,GAAQ,EAAO,GAClB,EAAY,EAAM,KACjB,EAAU,EAAe,GAE7B,GAAI,IAAY,OACf,EAAS,GAAK,MACR,CAGN,GAFA,EAAU,EAAS,GAEf,IAAY,OAAW,CAE1B,AAAI,EAAQ,cAAgB,MAC3B,GAAE,EAAQ,eAEV,KAAK,oBAAoB,EAAS,EAAU,IAG7C,SAGD,GAAM,GAAO,GAAmB,EAAgB,kBAAkB,GAAG,QAAQ,WAC7E,EAAU,GAAI,IAAc,GAAgB,OAAO,EAAM,EAAW,GAAO,EAAM,cAAe,EAAM,gBACtG,EAAE,EAAQ,eAEV,KAAK,oBAAoB,EAAS,EAAU,GAE5C,EAAS,GAAK,EAGf,EAAa,GAAG,aAAe,EAAQ,QAIzC,gBAAgB,EAAQ,CACvB,GAAI,CAAC,KAAK,gBAAgB,GAAS,CAClC,GAAI,EAAO,cAAgB,KAAM,CAGhC,GAAM,GAAY,GAAO,YAAc,KAAK,OAAO,KAChD,EAAW,EAAO,MAAM,KACxB,EAAiB,KAAK,eAAe,GAExC,KAAK,YAAY,EAAQ,GAAkB,EAAe,aAAa,IAEvE,KAAK,mBAAmB,EAAQ,EAAU,GAG3C,GAAM,GAAW,EAAO,kBAExB,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IAAM,EAAG,EAAE,EAAG,CAClD,GAAM,GAAU,EAAS,GAEzB,AAAI,EAAQ,YAAe,GAC1B,MAAK,aAAa,GAElB,EAAQ,qBAIV,KAAK,YAAY,IAInB,kBAAkB,EAAQ,CACzB,GAAI,KAAK,gBAAgB,GAAS,CACjC,GAAM,GAAW,EAAO,kBAExB,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IAAM,EAAG,EAAE,EAAG,CAClD,GAAM,GAAU,EAAS,GAEzB,AAAI,EAAE,EAAQ,UAAa,GAC1B,GAAQ,uBAER,KAAK,iBAAiB,IAIxB,KAAK,gBAAgB,IAKvB,oBAAqB,CACpB,KAAK,SAAW,GAEhB,KAAK,gBAAkB,EACvB,KAAK,eAAiB,GAMtB,KAAK,UAAY,GAEjB,KAAK,iBAAmB,EACxB,KAAK,uBAAyB,GAE9B,KAAK,qBAAuB,GAE5B,KAAK,4BAA8B,EACnC,GAAM,GAAQ,KACd,KAAK,MAAQ,CACZ,QAAS,IACJ,QAAQ,CACX,MAAO,GAAM,SAAS,WAGnB,QAAQ,CACX,MAAO,GAAM,kBAIf,SAAU,IACL,QAAQ,CACX,MAAO,GAAM,UAAU,WAGpB,QAAQ,CACX,MAAO,GAAM,mBAIf,oBAAqB,IAChB,QAAQ,CACX,MAAO,GAAM,qBAAqB,WAG/B,QAAQ,CACX,MAAO,GAAM,+BAQjB,gBAAgB,EAAQ,CACvB,GAAM,GAAQ,EAAO,YACrB,MAAO,KAAU,MAAQ,EAAQ,KAAK,gBAGvC,mBAAmB,EAAQ,EAAU,EAAU,CAC9C,GAAM,GAAU,KAAK,SAClB,EAAgB,KAAK,eACpB,EAAiB,EAAc,GAEnC,GAAI,IAAmB,OACtB,EAAiB,CAChB,aAAc,CAAC,GACf,aAAc,IAEf,EAAO,kBAAoB,EAC3B,EAAc,GAAY,MACpB,CACN,GAAM,GAAe,EAAe,aACpC,EAAO,kBAAoB,EAAa,OACxC,EAAa,KAAK,GAGnB,EAAO,YAAc,EAAQ,OAC7B,EAAQ,KAAK,GACb,EAAe,aAAa,GAAY,EAGzC,sBAAsB,EAAQ,CAC7B,GAAM,GAAU,KAAK,SAClB,EAAqB,EAAQ,EAAQ,OAAS,GAC9C,EAAa,EAAO,YACvB,EAAmB,YAAc,EACjC,EAAQ,GAAc,EACtB,EAAQ,MACR,EAAO,YAAc,KACrB,GAAM,GAAW,EAAO,MAAM,KAC3B,EAAgB,KAAK,eACrB,EAAiB,EAAc,GAC/B,EAAsB,EAAe,aACrC,EAAkB,EAAoB,EAAoB,OAAS,GACnE,EAAmB,EAAO,kBAC7B,EAAgB,kBAAoB,EACpC,EAAoB,GAAoB,EACxC,EAAoB,MACpB,EAAO,kBAAoB,KAC3B,GAAM,GAAe,EAAe,aACjC,EAAY,GAAO,YAAc,KAAK,OAAO,KAChD,MAAO,GAAa,GAEhB,EAAoB,SAAW,GAClC,MAAO,GAAc,GAGtB,KAAK,iCAAiC,GAGvC,iCAAiC,EAAQ,CACxC,GAAM,GAAW,EAAO,kBAExB,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IAAM,EAAG,EAAE,EAAG,CAClD,GAAM,GAAU,EAAS,GAEzB,AAAI,EAAE,EAAQ,gBAAmB,GAChC,KAAK,uBAAuB,IAK/B,YAAY,EAAQ,CAMnB,GAAM,GAAU,KAAK,SAClB,EAAY,EAAO,YACnB,EAAkB,KAAK,kBACvB,EAAsB,EAAQ,GACjC,EAAO,YAAc,EACrB,EAAQ,GAAmB,EAC3B,EAAoB,YAAc,EAClC,EAAQ,GAAa,EAGtB,gBAAgB,EAAQ,CAMvB,GAAM,GAAU,KAAK,SAClB,EAAY,EAAO,YACnB,EAAqB,EAAE,KAAK,gBAC5B,EAAmB,EAAQ,GAC9B,EAAO,YAAc,EACrB,EAAQ,GAAsB,EAC9B,EAAiB,YAAc,EAC/B,EAAQ,GAAa,EAItB,oBAAoB,EAAS,EAAU,EAAW,CACjD,GAAM,GAAiB,KAAK,uBACzB,EAAW,KAAK,UACf,EAAgB,EAAe,GAEnC,AAAI,IAAkB,QACrB,GAAgB,GAChB,EAAe,GAAY,GAG5B,EAAc,GAAa,EAC3B,EAAQ,YAAc,EAAS,OAC/B,EAAS,KAAK,GAGf,uBAAuB,EAAS,CAC/B,GAAM,GAAW,KAAK,UACnB,EAAc,EAAQ,QACtB,EAAW,EAAY,SAAS,KAChC,EAAY,EAAY,KACxB,EAAiB,KAAK,uBACtB,EAAgB,EAAe,GAC/B,EAAsB,EAAS,EAAS,OAAS,GACjD,EAAa,EAAQ,YACxB,EAAoB,YAAc,EAClC,EAAS,GAAc,EACvB,EAAS,MACT,MAAO,GAAc,GAEjB,OAAO,KAAK,GAAe,SAAW,GACzC,MAAO,GAAe,GAIxB,aAAa,EAAS,CACrB,GAAM,GAAW,KAAK,UACnB,EAAY,EAAQ,YACpB,EAAkB,KAAK,mBACvB,EAAuB,EAAS,GACnC,EAAQ,YAAc,EACtB,EAAS,GAAmB,EAC5B,EAAqB,YAAc,EACnC,EAAS,GAAa,EAGvB,iBAAiB,EAAS,CACzB,GAAM,GAAW,KAAK,UACnB,EAAY,EAAQ,YACpB,EAAqB,EAAE,KAAK,iBAC5B,EAAoB,EAAS,GAChC,EAAQ,YAAc,EACtB,EAAS,GAAsB,EAC/B,EAAkB,YAAc,EAChC,EAAS,GAAa,EAIvB,yBAA0B,CACzB,GAAM,GAAe,KAAK,qBACvB,EAAkB,KAAK,8BACtB,EAAc,EAAa,GAE/B,MAAI,KAAgB,QACnB,GAAc,GAAI,IAAkB,GAAI,cAAa,GAAI,GAAI,cAAa,GAAI,EAAG,KAAK,kCACtF,EAAY,aAAe,EAC3B,EAAa,GAAmB,GAG1B,EAGR,4BAA4B,EAAa,CACxC,GAAM,GAAe,KAAK,qBACvB,EAAY,EAAY,aACxB,EAAqB,EAAE,KAAK,4BAC5B,EAAwB,EAAa,GACxC,EAAY,aAAe,EAC3B,EAAa,GAAsB,EACnC,EAAsB,aAAe,EACrC,EAAa,GAAa,EAM3B,WAAW,EAAM,EAAc,EAAW,CACzC,GAAM,GAAO,GAAgB,KAAK,MAC/B,EAAW,EAAK,KACf,EAAa,MAAO,IAAS,SAAW,GAAc,WAAW,EAAM,GAAQ,EAC7E,EAAW,IAAe,KAAO,EAAW,KAAO,EACnD,EAAiB,KAAK,eAAe,GACvC,EAAkB,KAUtB,GARI,IAAc,QACjB,CAAI,IAAe,KAClB,EAAY,EAAW,UAEvB,EAAY,IAIV,IAAmB,OAAW,CACjC,GAAM,GAAiB,EAAe,aAAa,GAEnD,GAAI,IAAmB,QAAa,EAAe,YAAc,EAChE,MAAO,GAKR,EAAkB,EAAe,aAAa,GAE1C,IAAe,MAAM,GAAa,EAAgB,OAIvD,GAAI,IAAe,KAAM,MAAO,MAEhC,GAAM,GAAY,GAAI,IAAgB,KAAM,EAAY,EAAc,GAEtE,YAAK,YAAY,EAAW,GAG5B,KAAK,mBAAmB,EAAW,EAAU,GAEtC,EAIR,eAAe,EAAM,EAAc,CAClC,GAAM,GAAO,GAAgB,KAAK,MAC/B,EAAW,EAAK,KAChB,EAAa,MAAO,IAAS,SAAW,GAAc,WAAW,EAAM,GAAQ,EAC/E,EAAW,EAAa,EAAW,KAAO,EAC1C,EAAiB,KAAK,eAAe,GAExC,MAAI,KAAmB,QACf,EAAe,aAAa,IAAa,KAOlD,eAAgB,CACf,GAAM,GAAU,KAAK,SAClB,EAAW,KAAK,gBAEnB,OAAS,GAAI,EAAW,EAAG,GAAK,EAAG,EAAE,EACpC,EAAQ,GAAG,OAGZ,MAAO,MAIR,OAAO,EAAW,CACjB,GAAa,KAAK,UAClB,GAAM,GAAU,KAAK,SAClB,EAAW,KAAK,gBAChB,EAAO,KAAK,MAAQ,EACpB,EAAgB,KAAK,KAAK,GAC1B,EAAY,KAAK,YAAc,EAElC,OAAS,GAAI,EAAG,IAAM,EAAU,EAAE,EAGjC,AAFe,EAAQ,GAEhB,QAAQ,EAAM,EAAW,EAAe,GAIhD,GAAM,GAAW,KAAK,UACnB,EAAY,KAAK,iBAEpB,OAAS,GAAI,EAAG,IAAM,EAAW,EAAE,EAClC,EAAS,GAAG,MAAM,GAGnB,MAAO,MAIR,QAAQ,EAAe,CACtB,KAAK,KAAO,EAEZ,OAAS,GAAI,EAAG,EAAI,KAAK,SAAS,OAAQ,IACzC,KAAK,SAAS,GAAG,KAAO,EAGzB,MAAO,MAAK,OAAO,GAIpB,SAAU,CACT,MAAO,MAAK,MAIb,YAAY,EAAM,CACjB,GAAM,GAAU,KAAK,SAClB,EAAW,EAAK,KAChB,EAAgB,KAAK,eACrB,EAAiB,EAAc,GAElC,GAAI,IAAmB,OAAW,CAIjC,GAAM,GAAkB,EAAe,aAEvC,OAAS,GAAI,EAAG,EAAI,EAAgB,OAAQ,IAAM,EAAG,EAAE,EAAG,CACzD,GAAM,GAAS,EAAgB,GAE/B,KAAK,kBAAkB,GAEvB,GAAM,GAAa,EAAO,YACvB,EAAqB,EAAQ,EAAQ,OAAS,GACjD,EAAO,YAAc,KACrB,EAAO,kBAAoB,KAC3B,EAAmB,YAAc,EACjC,EAAQ,GAAc,EACtB,EAAQ,MAER,KAAK,iCAAiC,GAGvC,MAAO,GAAc,IAKvB,YAAY,EAAM,CACjB,GAAM,GAAW,EAAK,KACnB,EAAgB,KAAK,eAExB,OAAW,KAAY,GAAe,CACrC,GAAM,GAAe,EAAc,GAAU,aAC1C,EAAS,EAAa,GAEzB,AAAI,IAAW,QACd,MAAK,kBAAkB,GAEvB,KAAK,sBAAsB,IAI7B,GAAM,GAAiB,KAAK,uBACzB,EAAgB,EAAe,GAElC,GAAI,IAAkB,OACrB,OAAW,KAAa,GAAe,CACtC,GAAM,GAAU,EAAc,GAC9B,EAAQ,uBAER,KAAK,uBAAuB,IAM/B,cAAc,EAAM,EAAc,CACjC,GAAM,GAAS,KAAK,eAAe,EAAM,GAEzC,AAAI,IAAW,MACd,MAAK,kBAAkB,GAEvB,KAAK,sBAAsB,KAM9B,GAAe,UAAU,iCAAmC,GAAI,cAAa,GAE7E,QAAc,CACb,YAAY,EAAO,CAClB,AAAI,MAAO,IAAU,UACpB,SAAQ,KAAK,sDACb,EAAQ,UAAU,IAGnB,KAAK,MAAQ,EAGd,OAAQ,CACP,MAAO,IAAI,IAAQ,KAAK,MAAM,QAAU,OAAY,KAAK,MAAQ,KAAK,MAAM,UAK9E,gBAAyC,GAAkB,CAC1D,YAAY,EAAO,EAAQ,EAAmB,EAAG,CAChD,MAAM,EAAO,GACb,KAAK,iBAAmB,EAGzB,KAAK,EAAQ,CACZ,aAAM,KAAK,GACX,KAAK,iBAAmB,EAAO,iBACxB,KAGR,MAAM,EAAM,CACX,GAAM,GAAK,MAAM,MAAM,GACvB,SAAG,iBAAmB,KAAK,iBACpB,EAGR,OAAO,EAAM,CACZ,GAAM,GAAO,MAAM,OAAO,GAC1B,SAAK,6BAA+B,GACpC,EAAK,iBAAmB,KAAK,iBACtB,GAKT,GAA2B,UAAU,6BAA+B,GAEpE,QAAwB,CACvB,YAAY,EAAQ,EAAM,EAAU,EAAa,EAAO,CACvD,KAAK,OAAS,EACd,KAAK,KAAO,EACZ,KAAK,SAAW,EAChB,KAAK,YAAc,EACnB,KAAK,MAAQ,EACb,KAAK,QAAU,KAGZ,aAAY,EAAO,CACtB,AAAI,IAAU,IAAM,KAAK,UAG1B,UAAU,EAAQ,CACjB,YAAK,OAAS,EACP,KAGR,QAAQ,EAAM,EAAa,CAC1B,YAAK,KAAO,EACZ,KAAK,YAAc,EACZ,KAGR,YAAY,EAAU,CACrB,YAAK,SAAW,EACT,KAGR,SAAS,EAAO,CACf,YAAK,MAAQ,EACN,MAKT,GAAkB,UAAU,oBAAsB,GAElD,QAAgB,CACf,YAAY,EAAQ,EAAW,EAAO,EAAG,EAAM,IAAU,CACxD,KAAK,IAAM,GAAI,IAAI,EAAQ,GAE3B,KAAK,KAAO,EACZ,KAAK,IAAM,EACX,KAAK,OAAS,KACd,KAAK,OAAS,GAAI,IAClB,KAAK,OAAS,CACb,KAAM,GACN,KAAM,CACL,UAAW,GAEZ,IAAK,GACL,OAAQ,CACP,UAAW,GAEZ,OAAQ,IAIV,IAAI,EAAQ,EAAW,CAEtB,KAAK,IAAI,IAAI,EAAQ,GAGtB,cAAc,EAAQ,EAAQ,CAC7B,AAAI,GAAU,EAAO,oBACpB,MAAK,IAAI,OAAO,sBAAsB,EAAO,aAC7C,KAAK,IAAI,UAAU,IAAI,EAAO,EAAG,EAAO,EAAG,IAAK,UAAU,GAAQ,IAAI,KAAK,IAAI,QAAQ,YACvF,KAAK,OAAS,GACR,AAAI,GAAU,EAAO,qBAC3B,MAAK,IAAI,OAAO,IAAI,EAAO,EAAG,EAAO,EAAI,GAAO,KAAO,EAAO,KAAQ,GAAO,KAAO,EAAO,MAAM,UAAU,GAE3G,KAAK,IAAI,UAAU,IAAI,EAAG,EAAG,IAAI,mBAAmB,EAAO,aAC3D,KAAK,OAAS,GAEd,QAAQ,MAAM,6CAA+C,EAAO,MAItE,gBAAgB,EAAQ,EAAY,GAAM,EAAa,GAAI,CAC1D,UAAgB,EAAQ,KAAM,EAAY,GAC1C,EAAW,KAAK,IACT,EAGR,iBAAiB,EAAS,EAAY,GAAM,EAAa,GAAI,CAC5D,OAAS,GAAI,EAAG,EAAI,EAAQ,OAAQ,EAAI,EAAG,IAC1C,GAAgB,EAAQ,GAAI,KAAM,EAAY,GAG/C,SAAW,KAAK,IACT,GAKT,YAAiB,EAAG,EAAG,CACtB,MAAO,GAAE,SAAW,EAAE,SAGvB,YAAyB,EAAQ,EAAW,EAAY,EAAW,CAKlE,GAJI,EAAO,OAAO,KAAK,EAAU,SAChC,EAAO,QAAQ,EAAW,GAGvB,IAAc,GAAM,CACvB,GAAM,GAAW,EAAO,SAExB,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,EAAI,EAAG,IAC3C,GAAgB,EAAS,GAAI,EAAW,EAAY,KAYvD,QAAgB,CACf,YAAY,EAAS,EAAG,EAAM,EAAG,EAAQ,EAAG,CAC3C,YAAK,OAAS,EACd,KAAK,IAAM,EAEX,KAAK,MAAQ,EAEN,KAGR,IAAI,EAAQ,EAAK,EAAO,CACvB,YAAK,OAAS,EACd,KAAK,IAAM,EACX,KAAK,MAAQ,EACN,KAGR,KAAK,EAAO,CACX,YAAK,OAAS,EAAM,OACpB,KAAK,IAAM,EAAM,IACjB,KAAK,MAAQ,EAAM,MACZ,KAIR,UAAW,CACV,GAAM,GAAM,KACZ,YAAK,IAAM,KAAK,IAAI,EAAK,KAAK,IAAI,KAAK,GAAK,EAAK,KAAK,MAC/C,KAGR,eAAe,EAAG,CACjB,MAAO,MAAK,uBAAuB,EAAE,EAAG,EAAE,EAAG,EAAE,GAGhD,uBAAuB,EAAG,EAAG,EAAG,CAC/B,YAAK,OAAS,KAAK,KAAK,EAAI,EAAI,EAAI,EAAI,EAAI,GAE5C,AAAI,KAAK,SAAW,EACnB,MAAK,MAAQ,EACb,KAAK,IAAM,GAEX,MAAK,MAAQ,KAAK,MAAM,EAAG,GAC3B,KAAK,IAAM,KAAK,KAAK,GAAM,EAAI,KAAK,OAAQ,GAAI,KAG1C,KAGR,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,OAQrC,QAAkB,CACjB,YAAY,EAAS,EAAG,EAAQ,EAAG,EAAI,EAAG,CACzC,YAAK,OAAS,EAEd,KAAK,MAAQ,EAEb,KAAK,EAAI,EAEF,KAGR,IAAI,EAAQ,EAAO,EAAG,CACrB,YAAK,OAAS,EACd,KAAK,MAAQ,EACb,KAAK,EAAI,EACF,KAGR,KAAK,EAAO,CACX,YAAK,OAAS,EAAM,OACpB,KAAK,MAAQ,EAAM,MACnB,KAAK,EAAI,EAAM,EACR,KAGR,eAAe,EAAG,CACjB,MAAO,MAAK,uBAAuB,EAAE,EAAG,EAAE,EAAG,EAAE,GAGhD,uBAAuB,EAAG,EAAG,EAAG,CAC/B,YAAK,OAAS,KAAK,KAAK,EAAI,EAAI,EAAI,GACpC,KAAK,MAAQ,KAAK,MAAM,EAAG,GAC3B,KAAK,EAAI,EACF,KAGR,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,OAKrC,GAAM,IAAyB,GAAI,IAEnC,QAAW,CACV,YAAY,EAAM,GAAI,IAAQ,IAAW,KAAY,EAAM,GAAI,IAAQ,KAAW,MAAY,CAC7F,KAAK,IAAM,EACX,KAAK,IAAM,EAGZ,IAAI,EAAK,EAAK,CACb,YAAK,IAAI,KAAK,GACd,KAAK,IAAI,KAAK,GACP,KAGR,cAAc,EAAQ,CACrB,KAAK,YAEL,OAAS,GAAI,EAAG,EAAK,EAAO,OAAQ,EAAI,EAAI,IAC3C,KAAK,cAAc,EAAO,IAG3B,MAAO,MAGR,qBAAqB,EAAQ,EAAM,CAClC,GAAM,GAAW,GAAU,KAAK,GAAM,eAAe,IAErD,YAAK,IAAI,KAAK,GAAQ,IAAI,GAC1B,KAAK,IAAI,KAAK,GAAQ,IAAI,GACnB,KAGR,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,MAGpC,KAAK,EAAK,CACT,YAAK,IAAI,KAAK,EAAI,KAClB,KAAK,IAAI,KAAK,EAAI,KACX,KAGR,WAAY,CACX,YAAK,IAAI,EAAI,KAAK,IAAI,EAAI,IAC1B,KAAK,IAAI,EAAI,KAAK,IAAI,EAAI,KACnB,KAGR,SAAU,CAET,MAAO,MAAK,IAAI,EAAI,KAAK,IAAI,GAAK,KAAK,IAAI,EAAI,KAAK,IAAI,EAGzD,UAAU,EAAQ,CACjB,MAAO,MAAK,UAAY,EAAO,IAAI,EAAG,GAAK,EAAO,WAAW,KAAK,IAAK,KAAK,KAAK,eAAe,IAGjG,QAAQ,EAAQ,CACf,MAAO,MAAK,UAAY,EAAO,IAAI,EAAG,GAAK,EAAO,WAAW,KAAK,IAAK,KAAK,KAG7E,cAAc,EAAO,CACpB,YAAK,IAAI,IAAI,GACb,KAAK,IAAI,IAAI,GACN,KAGR,eAAe,EAAQ,CACtB,YAAK,IAAI,IAAI,GACb,KAAK,IAAI,IAAI,GACN,KAGR,eAAe,EAAQ,CACtB,YAAK,IAAI,UAAU,CAAC,GACpB,KAAK,IAAI,UAAU,GACZ,KAGR,cAAc,EAAO,CACpB,MAAO,IAAM,EAAI,KAAK,IAAI,GAAK,EAAM,EAAI,KAAK,IAAI,GAAK,EAAM,EAAI,KAAK,IAAI,GAAK,EAAM,EAAI,KAAK,IAAI,GAGnG,YAAY,EAAK,CAChB,MAAO,MAAK,IAAI,GAAK,EAAI,IAAI,GAAK,EAAI,IAAI,GAAK,KAAK,IAAI,GAAK,KAAK,IAAI,GAAK,EAAI,IAAI,GAAK,EAAI,IAAI,GAAK,KAAK,IAAI,EAG/G,aAAa,EAAO,EAAQ,CAG3B,MAAO,GAAO,IAAK,GAAM,EAAI,KAAK,IAAI,GAAM,MAAK,IAAI,EAAI,KAAK,IAAI,GAAK,GAAM,EAAI,KAAK,IAAI,GAAM,MAAK,IAAI,EAAI,KAAK,IAAI,IAGvH,cAAc,EAAK,CAElB,MAAO,IAAI,IAAI,EAAI,KAAK,IAAI,GAAK,EAAI,IAAI,EAAI,KAAK,IAAI,GAAK,EAAI,IAAI,EAAI,KAAK,IAAI,GAAK,EAAI,IAAI,EAAI,KAAK,IAAI,GAG3G,WAAW,EAAO,EAAQ,CACzB,MAAO,GAAO,KAAK,GAAO,MAAM,KAAK,IAAK,KAAK,KAGhD,gBAAgB,EAAO,CAGtB,MAAO,AAFc,IAAU,KAAK,GAAO,MAAM,KAAK,IAAK,KAAK,KAE5C,IAAI,GAAO,SAGhC,UAAU,EAAK,CACd,YAAK,IAAI,IAAI,EAAI,KACjB,KAAK,IAAI,IAAI,EAAI,KACV,KAGR,MAAM,EAAK,CACV,YAAK,IAAI,IAAI,EAAI,KACjB,KAAK,IAAI,IAAI,EAAI,KACV,KAGR,UAAU,EAAQ,CACjB,YAAK,IAAI,IAAI,GACb,KAAK,IAAI,IAAI,GACN,KAGR,OAAO,EAAK,CACX,MAAO,GAAI,IAAI,OAAO,KAAK,MAAQ,EAAI,IAAI,OAAO,KAAK,MAKzD,GAAK,UAAU,OAAS,GAExB,GAAM,IAAuB,GAAI,GAE3B,GAAyB,GAAI,GAEnC,QAAY,CACX,YAAY,EAAQ,GAAI,GAAW,EAAM,GAAI,GAAW,CACvD,KAAK,MAAQ,EACb,KAAK,IAAM,EAGZ,IAAI,EAAO,EAAK,CACf,YAAK,MAAM,KAAK,GAChB,KAAK,IAAI,KAAK,GACP,KAGR,KAAK,EAAM,CACV,YAAK,MAAM,KAAK,EAAK,OACrB,KAAK,IAAI,KAAK,EAAK,KACZ,KAGR,UAAU,EAAQ,CACjB,MAAO,GAAO,WAAW,KAAK,MAAO,KAAK,KAAK,eAAe,IAG/D,MAAM,EAAQ,CACb,MAAO,GAAO,WAAW,KAAK,IAAK,KAAK,OAGzC,YAAa,CACZ,MAAO,MAAK,MAAM,kBAAkB,KAAK,KAG1C,UAAW,CACV,MAAO,MAAK,MAAM,WAAW,KAAK,KAGnC,GAAG,EAAG,EAAQ,CACb,MAAO,MAAK,MAAM,GAAQ,eAAe,GAAG,IAAI,KAAK,OAGtD,6BAA6B,EAAO,EAAa,CAChD,GAAQ,WAAW,EAAO,KAAK,OAE/B,GAAU,WAAW,KAAK,IAAK,KAAK,OAEpC,GAAM,GAAY,GAAU,IAAI,IAI5B,EAAI,AAFgB,GAAU,IAAI,IAEZ,EAE1B,MAAI,IACH,GAAI,GAAM,EAAG,EAAG,IAGV,EAGR,oBAAoB,EAAO,EAAa,EAAQ,CAC/C,GAAM,GAAI,KAAK,6BAA6B,EAAO,GACnD,MAAO,MAAK,MAAM,GAAQ,eAAe,GAAG,IAAI,KAAK,OAGtD,aAAa,EAAQ,CACpB,YAAK,MAAM,aAAa,GACxB,KAAK,IAAI,aAAa,GACf,KAGR,OAAO,EAAM,CACZ,MAAO,GAAK,MAAM,OAAO,KAAK,QAAU,EAAK,IAAI,OAAO,KAAK,KAG9D,OAAQ,CACP,MAAO,IAAI,MAAK,cAAc,KAAK,OAKrC,GAAM,IAAyB,GAAI,GAEnC,gBAA8B,GAAS,CACtC,YAAY,EAAO,EAAO,CACzB,QACA,KAAK,MAAQ,EACb,KAAK,MAAM,oBACX,KAAK,OAAS,EAAM,YACpB,KAAK,iBAAmB,GACxB,KAAK,MAAQ,EACb,GAAM,GAAW,GAAI,IACf,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAE5G,OAAS,GAAI,EAAG,EAAI,EAAG,EAAI,GAAI,EAAI,EAAG,IAAK,IAAK,CAC/C,GAAM,GAAK,EAAI,EAAI,KAAK,GAAK,EACvB,EAAK,EAAI,EAAI,KAAK,GAAK,EAC7B,EAAU,KAAK,KAAK,IAAI,GAAK,KAAK,IAAI,GAAK,EAAG,KAAK,IAAI,GAAK,KAAK,IAAI,GAAK,GAG3E,EAAS,aAAa,WAAY,GAAI,IAAuB,EAAW,IACxE,GAAM,GAAW,GAAI,IAAkB,CACtC,IAAK,GACL,WAAY,KAEb,KAAK,KAAO,GAAI,IAAa,EAAU,GACvC,KAAK,IAAI,KAAK,MACd,KAAK,SAGN,SAAU,CACT,KAAK,KAAK,SAAS,UACnB,KAAK,KAAK,SAAS,UAGpB,QAAS,CACR,KAAK,MAAM,oBACX,GAAM,GAAa,KAAK,MAAM,SAAW,KAAK,MAAM,SAAW,IACzD,EAAY,EAAa,KAAK,IAAI,KAAK,MAAM,OACnD,KAAK,KAAK,MAAM,IAAI,EAAW,EAAW,GAE1C,GAAU,sBAAsB,KAAK,MAAM,OAAO,aAElD,KAAK,KAAK,OAAO,IAEjB,AAAI,KAAK,QAAU,OAClB,KAAK,KAAK,SAAS,MAAM,IAAI,KAAK,OAElC,KAAK,KAAK,SAAS,MAAM,KAAK,KAAK,MAAM,QAM5C,GAAM,IAAyB,GAAI,GAE7B,GAA2B,GAAI,IAE/B,GAA+B,GAAI,IAEzC,gBAA6B,GAAa,CACzC,YAAY,EAAQ,CACnB,GAAM,GAAQ,GAAY,GACpB,EAAW,GAAI,IACf,EAAW,GACX,EAAS,GACT,EAAS,GAAI,IAAM,EAAG,EAAG,GACzB,EAAS,GAAI,IAAM,EAAG,EAAG,GAE/B,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,IAAK,CACtC,GAAM,GAAO,EAAM,GAEnB,AAAI,EAAK,QAAU,EAAK,OAAO,QAC9B,GAAS,KAAK,EAAG,EAAG,GACpB,EAAS,KAAK,EAAG,EAAG,GACpB,EAAO,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,GACvC,EAAO,KAAK,EAAO,EAAG,EAAO,EAAG,EAAO,IAIzC,EAAS,aAAa,WAAY,GAAI,IAAuB,EAAU,IACvE,EAAS,aAAa,QAAS,GAAI,IAAuB,EAAQ,IAClE,GAAM,GAAW,GAAI,IAAkB,CACtC,aAAc,GACd,UAAW,GACX,WAAY,GACZ,WAAY,GACZ,YAAa,KAEd,MAAM,EAAU,GAChB,KAAK,KAAO,iBACZ,KAAK,iBAAmB,GACxB,KAAK,KAAO,EACZ,KAAK,MAAQ,EACb,KAAK,OAAS,EAAO,YACrB,KAAK,iBAAmB,GAGzB,kBAAkB,EAAO,CACxB,GAAM,GAAQ,KAAK,MACb,EAAW,KAAK,SAChB,EAAW,EAAS,aAAa,YAEvC,GAAgB,KAAK,KAAK,KAAK,aAAa,SAE5C,OAAS,GAAI,EAAG,EAAI,EAAG,EAAI,EAAM,OAAQ,IAAK,CAC7C,GAAM,GAAO,EAAM,GAEnB,AAAI,EAAK,QAAU,EAAK,OAAO,QAC9B,IAAY,iBAAiB,GAAiB,EAAK,aAEnD,GAAU,sBAAsB,IAEhC,EAAS,OAAO,EAAG,GAAU,EAAG,GAAU,EAAG,GAAU,GAEvD,GAAY,iBAAiB,GAAiB,EAAK,OAAO,aAE1D,GAAU,sBAAsB,IAEhC,EAAS,OAAO,EAAI,EAAG,GAAU,EAAG,GAAU,EAAG,GAAU,GAC3D,GAAK,GAIP,EAAS,aAAa,YAAY,YAAc,GAChD,MAAM,kBAAkB,IAK1B,YAAqB,EAAQ,CAC5B,GAAM,GAAW,GAEjB,AAAI,GAAU,EAAO,QACpB,EAAS,KAAK,GAGf,OAAS,GAAI,EAAG,EAAI,EAAO,SAAS,OAAQ,IAC3C,EAAS,KAAK,MAAM,EAAU,GAAY,EAAO,SAAS,KAG3D,MAAO,GAGR,gBAA+B,GAAK,CACnC,YAAY,EAAO,EAAY,EAAO,CACrC,GAAM,GAAW,GAAI,IAAe,EAAY,EAAG,GAC7C,EAAW,GAAI,IAAkB,CACtC,UAAW,GACX,IAAK,GACL,WAAY,KAEb,MAAM,EAAU,GAChB,KAAK,MAAQ,EACb,KAAK,MAAM,oBACX,KAAK,MAAQ,EACb,KAAK,KAAO,mBACZ,KAAK,OAAS,KAAK,MAAM,YACzB,KAAK,iBAAmB,GACxB,KAAK,SAiBN,SAAU,CACT,KAAK,SAAS,UACd,KAAK,SAAS,UAGf,QAAS,CACR,AAAI,KAAK,QAAU,OAClB,KAAK,SAAS,MAAM,IAAI,KAAK,OAE7B,KAAK,SAAS,MAAM,KAAK,KAAK,MAAM,QAgBvC,GAAM,IAAyB,GAAI,GAE7B,GAAuB,GAAI,IAE3B,GAAuB,GAAI,IAEjC,gBAAoC,GAAS,CAC5C,YAAY,EAAO,EAAM,EAAO,CAC/B,QACA,KAAK,MAAQ,EACb,KAAK,MAAM,oBACX,KAAK,OAAS,EAAM,YACpB,KAAK,iBAAmB,GACxB,KAAK,MAAQ,EACb,GAAM,GAAW,GAAI,IAAmB,GACxC,EAAS,QAAQ,KAAK,GAAK,IAC3B,KAAK,SAAW,GAAI,IAAkB,CACrC,UAAW,GACX,IAAK,GACL,WAAY,KAET,KAAK,QAAU,QAAW,MAAK,SAAS,aAAe,IAC3D,GAAM,GAAW,EAAS,aAAa,YACjC,EAAS,GAAI,cAAa,EAAS,MAAQ,GACjD,EAAS,aAAa,QAAS,GAAI,IAAgB,EAAQ,IAC3D,KAAK,IAAI,GAAI,IAAK,EAAU,KAAK,WACjC,KAAK,SAGN,SAAU,CACT,KAAK,SAAS,GAAG,SAAS,UAC1B,KAAK,SAAS,GAAG,SAAS,UAG3B,QAAS,CACR,GAAM,GAAO,KAAK,SAAS,GAE3B,GAAI,KAAK,QAAU,OAClB,KAAK,SAAS,MAAM,IAAI,KAAK,WACvB,CACN,GAAM,GAAS,EAAK,SAAS,aAAa,SAE1C,GAAQ,KAAK,KAAK,MAAM,OAExB,GAAQ,KAAK,KAAK,MAAM,aAExB,OAAS,GAAI,EAAG,EAAI,EAAO,MAAO,EAAI,EAAG,IAAK,CAC7C,GAAM,GAAQ,EAAI,EAAI,EAAI,GAAU,GACpC,EAAO,OAAO,EAAG,EAAM,EAAG,EAAM,EAAG,EAAM,GAG1C,EAAO,YAAc,GAGtB,EAAK,OAAO,GAAU,sBAAsB,KAAK,MAAM,aAAa,WAKtE,gBAAyB,GAAa,CACrC,YAAY,EAAO,GAAI,EAAY,GAAI,EAAS,QAAU,EAAS,QAAU,CAC5E,EAAS,GAAI,IAAM,GACnB,EAAS,GAAI,IAAM,GACnB,GAAM,GAAS,EAAY,EACrB,EAAO,EAAO,EACd,EAAW,EAAO,EAClB,EAAW,GACd,EAAS,GAEZ,OAAS,GAAI,EAAG,EAAI,EAAG,EAAI,CAAC,EAAU,GAAK,EAAW,IAAK,GAAK,EAAM,CACrE,EAAS,KAAK,CAAC,EAAU,EAAG,EAAG,EAAU,EAAG,GAC5C,EAAS,KAAK,EAAG,EAAG,CAAC,EAAU,EAAG,EAAG,GACrC,GAAM,GAAQ,IAAM,EAAS,EAAS,EACtC,EAAM,QAAQ,EAAQ,GACtB,GAAK,EACL,EAAM,QAAQ,EAAQ,GACtB,GAAK,EACL,EAAM,QAAQ,EAAQ,GACtB,GAAK,EACL,EAAM,QAAQ,EAAQ,GACtB,GAAK,EAGN,GAAM,GAAW,GAAI,IACrB,EAAS,aAAa,WAAY,GAAI,IAAuB,EAAU,IACvE,EAAS,aAAa,QAAS,GAAI,IAAuB,EAAQ,IAClE,GAAM,GAAW,GAAI,IAAkB,CACtC,aAAc,GACd,WAAY,KAEb,MAAM,EAAU,GAChB,KAAK,KAAO,cAKd,gBAA8B,GAAa,CAC1C,YAAY,EAAS,GAAI,EAAU,GAAI,EAAU,EAAG,EAAY,GAAI,EAAS,QAAU,EAAS,QAAU,CACzG,EAAS,GAAI,IAAM,GACnB,EAAS,GAAI,IAAM,GACnB,GAAM,GAAW,GACX,EAAS,GAEf,OAAS,GAAI,EAAG,GAAK,EAAS,IAAK,CAClC,GAAM,GAAI,EAAI,EAAW,MAAK,GAAK,GAC7B,EAAI,KAAK,IAAI,GAAK,EAClB,EAAI,KAAK,IAAI,GAAK,EACxB,EAAS,KAAK,EAAG,EAAG,GACpB,EAAS,KAAK,EAAG,EAAG,GACpB,GAAM,GAAQ,EAAI,EAAI,EAAS,EAC/B,EAAO,KAAK,EAAM,EAAG,EAAM,EAAG,EAAM,GACpC,EAAO,KAAK,EAAM,EAAG,EAAM,EAAG,EAAM,GAIrC,OAAS,GAAI,EAAG,GAAK,EAAS,IAAK,CAClC,GAAM,GAAQ,EAAI,EAAI,EAAS,EACzB,EAAI,EAAS,EAAS,EAAU,EAEtC,OAAS,GAAI,EAAG,EAAI,EAAW,IAAK,CAEnC,GAAI,GAAI,EAAI,EAAa,MAAK,GAAK,GAC/B,EAAI,KAAK,IAAI,GAAK,EAClB,EAAI,KAAK,IAAI,GAAK,EACtB,EAAS,KAAK,EAAG,EAAG,GACpB,EAAO,KAAK,EAAM,EAAG,EAAM,EAAG,EAAM,GAEpC,EAAK,GAAI,GAAK,EAAa,MAAK,GAAK,GACrC,EAAI,KAAK,IAAI,GAAK,EAClB,EAAI,KAAK,IAAI,GAAK,EAClB,EAAS,KAAK,EAAG,EAAG,GACpB,EAAO,KAAK,EAAM,EAAG,EAAM,EAAG,EAAM,IAItC,GAAM,GAAW,GAAI,IACrB,EAAS,aAAa,WAAY,GAAI,IAAuB,EAAU,IACvE,EAAS,aAAa,QAAS,GAAI,IAAuB,EAAQ,IAClE,GAAM,GAAW,GAAI,IAAkB,CACtC,aAAc,GACd,WAAY,KAEb,MAAM,EAAU,GAChB,KAAK,KAAO,mBAKd,GAAM,IAAmB,GAAI,GAEvB,GAAmB,GAAI,GAEvB,GAAmB,GAAI,GAE7B,gBAAqC,GAAS,CAC7C,YAAY,EAAO,EAAM,EAAO,CAC/B,QACA,KAAK,MAAQ,EACb,KAAK,MAAM,oBACX,KAAK,OAAS,EAAM,YACpB,KAAK,iBAAmB,GACxB,KAAK,MAAQ,EACT,IAAS,QAAW,GAAO,GAC/B,GAAI,GAAW,GAAI,IACnB,EAAS,aAAa,WAAY,GAAI,IAAuB,CAAC,CAAC,EAAM,EAAM,EAAG,EAAM,EAAM,EAAG,EAAM,CAAC,EAAM,EAAG,CAAC,EAAM,CAAC,EAAM,EAAG,CAAC,EAAM,EAAM,GAAI,IAC/I,GAAM,GAAW,GAAI,IAAkB,CACtC,IAAK,GACL,WAAY,KAEb,KAAK,WAAa,GAAI,IAAK,EAAU,GACrC,KAAK,IAAI,KAAK,YACd,EAAW,GAAI,IACf,EAAS,aAAa,WAAY,GAAI,IAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IACjF,KAAK,WAAa,GAAI,IAAK,EAAU,GACrC,KAAK,IAAI,KAAK,YACd,KAAK,SAGN,SAAU,CACT,KAAK,WAAW,SAAS,UACzB,KAAK,WAAW,SAAS,UACzB,KAAK,WAAW,SAAS,UACzB,KAAK,WAAW,SAAS,UAG1B,QAAS,CACR,GAAI,sBAAsB,KAAK,MAAM,aAErC,GAAI,sBAAsB,KAAK,MAAM,OAAO,aAE5C,GAAI,WAAW,GAAK,IAEpB,KAAK,WAAW,OAAO,IAEvB,AAAI,KAAK,QAAU,OAClB,MAAK,WAAW,SAAS,MAAM,IAAI,KAAK,OACxC,KAAK,WAAW,SAAS,MAAM,IAAI,KAAK,QAExC,MAAK,WAAW,SAAS,MAAM,KAAK,KAAK,MAAM,OAC/C,KAAK,WAAW,SAAS,MAAM,KAAK,KAAK,MAAM,QAGhD,KAAK,WAAW,OAAO,IACvB,KAAK,WAAW,MAAM,EAAI,GAAI,UAKhC,GAAM,IAAuB,GAAI,GAE3B,GAAuB,GAAI,IASjC,gBAA2B,GAAa,CACvC,YAAY,EAAQ,CACnB,GAAM,GAAW,GAAI,IACf,EAAW,GAAI,IAAkB,CACtC,MAAO,SACP,aAAc,GACd,WAAY,KAEP,EAAW,GACX,EAAS,GACT,EAAW,GAEX,EAAe,GAAI,IAAM,UACzB,EAAY,GAAI,IAAM,UACtB,EAAU,GAAI,IAAM,OACpB,EAAc,GAAI,IAAM,UACxB,EAAa,GAAI,IAAM,SAE7B,EAAQ,KAAM,KAAM,GACpB,EAAQ,KAAM,KAAM,GACpB,EAAQ,KAAM,KAAM,GACpB,EAAQ,KAAM,KAAM,GAEpB,EAAQ,KAAM,KAAM,GACpB,EAAQ,KAAM,KAAM,GACpB,EAAQ,KAAM,KAAM,GACpB,EAAQ,KAAM,KAAM,GAEpB,EAAQ,KAAM,KAAM,GACpB,EAAQ,KAAM,KAAM,GACpB,EAAQ,KAAM,KAAM,GACpB,EAAQ,KAAM,KAAM,GAEpB,EAAQ,IAAK,KAAM,GACnB,EAAQ,IAAK,KAAM,GACnB,EAAQ,IAAK,KAAM,GACnB,EAAQ,IAAK,KAAM,GAEnB,EAAQ,KAAM,KAAM,GACpB,EAAQ,KAAM,KAAM,GACpB,EAAQ,KAAM,KAAM,GAEpB,EAAQ,IAAK,IAAK,GAClB,EAAQ,IAAK,IAAK,GAElB,EAAQ,MAAO,MAAO,GACtB,EAAQ,MAAO,MAAO,GACtB,EAAQ,MAAO,MAAO,GACtB,EAAQ,MAAO,MAAO,GAEtB,WAAiB,EAAG,EAAG,EAAO,CAC7B,EAAS,EAAG,GACZ,EAAS,EAAG,GAGb,WAAkB,EAAI,EAAO,CAC5B,EAAS,KAAK,EAAG,EAAG,GACpB,EAAO,KAAK,EAAM,EAAG,EAAM,EAAG,EAAM,GAEhC,EAAS,KAAQ,QACpB,GAAS,GAAM,IAGhB,EAAS,GAAI,KAAK,EAAS,OAAS,EAAI,GAGzC,EAAS,aAAa,WAAY,GAAI,IAAuB,EAAU,IACvE,EAAS,aAAa,QAAS,GAAI,IAAuB,EAAQ,IAClE,MAAM,EAAU,GAChB,KAAK,KAAO,eACZ,KAAK,OAAS,EACV,KAAK,OAAO,wBAAwB,KAAK,OAAO,yBACpD,KAAK,OAAS,EAAO,YACrB,KAAK,iBAAmB,GACxB,KAAK,SAAW,EAChB,KAAK,SAGN,QAAS,CACR,GAAM,GAAW,KAAK,SAChB,EAAW,KAAK,SAChB,EAAI,EACP,EAAI,EAGP,GAAQ,wBAAwB,KAAK,KAAK,OAAO,yBAGjD,GAAS,IAAK,EAAU,EAAU,GAAS,EAAG,EAAG,IACjD,GAAS,IAAK,EAAU,EAAU,GAAS,EAAG,EAAG,GAEjD,GAAS,KAAM,EAAU,EAAU,GAAS,CAAC,EAAG,CAAC,EAAG,IACpD,GAAS,KAAM,EAAU,EAAU,GAAS,EAAG,CAAC,EAAG,IACnD,GAAS,KAAM,EAAU,EAAU,GAAS,CAAC,EAAG,EAAG,IACnD,GAAS,KAAM,EAAU,EAAU,GAAS,EAAG,EAAG,IAElD,GAAS,KAAM,EAAU,EAAU,GAAS,CAAC,EAAG,CAAC,EAAG,GACpD,GAAS,KAAM,EAAU,EAAU,GAAS,EAAG,CAAC,EAAG,GACnD,GAAS,KAAM,EAAU,EAAU,GAAS,CAAC,EAAG,EAAG,GACnD,GAAS,KAAM,EAAU,EAAU,GAAS,EAAG,EAAG,GAElD,GAAS,KAAM,EAAU,EAAU,GAAS,EAAI,GAAK,EAAI,IAAK,IAC9D,GAAS,KAAM,EAAU,EAAU,GAAS,CAAC,EAAI,GAAK,EAAI,IAAK,IAC/D,GAAS,KAAM,EAAU,EAAU,GAAS,EAAG,EAAI,EAAG,IAEtD,GAAS,MAAO,EAAU,EAAU,GAAS,CAAC,EAAG,EAAG,GACpD,GAAS,MAAO,EAAU,EAAU,GAAS,EAAG,EAAG,GACnD,GAAS,MAAO,EAAU,EAAU,GAAS,EAAG,CAAC,EAAG,GACpD,GAAS,MAAO,EAAU,EAAU,GAAS,EAAG,EAAG,GACnD,GAAS,MAAO,EAAU,EAAU,GAAS,CAAC,EAAG,EAAG,IACpD,GAAS,MAAO,EAAU,EAAU,GAAS,EAAG,EAAG,IACnD,GAAS,MAAO,EAAU,EAAU,GAAS,EAAG,CAAC,EAAG,IACpD,GAAS,MAAO,EAAU,EAAU,GAAS,EAAG,EAAG,IACnD,EAAS,aAAa,YAAY,YAAc,GAGjD,SAAU,CACT,KAAK,SAAS,UACd,KAAK,SAAS,WAKhB,YAAkB,EAAO,EAAU,EAAU,EAAQ,EAAG,EAAG,EAAG,CAC7D,GAAQ,IAAI,EAAG,EAAG,GAAG,UAAU,GAE/B,GAAM,GAAS,EAAS,GAExB,GAAI,IAAW,OAAW,CACzB,GAAM,GAAW,EAAS,aAAa,YAEvC,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,IACzC,EAAS,OAAO,EAAO,GAAI,GAAQ,EAAG,GAAQ,EAAG,GAAQ,IAK5D,GAAM,IAAoB,GAAI,IAE9B,gBAAwB,GAAa,CACpC,YAAY,EAAQ,EAAQ,SAAU,CACrC,GAAM,GAAU,GAAI,aAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAChG,EAAY,GAAI,cAAa,EAAI,GACjC,EAAW,GAAI,IACrB,EAAS,SAAS,GAAI,IAAgB,EAAS,IAC/C,EAAS,aAAa,WAAY,GAAI,IAAgB,EAAW,IACjE,MAAM,EAAU,GAAI,IAAkB,CACrC,MAAO,EACP,WAAY,MAEb,KAAK,OAAS,EACd,KAAK,KAAO,YACZ,KAAK,iBAAmB,GACxB,KAAK,SAGN,OAAO,EAAQ,CASd,GARI,IAAW,QACd,QAAQ,KAAK,uDAGV,KAAK,SAAW,QACnB,GAAK,cAAc,KAAK,QAGrB,GAAK,UAAW,OACpB,GAAM,GAAM,GAAK,IACX,EAAM,GAAK,IAgBX,EAAW,KAAK,SAAS,WAAW,SACpC,EAAQ,EAAS,MACvB,EAAM,GAAK,EAAI,EACf,EAAM,GAAK,EAAI,EACf,EAAM,GAAK,EAAI,EACf,EAAM,GAAK,EAAI,EACf,EAAM,GAAK,EAAI,EACf,EAAM,GAAK,EAAI,EACf,EAAM,GAAK,EAAI,EACf,EAAM,GAAK,EAAI,EACf,EAAM,GAAK,EAAI,EACf,EAAM,GAAK,EAAI,EACf,EAAM,IAAM,EAAI,EAChB,EAAM,IAAM,EAAI,EAChB,EAAM,IAAM,EAAI,EAChB,EAAM,IAAM,EAAI,EAChB,EAAM,IAAM,EAAI,EAChB,EAAM,IAAM,EAAI,EAChB,EAAM,IAAM,EAAI,EAChB,EAAM,IAAM,EAAI,EAChB,EAAM,IAAM,EAAI,EAChB,EAAM,IAAM,EAAI,EAChB,EAAM,IAAM,EAAI,EAChB,EAAM,IAAM,EAAI,EAChB,EAAM,IAAM,EAAI,EAChB,EAAM,IAAM,EAAI,EAChB,EAAS,YAAc,GACvB,KAAK,SAAS,wBAGf,cAAc,EAAQ,CACrB,YAAK,OAAS,EACd,KAAK,SACE,KAGR,KAAK,EAAQ,CACZ,UAAa,UAAU,KAAK,KAAK,KAAM,GACvC,KAAK,OAAS,EAAO,OACd,MAKT,gBAAyB,GAAa,CACrC,YAAY,EAAK,EAAQ,SAAU,CAClC,GAAM,GAAU,GAAI,aAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAChG,EAAY,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,IAC7F,EAAW,GAAI,IACrB,EAAS,SAAS,GAAI,IAAgB,EAAS,IAC/C,EAAS,aAAa,WAAY,GAAI,IAAuB,EAAW,IACxE,MAAM,EAAU,GAAI,IAAkB,CACrC,MAAO,EACP,WAAY,MAEb,KAAK,IAAM,EACX,KAAK,KAAO,aACZ,KAAK,SAAS,wBAGf,kBAAkB,EAAO,CACxB,GAAM,GAAM,KAAK,IACjB,AAAI,EAAI,WACR,GAAI,UAAU,KAAK,UACnB,EAAI,QAAQ,KAAK,OACjB,KAAK,MAAM,eAAe,IAC1B,MAAM,kBAAkB,KAK1B,gBAA0B,GAAK,CAC9B,YAAY,EAAO,EAAO,EAAG,EAAM,SAAU,CAC5C,GAAM,GAAQ,EACR,EAAY,CAAC,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5G,EAAW,GAAI,IACrB,EAAS,aAAa,WAAY,GAAI,IAAuB,EAAW,IACxE,EAAS,wBACT,MAAM,EAAU,GAAI,IAAkB,CACrC,MAAO,EACP,WAAY,MAEb,KAAK,KAAO,cACZ,KAAK,MAAQ,EACb,KAAK,KAAO,EACZ,GAAM,GAAa,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GACvE,EAAY,GAAI,IACtB,EAAU,aAAa,WAAY,GAAI,IAAuB,EAAY,IAC1E,EAAU,wBACV,KAAK,IAAI,GAAI,IAAK,EAAW,GAAI,IAAkB,CAClD,MAAO,EACP,QAAS,GACT,YAAa,GACb,WAAY,GACZ,WAAY,OAId,kBAAkB,EAAO,CACxB,GAAI,GAAQ,CAAC,KAAK,MAAM,SACxB,AAAI,KAAK,IAAI,GAAS,MAAM,GAAQ,MAEpC,KAAK,MAAM,IAAI,GAAM,KAAK,KAAM,GAAM,KAAK,KAAM,GACjD,KAAK,SAAS,GAAG,SAAS,KAAO,EAAQ,EAAI,GAAW,GAExD,KAAK,OAAO,KAAK,MAAM,QACvB,MAAM,kBAAkB,IAK1B,GAAM,IAAqB,GAAI,GAE3B,GAAe,GAEnB,gBAA0B,GAAS,CAElC,YAAY,EAAM,GAAI,GAAQ,EAAG,EAAG,GAAI,EAAS,GAAI,GAAQ,EAAG,EAAG,GAAI,EAAS,EAAG,EAAQ,SAAU,EAAa,EAAS,GAAK,EAAY,EAAa,GAAK,CAC7J,QACA,KAAK,KAAO,cAER,KAAkB,QACrB,IAAgB,GAAI,IAEpB,GAAc,aAAa,WAAY,GAAI,IAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IAEtF,GAAgB,GAAI,IAAiB,EAAG,GAAK,EAAG,EAAG,GAEnD,GAAc,UAAU,EAAG,IAAM,IAGlC,KAAK,SAAS,KAAK,GACnB,KAAK,KAAO,GAAI,IAAK,GAAe,GAAI,IAAkB,CACzD,MAAO,EACP,WAAY,MAEb,KAAK,KAAK,iBAAmB,GAC7B,KAAK,IAAI,KAAK,MACd,KAAK,KAAO,GAAI,IAAK,GAAe,GAAI,IAAkB,CACzD,MAAO,EACP,WAAY,MAEb,KAAK,KAAK,iBAAmB,GAC7B,KAAK,IAAI,KAAK,MACd,KAAK,aAAa,GAClB,KAAK,UAAU,EAAQ,EAAY,GAGpC,aAAa,EAAK,CAEjB,GAAI,EAAI,EAAI,OACX,KAAK,WAAW,IAAI,EAAG,EAAG,EAAG,WACnB,EAAI,EAAI,QAClB,KAAK,WAAW,IAAI,EAAG,EAAG,EAAG,OACvB,CACN,GAAM,IAAI,EAAI,EAAG,EAAG,CAAC,EAAI,GAAG,YAE5B,GAAM,GAAU,KAAK,KAAK,EAAI,GAC9B,KAAK,WAAW,iBAAiB,GAAO,IAI1C,UAAU,EAAQ,EAAa,EAAS,GAAK,EAAY,EAAa,GAAK,CAC1E,KAAK,KAAK,MAAM,IAAI,EAAG,KAAK,IAAI,KAAQ,EAAS,GAAa,GAE9D,KAAK,KAAK,eACV,KAAK,KAAK,MAAM,IAAI,EAAW,EAAY,GAC3C,KAAK,KAAK,SAAS,EAAI,EACvB,KAAK,KAAK,eAGX,SAAS,EAAO,CACf,KAAK,KAAK,SAAS,MAAM,IAAI,GAC7B,KAAK,KAAK,SAAS,MAAM,IAAI,GAG9B,KAAK,EAAQ,CACZ,aAAM,KAAK,EAAQ,IACnB,KAAK,KAAK,KAAK,EAAO,MACtB,KAAK,KAAK,KAAK,EAAO,MACf,MAKT,gBAAyB,GAAa,CACrC,YAAY,EAAO,EAAG,CACrB,GAAM,GAAW,CAAC,EAAG,EAAG,EAAG,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrE,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GACnE,EAAW,GAAI,IACrB,EAAS,aAAa,WAAY,GAAI,IAAuB,EAAU,IACvE,EAAS,aAAa,QAAS,GAAI,IAAuB,EAAQ,IAClE,GAAM,GAAW,GAAI,IAAkB,CACtC,aAAc,GACd,WAAY,KAEb,MAAM,EAAU,GAChB,KAAK,KAAO,aAGb,UAAU,EAAY,EAAY,EAAY,CAC7C,GAAM,GAAQ,GAAI,IACZ,EAAQ,KAAK,SAAS,WAAW,MAAM,MAC7C,SAAM,IAAI,GACV,EAAM,QAAQ,EAAO,GACrB,EAAM,QAAQ,EAAO,GACrB,EAAM,IAAI,GACV,EAAM,QAAQ,EAAO,GACrB,EAAM,QAAQ,EAAO,GACrB,EAAM,IAAI,GACV,EAAM,QAAQ,EAAO,IACrB,EAAM,QAAQ,EAAO,IACrB,KAAK,SAAS,WAAW,MAAM,YAAc,GACtC,KAGR,SAAU,CACT,KAAK,SAAS,UACd,KAAK,SAAS,WAKhB,QAAgB,CACf,aAAc,CACb,KAAK,KAAO,YACZ,KAAK,MAAQ,GAAI,IACjB,KAAK,SAAW,GAChB,KAAK,YAAc,KAGpB,OAAO,EAAG,EAAG,CACZ,YAAK,YAAc,GAAI,IACvB,KAAK,SAAS,KAAK,KAAK,aACxB,KAAK,YAAY,OAAO,EAAG,GACpB,KAGR,OAAO,EAAG,EAAG,CACZ,YAAK,YAAY,OAAO,EAAG,GACpB,KAGR,iBAAiB,EAAM,EAAM,EAAI,EAAI,CACpC,YAAK,YAAY,iBAAiB,EAAM,EAAM,EAAI,GAC3C,KAGR,cAAc,EAAO,EAAO,EAAO,EAAO,EAAI,EAAI,CACjD,YAAK,YAAY,cAAc,EAAO,EAAO,EAAO,EAAO,EAAI,GACxD,KAGR,WAAW,EAAK,CACf,YAAK,YAAY,WAAW,GACrB,KAGR,SAAS,EAAO,EAAS,CACxB,WAAyB,EAAY,CACpC,GAAM,GAAS,GAEf,OAAS,GAAI,EAAG,EAAI,EAAW,OAAQ,EAAI,EAAG,IAAK,CAClD,GAAM,GAAU,EAAW,GACrB,EAAW,GAAI,IACrB,EAAS,OAAS,EAAQ,OAC1B,EAAO,KAAK,GAGb,MAAO,GAGR,WAA8B,EAAM,EAAW,CAC9C,GAAM,GAAU,EAAU,OAKtB,EAAS,GAEb,OAAS,GAAI,EAAU,EAAG,EAAI,EAAG,EAAI,EAAS,EAAI,IAAK,CACtD,GAAI,GAAY,EAAU,GACtB,EAAa,EAAU,GACvB,EAAS,EAAW,EAAI,EAAU,EAClC,EAAS,EAAW,EAAI,EAAU,EAEtC,GAAI,KAAK,IAAI,GAAU,OAAO,QAAS,CAStC,GAPI,EAAS,GACZ,GAAY,EAAU,GACtB,EAAS,CAAC,EACV,EAAa,EAAU,GACvB,EAAS,CAAC,GAGP,EAAK,EAAI,EAAU,GAAK,EAAK,EAAI,EAAW,EAAG,SAEnD,GAAI,EAAK,IAAM,EAAU,GACxB,GAAI,EAAK,IAAM,EAAU,EAAG,MAAO,OAE7B,CACN,GAAM,IAAW,EAAU,GAAK,EAAI,EAAU,GAAK,EAAU,GAAK,EAAI,EAAU,GAChF,GAAI,KAAa,EAAG,MAAO,GAE3B,GAAI,GAAW,EAAG,SAClB,EAAS,CAAC,OAEL,CAEN,GAAI,EAAK,IAAM,EAAU,EAAG,SAG5B,GAAI,EAAW,GAAK,EAAK,GAAK,EAAK,GAAK,EAAU,GAAK,EAAU,GAAK,EAAK,GAAK,EAAK,GAAK,EAAW,EAAG,MAAO,IAKjH,MAAO,GAGR,GAAM,GAAc,GAAW,YACzB,EAAW,KAAK,SACtB,GAAI,EAAS,SAAW,EAAG,MAAO,GAClC,GAAI,IAAY,GAAM,MAAO,GAAgB,GAC7C,GAAI,GAAO,EAAS,EACd,EAAS,GAEf,GAAI,EAAS,SAAW,EACvB,SAAU,EAAS,GACnB,EAAW,GAAI,IACf,EAAS,OAAS,EAAQ,OAC1B,EAAO,KAAK,GACL,EAGR,GAAI,GAAa,CAAC,EAAY,EAAS,GAAG,aAC1C,EAAa,EAAQ,CAAC,EAAa,EAEnC,GAAM,GAAmB,GACnB,EAAY,GACd,EAAgB,GAChB,EAAU,EACV,EACJ,EAAU,GAAW,OACrB,EAAc,GAAW,GAEzB,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,EAAI,EAAG,IAC3C,EAAU,EAAS,GACnB,EAAY,EAAQ,YACpB,EAAQ,EAAY,GACpB,EAAQ,EAAQ,CAAC,EAAQ,EAEzB,AAAI,EACC,EAAC,GAAc,EAAU,IAAU,IACvC,EAAU,GAAW,CACpB,EAAG,GAAI,IACP,EAAG,GAEJ,EAAU,GAAS,EAAE,OAAS,EAAQ,OAClC,GAAY,IAChB,EAAc,GAAW,IAEzB,EAAc,GAAS,KAAK,CAC3B,EAAG,EACH,EAAG,EAAU,KAMhB,GAAI,CAAC,EAAU,GAAI,MAAO,GAAgB,GAE1C,GAAI,EAAU,OAAS,EAAG,CACzB,GAAI,GAAY,GACV,EAAW,GAEjB,OAAS,GAAO,EAAG,EAAO,EAAU,OAAQ,EAAO,EAAM,IACxD,EAAiB,GAAQ,GAG1B,OAAS,GAAO,EAAG,EAAO,EAAU,OAAQ,EAAO,EAAM,IAAQ,CAChE,GAAM,GAAM,EAAc,GAE1B,OAAS,GAAO,EAAG,EAAO,EAAI,OAAQ,IAAQ,CAC7C,GAAM,GAAK,EAAI,GACX,EAAkB,GAEtB,OAAS,GAAQ,EAAG,EAAQ,EAAU,OAAQ,IAC7C,AAAI,EAAqB,EAAG,EAAG,EAAU,GAAO,IAC3C,KAAS,GAAO,EAAS,KAAK,CACjC,MAAO,EACP,IAAK,EACL,KAAM,IAGP,AAAI,EACH,GAAkB,GAClB,EAAiB,GAAO,KAAK,IAE7B,EAAY,IAKf,AAAI,GACH,EAAiB,GAAM,KAAK,IAM/B,AAAI,EAAS,OAAS,GAEhB,IAAW,GAAgB,IAIlC,GAAI,GAEJ,OAAS,GAAI,EAAG,EAAK,EAAU,OAAQ,EAAI,EAAI,IAAK,CACnD,EAAW,EAAU,GAAG,EACxB,EAAO,KAAK,GACZ,EAAW,EAAc,GAEzB,OAAS,GAAI,EAAG,EAAK,EAAS,OAAQ,EAAI,EAAI,IAC7C,EAAS,MAAM,KAAK,EAAS,GAAG,GAKlC,MAAO,IAKT,GAAM,IAAa,GAAI,cAAa,GAE9B,GAAa,GAAI,YAAW,GAAW,QAE7C,QAAgB,OAER,aAAY,EAAK,CACvB,AAAI,EAAM,OACT,SAAQ,KAAK,uDACb,EAAM,OAQP,GAAW,GAAK,EAChB,GAAM,GAAI,GAAW,GACjB,EAAO,GAAK,GAAK,MAGjB,EAAI,GAAK,GAAK,KAGZ,EAAI,GAAK,GAAK,IAMpB,MAAI,GAAI,IAAY,EAGhB,EAAI,IACP,IAAQ,MAIR,GAAS,IAAK,IAAM,EAAI,IAAM,EAAI,QAC3B,GAKJ,EAAI,IACP,IAAK,KAIL,GAAS,IAAK,IAAM,GAAM,IAAK,IAAM,EAAI,GAClC,GAGR,IAAQ,EAAI,KAAO,GAAK,GAAK,EAI7B,GAAQ,EAAI,EACL,IAKT,GAAM,IAAY,EACZ,GAAa,EACb,GAAW,EACX,GAAa,EACb,GAAe,EACrB,YAA0B,EAAW,CACpC,eAAQ,KAAK,kEACN,EAER,YAAuB,EAAY,GAAI,CACtC,eAAQ,KAAK,+DACb,EAAU,gBAAkB,GAC5B,EAAU,UAAY,EAEtB,EAAU,MAAQ,UAAY,CAC7B,MAAO,GAAU,SAGX,EAER,YAAoB,EAAU,EAAU,CACvC,eAAQ,KAAK,sDACN,GAAI,IAAO,EAAU,GAE7B,YAAkB,EAAU,CAC3B,eAAQ,KAAK,oDACN,GAAI,IAAO,GAEnB,YAAwB,EAAU,EAAU,CAC3C,eAAQ,KAAK,0DACN,GAAI,IAAO,EAAU,GAE7B,YAA4B,EAAY,CACvC,eAAQ,KAAK,sEACN,GAAI,IAAe,GAE3B,YAA+B,EAAY,CAC1C,eAAQ,KAAK,yEACN,GAAI,IAAe,GAE3B,YAAgC,EAAY,CAC3C,eAAQ,KAAK,0EACN,GAAI,IAAe,GAE3B,YAAgB,EAAG,EAAG,EAAG,CACxB,eAAQ,KAAK,6DACN,GAAI,GAAQ,EAAG,EAAG,GAG1B,YAAgC,EAAO,EAAU,CAChD,eAAQ,KAAK,8HACN,GAAI,IAAgB,EAAO,GAAU,SAAS,IAEtD,YAAuB,EAAO,EAAU,CACvC,eAAQ,KAAK,sFACN,GAAI,IAAoB,EAAO,GAEvC,YAAwB,EAAO,EAAU,CACxC,eAAQ,KAAK,wFACN,GAAI,IAAqB,EAAO,GAExC,YAA+B,EAAO,EAAU,CAC/C,eAAQ,KAAK,sGACN,GAAI,IAA4B,EAAO,GAE/C,YAAwB,EAAO,EAAU,CACxC,eAAQ,KAAK,wFACN,GAAI,IAAqB,EAAO,GAExC,YAAyB,EAAO,EAAU,CACzC,eAAQ,KAAK,0FACN,GAAI,IAAsB,EAAO,GAEzC,YAAwB,EAAO,EAAU,CACxC,eAAQ,KAAK,wFACN,GAAI,IAAqB,EAAO,GAExC,YAAyB,EAAO,EAAU,CACzC,eAAQ,KAAK,0FACN,GAAI,IAAsB,EAAO,GAEzC,YAA0B,EAAO,EAAU,CAC1C,eAAQ,KAAK,4FACN,GAAI,IAAuB,EAAO,GAE1C,YAA0B,EAAO,EAAU,CAC1C,eAAQ,KAAK,4FACN,GAAI,IAAuB,EAAO,GAG1C,GAAM,OAAS,SAAU,EAAW,EAAU,CAC7C,eAAQ,IAAI,4CACZ,EAAU,UAAY,OAAO,OAAO,GAAM,WAC1C,EAAU,UAAU,YAAc,EAClC,EAAU,UAAU,SAAW,EACxB,GAIR,GAAK,UAAU,WAAa,SAAU,EAAQ,CAC7C,eAAQ,KAAK,mEACN,KAAK,cAAc,IAI3B,YAAoB,EAAM,CACzB,eAAQ,KAAK,0DACN,GAAI,IAAW,GAEvB,YAA2B,EAAQ,EAAO,CACzC,eAAQ,KAAK,oFACN,GAAI,IAAU,EAAQ,GAE9B,YAAqB,EAAQ,EAAK,CACjC,eAAQ,KAAK,wEACN,GAAI,IAAa,GAAI,IAAc,EAAO,UAAW,GAAI,IAAkB,CACjF,MAAO,IAAQ,OAAY,EAAM,YAInC,GAAW,UAAU,UAAY,UAAY,CAC5C,QAAQ,MAAM,6FAGf,GAAe,UAAU,OAAS,UAAY,CAC7C,QAAQ,MAAM,iEAGf,YAAyB,EAAQ,EAAK,CACrC,eAAQ,KAAK,gFACN,GAAI,IAAa,GAAI,IAAkB,EAAO,UAAW,GAAI,IAAkB,CACrF,MAAO,IAAQ,OAAY,EAAM,YAInC,GAAO,UAAU,eAAiB,SAAU,EAAK,CAChD,eAAQ,KAAK,wGACN,GAAY,eAAe,IAGnC,GAAO,SAAW,CACjB,IAAK,UAAY,CAChB,QAAQ,MAAM,4FAEf,IAAK,UAAY,CAChB,QAAQ,MAAM,6FAGhB,YAAmB,EAAS,CAC3B,eAAQ,KAAK,yDACN,GAAI,IAAW,GAEvB,YAA6B,EAAS,CACrC,eAAQ,KAAK,0EACN,GAAI,IAAkB,GAG9B,GAAK,UAAU,OAAS,SAAU,EAAgB,CACjD,eAAQ,KAAK,2DACN,KAAK,UAAU,IAGvB,GAAK,UAAU,MAAQ,UAAY,CAClC,eAAQ,KAAK,wDACN,KAAK,WAGb,GAAK,UAAU,kBAAoB,SAAU,EAAK,CACjD,eAAQ,KAAK,0EACN,KAAK,cAAc,IAG3B,GAAK,UAAU,KAAO,SAAU,EAAgB,CAC/C,eAAQ,KAAK,uDACN,KAAK,QAAQ,IAIrB,GAAK,UAAU,OAAS,SAAU,EAAgB,CACjD,eAAQ,KAAK,2DACN,KAAK,UAAU,IAGvB,GAAK,UAAU,MAAQ,UAAY,CAClC,eAAQ,KAAK,wDACN,KAAK,WAGb,GAAK,UAAU,kBAAoB,SAAU,EAAK,CACjD,eAAQ,KAAK,0EACN,KAAK,cAAc,IAG3B,GAAK,UAAU,qBAAuB,SAAU,EAAQ,CACvD,eAAQ,KAAK,gFACN,KAAK,iBAAiB,IAG9B,GAAK,UAAU,KAAO,SAAU,EAAgB,CAC/C,eAAQ,KAAK,uDACN,KAAK,QAAQ,IAIrB,GAAO,UAAU,MAAQ,UAAY,CACpC,eAAQ,KAAK,0DACN,KAAK,WAIb,GAAQ,UAAU,cAAgB,SAAU,EAAG,CAC9C,eAAQ,KAAK,mFACN,KAAK,wBAAwB,IAIrC,GAAM,UAAU,OAAS,SAAU,EAAgB,CAClD,eAAQ,KAAK,4DACN,KAAK,UAAU,IAIvB,GAAQ,UAAU,qBAAuB,SAAU,EAAO,EAAQ,CACjE,eAAQ,KAAK,uFACN,KAAK,QAAQ,EAAO,IAG5B,GAAQ,UAAU,gBAAkB,SAAU,EAAQ,CACrD,eAAQ,KAAK,kGACN,EAAO,aAAa,OAG5B,GAAQ,UAAU,qBAAuB,UAAY,CACpD,QAAQ,MAAM,6DAGf,GAAQ,UAAU,uBAAyB,SAAU,EAAW,CAC/D,eAAQ,KAAK,4GACN,EAAU,aAAa,OAG/B,GAAQ,UAAU,oBAAsB,UAAY,CACnD,QAAQ,MAAM,4DAGf,GAAQ,UAAU,WAAa,SAAU,EAAQ,CAChD,eAAQ,KAAK,kGACN,KAAK,KAAK,GAAQ,UAI1B,GAAQ,UAAU,gBAAkB,SAAU,EAAG,CAChD,eAAQ,KAAK,0EACN,KAAK,aAAa,IAG1B,GAAQ,UAAU,qBAAuB,SAAU,EAAO,EAAQ,CACjE,eAAQ,KAAK,uFACN,KAAK,QAAQ,EAAO,IAG5B,GAAQ,UAAU,YAAc,UAAY,CAC3C,eAAQ,KAAK,wGACN,GAAI,KAAU,oBAAoB,KAAM,IAGhD,GAAQ,UAAU,0BAA4B,SAAU,EAAG,CAC1D,eAAQ,KAAK,kGACN,KAAK,2BAA2B,IAGxC,GAAQ,UAAU,gBAAkB,UAAY,CAC/C,QAAQ,KAAK,wDAGd,GAAQ,UAAU,gBAAkB,SAAU,EAAQ,CACrD,eAAQ,KAAK,kGACN,EAAO,aAAa,OAG5B,GAAQ,UAAU,gBAAkB,SAAU,EAAQ,CACrD,eAAQ,KAAK,kGACN,EAAO,aAAa,OAG5B,GAAQ,UAAU,qBAAuB,UAAY,CACpD,QAAQ,MAAM,6DAGf,GAAQ,UAAU,WAAa,SAAU,EAAG,CAC3C,QAAQ,KAAK,oGACb,EAAE,mBAAmB,OAGtB,GAAQ,UAAU,YAAc,SAAU,EAAQ,CACjD,eAAQ,KAAK,8FACN,EAAO,aAAa,OAG5B,GAAQ,UAAU,UAAY,UAAY,CACzC,QAAQ,MAAM,kDAGf,GAAQ,UAAU,QAAU,UAAY,CACvC,QAAQ,MAAM,gDAGf,GAAQ,UAAU,QAAU,UAAY,CACvC,QAAQ,MAAM,gDAGf,GAAQ,UAAU,QAAU,UAAY,CACvC,QAAQ,MAAM,gDAGf,GAAQ,UAAU,aAAe,UAAY,CAC5C,QAAQ,MAAM,qDAGf,GAAQ,UAAU,uBAAyB,SAAU,EAAW,CAC/D,eAAQ,KAAK,4GACN,EAAU,aAAa,OAG/B,GAAQ,UAAU,oBAAsB,UAAY,CACnD,QAAQ,MAAM,4DAGf,GAAQ,UAAU,YAAc,SAAU,EAAM,EAAO,EAAQ,EAAK,EAAM,EAAK,CAC9E,eAAQ,KAAK,wHACN,KAAK,gBAAgB,EAAM,EAAO,EAAK,EAAQ,EAAM,IAG7D,GAAQ,UAAU,WAAa,SAAU,EAAQ,CAChD,eAAQ,KAAK,kGACN,KAAK,KAAK,GAAQ,UAI1B,GAAM,UAAU,mBAAqB,SAAU,EAAM,CACpD,eAAQ,KAAK,6EACN,KAAK,eAAe,IAI5B,GAAW,UAAU,gBAAkB,SAAU,EAAQ,CACxD,eAAQ,KAAK,mHACN,EAAO,gBAAgB,OAG/B,GAAW,UAAU,QAAU,UAAY,CAC1C,eAAQ,KAAK,8DACN,KAAK,UAIb,GAAI,UAAU,kBAAoB,SAAU,EAAK,CAChD,eAAQ,KAAK,yEACN,KAAK,cAAc,IAG3B,GAAI,UAAU,oBAAsB,SAAU,EAAO,CACpD,eAAQ,KAAK,6EACN,KAAK,gBAAgB,IAG7B,GAAI,UAAU,qBAAuB,SAAU,EAAQ,CACtD,eAAQ,KAAK,+EACN,KAAK,iBAAiB,IAI9B,GAAS,UAAU,KAAO,UAAY,CACrC,eAAQ,KAAK,2DACN,KAAK,WAGb,GAAS,UAAU,mBAAqB,SAAU,EAAO,EAAQ,CAChE,eAAQ,KAAK,8EACN,KAAK,aAAa,EAAO,IAGjC,GAAS,UAAU,SAAW,SAAU,EAAQ,CAC/C,eAAQ,KAAK,mEACN,KAAK,YAAY,IAGzB,GAAS,gBAAkB,SAAU,EAAQ,CAC5C,eAAQ,KAAK,+DACN,KAAK,UAAU,IAGvB,GAAS,UAAU,MAAQ,SAAU,EAAQ,CAC5C,eAAQ,KAAK,6DACN,KAAK,SAAS,IAGtB,GAAS,mBAAqB,SAAU,EAAO,EAAG,EAAG,EAAG,EAAQ,CAC/D,eAAQ,KAAK,8EACN,GAAS,aAAa,EAAO,EAAG,EAAG,EAAG,IAG9C,GAAS,OAAS,SAAU,EAAG,EAAG,EAAG,EAAQ,CAC5C,eAAQ,KAAK,+DACN,GAAS,UAAU,EAAG,EAAG,EAAG,IAIpC,GAAM,UAAU,iBAAmB,SAAU,EAAW,CACvD,eAAQ,KAAK,oFACN,KAAK,cAAc,IAG3B,GAAM,UAAU,QAAU,SAAU,EAAS,CAC5C,eAAQ,KAAK,4EACN,GAAI,IAAgB,KAAM,IAGlC,GAAM,UAAU,aAAe,SAAU,EAAS,CACjD,eAAQ,KAAK,+EACN,GAAI,IAAc,KAAM,IAIhC,GAAQ,UAAU,cAAgB,SAAU,EAAW,EAAO,EAAQ,CACrE,eAAQ,KAAK,+EACN,KAAK,oBAAoB,EAAW,EAAO,IAGnD,GAAQ,UAAU,oBAAsB,SAAU,EAAG,CACpD,eAAQ,KAAK,qFACN,KAAK,oBAAoB,IAGjC,GAAQ,UAAU,gBAAkB,UAAY,CAC/C,eAAQ,KAAK,6EACN,KAAK,mBAIb,EAAQ,UAAU,2BAA6B,UAAY,CAC1D,QAAQ,MAAM,8GAGf,EAAQ,UAAU,uBAAyB,UAAY,CACtD,QAAQ,MAAM,sGAGf,EAAQ,UAAU,sBAAwB,SAAU,EAAG,CACtD,eAAQ,KAAK,yFACN,KAAK,sBAAsB,IAGnC,EAAQ,UAAU,mBAAqB,SAAU,EAAG,CACnD,eAAQ,KAAK,mFACN,KAAK,mBAAmB,IAGhC,EAAQ,UAAU,oBAAsB,SAAU,EAAO,EAAQ,CAChE,eAAQ,KAAK,qFACN,KAAK,oBAAoB,EAAQ,IAGzC,EAAQ,UAAU,gBAAkB,SAAU,EAAG,CAChD,eAAQ,KAAK,uFACN,KAAK,aAAa,IAG1B,EAAQ,UAAU,cAAgB,SAAU,EAAW,EAAO,EAAQ,CACrE,eAAQ,KAAK,+EACN,KAAK,oBAAoB,EAAW,EAAO,IAGnD,EAAQ,UAAU,oBAAsB,SAAU,EAAG,CACpD,eAAQ,KAAK,qFACN,KAAK,oBAAoB,IAGjC,EAAQ,UAAU,gBAAkB,UAAY,CAC/C,eAAQ,KAAK,6EACN,KAAK,mBAIb,GAAQ,UAAU,cAAgB,SAAU,EAAW,EAAO,EAAQ,CACrE,eAAQ,KAAK,+EACN,KAAK,oBAAoB,EAAW,EAAO,IAGnD,GAAQ,UAAU,gBAAkB,UAAY,CAC/C,eAAQ,KAAK,6EACN,KAAK,mBAIb,GAAS,UAAU,eAAiB,SAAU,EAAM,CACnD,eAAQ,KAAK,6EACN,KAAK,gBAAgB,IAG7B,GAAS,UAAU,YAAc,UAAY,CAC5C,QAAQ,KAAK,8EAGd,GAAS,UAAU,UAAY,SAAU,EAAU,EAAM,CACxD,eAAQ,KAAK,kGACN,KAAK,gBAAgB,EAAM,IAGnC,GAAS,UAAU,iBAAmB,UAAY,CACjD,QAAQ,MAAM,mHAGf,GAAS,UAAU,YAAc,SAAU,EAAQ,CAClD,eAAQ,KAAK,uEACN,KAAK,aAAa,IAG1B,OAAO,iBAAiB,GAAS,UAAW,CAC3C,WAAY,CACX,IAAK,UAAY,CAChB,eAAQ,KAAK,uDACN,KAAK,SAAS,OAEtB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,uDACb,KAAK,SAAS,MAAQ,IAGxB,cAAe,CACd,IAAK,UAAY,CAChB,QAAQ,KAAK,kGAEd,IAAK,UAAY,CAChB,QAAQ,KAAK,qGAKhB,GAAK,UAAU,YAAc,UAAY,CACxC,QAAQ,MAAM,8LAGf,OAAO,iBAAiB,GAAK,UAAW,CACvC,SAAU,CACT,IAAK,UAAY,CAChB,eAAQ,MAAM,oGACP,IAER,IAAK,UAAY,CAChB,QAAQ,MAAM,4LAKjB,GAAY,UAAU,UAAY,UAAY,CAC7C,QAAQ,MAAM,qDAIf,GAAkB,UAAU,QAAU,SAAU,EAAa,EAAW,CACvE,QAAQ,KAAK,+GACT,IAAc,QAAW,MAAK,UAAY,GAC9C,KAAK,eAAe,IAIrB,OAAO,iBAAiB,GAAM,UAAW,CACxC,WAAY,CACX,IAAK,UAAY,CAChB,QAAQ,KAAK,gDAGf,gBAAiB,CAChB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,4DACb,KAAK,OAAO,OAAO,IAAM,IAG3B,iBAAkB,CACjB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,8DACb,KAAK,OAAO,OAAO,KAAO,IAG5B,kBAAmB,CAClB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,gEACb,KAAK,OAAO,OAAO,MAAQ,IAG7B,gBAAiB,CAChB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,4DACb,KAAK,OAAO,OAAO,IAAM,IAG3B,mBAAoB,CACnB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,kEACb,KAAK,OAAO,OAAO,OAAS,IAG9B,iBAAkB,CACjB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,8DACb,KAAK,OAAO,OAAO,KAAO,IAG5B,gBAAiB,CAChB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,4DACb,KAAK,OAAO,OAAO,IAAM,IAG3B,oBAAqB,CACpB,IAAK,UAAY,CAChB,QAAQ,KAAK,oHAGf,WAAY,CACX,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,iDACb,KAAK,OAAO,KAAO,IAGrB,eAAgB,CACf,IAAK,UAAY,CAChB,QAAQ,KAAK,oDAGf,eAAgB,CACf,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,8DACb,KAAK,OAAO,QAAQ,MAAQ,IAG9B,gBAAiB,CAChB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,gEACb,KAAK,OAAO,QAAQ,OAAS,MAKhC,OAAO,iBAAiB,GAAgB,UAAW,CAClD,OAAQ,CACP,IAAK,UAAY,CAChB,eAAQ,KAAK,2EACN,KAAK,MAAM,SAGpB,QAAS,CACR,IAAK,UAAY,CAChB,eAAQ,KAAK,4EACN,KAAK,QAAU,IAEvB,IAAK,UAAY,CAChB,QAAQ,KAAK,4EACb,KAAK,SAAS,QAKjB,GAAgB,UAAU,WAAa,SAAU,EAAO,CACvD,eAAQ,KAAK,sFACb,KAAK,SAAS,IAAU,GAAO,GAAmB,IAC3C,MAGR,GAAgB,UAAU,iBAAmB,UAAY,CACxD,QAAQ,MAAM,iEACZ,GAAgB,UAAU,SAAW,UAAY,CACnD,QAAQ,MAAM,4HAGf,GAAe,UAAU,SAAW,SAAU,EAAO,CACpD,QAAQ,KAAK,sEACb,KAAK,SAAS,IAGf,GAAe,UAAU,aAAe,SAAU,EAAM,EAAW,CAGlE,MAFA,SAAQ,KAAK,8EAET,CAAE,IAAa,EAAU,oBAAsB,CAAE,IAAa,EAAU,8BAC3E,SAAQ,KAAK,0EACN,KAAK,aAAa,EAAM,GAAI,IAAgB,UAAU,GAAI,UAAU,MAGxE,IAAS,QACZ,SAAQ,KAAK,2EACb,KAAK,SAAS,GACP,MAGD,KAAK,aAAa,EAAM,IAGhC,GAAe,UAAU,YAAc,SAAU,EAAO,EAAO,EAAa,CAC3E,AAAI,IAAgB,QACnB,QAAQ,KAAK,wEAGd,QAAQ,KAAK,4DACb,KAAK,SAAS,EAAO,IAGtB,GAAe,UAAU,eAAiB,UAAY,CACrD,QAAQ,KAAK,kEACb,KAAK,eAGN,GAAe,UAAU,eAAiB,UAAY,CACrD,QAAQ,KAAK,8DAGd,GAAe,UAAU,gBAAkB,SAAU,EAAM,CAC1D,eAAQ,KAAK,oFACN,KAAK,gBAAgB,IAG7B,GAAe,UAAU,YAAc,SAAU,EAAQ,CACxD,eAAQ,KAAK,6EACN,KAAK,aAAa,IAG1B,OAAO,iBAAiB,GAAe,UAAW,CACjD,UAAW,CACV,IAAK,UAAY,CAChB,eAAQ,MAAM,iEACP,KAAK,SAGd,QAAS,CACR,IAAK,UAAY,CAChB,eAAQ,KAAK,+DACN,KAAK,WAKf,GAAkB,UAAU,WAAa,SAAU,EAAO,CACzD,eAAQ,KAAK,wFACb,KAAK,SAAS,IAAU,GAAO,GAAmB,IAC3C,MAGR,GAAkB,UAAU,SAAW,UAAY,CAClD,QAAQ,MAAM,8HAIf,GAAgB,UAAU,UAAY,UAAY,CACjD,QAAQ,MAAM,0DAGf,GAAgB,UAAU,aAAe,UAAY,CACpD,QAAQ,MAAM,6DAGf,GAAgB,UAAU,SAAW,UAAY,CAChD,QAAQ,MAAM,yDAIf,GAAM,UAAU,QAAU,UAAY,CACrC,QAAQ,MAAM,8CAIf,GAAQ,UAAU,SAAW,UAAY,CACxC,eAAQ,KAAK,qFACN,MAIR,OAAO,iBAAiB,GAAS,UAAW,CAC3C,WAAY,CACX,IAAK,UAAY,CAChB,QAAQ,KAAK,kDAEd,IAAK,UAAY,CAChB,QAAQ,KAAK,mDAGf,SAAU,CACT,IAAK,UAAY,CAChB,QAAQ,KAAK,gDAEd,IAAK,UAAY,CAChB,QAAQ,KAAK,iDAGf,QAAS,CACR,IAAK,UAAY,CAChB,eAAQ,KAAK,8CACN,GAAI,MAGb,QAAS,CACR,IAAK,UAAY,CAChB,QAAQ,MAAM,SAAW,KAAK,KAAO,uEAEtC,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,SAAW,KAAK,KAAO,sEACpC,KAAK,YAAc,IAAU,KAG/B,YAAa,CACZ,IAAK,UAAY,CAChB,eAAQ,KAAK,SAAW,KAAK,KAAO,kEAC7B,KAAK,iBAEb,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,SAAW,KAAK,KAAO,kEACpC,KAAK,gBAAkB,IAGzB,eAAgB,CACf,IAAK,UAAY,CAChB,QAAQ,KAAK,SAAW,KAAK,KAAO,wCAErC,IAAK,UAAY,CAChB,QAAQ,KAAK,SAAW,KAAK,KAAO,2CAIvC,OAAO,iBAAiB,GAAe,UAAW,CACjD,YAAa,CACZ,IAAK,UAAY,CAChB,eAAQ,KAAK,iFACN,KAAK,WAAW,aAExB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,kFACb,KAAK,WAAW,YAAc,MAKjC,GAAc,UAAU,YAAc,SAAU,EAAc,EAAO,EAAO,EAAS,CACpF,QAAQ,KAAK,yGACb,KAAK,gBAAgB,GACrB,KAAK,MAAM,EAAO,EAAO,IAG1B,GAAc,UAAU,QAAU,SAAU,EAAU,CACrD,QAAQ,KAAK,+DACb,KAAK,iBAAiB,IAGvB,GAAc,UAAU,uBAAyB,UAAY,CAC5D,eAAQ,KAAK,6EACN,KAAK,mBAGb,GAAc,UAAU,iBAAmB,UAAY,CACtD,eAAQ,KAAK,qFACN,KAAK,aAAa,oBAG1B,GAAc,UAAU,aAAe,UAAY,CAClD,eAAQ,KAAK,wEACN,KAAK,aAAa,WAG1B,GAAc,UAAU,aAAe,UAAY,CAClD,eAAQ,KAAK,+DACN,KAAK,MAAM,SAGnB,GAAc,UAAU,sBAAwB,UAAY,CAC3D,eAAQ,KAAK,gGACN,KAAK,WAAW,IAAI,sBAG5B,GAAc,UAAU,0BAA4B,UAAY,CAC/D,eAAQ,KAAK,yGACN,KAAK,WAAW,IAAI,2BAG5B,GAAc,UAAU,4BAA8B,UAAY,CACjE,eAAQ,KAAK,6GACN,KAAK,WAAW,IAAI,6BAG5B,GAAc,UAAU,8BAAgC,UAAY,CACnE,eAAQ,KAAK,oHACN,KAAK,WAAW,IAAI,kCAG5B,GAAc,UAAU,+BAAiC,UAAY,CACpE,eAAQ,KAAK,sHACN,KAAK,WAAW,IAAI,mCAG5B,GAAc,UAAU,oBAAsB,UAAY,CACzD,eAAQ,KAAK,6FACN,KAAK,WAAW,IAAI,qBAG5B,GAAc,UAAU,uBAAyB,UAAY,CAC5D,eAAQ,KAAK,uFACN,KAAK,aAAa,gBAG1B,GAAc,UAAU,wBAA0B,UAAY,CAC7D,eAAQ,KAAK,uGACN,KAAK,WAAW,IAAI,2BAG5B,GAAc,UAAU,kBAAoB,SAAU,EAAS,CAC9D,QAAQ,KAAK,uEACb,KAAK,eAAe,IAGrB,GAAc,UAAU,aAAe,UAAY,CAClD,QAAQ,KAAK,2DAGd,GAAc,UAAU,aAAe,UAAY,CAClD,QAAQ,KAAK,2DAGd,GAAc,UAAU,cAAgB,UAAY,CACnD,QAAQ,KAAK,4DAGd,GAAc,UAAU,gBAAkB,UAAY,CACrD,QAAQ,KAAK,8DAGd,GAAc,UAAU,eAAiB,UAAY,CACpD,QAAQ,KAAK,6DAGd,GAAc,UAAU,iBAAmB,UAAY,CACtD,QAAQ,KAAK,+DAGd,GAAc,UAAU,WAAa,UAAY,CAChD,QAAQ,KAAK,yDAGd,GAAc,UAAU,aAAe,UAAY,CAClD,QAAQ,KAAK,2DAGd,GAAc,UAAU,eAAiB,UAAY,CACpD,QAAQ,KAAK,6DAGd,GAAc,UAAU,qBAAuB,UAAY,CAC1D,eAAQ,KAAK,gFACN,KAAK,wBAGb,OAAO,iBAAiB,GAAc,UAAW,CAChD,iBAAkB,CACjB,IAAK,UAAY,CAChB,MAAO,MAAK,UAAU,SAEvB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,qEACb,KAAK,UAAU,QAAU,IAG3B,cAAe,CACd,IAAK,UAAY,CAChB,MAAO,MAAK,UAAU,MAEvB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,+DACb,KAAK,UAAU,KAAO,IAGxB,kBAAmB,CAClB,IAAK,UAAY,CAChB,QAAQ,KAAK,+FAGd,IAAK,UAAY,CAChB,QAAQ,KAAK,gGAGf,QAAS,CACR,IAAK,UAAY,CAChB,eAAQ,KAAK,8EACN,KAAK,eAGd,GAAI,CACH,IAAK,UAAY,CAChB,eAAQ,KAAK,oDACN,KAAK,KAGd,WAAY,CACX,IAAK,UAAY,CAChB,eAAQ,KAAK,kHACN,IAER,IAAK,UAAY,CAChB,QAAQ,KAAK,oHAGf,YAAa,CACZ,IAAK,UAAY,CAChB,eAAQ,KAAK,iGACN,IAER,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,iGACb,KAAK,eAAiB,IAAU,GAAO,GAAe,KAGxD,sBAAuB,CACtB,IAAK,UAAY,CAChB,eAAQ,KAAK,iEACN,GAER,IAAK,UAAY,CAChB,QAAQ,KAAK,qEAIhB,OAAO,iBAAiB,GAAe,UAAW,CACjD,SAAU,CACT,IAAK,UAAY,CAChB,QAAQ,KAAK,gGAGd,IAAK,UAAY,CAChB,QAAQ,KAAK,iGAGf,mBAAoB,CACnB,IAAK,UAAY,CAChB,QAAQ,KAAK,0GAGd,IAAK,UAAY,CAChB,QAAQ,KAAK,2GAGf,kBAAmB,CAClB,IAAK,UAAY,CAChB,QAAQ,KAAK,yGAGd,IAAK,UAAY,CAChB,QAAQ,KAAK,4GAIhB,YAA+B,EAAO,EAAQ,EAAS,CACtD,eAAQ,KAAK,wGACN,GAAI,IAAsB,EAAO,GAGzC,OAAO,iBAAiB,GAAkB,UAAW,CACpD,MAAO,CACN,IAAK,UAAY,CAChB,eAAQ,KAAK,0DACN,KAAK,QAAQ,OAErB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,0DACb,KAAK,QAAQ,MAAQ,IAGvB,MAAO,CACN,IAAK,UAAY,CAChB,eAAQ,KAAK,0DACN,KAAK,QAAQ,OAErB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,0DACb,KAAK,QAAQ,MAAQ,IAGvB,UAAW,CACV,IAAK,UAAY,CAChB,eAAQ,KAAK,kEACN,KAAK,QAAQ,WAErB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,kEACb,KAAK,QAAQ,UAAY,IAG3B,UAAW,CACV,IAAK,UAAY,CAChB,eAAQ,KAAK,kEACN,KAAK,QAAQ,WAErB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,kEACb,KAAK,QAAQ,UAAY,IAG3B,WAAY,CACX,IAAK,UAAY,CAChB,eAAQ,KAAK,oEACN,KAAK,QAAQ,YAErB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,oEACb,KAAK,QAAQ,WAAa,IAG5B,OAAQ,CACP,IAAK,UAAY,CAChB,eAAQ,KAAK,4DACN,KAAK,QAAQ,QAErB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,4DACb,KAAK,QAAQ,OAAS,IAGxB,OAAQ,CACP,IAAK,UAAY,CAChB,eAAQ,KAAK,4DACN,KAAK,QAAQ,QAErB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,4DACb,KAAK,QAAQ,OAAS,IAGxB,OAAQ,CACP,IAAK,UAAY,CAChB,eAAQ,KAAK,4DACN,KAAK,QAAQ,QAErB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,4DACb,KAAK,QAAQ,OAAS,IAGxB,KAAM,CACL,IAAK,UAAY,CAChB,eAAQ,KAAK,wDACN,KAAK,QAAQ,MAErB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,wDACb,KAAK,QAAQ,KAAO,IAGtB,gBAAiB,CAChB,IAAK,UAAY,CAChB,eAAQ,KAAK,8EACN,KAAK,QAAQ,iBAErB,IAAK,SAAU,EAAO,CACrB,QAAQ,KAAK,8EACb,KAAK,QAAQ,gBAAkB,MAKlC,GAAM,UAAU,KAAO,SAAU,EAAM,CACtC,QAAQ,KAAK,0EACb,GAAM,GAAQ,KAEd,MADoB,IAAI,MACZ,KAAK,EAAM,SAAU,EAAQ,CACxC,EAAM,UAAU,KAEV,MAGR,GAAc,UAAU,QAAU,UAAY,CAC7C,eAAQ,KAAK,+DACN,KAAK,oBAIb,GAAW,UAAU,cAAgB,SAAU,EAAU,EAAO,CAC/D,eAAQ,KAAK,wDACN,KAAK,OAAO,EAAU,IAG9B,GAAW,UAAU,MAAQ,SAAU,EAAU,EAAO,EAAO,EAAS,CACvE,eAAQ,KAAK,4DACN,KAAK,aAAa,MAAM,EAAU,EAAO,EAAO,IAGxD,GAAW,YAAc,OAEzB,GAAW,YAAc,SAAU,EAAK,EAAS,EAAQ,EAAS,CACjE,QAAQ,KAAK,wFACb,GAAM,GAAS,GAAI,IACnB,EAAO,eAAe,KAAK,aAC3B,GAAM,GAAU,EAAO,KAAK,EAAK,EAAQ,OAAW,GACpD,MAAI,IAAS,GAAQ,QAAU,GACxB,GAGR,GAAW,gBAAkB,SAAU,EAAM,EAAS,EAAQ,EAAS,CACtE,QAAQ,KAAK,gGACb,GAAM,GAAS,GAAI,IACnB,EAAO,eAAe,KAAK,aAC3B,GAAM,GAAU,EAAO,KAAK,EAAM,EAAQ,OAAW,GACrD,MAAI,IAAS,GAAQ,QAAU,GACxB,GAGR,GAAW,sBAAwB,UAAY,CAC9C,QAAQ,MAAM,0FAGf,GAAW,0BAA4B,UAAY,CAClD,QAAQ,MAAM,8FAIf,aAA0B,CACzB,QAAQ,MAAM,yCAGf,aAAsB,CACrB,QAAQ,MAAM,sCAGf,GAAM,IAAa,CAClB,0BAA2B,UAAY,CACtC,QAAQ,MAAM,yEAEf,OAAQ,UAAY,CACnB,QAAQ,MAAM,yEAEf,OAAQ,UAAY,CACnB,QAAQ,MAAM,0EAIhB,aAAqB,CACpB,QAAQ,MAAM,wEAGf,aAA8B,CAC7B,eAAQ,MAAM,6FACP,GAAI,IAEZ,aAAwB,CACvB,eAAQ,MAAM,iFACP,GAAI,IAEZ,aAAsB,CACrB,QAAQ,MAAM,0EAEf,aAAgB,CACf,QAAQ,MAAM,oEAEf,aAAiC,CAChC,QAAQ,MAAM,iDAGf,AAAI,MAAO,qBAAuB,aAEjC,mBAAmB,cAAc,GAAI,aAAY,WAAY,CAC5D,OAAQ,CACP,SAAU,OAOT,MAAO,SAAW,aACrB,CAAI,OAAO,UACV,QAAQ,KAAK,2DAEb,OAAO,UAAY,IAIrB,EAAQ,sBAAwB,GAChC,EAAQ,YAAc,GACtB,EAAQ,aAAe,GACvB,EAAQ,2BAA6B,GACrC,EAAQ,iBAAmB,GAC3B,EAAQ,YAAc,GACtB,EAAQ,YAAc,GACtB,EAAQ,kBAAoB,GAC5B,EAAQ,aAAe,GACvB,EAAQ,kBAAoB,GAC5B,EAAQ,cAAgB,GACxB,EAAQ,gBAAkB,GAC1B,EAAQ,eAAiB,GACzB,EAAQ,qBAAuB,GAC/B,EAAQ,eAAiB,GACzB,EAAQ,SAAW,GACnB,EAAQ,YAAc,GACtB,EAAQ,YAAc,GACtB,EAAQ,MAAQ,GAChB,EAAQ,cAAgB,GACxB,EAAQ,aAAe,GACvB,EAAQ,cAAgB,GACxB,EAAQ,YAAc,GACtB,EAAQ,WAAa,GACrB,EAAQ,WAAa,GACrB,EAAQ,SAAW,GACnB,EAAQ,kBAAoB,GAC5B,EAAQ,eAAiB,GACzB,EAAQ,oBAAsB,GAC9B,EAAQ,KAAO,GACf,EAAQ,qBAAuB,GAC/B,EAAQ,kBAAoB,GAC5B,EAAQ,KAAO,GACf,EAAQ,KAAO,GACf,EAAQ,WAAa,GACrB,EAAQ,kBAAoB,GAC5B,EAAQ,YAAc,GACtB,EAAQ,UAAY,GACpB,EAAQ,gBAAkB,GAC1B,EAAQ,eAAiB,GACzB,EAAQ,qBAAuB,GAC/B,EAAQ,SAAW,GACnB,EAAQ,MAAQ,GAChB,EAAQ,OAAS,GACjB,EAAQ,aAAe,GACvB,EAAQ,eAAiB,GACzB,EAAQ,cAAgB,GACxB,EAAQ,iBAAmB,GAC3B,EAAQ,kBAAoB,GAC5B,EAAQ,qBAAuB,GAC/B,EAAQ,eAAiB,GACzB,EAAQ,oBAAsB,GAC9B,EAAQ,MAAQ,GAChB,EAAQ,MAAQ,GAChB,EAAQ,mBAAqB,GAC7B,EAAQ,kBAAoB,GAC5B,EAAQ,wBAA0B,GAClC,EAAQ,mBAAqB,GAC7B,EAAQ,aAAe,GACvB,EAAQ,WAAa,GACrB,EAAQ,sBAAwB,GAChC,EAAQ,sBAAwB,GAChC,EAAQ,YAAc,GACtB,EAAQ,kBAAoB,GAC5B,EAAQ,wBAA0B,GAClC,EAAQ,wBAA0B,GAClC,EAAQ,iBAAmB,GAC3B,EAAQ,kBAAoB,GAC5B,EAAQ,iBAAmB,GAC3B,EAAQ,aAAe,EACvB,EAAQ,cAAgB,GACxB,EAAQ,kBAAoB,GAC5B,EAAQ,aAAe,GACvB,EAAQ,MAAQ,GAChB,EAAQ,UAAY,GACpB,EAAQ,eAAiB,GACzB,EAAQ,kBAAoB,GAC5B,EAAQ,uBAAyB,GACjC,EAAQ,iBAAmB,GAC3B,EAAQ,YAAc,GACtB,EAAQ,YAAc,GACtB,EAAQ,mBAAqB,GAC7B,EAAQ,cAAgB,GACxB,EAAQ,kBAAoB,GAC5B,EAAQ,UAAY,GACpB,EAAQ,mBAAqB,GAC7B,EAAQ,uBAAyB,GACjC,EAAQ,sBAAwB,GAChC,EAAQ,YAAc,GACtB,EAAQ,mBAAqB,GAC7B,EAAQ,aAAe,GACvB,EAAQ,iBAAmB,GAC3B,EAAQ,uBAAyB,GACjC,EAAQ,oBAAsB,GAC9B,EAAQ,2BAA6B,GACrC,EAAQ,qBAAuB,GAC/B,EAAQ,WAAa,GACrB,EAAQ,eAAiB,GACzB,EAAQ,eAAiB,GACzB,EAAQ,uBAAyB,GACjC,EAAQ,iBAAmB,GAC3B,EAAQ,iBAAmB,GAC3B,EAAQ,iBAAmB,GAC3B,EAAQ,cAAgB,GACxB,EAAQ,YAAc,GACtB,EAAQ,aAAe,GACvB,EAAQ,WAAa,GACrB,EAAQ,iBAAmB,GAC3B,EAAQ,iCAAmC,GAC3C,EAAQ,iCAAmC,GAC3C,EAAQ,MAAQ,GAChB,EAAQ,gBAAkB,GAC1B,EAAQ,sBAAwB,GAChC,EAAQ,gBAAkB,GAC1B,EAAQ,WAAa,GACrB,EAAQ,WAAa,GACrB,EAAQ,YAAc,GACtB,EAAQ,uBAAyB,GACjC,EAAQ,iBAAmB,GAC3B,EAAQ,uBAAyB,GACjC,EAAQ,iBAAmB,GAC3B,EAAQ,uBAAyB,GACjC,EAAQ,UAAY,EACpB,EAAQ,IAAM,GACd,EAAQ,QAAU,GAClB,EAAQ,KAAO,GACf,EAAQ,WAAa,GACrB,EAAQ,UAAY,GACpB,EAAQ,QAAU,GAClB,EAAQ,kBAAoB,GAC5B,EAAQ,MAAQ,GAChB,EAAQ,MAAQ,GAChB,EAAQ,cAAgB,GACxB,EAAQ,aAAe,GACvB,EAAQ,kBAAoB,GAC5B,EAAQ,wBAA0B,GAClC,EAAQ,mBAAqB,GAC7B,EAAQ,WAAa,GACrB,EAAQ,MAAQ,GAChB,EAAQ,cAAgB,EACxB,EAAQ,gBAAkB,GAC1B,EAAQ,sBAAwB,GAChC,EAAQ,qBAAuB,GAC/B,EAAQ,0BAA4B,GACpC,EAAQ,oBAAsB,GAC9B,EAAQ,kBAAoB,GAC5B,EAAQ,YAAc,GACtB,EAAQ,WAAa,GACrB,EAAQ,sBAAwB,GAChC,EAAQ,mBAAqB,GAC7B,EAAQ,uBAAyB,GACjC,EAAQ,yBAA2B,GACnC,EAAQ,wBAA0B,GAClC,EAAQ,2BAA6B,GACrC,EAAQ,cAAgB,GACxB,EAAQ,eAAiB,GACzB,EAAQ,qBAAuB,GAC/B,EAAQ,eAAiB,GACzB,EAAQ,qBAAuB,GAC/B,EAAQ,cAAgB,GACxB,EAAQ,oBAAsB,GAC9B,EAAQ,QAAU,EAClB,EAAQ,kBAAoB,GAC5B,EAAQ,2BAA6B,GACrC,EAAQ,YAAc,GACtB,EAAQ,oBAAsB,GAC9B,EAAQ,kBAAoB,GAC5B,EAAQ,kBAAoB,GAC5B,EAAQ,gBAAkB,GAC1B,EAAQ,WAAa,GACrB,EAAQ,cAAgB,GACxB,EAAQ,cAAgB,GACxB,EAAQ,IAAM,GACd,EAAQ,oBAAsB,GAC9B,EAAQ,cAAgB,GACxB,EAAQ,OAAS,GACjB,EAAQ,UAAY,GACpB,EAAQ,UAAY,GACpB,EAAQ,eAAiB,GACzB,EAAQ,qBAAuB,GAC/B,EAAQ,gBAAkB,GAC1B,EAAQ,MAAQ,GAChB,EAAQ,WAAa,GACrB,EAAQ,KAAO,GACf,EAAQ,MAAQ,GAChB,EAAQ,kBAAoB,GAC5B,EAAQ,UAAY,GACpB,EAAQ,WAAa,GACrB,EAAQ,mBAAqB,GAC7B,EAAQ,SAAW,GACnB,EAAQ,WAAa,GACrB,EAAQ,aAAe,GACvB,EAAQ,UAAY,GACpB,EAAQ,eAAiB,GACzB,EAAQ,aAAe,GACvB,EAAQ,kBAAoB,GAC5B,EAAQ,yBAA2B,GACnC,EAAQ,0BAA4B,GACpC,EAAQ,yBAA2B,GACnC,EAAQ,0BAA4B,GACpC,EAAQ,kBAAoB,GAC5B,EAAQ,OAAS,GACjB,EAAQ,YAAc,GACtB,EAAQ,eAAiB,GACzB,EAAQ,eAAiB,GACzB,EAAQ,SAAW,GACnB,EAAQ,aAAe,GACvB,EAAQ,WAAa,GACrB,EAAQ,qBAAuB,GAC/B,EAAQ,gBAAkB,GAC1B,EAAQ,MAAQ,GAChB,EAAQ,SAAW,GACnB,EAAQ,eAAiB,GACzB,EAAQ,KAAO,GACf,EAAQ,UAAY,GACpB,EAAQ,QAAU,GAClB,EAAQ,QAAU,GAClB,EAAQ,YAAc,GACtB,EAAQ,KAAO,GACf,EAAQ,kBAAoB,GAC5B,EAAQ,kBAAoB,GAC5B,EAAQ,qBAAuB,GAC/B,EAAQ,iBAAmB,GAC3B,EAAQ,oBAAsB,GAC9B,EAAQ,mBAAqB,GAC7B,EAAQ,mBAAqB,GAC7B,EAAQ,kBAAoB,GAC5B,EAAQ,qBAAuB,GAC/B,EAAQ,qBAAuB,GAC/B,EAAQ,iBAAmB,GAC3B,EAAQ,YAAc,EACtB,EAAQ,uBAAyB,GACjC,EAAQ,aAAe,GACvB,EAAQ,cAAgB,GACxB,EAAQ,iBAAmB,GAC3B,EAAQ,kBAAoB,GAC5B,EAAQ,cAAgB,GACxB,EAAQ,0BAA4B,GACpC,EAAQ,2BAA6B,GACrC,EAAQ,0BAA4B,GACpC,EAAQ,2BAA6B,GACrC,EAAQ,WAAa,GACrB,EAAQ,iBAAmB,GAC3B,EAAQ,WAAa,GACrB,EAAQ,SAAW,GACnB,EAAQ,cAAgB,GACxB,EAAQ,yBAA2B,GACnC,EAAQ,eAAiB,GACzB,EAAQ,cAAgB,GACxB,EAAQ,oBAAsB,GAC9B,EAAQ,oBAAsB,GAC9B,EAAQ,SAAW,GACnB,EAAQ,aAAe,GACvB,EAAQ,qBAAuB,GAC/B,EAAQ,yBAA2B,GACnC,EAAQ,mBAAqB,GAC7B,EAAQ,UAAY,GACpB,EAAQ,uBAAyB,GACjC,EAAQ,uBAAyB,GACjC,EAAQ,uBAAyB,GACjC,EAAQ,uBAAyB,GACjC,EAAQ,mBAAqB,GAC7B,EAAQ,aAAe,GACvB,EAAQ,iBAAmB,GAC3B,EAAQ,eAAiB,GACzB,EAAQ,mBAAqB,GAC7B,EAAQ,SAAW,GACnB,EAAQ,sBAAwB,GAChC,EAAQ,eAAiB,GACzB,EAAQ,uBAAyB,GACjC,EAAQ,KAAO,GACf,EAAQ,kBAAoB,GAC5B,EAAQ,MAAQ,GAChB,EAAQ,oBAAsB,GAC9B,EAAQ,cAAgB,GACxB,EAAQ,YAAc,GACtB,EAAQ,WAAa,GACrB,EAAQ,mBAAqB,GAC7B,EAAQ,WAAa,GACrB,EAAQ,iBAAmB,GAC3B,EAAQ,OAAS,GACjB,EAAQ,eAAiB,GACzB,EAAQ,gBAAkB,GAC1B,EAAQ,yBAA2B,GACnC,EAAQ,mBAAqB,GAC7B,EAAQ,gBAAkB,GAC1B,EAAQ,gBAAkB,GAC1B,EAAQ,cAAgB,GACxB,EAAQ,qBAAuB,GAC/B,EAAQ,sBAAwB,GAChC,EAAQ,WAAa,GACrB,EAAQ,wBAA0B,GAClC,EAAQ,4BAA8B,GACtC,EAAQ,SAAW,GACnB,EAAQ,iBAAmB,GAC3B,EAAQ,WAAa,GACrB,EAAQ,kBAAoB,GAC5B,EAAQ,uBAAyB,GACjC,EAAQ,sBAAwB,GAChC,EAAQ,sBAAwB,GAChC,EAAQ,sBAAwB,GAChC,EAAQ,uBAAyB,GACjC,EAAQ,uBAAyB,GACjC,EAAQ,qBAAuB,GAC/B,EAAQ,qBAAuB,GAC/B,EAAQ,qBAAuB,GAC/B,EAAQ,qBAAuB,GAC/B,EAAQ,qBAAuB,GAC/B,EAAQ,qBAAuB,GAC/B,EAAQ,qBAAuB,GAC/B,EAAQ,qBAAuB,GAC/B,EAAQ,iBAAmB,GAC3B,EAAQ,qBAAuB,GAC/B,EAAQ,yBAA2B,GACnC,EAAQ,yBAA2B,GACnC,EAAQ,sBAAwB,EAChC,EAAQ,sBAAwB,EAChC,EAAQ,sBAAwB,EAChC,EAAQ,aAAe,GACvB,EAAQ,aAAe,GACvB,EAAQ,WAAa,GACrB,EAAQ,UAAY,GACpB,EAAQ,iBAAmB,GAC3B,EAAQ,eAAiB,GACzB,EAAQ,cAAgB,GACxB,EAAQ,gBAAkB,GAC1B,EAAQ,gBAAkB,EAC1B,EAAQ,wBAA0B,GAClC,EAAQ,wBAA0B,GAClC,EAAQ,qBAAuB,EAC/B,EAAQ,SAAW,GACnB,EAAQ,gBAAkB,GAC1B,EAAQ,kBAAoB,GAC5B,EAAQ,IAAM,GACd,EAAQ,UAAY,GACpB,EAAQ,cAAgB,GACxB,EAAQ,UAAY,GACpB,EAAQ,iBAAmB,GAC3B,EAAQ,oBAAsB,GAC9B,EAAQ,eAAiB,GACzB,EAAQ,iBAAmB,GAC3B,EAAQ,wBAA0B,GAClC,EAAQ,mBAAqB,GAC7B,EAAQ,aAAe,GACvB,EAAQ,+BAAiC,GACzC,EAAQ,8BAAgC,GACxC,EAAQ,8BAAgC,GACxC,EAAQ,8BAAgC,GACxC,EAAQ,+BAAiC,GACzC,EAAQ,+BAAiC,GACzC,EAAQ,6BAA+B,GACvC,EAAQ,6BAA+B,GACvC,EAAQ,6BAA+B,GACvC,EAAQ,6BAA+B,GACvC,EAAQ,6BAA+B,GACvC,EAAQ,6BAA+B,GACvC,EAAQ,6BAA+B,GACvC,EAAQ,6BAA+B,GACvC,EAAQ,MAAQ,GAChB,EAAQ,WAAa,GACrB,EAAQ,YAAc,GACtB,EAAQ,UAAY,GACpB,EAAQ,eAAiB,GACzB,EAAQ,eAAiB,GACzB,EAAQ,MAAQ,GAChB,EAAQ,oBAAsB,GAC9B,EAAQ,cAAgB,GACxB,EAAQ,UAAY,GACpB,EAAQ,WAAa,GACrB,EAAQ,UAAY,GACpB,EAAQ,SAAW,GACnB,EAAQ,eAAiB,GACzB,EAAQ,YAAc,GACtB,EAAQ,cAAgB,GACxB,EAAQ,OAAS,GACjB,EAAQ,qBAAuB,GAC/B,EAAQ,eAAiB,GACzB,EAAQ,UAAY,GACpB,EAAQ,oBAAsB,GAC9B,EAAQ,YAAc,GACtB,EAAQ,UAAY,GACpB,EAAQ,gBAAkB,GAC1B,EAAQ,OAAS,GACjB,EAAQ,eAAiB,GACzB,EAAQ,eAAiB,GACzB,EAAQ,uBAAyB,GACjC,EAAQ,eAAiB,GACzB,EAAQ,gBAAkB,GAC1B,EAAQ,gBAAkB,GAC1B,EAAQ,gBAAkB,GAC1B,EAAQ,aAAe,GACvB,EAAQ,gBAAkB,GAC1B,EAAQ,gBAAkB,GAC1B,EAAQ,gBAAkB,GAC1B,EAAQ,oBAAsB,GAC9B,EAAQ,iBAAmB,GAC3B,EAAQ,oBAAsB,GAC9B,EAAQ,MAAQ,GAChB,EAAQ,sBAAwB,GAChC,EAAQ,0BAA4B,GACpC,EAAQ,oBAAsB,GAC9B,EAAQ,aAAe,GACvB,EAAQ,QAAU,GAClB,EAAQ,cAAgB,GACxB,EAAQ,oBAAsB,GAC9B,EAAQ,cAAgB,GACxB,EAAQ,wBAA0B,GAClC,EAAQ,kBAAoB,GAC5B,EAAQ,SAAW,GACnB,EAAQ,oBAAsB,GAC9B,EAAQ,sBAAwB,GAChC,EAAQ,kBAAoB,GAC5B,EAAQ,mBAAqB,GAC7B,EAAQ,aAAe,GACvB,EAAQ,UAAY,GACpB,EAAQ,gBAAkB,GAC1B,EAAQ,sBAAwB,GAChC,EAAQ,gBAAkB,GAC1B,EAAQ,sBAAwB,GAChC,EAAQ,eAAiB,GACzB,EAAQ,qBAAuB,GAC/B,EAAQ,sBAAwB,GAChC,EAAQ,4BAA8B,GACtC,EAAQ,QAAU,GAClB,EAAQ,YAAc,GACtB,EAAQ,cAAgB,GACxB,EAAQ,iBAAmB,GAC3B,EAAQ,mBAAqB,GAC7B,EAAQ,gBAAkB,EAC1B,EAAQ,sBAAwB,EAChC,EAAQ,sBAAwB,EAChC,EAAQ,qBAAuB,GAC/B,EAAQ,kBAAoB,GAC5B,EAAQ,aAAe,GACvB,EAAQ,QAAU,GAClB,EAAQ,QAAU,EAClB,EAAQ,QAAU,GAClB,EAAQ,oBAAsB,GAC9B,EAAQ,OAAS,GACjB,EAAQ,aAAe,GACvB,EAAQ,aAAe,GACvB,EAAQ,eAAiB,GACzB,EAAQ,sBAAwB,GAChC,EAAQ,2BAA6B,GACrC,EAAQ,6BAA+B,GACvC,EAAQ,kBAAoB,GAC5B,EAAQ,sBAAwB,GAChC,EAAQ,cAAgB,GACxB,EAAQ,WAAa,GACrB,EAAQ,kBAAoB,GAC5B,EAAQ,gBAAkB,GAC1B,EAAQ,iBAAmB,GAC3B,EAAQ,UAAY,GACpB,EAAQ,oBAAsB,GAC9B,EAAQ,WAAa,GACrB,EAAQ,gBAAkB,GAC1B,EAAQ,cAAgB,GACxB,EAAQ,aAAe,GAEvB,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,SCl/mCvD,4CAiBA,GAjBA,cAYO,SAKP,gBAAyB,qBAAkB,CAE1C,YAAa,GAAU,CAEtB,MAAO,IAEP,KAAK,KAAO,iBAMb,MAAO,GAAS,CAEf,GAGC,IAAsB,GAGtB,GAAkB,EAClB,GAAmB,EACnB,EAAoB,EACpB,GAAoB,EACpB,GAAa,SAAW,GAAiB,GAAM,CAE9C,OAAS,QAEH,IAAiB,QAAQ,MAAO,gCAAoC,KAAO,KAC/E,UACI,IAAkB,QAAQ,MAAO,iCAAqC,KAAO,KACjF,UACI,GAAmB,QAAQ,MAAO,qCAAyC,KAAO,KACtF,kBAEI,IAAmB,QAAQ,MAAO,4BAAgC,KAAO,KAI/E,MAAO,KAaR,GAAyB,EACzB,GAAoB,EACpB,GAAwB,EAExB,GAAU;AAAA,EAEV,GAAQ,SAAW,GAAQ,GAAW,GAAU,CAE/C,GAAM,IAAY,IAElB,GAAc,IAAY,KAC1B,GAAI,IAAI,GAAO,IACd,GAAI,GAAK,GAAM,EAAG,EAAI,GACtB,GAAQ,OAAO,aAAa,MAAO,KAAM,GAAI,aAAa,GAAO,SAAU,GAAG,GAAI,MAEnF,KAAU,EAAM,IAAI,GAAM,QAAS,MAAmB,GAAM,IAAiB,GAAI,GAAO,YAEvF,GAAK,GAAO,IAAO,GAAM,OACzB,IAAK,GACL,IAAS,OAAO,aAAa,MAAO,KAAM,GAAI,aAAa,GAAO,SAAU,GAAG,GAAI,MAIpF,MAAK,GAAM,GAQL,CAAU,KAAV,IAAoB,IAAO,KAAO,GAAM,GAAI,GAC1C,EAAI,GAAM,MAAO,EAAG,KAIrB,IAKR,GAAkB,SAAW,GAAS,CAIrC,GAAM,IAAiB,YACtB,GAAW,oCACX,GAAc,uCACd,GAAY,uBACZ,GAAgB,oCAGhB,GAAS,CAER,MAAO,EAEP,OAAQ,GAER,SAAU,GAEV,YAAa,OAEb,OAAQ,GAER,MAAO,EAEP,SAAU,EAEV,MAAO,EAAG,OAAQ,GAIhB,EAAM,GAEV,GAAK,GAAO,KAAO,GAAO,YAAc,CAAI,GAAO,GAAO,KAEzD,MAAO,IAAY,GAAiB,mBAKrC,GAAK,CAAI,IAAQ,EAAK,MAAO,KAE5B,MAAO,IAAY,EAAmB,qBAQvC,IAJA,GAAO,OAAS,GAChB,GAAO,YAAc,GAAO,GAC5B,GAAO,QAAU,EAAO;AAAA,EAIvB,EAAO,GAAO,IACT,AAAU,IAAV,IAHS,CAMd,GAFA,GAAO,QAAU,EAAO;AAAA,EAEnB,AAAQ,EAAK,OAAQ,KAArB,IAA2B,CAE/B,GAAO,UAAY,EAAO;AAAA,EAC1B,SA+BD,GA3BK,IAAQ,EAAK,MAAO,MAExB,IAAO,MAAQ,WAAY,GAAO,GAAK,KAInC,IAAQ,EAAK,MAAO,MAExB,IAAO,SAAW,WAAY,GAAO,GAAK,KAItC,IAAQ,EAAK,MAAO,MAExB,IAAO,OAAS,GAChB,GAAO,OAAS,GAAO,IAInB,IAAQ,EAAK,MAAO,MAExB,IAAO,OAAS,GAChB,GAAO,OAAS,SAAU,GAAO,GAAK,IACtC,GAAO,MAAQ,SAAU,GAAO,GAAK,KAI/B,GAAO,MAAQ,IAAyB,GAAO,MAAQ,GAA0B,MAIzF,MAAS,IAAO,MAAQ,GAMf,GAAO,MAAQ,GAMjB,GAJC,GAAY,EAAmB,gCAN/B,GAAY,EAAmB,6BAcxC,GAAsB,SAAW,GAAQ,GAAG,GAAI,CAE/C,GAAM,IAAiB,GAEvB,GAEK,GAAiB,GAAS,GAAiB,OAE3C,AAAM,GAAQ,KAAd,GAAyB,AAAM,GAAQ,KAAd,GAAyB,GAAQ,GAAM,IAIpE,MAAO,IAAI,YAAY,IAIxB,GAAK,KAAuB,IAAQ,IAAO,EAAM,GAAQ,IAExD,MAAO,IAAY,EAAmB,wBAIvC,GAAM,IAAY,GAAI,YAAY,EAAI,GAAI,IAE1C,GAAK,CAAE,GAAU,OAEhB,MAAO,IAAY,GAAmB,mCAIvC,GAAI,IAAS,EAAG,GAAM,EAEhB,EAAU,EAAI,GACd,GAAY,GAAI,YAAY,GAC5B,GAAkB,GAAI,YAAY,GACpC,GAAgB,GAGpB,KAAU,GAAgB,GAAS,GAAM,GAAO,YAAe,CAE9D,GAAK,GAAM,EAAI,GAAO,WAErB,MAAO,IAAY,IASpB,GALA,GAAW,GAAM,GAAQ,MACzB,GAAW,GAAM,GAAQ,MACzB,GAAW,GAAM,GAAQ,MACzB,GAAW,GAAM,GAAQ,MAElB,AAAK,GAAW,IAAhB,GAA2B,AAAK,GAAW,IAAhB,GAA+B,IAAW,IAAO,EAAM,GAAW,KAAS,GAE5G,MAAO,IAAY,EAAmB,4BAMvC,GAAI,IAAM,EAAG,GAEb,KAAU,GAAM,GAAe,GAAM,GAAO,YAAe,CAE1D,GAAQ,GAAQ,MAChB,GAAM,IAAe,GAAQ,IAG7B,GAFK,IAAe,KAAS,KAEtB,AAAM,KAAN,GAAmB,GAAM,GAAQ,EAEvC,MAAO,IAAY,EAAmB,qBAIvC,GAAK,GAAe,CAGnB,GAAM,IAAY,GAAQ,MAC1B,OAAU,IAAI,EAAG,GAAI,GAAO,KAE3B,GAAiB,MAAW,OAQ7B,IAAgB,IAAK,GAAO,SAAU,GAAK,GAAM,IAAS,IAC1D,IAAO,GAAO,IAAO,GASvB,GAAM,IAAI,GACV,OAAU,IAAI,EAAG,GAAI,GAAG,KAAO,CAE9B,GAAI,IAAM,EACV,GAAW,IAAW,GAAiB,GAAI,IAC3C,IAAO,GACP,GAAW,GAAS,GAAM,GAAiB,GAAI,IAC/C,IAAO,GACP,GAAW,GAAS,GAAM,GAAiB,GAAI,IAC/C,IAAO,GACP,GAAW,GAAS,GAAM,GAAiB,GAAI,IAC/C,IAAU,EAIX,KAID,MAAO,KAIH,GAAqB,SAAW,GAAa,GAAc,GAAW,GAAa,CAExF,GAAM,IAAI,GAAa,GAAe,GAChC,GAAQ,KAAK,IAAK,EAAK,GAAI,KAAU,IAE3C,GAAW,GAAa,GAAM,GAAa,GAAe,GAAM,GAChE,GAAW,GAAa,GAAM,GAAa,GAAe,GAAM,GAChE,GAAW,GAAa,GAAM,GAAa,GAAe,GAAM,IAI3D,GAAoB,SAAW,GAAa,GAAc,GAAW,GAAa,CAEvF,GAAM,IAAI,GAAa,GAAe,GAChC,GAAQ,KAAK,IAAK,EAAK,GAAI,KAAU,IAG3C,GAAW,GAAa,GAAM,aAAU,YAAa,KAAK,IAAK,GAAa,GAAe,GAAM,GAAO,QACxG,GAAW,GAAa,GAAM,aAAU,YAAa,KAAK,IAAK,GAAa,GAAe,GAAM,GAAO,QACxG,GAAW,GAAa,GAAM,aAAU,YAAa,KAAK,IAAK,GAAa,GAAe,GAAM,GAAO,SAInG,GAAY,GAAI,YAAY,IAClC,GAAU,IAAM,EAChB,GAAM,IAAmB,GAAiB,IAE1C,GAAK,KAAwB,GAAmB,CAE/C,GAAM,IAAI,GAAiB,MAC1B,GAAI,GAAiB,OACrB,GAAkB,GAAqB,GAAU,SAAU,GAAU,KAAO,GAAG,IAEhF,GAAK,KAAwB,GAAkB,CAE9C,GAAI,IAAM,GAAQ,GACd,GAEJ,OAAS,KAAK,UAER,qBAEJ,GAAO,GACP,GAAS,cACT,GAAO,oBACP,UAEI,cAEJ,GAAc,GAAgB,OAAS,EACvC,GAAM,GAAa,GAAI,cAAc,GAAc,GAEnD,OAAU,IAAI,EAAG,GAAI,GAAa,KAEjC,GAAoB,GAAiB,GAAI,EAAG,EAAY,GAAI,GAI7D,GAAO,EACP,GAAS,aACT,GAAO,aACP,UAEI,kBAEJ,GAAc,GAAgB,OAAS,EACvC,GAAM,IAAY,GAAI,aAAa,GAAc,GAEjD,OAAU,IAAI,EAAG,GAAI,GAAa,KAEjC,GAAmB,GAAiB,GAAI,EAAG,GAAW,GAAI,GAI3D,GAAO,GACP,GAAS,aACT,GAAO,iBACP,cAIA,QAAQ,MAAO,uCAAwC,KAAK,MAC5D,MAIF,MAAO,CACN,MAAO,GAAG,OAAQ,GAClB,KAAM,GACN,OAAQ,GAAiB,OACzB,MAAO,GAAiB,MACxB,SAAU,GAAiB,SAC3B,OAAQ,GACR,KAAM,KAOT,MAAO,MAIR,YAAa,GAAQ,CAEpB,YAAK,KAAO,GACL,KAIR,KAAM,GAAK,GAAQ,GAAY,GAAU,CAExC,WAAyB,GAAS,GAAU,CAE3C,OAAS,GAAQ,UAEX,qBAEJ,GAAQ,SAAW,gBACnB,GAAQ,UAAY,iBACpB,GAAQ,UAAY,iBACpB,GAAQ,gBAAkB,GAC1B,GAAQ,MAAQ,GAChB,UAEI,cAEJ,GAAQ,SAAW,kBACnB,GAAQ,UAAY,gBACpB,GAAQ,UAAY,gBACpB,GAAQ,gBAAkB,GAC1B,GAAQ,MAAQ,GAChB,UAEI,kBAEJ,GAAQ,SAAW,kBACnB,GAAQ,UAAY,gBACpB,GAAQ,UAAY,gBACpB,GAAQ,gBAAkB,GAC1B,GAAQ,MAAQ,GAChB,MAIF,AAAK,IAAS,GAAQ,GAAS,IAIhC,MAAO,OAAM,KAAM,GAAK,EAAgB,GAAY,QC1etD,eAAC,UAAU,EAAS,CAAE,aACtB,QAAyB,CACxB,YAAY,EAAS,EAAO,CAC3B,KAAK,gBAAkB,KACvB,KAAK,SAAW,EAChB,KAAK,MAAQ,EACb,KAAK,eAAiB,GAAI,IAAuB,SAAS,GAC1D,KAAK,eAAe,WAAa,GACjC,KAAK,eAAe,OAAO,KAAO,MAClC,KAAK,eAAe,OAAO,OAAS,EACpC,KAAK,eAAe,OAAO,OAAO,GAClC,EAAM,IAAI,KAAK,gBACf,KAAK,mBAAqB,GAAI,IAAmB,EAAE,GACnD,EAAM,IAAI,KAAK,oBAEhB,sBAAsB,EAAK,EAAS,EAAS,CAC5C,GAAG,GAAQ,KAAK,gBACf,OAED,AAAG,GAAY,MACd,GAAW,SAAS,GAAG,IAGrB,GAAW,MACb,GAAU,SAAS,GAAG,IAGvB,KAAK,gBAAkB,EACvB,GAAI,GAAS,KACb,GAAG,GAAQ,KAAM,CAChB,GAAI,IAAM,GAAa,UAAU,GACjC,OAAO,GAAI,mBACN,MACJ,GAAI,IAAe,GAAI,IAAkB,KAAK,UAC9C,GAAa,+BACb,GAAI,MAAmD,YAAY,GAAsB,WAAW,KAAK,EAAK,SAAS,GAAQ,GAAS,CACvI,AAAG,EAAO,oBAAsB,MAC/B,EAAO,mBAAmB,UAE3B,EAAO,mBAAqB,GAAa,oBAAoB,IAC7D,GAAa,UACb,EAAO,mBAAmB,QAAQ,WAAa,EAC/C,EAAO,kBAAkB,EAAO,mBAAmB,SACnD,EAAS,EAAO,mBAAmB,WAEpC,UACI,MACJ,GAAI,MAAsB,KAAK,EAAK,SAAS,GAAS,CACrD,GAAQ,UAAY,GAAoB,cACxC,GAAQ,UAAY,GAAoB,cACxC,GAAQ,KAAO,GAAsB,iBACrC,GAAQ,OAAS,GAAkB,WACnC,GAAQ,SAAW,GAAsB,aACzC,GAAQ,QAAU,GAAc,wBAChC,GAAQ,gBAAkB,GAC1B,GAAQ,MAAQ,GAChB,GAAQ,WAAa,EACrB,EAAO,kBAAkB,IACzB,EAAS,MAEV,cAEA,GAAI,IAAQ,iCAAmC,GAC/C,EAAQ,QAAQ,MAAM,IACtB,EAAQ,MAIX,kBAAkB,EAAS,CAC1B,AAAG,KAAK,MAAM,aAAe,MAC5B,KAAK,MAAM,YAAY,UAExB,KAAK,MAAM,YAAc,EACzB,KAAK,wBAAwB,EAAQ,YAEtC,wBAAwB,EAAY,CACnC,GAAI,GACJ,GAAG,GAAc,KAAM,CACtB,GAAI,GAAW,GAAa,iBAAiB,GAC7C,EAAU,EAAY,OAAO,EAAS,EAAE,EAAS,QAAQ,MAAM,kBAE/D,GAAU,KAEX,GAAI,GACJ,GAAG,GAAW,KACb,EAAqB,CAAE,YAAc,GAAI,IAAiB,SAAW,SAAU,aAAe,EAAG,gBAAkB,EAAG,QAAU,EAAG,SAAW,OAE9I,QAAO,OACF,eACJ,EAAqB,CAAE,YAAc,GAAI,IAAc,IAAK,IAAK,IAAM,YAAa,SAAW,SAAU,aAAe,EAAI,gBAAkB,GAAI,QAAU,EAAG,SAAW,IAC1K,UACI,wBACJ,EAAqB,CAAE,YAAc,GAAI,IAAc,IAAI,GAAG,KAAK,YAAa,SAAW,SAAU,aAAe,EAAG,gBAAkB,GAAI,QAAU,EAAG,SAAW,GACrK,UACI,kBACJ,EAAqB,CAAE,YAAc,GAAI,IAAc,IAAK,IAAK,IAAK,YAAa,SAAW,SAAU,aAAe,EAAK,gBAAkB,EAAG,QAAU,EAAG,SAAW,IACzK,UACI,kBACJ,EAAqB,CAAE,YAAc,GAAI,IAAc,GAAI,IAAK,MAAO,YAAa,SAAW,SAAU,aAAe,IAAK,gBAAkB,GAAI,QAAU,EAAG,SAAW,IAC3K,UACI,0BACJ,EAAqB,CAAE,YAAc,GAAI,IAAc,KAAK,IAAK,KAAM,YAAa,SAAW,SAAU,aAAe,EAAK,gBAAkB,EAAG,QAAU,EAAG,SAAW,GAC1K,UACI,mBACJ,EAAqB,CAAE,YAAc,GAAI,IAAc,IAAK,IAAK,MAAO,YAAa,SAAW,SAAU,aAAe,GAAK,gBAAkB,EAAG,QAAU,EAAG,SAAW,KAC3K,UACI,wBACJ,EAAqB,CAAE,YAAc,GAAI,IAAc,KAAK,IAAK,MAAM,YAAa,SAAW,SAAU,aAAe,EAAG,gBAAkB,GAAI,QAAU,EAAG,SAAW,GACzK,UACI,mBACJ,EAAqB,CAAE,YAAc,GAAI,IAAc,IAAI,IAAK,KAAM,YAAa,SAAW,SAAU,aAAe,EAAG,gBAAkB,GAAI,QAAU,GAAI,SAAW,IACzK,UACI,oBACJ,EAAqB,CAAE,YAAc,GAAI,IAAc,IAAK,GAAI,MAAO,YAAa,SAAW,SAAU,aAAe,EAAK,gBAAkB,EAAG,QAAU,EAAG,SAAW,GAC1K,UACI,oBACJ,EAAqB,CAAE,YAAc,GAAI,IAAc,KAAK,IAAK,KAAM,YAAa,SAAW,SAAU,aAAe,EAAI,gBAAkB,GAAI,QAAU,GAAI,SAAW,IAC3K,cAEA,EAAqB,CAAE,YAAc,GAAI,IAAiB,SAAW,SAAU,aAAe,EAAG,gBAAkB,EAAG,QAAU,EAAG,SAAW,GAGhJ,KAAK,eAAe,MAAM,IAAI,EAAmB,UACjD,KAAK,eAAe,UAAY,EAAmB,aACnD,KAAK,eAAe,SAAS,KAAK,EAAmB,aACrD,KAAK,eAAe,OAAO,OAAS,EAAmB,gBACvD,KAAK,eAAe,QAAU,GAC9B,KAAK,mBAAmB,MAAM,IAAI,EAAmB,UAGvD,GAAI,IAAe,KAAmB,IACtC,aAAoB,CACnB,GAAQ,WAAW,MAAM,WAAa,OACtC,GAAQ,WAAW,cAAc,MAAM,OAAS,OAChD,GAAI,IAAW,EACX,EAAI,GACR,OAAO,eAAe,EAAE,IAAI,CAAE,IAAM,SAAS,GAAG,CAC/C,GAAuC,IACrC,IAAM,UAAW,CACnB,MAAO,OAER,GAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,KAAK,mCAAmC,SAAS,SAAS,GAAG,CACnF,GAAuC,KACrC,SAAS,KAAK,oBACjB,GAAI,GAAI,GAAQ,UAAU,aACtB,EAAK,GACT,OAAO,eAAe,EAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,GAAkB,IAChB,IAAM,UAAW,CACnB,MAAO,OAER,EAAE,IAAI,EAAG,IAAI,GAAI,GAAG,KAAK,cAAc,SAAS,SAAS,GAAG,CAC3D,GAAkB,KAChB,SAAS,KAAK,cACjB,GAAI,GAAK,GACT,OAAO,eAAe,EAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,GAAY,IAAM,IAChB,IAAM,UAAW,CACnB,MAAO,IAAY,OAEpB,EAAE,IAAI,EAAG,IAAI,EAAE,KAAK,KAAK,OAAO,SAAS,SAAS,GAAG,CACpD,GAAY,IAAM,GAClB,GAAI,IAAK,SAAS,GAAG,CACpB,GAAY,0BAEb,AAAG,IAAM,MACR,GAAG,MAEF,SACH,EAAE,IAAI,CAAE,YAAc,GAAS,aAAa,cAAc,CAAE,cAAkB,GAAkB,cAAe,kBAAsB,GAAkB,kBAAmB,oBAAwB,GAAkB,oBAAqB,kBAAsB,GAAkB,kBAAmB,sBAA0B,GAAkB,wBAAwB,SAAS,SAAS,GAAG,CAC5X,UAAS,YAAc,GAAI,SAAS,IAC7B,GAAS,eAAiB,GAAS,iBAE3C,EAAE,IAAI,CAAE,eAAiB,GAAS,gBAAgB,iBAAiB,CAAE,eAAmB,GAAsB,eAAgB,aAAiB,GAAsB,aAAc,cAAkB,GAAsB,gBAAgB,SAAS,SAAS,GAAG,CAC/P,MAAO,IAAS,eAAiB,GAAI,SAAS,MAE/C,GAAI,IAAK,GACT,OAAO,eAAe,GAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,GAAS,oBAAsB,IAC7B,IAAM,UAAW,CACnB,MAAO,IAAS,uBAEjB,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,KAAK,uBAAuB,SAAS,SAAS,GAAG,CACnE,GAAS,oBAAsB,KAC7B,SACH,EAAE,IAAI,CAAE,EAAI,GAAwB,iBAAiB,IAAI,CAAC,wCAAwC,uCAAuC,4CAA4C,uCAAuC,8CAA8C,sCAAsC,sCAAsC,4CAA4C,qCAAqC,SAAS,SAAS,GAAG,CAC3b,GAAwB,sBAAsB,GAAE,SAAS,GAAG,CAC3D,GAAQ,oBAEP,KAAK,eACR,GAAI,IAAK,GACT,OAAO,eAAe,GAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,GAAgB,oBAAoB,WAAW,MAAQ,IACrD,IAAM,UAAW,CACnB,MAAO,IAAgB,oBAAoB,WAAW,SAEvD,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,KAAK,aAAa,SAAS,SAAS,GAAG,CACxD,GAAgB,oBAAoB,WAAW,MAAQ,KACrD,SACH,GAAI,IAAK,GACT,OAAO,eAAe,GAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,GAAoB,IAClB,IAAM,UAAW,CACnB,MAAO,OAER,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,KAAK,gBAAgB,SAAS,SAAS,GAAG,CAC3D,GAAoB,KAClB,SACH,GAAI,IAAK,GACT,OAAO,eAAe,GAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,GAAkB,IAChB,IAAM,UAAW,CACnB,MAAO,OAER,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,KAAK,cAAc,SAAS,SAAS,GAAG,CACzD,GAAkB,KAChB,SACH,GAAI,IAAK,GACT,OAAO,eAAe,GAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,GAAqB,IACnB,IAAM,UAAW,CACnB,MAAO,OAER,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,KAAK,iBAAiB,SAAS,SAAS,GAAG,CAC5D,GAAqB,KACnB,SACH,GAAI,GAAK,GACT,OAAO,eAAe,EAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,GAAkB,IAChB,IAAM,UAAW,CACnB,MAAO,OAER,EAAE,IAAI,EAAG,IAAI,EAAE,GAAG,KAAK,cAAc,SAAS,SAAS,GAAG,CACzD,GAAkB,KAChB,SACH,GAAI,IAAK,GACT,OAAO,eAAe,GAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,GAAuB,IACrB,IAAM,UAAW,CACnB,MAAO,OAER,EAAE,IAAI,GAAG,IAAI,EAAE,IAAK,KAAK,mBAAmB,SAAS,SAAS,GAAG,CAChE,GAAuB,KACrB,SACH,GAAI,IAAM,GACV,OAAO,eAAe,GAAI,IAAI,CAAE,IAAM,SAAS,GAAG,CACjD,GAAqC,IACnC,IAAM,UAAW,CACnB,MAAO,OAER,EAAE,IAAI,GAAI,IAAI,EAAE,GAAG,KAAK,iCAAiC,SAAS,SAAS,GAAG,CAC7E,GAAqC,KACnC,SAAS,KAAK,GACjB,GAAI,IAAK,GAAQ,UAAU,YACvB,GAAI,EACJ,GAAM,GACV,OAAO,eAAe,GAAI,IAAI,CAAE,IAAM,SAAS,GAAG,CACjD,GAAE,UAAY,IACZ,IAAM,UAAW,CACnB,MAAO,IAAE,aAEV,GAAG,IAAI,GAAI,IAAI,EAAE,IAAI,KAAK,aAAa,SAAS,SAAS,GAAG,CAC3D,GAAE,UAAY,KACZ,SACH,GAAI,IAAM,GACV,OAAO,eAAe,GAAI,IAAI,CAAE,IAAM,SAAS,GAAG,CACjD,GAAE,UAAY,IACZ,IAAM,UAAW,CACnB,MAAO,IAAE,aAEV,GAAG,IAAI,GAAI,IAAI,EAAE,IAAI,KAAK,aAAa,SAAS,SAAS,GAAG,CAC3D,GAAE,UAAY,KACZ,SACH,GAAI,IAAM,GACV,OAAO,eAAe,GAAI,IAAI,CAAE,IAAM,SAAS,GAAG,CACjD,GAAI,IAAI,GACR,GAAE,aAAa,SAAW,GAC1B,GAAE,cAAc,SAAW,GAC3B,GAAE,OAAO,SAAW,IAClB,IAAM,UAAW,CACnB,MAAO,IAAE,aAAa,YAEvB,GAAG,IAAI,GAAI,IAAI,EAAE,KAAM,KAAK,YAAY,SAAS,SAAS,GAAG,CAC5D,GAAE,aAAa,SAAW,GAC1B,GAAE,cAAc,SAAW,GAC3B,GAAE,OAAO,SAAW,KAClB,SACH,GAAI,IAAM,GACV,OAAO,eAAe,GAAI,IAAI,CAAE,IAAM,SAAS,GAAG,CACjD,GAAI,IAAI,GACR,GAAE,aAAa,QAAU,GACzB,GAAE,cAAc,QAAU,GAC1B,GAAE,OAAO,QAAU,IACjB,IAAM,UAAW,CACnB,MAAO,IAAE,aAAa,WAEvB,GAAG,IAAI,GAAI,IAAI,EAAE,KAAK,KAAK,WAAW,SAAS,SAAS,GAAG,CAC1D,GAAE,aAAa,QAAU,GACzB,GAAE,cAAc,QAAU,GAC1B,GAAE,OAAO,QAAU,KACjB,SACH,GAAI,IAAK,GACT,GAAgB,GAAG,GAAU,SAAS,QACtC,GAAgB,GAAG,GAAY,SAAS,UACxC,GAAI,IAAM,GACV,OAAO,eAAe,GAAI,IAAI,CAAE,IAAM,SAAS,GAAG,CACjD,GAAwB,eAAe,UAAY,IACjD,IAAM,UAAW,CACnB,MAAO,IAAwB,eAAe,aAE/C,GAAG,IAAI,GAAI,IAAI,EAAE,GAAG,KAAK,aAAa,SAAS,SAAS,GAAG,CAC1D,GAAwB,eAAe,UAAY,KACjD,SAAS,KAAK,iBACjB,GAAI,IAAQ,GAAwB,eAAe,MACnD,GAAG,SAAS,CAAE,EAAI,GAAM,UAAU,KAAK,KAAK,SAAS,SAAS,SAAS,GAAK,CAC3E,GAAM,OAAO,MACX,KAAK,aAET,YAAyB,GAAE,EAAS,EAAM,CACzC,GAAI,GAAK,GAAE,UAAU,GACjB,EAAI,EACJ,GAAI,GACR,OAAO,eAAe,GAAE,IAAI,CAAE,IAAM,SAAS,GAAG,CAC/C,EAAE,UAAY,IACZ,IAAM,UAAW,CACnB,MAAO,GAAE,aAEV,EAAG,IAAI,GAAE,IAAI,EAAE,GAAG,KAAK,aAAa,SAAS,SAAS,GAAG,CACxD,EAAE,UAAY,KACZ,SACH,GAAI,IAAK,GACT,OAAO,eAAe,GAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,EAAE,UAAY,IACZ,IAAM,UAAW,CACnB,MAAO,GAAE,aAEV,EAAG,IAAI,GAAG,IAAI,EAAE,GAAG,KAAK,aAAa,SAAS,SAAS,GAAG,CACzD,EAAE,UAAY,KACZ,SACH,GAAI,IAAK,GACT,OAAO,eAAe,GAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,EAAE,UAAY,IACZ,IAAM,UAAW,CACnB,MAAO,GAAE,aAEV,EAAG,IAAI,GAAG,IAAI,EAAE,GAAG,KAAK,aAAa,SAAS,SAAS,GAAG,CACzD,EAAE,UAAY,KACZ,SACH,GAAI,IAAK,GACT,OAAO,eAAe,GAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,EAAE,mBAAqB,IACrB,IAAM,UAAW,CACnB,MAAO,GAAE,sBAEV,EAAG,IAAI,GAAG,IAAI,EAAE,GAAG,KAAK,sBAAsB,SAAS,SAAS,GAAG,CAClE,EAAE,mBAAqB,KACrB,SACH,GAAI,IAAK,GACT,OAAO,eAAe,GAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,EAAE,aAAe,IACf,IAAM,UAAW,CACnB,MAAO,GAAE,gBAEV,EAAG,IAAI,GAAG,IAAI,EAAE,GAAG,KAAK,gBAAgB,SAAS,SAAS,GAAG,CAC5D,EAAE,aAAe,KACf,SACH,GAAI,GAAK,GACT,OAAO,eAAe,EAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,EAAE,aAAe,IACf,IAAM,UAAW,CACnB,MAAO,GAAE,gBAEV,EAAG,IAAI,EAAG,IAAI,EAAE,GAAG,KAAK,gBAAgB,SAAS,SAAS,GAAG,CAC5D,EAAE,aAAe,KACf,SACH,GAAI,IAAK,GACT,OAAO,eAAe,GAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,EAAE,IAAM,IACN,IAAM,UAAW,CACnB,MAAO,GAAE,OAEV,EAAG,IAAI,GAAG,IAAI,EAAE,GAAG,KAAK,OAAO,SAAS,SAAS,GAAG,CACnD,EAAE,IAAM,KACN,SACH,GAAI,IAAK,GACT,OAAO,eAAe,GAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,EAAE,UAAY,IACZ,IAAM,UAAW,CACnB,MAAO,GAAE,aAEV,EAAG,IAAI,GAAG,IAAI,EAAE,GAAG,KAAK,aAAa,SAAS,SAAS,GAAG,CACzD,EAAE,UAAY,KACZ,SACH,GAAI,IAAQ,EAAE,gBACd,EAAG,SAAS,CAAE,EAAI,GAAM,UAAU,KAAK,KAAK,mBAAmB,SAAS,SAAS,GAAK,CACrF,GAAM,OAAO,MAEd,GAAI,IAAK,GACT,OAAO,eAAe,GAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,EAAE,oBAAsB,IACtB,IAAM,UAAW,CACnB,MAAO,GAAE,uBAEV,EAAG,IAAI,GAAG,IAAI,EAAE,IAAI,KAAK,uBAAuB,SAAS,SAAS,GAAG,CACpE,EAAE,oBAAsB,KACtB,SACH,GAAI,IAAK,GACT,OAAO,eAAe,GAAG,IAAI,CAAE,IAAM,SAAS,GAAG,CAChD,EAAE,YAAc,IACd,IAAM,UAAW,CACnB,MAAO,GAAE,eAEV,EAAG,IAAI,GAAG,IAAI,EAAE,GAAG,KAAK,eAAe,SAAS,SAAS,GAAG,CAC3D,EAAE,YAAc,KACd,SACH,GAAI,IAAM,GACV,OAAO,eAAe,GAAI,IAAI,CAAE,IAAM,SAAS,GAAG,CACjD,EAAE,kBAAoB,IACpB,IAAM,UAAW,CACnB,MAAO,GAAE,qBAEV,EAAG,IAAI,GAAI,IAAI,EAAE,GAAG,KAAK,qBAAqB,SAAS,SAAS,GAAG,CAClE,EAAE,kBAAoB,KACpB,SACH,GAAI,IAAS,EAAE,MACf,EAAG,SAAS,CAAE,EAAI,GAAO,UAAU,KAAK,KAAK,SAAS,SAAS,SAAS,GAAK,CAC5E,GAAO,OAAO,MAEf,GAAI,IAAS,EAAE,SACf,EAAG,SAAS,CAAE,EAAI,GAAO,UAAU,KAAK,KAAK,YAAY,SAAS,SAAS,GAAK,CAC/E,GAAO,OAAO,MAEf,GAAI,IAAM,GACV,OAAO,eAAe,GAAI,IAAI,CAAE,IAAM,SAAS,GAAG,CACjD,EAAE,QAAU,IACV,IAAM,UAAW,CACnB,MAAO,GAAE,WAEV,EAAG,IAAI,GAAI,IAAI,EAAE,GAAG,KAAK,WAAW,SAAS,SAAS,GAAG,CACxD,EAAE,QAAU,KACV,SAEJ,OAAkB,OACV,QAAO,EAAE,EAAI,EAAK,CACxB,GAAG,GAAO,KACT,EAAM,EAAE,eACC,EAAM,EACf,GAAG,GAAO,EACT,EAAM,EAAE,OAAS,MAEjB,OAAO,GAGT,MAAO,GAAE,OAAO,EAAI,SAEd,MAAM,CACZ,MAAO,MAAK,OAGd,GAAI,IAAuB,KAAiB,eACxC,GAA0B,KAAiB,kBAC/C,gBAAmC,GAAwB,CAC1D,YAAY,EAAO,CAClB,GAAI,GAAa,GAAI,IAAc,GACnC,MAAM,CAAE,SAAW,CAAE,MAAQ,GAAI,IAAc,GAAQ,WAAa,EAAY,OAAS,GAAe,aAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmgF,eAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0yB,SAAW,GAAe,iBAAkB,WAAa,GAAO,UAAY,GAAM,YAAc,KACrhH,KAAK,WAAa,GAGpB,QAAmC,CAClC,YAAY,EAAI,CACf,KAAK,iBAAmB,GACxB,KAAK,eAAiB,KACtB,KAAK,cAAgB,KACrB,KAAK,eAAiB,KACtB,KAAK,GAAK,EACV,KAAK,aAAe,GAAI,IACrB,EAAG,UAAY,MACjB,GAAG,SAAW,GAEf,EAAG,MAAM,YAAc,OACvB,EAAG,aAAa,eAAe,QAC/B,GAAI,GAAc,SAAS,EAAG,CAC7B,EAAE,iBACF,EAAE,mBAEH,EAAG,iBAAiB,eAAe,EAAY,IAC/C,EAAG,iBAAiB,gBAAgB,EAAY,IAChD,KAAK,2BACL,KAAK,yBACL,KAAK,4BACL,KAAK,6BACL,KAAK,0BACL,KAAK,qBAEN,oBAAqB,CACpB,OAAO,OAAO,SAAS,qBAClB,SACJ,AAAG,KAAK,kBACP,MAAK,aAAa,eAClB,KAAK,iBAAmB,IAEzB,UACI,UACJ,AAAI,KAAK,kBACR,MAAK,aAAa,aAClB,KAAK,iBAAmB,IAEzB,OAGF,0BAA2B,CAC1B,GAAI,GAAS,KACT,EAAqC,SAAS,EAAW,GAAe,CAC3E,GAAI,IAAQ,EAAW,OAAS,KAAO,EAAW,MAAQ,EAAW,aAAe,KAAO,EAAW,YAAc,GACpH,AAAG,GAAc,GAAI,IAAuB,EAAE,QAAQ,GAAK,EAAW,OAAO,EAAW,QAAQ,EAAW,QAAQ,EAAW,QAAQ,EAAE,EAAE,EAAO,GAAG,YAAY,EAAO,GAAG,aAAa,KAAK,IAAI,GAAQ,EAAE,GAAG,EAAE,EAAE,EAAE,KAAO,GACzN,EAAW,kBAGT,EAAqB,OAAO,OAAO,MACnC,EAAsB,SAAS,EAAM,CACxC,GAAI,IAAY,EAAmB,GACnC,MAAG,KAAa,MACf,IAAY,CAAE,uBAAyB,KAAM,YAAc,GAC3D,EAAmB,GAAQ,IAErB,IAEJ,GAAqC,SAAS,EAAW,GAAe,CAC3E,GAAI,IACJ,OAAO,EAAW,UACb,uBAAwB,YAC5B,GAAe,CAAE,OAAS,GAAI,QAAU,GACxC,UACI,aACJ,GAAe,CAAE,OAAS,EAAG,QAAU,GACvC,cAEA,GAAe,CAAE,OAAS,EAAG,QAAU,GAExC,GAAI,IAAK,EACL,GAAM,EAAW,eAAe,OACpC,KAAM,GAAK,IAAK,CACf,GAAI,IAAQ,EAAW,eAAe,MACtC,GAAG,EAAW,MAAQ,mBAAoB,CACzC,GAAI,IAAgB,GAChB,GAAK,EACL,GAAM,EAAW,QACrB,KAAM,GAAK,GAAI,QAAQ,GAAG,IAAS,GAAI,MAAO,CAC7C,GAAgB,GAChB,MAED,GAAG,CAAC,GACH,SAGF,GAAI,IAAY,EAAoB,GAAM,WAI1C,OAHG,GAAU,aAAe,GAAK,EAAW,MAAQ,cACnD,IAAU,uBAAyB,GAAM,YAEnC,EAAW,UACb,kBAAmB,WACvB,GAAU,cACV,UACI,aACJ,GAAU,cACV,MAED,GAAI,IAAS,KAAK,IAAI,GAAM,eACxB,GAAW,IAAQ,KAAK,GACxB,GAAQ,KAAK,KAAK,KAAK,IAAI,GAAM,cAAgB,IAAU,GAC3D,GAAQ,KAAK,KAAK,KAAK,IAAI,GAAM,cAAgB,IAAU,GAC3D,GAAU,GAAM,SAAW,KAAO,GAAM,QAAU,GAAM,eAAiB,KAAO,GAAM,cAAgB,EACtG,GAAU,GAAM,SAAW,KAAO,GAAM,QAAU,GAAM,eAAiB,KAAO,GAAM,cAAgB,EAC1G,AAAG,GAAc,GAAI,IAAuB,GAAM,WAAW,GAAM,WAAa,SAAW,MAAQ,QAAQ,GAAM,YAAc,GAAU,uBAAuB,GAAa,OAAO,GAAa,QAAQ,GAAM,QAAQ,GAAM,QAAQ,GAAU,EAAE,GAAU,EAAE,EAAO,GAAG,YAAY,EAAO,GAAG,aAAa,GAAM,MAAM,EAAE,SAAS,IAAS,GAAQ,EAAE,SAAS,IAAS,GAAQ,EAAE,GAAM,iBAAmB,GACxY,EAAW,mBAIV,GAAgB,SAAS,EAAG,CAC/B,SAAE,UAAe,EAAO,GAAG,YAC3B,EAAE,WAAgB,EAAO,GAAG,aACzB,EAAE,WACJ,GAAO,eAAiB,GAElB,EAAO,aAAa,cAAc,IAEtC,GAAgB,SAAS,EAAG,CAC/B,SAAE,UAAe,EAAO,GAAG,YAC3B,EAAE,WAAgB,EAAO,GAAG,aACzB,EAAE,WACJ,GAAO,eAAiB,GAElB,EAAO,aAAa,cAAc,IAEtC,GAAc,SAAS,EAAG,CAC7B,SAAE,UAAe,EAAO,GAAG,YAC3B,EAAE,WAAgB,EAAO,GAAG,aACzB,EAAE,WACJ,GAAO,eAAiB,MAElB,EAAO,aAAa,YAAY,IAEpC,GAAkB,SAAS,EAAG,CACjC,SAAE,UAAe,EAAO,GAAG,YAC3B,EAAE,WAAgB,EAAO,GAAG,aACzB,EAAE,WACJ,GAAO,eAAiB,MAElB,EAAO,aAAa,gBAAgB,IAE5C,AAAG,OAAO,aACT,MAAK,GAAG,iBAAiB,cAAc,IACvC,OAAO,iBAAiB,cAAc,IACtC,OAAO,iBAAiB,YAAY,IACpC,OAAO,iBAAiB,gBAAgB,KAExC,MAAK,GAAG,iBAAiB,YAAY,SAAS,EAAG,CAChD,EAAmC,EAAE,MAEtC,OAAO,iBAAiB,YAAY,SAAS,EAAG,CAC/C,EAAmC,EAAE,MAEtC,OAAO,iBAAiB,0BAA0B,SAAS,EAAG,CAC7D,EAAmC,EAAE,MAEtC,OAAO,iBAAiB,oBAAoB,SAAS,EAAG,CACvD,EAAmC,EAAE,MAEtC,OAAO,iBAAiB,UAAU,SAAS,EAAG,CAC7C,EAAmC,EAAE,MAEtC,KAAK,GAAG,iBAAiB,aAAa,SAAS,EAAG,CACjD,GAAmC,EAAE,KACpC,CAAE,QAAU,GAAM,QAAU,KAC9B,OAAO,iBAAiB,YAAY,SAAS,EAAG,CAC/C,GAAmC,EAAE,KACpC,CAAE,QAAU,GAAM,QAAU,KAC9B,OAAO,iBAAiB,mBAAmB,SAAS,EAAG,CACtD,GAAmC,EAAE,KACpC,CAAE,QAAU,GAAM,QAAU,KAC9B,OAAO,iBAAiB,WAAW,SAAS,EAAG,CAC9C,GAAmC,EAAE,KACpC,CAAE,QAAU,GAAM,QAAU,KAC9B,OAAO,iBAAiB,cAAc,SAAS,EAAG,CACjD,GAAmC,EAAE,KACpC,CAAE,QAAU,GAAM,QAAU,MAGhC,wBAAyB,CACxB,GAAI,GAAS,KACb,KAAK,GAAG,iBAAiB,QAAQ,SAAS,EAAG,CAC5C,GAAI,GAAO,EAAE,QACT,EAAO,EAAE,QACT,GAAY,EAAE,OACd,GAAY,EAAE,OACd,GAAY,EAAE,OAClB,OAAO,EAAE,eACJ,GACJ,GAAY,EAAE,OACd,GAAY,EAAE,OACd,GAAY,EAAE,OACd,UACI,GACJ,GAAY,EAAE,OAAS,GACvB,GAAY,EAAE,OAAS,GACvB,GAAY,EAAE,OAAS,GACvB,UACI,GACJ,GAAY,EAAE,OAAS,IACvB,GAAY,EAAE,OAAS,IACvB,GAAY,EAAE,OAAS,IACvB,MAED,AAAG,EAAO,aAAa,QAAQ,GAAI,IAAqB,GAAU,GAAU,GAAU,EAAK,EAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,KAAO,GAC9I,EAAE,kBAEF,CAAE,QAAU,KAEf,2BAA4B,CAC3B,GAAI,GAAS,KACb,OAAO,iBAAiB,UAAU,SAAS,EAAG,CAC7C,AAAG,EAAO,aAAa,UAAU,EAAE,EAAE,QAAU,EAAO,KAAO,GAC5D,EAAE,mBAGJ,OAAO,iBAAiB,QAAQ,SAAS,EAAG,CAC3C,AAAG,EAAO,aAAa,QAAQ,EAAE,EAAE,QAAU,EAAO,KAAO,GAC1D,EAAE,mBAIL,4BAA6B,CAC5B,GAAI,GAAS,KACb,OAAO,SAAS,iBAAiB,mBAAmB,UAAW,CAC9D,EAAO,uBAGT,yBAA0B,CACzB,GAAI,GAAS,KACb,OAAO,iBAAiB,SAAS,UAAW,CAC3C,AAAG,GAAO,eAAiB,EAAO,GAAG,aAAe,EAAO,gBAAkB,EAAO,GAAG,eACtF,GAAO,cAAgB,EAAO,GAAG,YACjC,EAAO,eAAiB,EAAO,GAAG,aAClC,EAAO,aAAa,SAAS,EAAO,GAAG,YAAY,EAAO,GAAG,gBAE7D,CAAE,QAAU,MAGhB,QAAqD,CACpD,aAAc,CACb,KAAK,sBAAwB,GAC7B,KAAK,oBAAsB,GAC3B,KAAK,iBAAmB,GACxB,KAAK,mBAAqB,GAC1B,KAAK,iBAAmB,GACxB,KAAK,yBAA2B,GAChC,KAAK,qBAAuB,GAC5B,KAAK,uBAAyB,GAC9B,KAAK,uBAAyB,GAC9B,KAAK,kBAAoB,GAE1B,SAAS,EAAM,EAAQ,CACtB,GAAI,GAAK,EACL,EAAM,KAAK,kBACf,KAAM,EAAK,EAAI,QAAQ,EAAI,KAAM,EAAM,GAExC,cAAc,EAAO,CACpB,GAAI,GAAK,EACL,EAAM,KAAK,uBACf,KAAM,EAAK,EAAI,QAAQ,GAAG,EAAI,KAAM,IAAU,EAC7C,MAAO,GAER,MAAO,GAER,cAAc,EAAO,CACpB,GAAI,GAAK,EACL,EAAM,KAAK,uBACf,KAAM,EAAK,EAAI,QAAQ,GAAG,EAAI,KAAM,IAAU,EAC7C,MAAO,GAER,MAAO,GAER,YAAY,EAAO,CAClB,GAAI,GAAK,EACL,EAAM,KAAK,qBACf,KAAM,EAAK,EAAI,QAAQ,GAAG,EAAI,KAAM,IAAU,EAC7C,MAAO,GAER,MAAO,GAER,gBAAgB,EAAO,CACtB,GAAI,GAAK,EACL,EAAM,KAAK,yBACf,KAAM,EAAK,EAAI,QAAQ,GAAG,EAAI,KAAM,IAAU,EAC7C,MAAO,GAER,MAAO,GAER,QAAQ,EAAO,CACd,GAAI,GAAK,EACL,EAAM,KAAK,iBACf,KAAM,EAAK,EAAI,QAAQ,GAAG,EAAI,KAAM,IAAU,EAC7C,MAAO,GAER,MAAO,GAER,UAAU,EAAM,EAAU,CACzB,GAAI,GAAK,EACL,EAAM,KAAK,mBACf,KAAM,EAAK,EAAI,QAAQ,GAAG,EAAI,KAAM,EAAM,IAAa,EACtD,MAAO,GAER,MAAO,GAER,QAAQ,EAAM,EAAU,CACvB,GAAI,GAAK,EACL,EAAM,KAAK,iBACf,KAAM,EAAK,EAAI,QAAQ,GAAG,EAAI,KAAM,EAAM,IAAa,EACtD,MAAO,GAER,MAAO,GAER,YAAa,CACZ,GAAI,GAAK,EACL,EAAM,KAAK,oBACf,KAAM,EAAK,EAAI,QAAQ,EAAI,OAE5B,cAAe,CACd,GAAI,GAAK,EACL,EAAM,KAAK,sBACf,KAAM,EAAK,EAAI,QAAQ,EAAI,QAG7B,QAA6B,CAC5B,YAAY,EAAS,CACpB,KAAK,eAAiB,GACtB,KAAK,iBAAmB,GAAI,IAAS,EAAE,GACvC,KAAK,sBAAwB,EAC7B,KAAK,qBAAuB,EAC5B,KAAK,YAAc,GAAI,IAAS,EAAE,EAAE,EAAE,GACtC,KAAK,SAAW,GAAI,IAAS,EAAG,EAAG,GACnC,KAAK,OAAS,GAAI,IAAgB,GAClC,KAAK,cAAgB,GAAI,IAAgB,GACzC,KAAK,aAAe,GAAI,IAAgB,GACxC,GAAI,GAAI,GAAuB,SAC3B,EAAiB,EAAQ,QAAU,KAAO,EAAQ,OAAS,EAAE,OAC7D,EAA6B,EAAQ,mBACrC,GAAmC,EAAQ,yBAC3C,GAAwB,EAAQ,eAAiB,KAAO,EAAQ,cAAgB,EAAE,cACtF,KAAK,UAAY,EAAQ,WAAa,KAAO,EAAQ,UAAY,EAAE,UACnE,KAAK,UAAY,EAAQ,WAAa,KAAO,EAAQ,UAAY,EAAE,UACnE,GAAI,IAAI,EAAQ,UAAY,KAAO,EAAQ,SAAW,EAAE,SACxD,KAAK,aAAa,SAAW,GAC7B,KAAK,cAAc,SAAW,GAC9B,KAAK,OAAO,SAAW,GACvB,GAAI,IAAK,EAAQ,SAAW,KAAO,EAAQ,QAAU,EAAE,QACvD,KAAK,aAAa,QAAU,GAC5B,KAAK,cAAc,QAAU,GAC7B,KAAK,OAAO,QAAU,GACtB,KAAK,aAAa,gBAAgB,EAAQ,cAAgB,KAAO,EAAQ,aAAe,EAAE,cAC1F,KAAK,cAAc,gBAAgB,IACnC,KAAK,OAAO,gBAAgB,GAC5B,GAAI,IAAqB,EACrB,EAAS,KACb,AAAG,IAAoC,KACtC,IAAiC,aAAa,uBAAuB,KAAK,SAAS,GAAG,CACrF,EAAO,eAAiB,GACxB,EAAO,qBAAuB,EAAO,aAAa,OAClD,EAAO,sBAAwB,EAAO,cAAc,OACpD,GAAI,IAAQ,EAAO,iBACnB,UAAM,EAAI,GAAE,EACZ,GAAM,EAAI,GAAE,EACL,IAER,GAAiC,aAAa,uBAAuB,KAAK,SAAS,GAAG,CACrF,GAAI,IAAgB,GAAE,UAClB,GAAgB,GAAE,WACtB,GAAG,EAAO,eAAgB,CACzB,GAAI,IAAI,EAAO,iBACf,EAAO,cAAc,OAAS,EAAO,sBAAyB,IAAE,EAAI,GAAgB,GAAE,EAAI,IAAiB,EAAO,UAClH,GAAI,IAAQ,EAAO,YACf,GAAM,GAAM,EACZ,GAAM,GAAM,EACZ,GAAM,GAAM,EACZ,GAAI,GAAM,EACV,GAAO,GAAO,GAAK,IAAM,EAAK,GAAM,GAAM,IAAQ,IAAI,GAAK,IAAM,GAAM,GAAM,GAAM,GAAM,KAAS,IAAM,EAAK,GAAM,GAAO,GAAI,IAClI,SAAO,aAAa,OAAS,EAAO,qBAAwB,GAAM,KAAK,IAAI,KAAK,IAAI,IAAQ,EAAE,KAAQ,KAAQ,EAAI,EAAI,IAAO,IAAE,EAAI,GAAgB,GAAE,EAAI,IAAiB,EAAO,UAAa,IAAgB,IACvM,MAEP,OAAO,KAGT,GAAiC,aAAa,qBAAqB,KAAK,SAAS,GAAG,CACnF,SAAO,eAAiB,GACjB,IAER,GAAiC,aAAa,iBAAiB,KAAK,SAAS,GAAG,CAC/E,SAAO,OAAO,QAAU,GAAE,OAAS,EAAO,UAAY,IACtD,EAAO,OAAO,OAAS,KAAK,IAAI,EAAO,OAAO,OAAO,GAC9C,KAEC,IAAsB,MAC/B,IAAmB,iBAAiB,YAAY,SAAS,GAAG,CAC3D,EAAO,eAAiB,GACxB,EAAO,qBAAuB,EAAO,aAAa,OAClD,EAAO,sBAAwB,EAAO,cAAc,OACpD,GAAI,IAAQ,EAAO,iBACnB,GAAM,EAAI,GAAE,QACZ,GAAM,EAAI,GAAE,UAEb,GAAmB,iBAAiB,cAAc,SAAS,GAAG,CAC7D,EAAO,eAAiB,KAEzB,OAAO,iBAAiB,YAAY,SAAS,GAAG,CAC/C,GAAI,IAAgB,GAAmB,YACnC,GAAgB,GAAmB,aACnC,GACJ,GAAG,EAAO,eAAgB,CACzB,GAAI,IAAI,EAAO,iBACf,EAAO,cAAc,OAAS,EAAO,sBAAyB,IAAE,QAAU,GAAgB,GAAE,EAAI,IAAiB,EAAO,UACxH,GAAI,IAAQ,EAAO,YACf,GAAM,GAAM,EACZ,GAAM,GAAM,EACZ,GAAM,GAAM,EACZ,GAAI,GAAM,EACV,GAAO,GAAO,GAAK,IAAM,EAAK,GAAM,GAAM,IAAQ,IAAI,GAAK,IAAM,GAAM,GAAM,GAAM,GAAM,KAAS,IAAM,EAAK,GAAM,GAAO,GAAI,IAClI,EAAO,aAAa,OAAS,EAAO,qBAAwB,GAAM,KAAK,IAAI,KAAK,IAAI,IAAQ,EAAE,KAAQ,KAAQ,EAAI,EAAI,IAAO,IAAE,QAAU,GAAgB,GAAE,EAAI,IAAiB,EAAO,UAAa,IAAgB,IACpN,GAAM,MAEN,IAAM,EAEP,AAAG,IAAO,GACT,GAAE,mBAGJ,OAAO,iBAAiB,UAAU,SAAS,GAAG,CAC7C,EAAO,eAAiB,KAEzB,GAAmB,iBAAiB,QAAQ,SAAS,GAAG,CACvD,EAAO,OAAO,QAAU,GAAE,OAAS,EAAO,UAAY,IACtD,EAAO,OAAO,OAAS,KAAK,IAAI,EAAO,OAAO,OAAO,GACrD,GAAE,kBACD,CAAE,QAAU,MAGhB,cAAc,EAAQ,CACrB,GAAI,GAAI,KAAK,SACT,EAAI,KAAK,YACb,EAAO,SAAS,EAAI,EAAE,EACtB,EAAO,SAAS,EAAI,EAAE,EACtB,EAAO,SAAS,EAAI,EAAE,EACtB,EAAO,WAAW,EAAI,EAAE,EACxB,EAAO,WAAW,EAAI,EAAE,EACxB,EAAO,WAAW,EAAI,EAAE,EACxB,EAAO,WAAW,EAAI,EAAE,GAG1B,GAAI,IAAa,KAAiB,KAClC,gBAAmC,GAAW,CAC7C,YAAY,EAAW,CACtB,AAAG,GAAa,MACf,GAAY,IAEb,GAAI,GAAsB,GAAI,IAA8B,GAC5D,MAAM,GAAI,IAAkB,EAAE,EAAE,GAAG,GACnC,KAAK,oBAAsB,EAC3B,KAAK,SAAS,gBAAgB,UAC9B,KAAK,SAAS,gBAAgB,MAC9B,KAAK,cAAgB,GACrB,KAAK,WAAa,GAClB,KAAK,cAAgB,GACrB,KAAK,iBAAmB,GACxB,KAAK,YAAc,KACnB,GAAI,GAAS,KACb,KAAK,eAAiB,SAAS,EAAS,GAAM,GAAO,GAAS,GAAS,GAAO,CAC7E,GAAI,GAAI,GAAM,YACd,AAAG,GAAK,EAAoB,QAAQ,OACnC,GAAoB,YAAc,IAEhC,GAAK,MACP,GAAoB,YAAY,MAAQ,EAAE,eAAiB,GAAO,GAAK,GAExE,EAAoB,QAAQ,MAAQ,EACpC,EAAoB,OAAS,EAC7B,EAAO,YAAY,aAAa,GAAO,eAI1C,gBAA4C,GAAqB,CAChE,YAAY,EAAW,CACtB,GAAI,GAAa,GAAI,IAAc,IAC/B,EAAc,GAAI,IAAc,IAChC,EAAU,GAAI,IAAc,MAChC,MAAM,CAAE,SAAW,CAAE,OAAW,EAAS,WAAe,EAAa,WAAe,GAAa,aAAe,GAAM,UAAU,KAAK,aAAc,eAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwsD,KAAO,GAAW,WAAY,WAAa,GAAO,UAAY,GAAM,SAAW,GAAe,aAC18D,KAAK,WAAa,EAClB,KAAK,YAAc,EACnB,KAAK,QAAU,EACf,EAAW,MAAQ,GAGrB,GAAI,IAAgB,KAAiB,QACjC,GAAQ,KACR,GAAa,KACb,GAAiB,KACjB,GAAuB,KAAiB,eACxC,GAAoB,KAAiB,YACrC,GAA0B,KAAiB,kBAC3C,GAA6B,KAAiB,qBAC9C,GAAsB,KAAiB,cACvC,GAAwB,KACxB,GAAoB,KACpB,EAAgB,KAAiB,QACrC,QAAkC,OAC1B,SAAQ,EAAM,EAAI,EAAM,EAAO,GAAQ,GAAmB,CAChE,AAAG,IAAqB,MACvB,IAAoB,IAErB,GAAI,IAAS,EAAM,EAAE,GACjB,GAAW,IAAU,KAIzB,GAHG,IAAqB,CAAC,IACxB,IAAW,GAAQ,aAAe,GAAO,aAAe,GAAQ,eAAiB,GAAO,eAAiB,GAAQ,cAAgB,GAAO,cAAiB,GAAQ,OAAS,MAAQ,GAAO,QAAQ,OAAS,GAAQ,OAAS,GAAQ,OAAS,MAAQ,GAAO,QAAQ,OAAS,GAAQ,OAAS,GAAQ,WAAa,MAAQ,GAAO,QAAQ,WAAa,GAAQ,WAAa,GAAQ,WAAa,MAAQ,GAAO,QAAQ,WAAa,GAAQ,WAAa,GAAQ,QAAU,MAAQ,GAAO,QAAQ,QAAU,GAAQ,QAAU,GAAQ,MAAQ,MAAQ,GAAO,QAAQ,MAAQ,GAAQ,MAAQ,GAAQ,YAAc,MAAQ,GAAO,QAAQ,YAAc,GAAQ,YAAc,GAAQ,aAAe,MAAQ,GAAO,SAAW,GAAQ,aAErsB,GAAU,CAIZ,GAHG,IAAU,MACZ,GAAO,UAEL,GAAQ,YAAc,EAAG,CAC3B,GAAI,IAAI,GAAI,IAAmC,EAAM,EAAO,IAC5D,GAAE,QAAU,GAAQ,YACpB,GAAS,OAET,IAAS,GAAI,IAAwB,EAAM,EAAO,IAEnD,EAAM,EAAE,GAAO,OAEf,IAAO,QAAQ,gBAAkB,GAAQ,gBACzC,GAAO,QAAQ,SAAW,GAAQ,SAC/B,IAAS,GAAO,OAAS,GAAU,GAAO,SAC5C,GAAO,QAAQ,EAAM,GAGvB,MAAO,KAGT,GAAI,IAA0B,KAAiB,kBAC3C,GAAqC,KAAiB,6BACtD,GAAsB,KACtB,GAAwB,KACxB,GAAc,KAAiB,MAC/B,GAAyB,KAAiB,iBAC1C,GAAqB,KAAiB,aACtC,GAA2B,KAAiB,mBAC5C,GAAwB,KAAiB,gBAC7C,gBAAqC,GAAW,CAC/C,YAAY,EAAU,CACrB,MAAM,GAAuB,WAAW,GACxC,KAAK,cAAgB,GACrB,KAAK,WAAa,GAClB,KAAK,cAAgB,IAGvB,QAAiC,CAChC,YAAY,EAAU,CACrB,KAAK,aAAe,GAAI,GACxB,KAAK,SAAW,EAEjB,OAAO,EAAO,EAAS,EAAW,EAAU,CAC3C,KAAK,SAAS,gBAAgB,GAC9B,GAAI,IAAkB,GACtB,AAAG,GAAY,MACd,IAAkB,GAClB,KAAK,SAAS,YAAY,KAAK,cAC/B,KAAK,SAAS,YAAY,EAAS,EAAE,EAAS,EAAE,EAAS,EAAE,EAAS,IAErE,GAA2B,QAAQ,SAAW,EAC3C,GAAc,MAChB,MAAK,SAAS,cAAc,GAC5B,KAAK,SAAS,MAAM,GAAK,GAAM,KAEhC,KAAK,SAAS,OAAO,GAA2B,SAAS,GAA2B,WACjF,IACF,KAAK,SAAS,YAAY,KAAK,aAAa,EAAE,KAAK,aAAa,EAAE,KAAK,aAAa,EAAE,KAAK,aAAa,IAI3G,QAAe,CACd,YAAY,EAAE,EAAE,EAAG,CAClB,KAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,GAGX,QAAe,CACd,YAAY,EAAE,EAAE,EAAE,EAAG,CACpB,KAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,EAAI,GAGX,GAAI,IAA0B,KAAiB,kBAC3C,GAAmC,KAAiB,2BACpD,GAAe,KAAiB,OACpC,QAA4B,CAC3B,YAAY,EAAU,CACrB,KAAK,mBAAqB,GAAI,IAAwB,CAAE,MAAQ,WAChE,KAAK,WAAa,GAAI,IACtB,KAAK,SAAW,EAChB,KAAK,GAAK,EAAS,aACnB,KAAK,iBAAmB,GAAI,IAA2B,GACvD,KAAK,kBAAoB,GAAI,IAE9B,qBAAqB,EAAO,EAAQ,CACnC,KAAK,mBAAmB,IAAM,EAC9B,KAAK,iBAAiB,OAAO,EAAO,KAAK,mBAAmB,UAE7D,OAAO,EAAI,EAAO,EAAM,EAAQ,CAC/B,GAAI,IAAS,GAA4B,QAAQ,KAAK,kBAAkB,UAAY,EAAI,EAAM,EAAO,CAAE,MAAQ,EAAO,MAAO,MAAQ,EAAO,MAAO,UAAY,EAAO,UAAW,UAAY,EAAO,UAAW,OAAS,EAAO,OAAQ,KAAO,EAAO,KAAM,WAAa,EAAO,WAAY,gBAAkB,EAAO,gBAAiB,SAAW,EAAO,SAAU,YAAc,GAAO,cAAgB,GAAO,aAAe,OAC5Z,YAAK,WAAW,UAAU,EAAO,GACjC,KAAK,iBAAiB,OAAO,GAAO,KAAK,YAClC,GAAO,QAEf,KAAK,EAAI,EAAO,EAAiB,EAAM,GAAsB,CAO5D,GANG,IAAwB,MAC1B,IAAuB,GAErB,GAAS,MACX,GAAQ,IAEN,GAAoB,EACtB,MAAO,GAER,GAAI,IAAY,EACZ,GAAK,EACT,KAAM,GAAK,IAAsB,CAChC,GAAI,IAAI,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK,IAAI,GAAU,MAAM,MAAQ,IAAO,oBAAuB,EACzF,GAAI,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK,IAAI,GAAU,MAAM,OAAS,IAAO,oBAAuB,EAE9F,GADA,GAAY,KAAK,OAAO,QAAU,KAAO,IAAM,EAAI,GAAU,GAAE,IAC5D,IAAK,GAAK,IAAK,EACjB,MAGF,GAAI,IAAQ,GAAU,MAAM,MACxB,GAAS,GAAU,MAAM,OACzB,EAAgB,CAAE,MAAQ,EAAO,MAAO,MAAQ,EAAO,MAAO,SAAW,EAAO,SAAU,gBAAkB,EAAO,gBAAiB,WAAa,EAAO,WAAY,KAAO,EAAO,KAAM,OAAS,EAAO,OAAQ,UAAY,EAAO,UAAW,UAAY,EAAO,WACjQ,GAAc,GAA4B,QAAQ,KAAK,kBAAkB,SAAW,EAAI,GAAM,GAAO,GACrG,GAAe,GAA4B,QAAQ,KAAK,kBAAkB,UAAY,EAAI,GAAM,GAAO,GACvG,GAAiB,EAAmB,GAAU,MAAM,OACpD,GAAiB,EAAoB,GAAK,GAAO,MAAM,MAAQ,EAAO,MAAM,SAAW,GAAU,MAAM,MACvG,GAAM,KAAK,iBACX,GAAS,GACT,GAAS,GAAU,MAAM,MACzB,GAAU,GAAU,MAAM,OAC9B,GAAS,GAAe,kBAAkB,IAC1C,GAAI,IAAM,GAAK,GAAS,IAAM,EAAK,IAAM,EAAK,IAAM,EAChD,GAAW,GAAe,UAAU,EAAE,IAC1C,AAAG,IAAY,MACd,IAAW,GAAI,IAAe,KAAK,GAAG,GAAO,EAAM,EAAG,EAAG,IACzD,GAAe,UAAU,EAAE,IAAO,IAEnC,GAAS,SAAS,MAAQ,GAC1B,GAAS,WAAW,MAAM,IAAI,EAAI,GAAO,EAAI,IAC7C,GAAI,OAAO,GAAY,IACvB,GAAI,IAAO,KAAK,iBACZ,GAAU,GACV,GAAU,GAAY,QACtB,GAAS,GAAY,MACrB,GAAU,GAAY,OAC1B,GAAU,GAAe,kBAAkB,IAC3C,GAAI,IAAO,GAAK,GAAU,IAAM,EAAK,IAAM,EAAK,IAAM,EAClD,GAAY,GAAe,UAAU,EAAE,IAC3C,MAAG,KAAa,MACf,IAAY,GAAI,IAAe,KAAK,GAAG,GAAQ,EAAM,EAAG,EAAG,IAC3D,GAAe,UAAU,EAAE,IAAQ,IAEpC,GAAU,SAAS,MAAQ,GAC3B,GAAU,WAAW,MAAM,IAAI,EAAI,GAAO,EAAI,IAC9C,GAAK,OAAO,GAAa,IAClB,GAAa,SAGtB,QAAwB,CACvB,aAAc,CACb,KAAK,EAAI,OAAO,OAAO,OAGzB,GAAI,IAAuB,KAAiB,eACxC,GAAc,KAAiB,MACnC,aAAqB,CACpB,OAAO,SAAS,KAAK,YAAY,GACjC,GAAW,IAAI,GAAI,IAAmB,SAAS,KAC/C,GAAW,IAAI,IACf,GAAW,IAAI,IACf,GAAW,IAAI,IACf,GAAY,SAAS,EAAI,EACzB,GAAY,SAAS,EAAI,EACzB,GAAwB,sBAAsB,uCAAuC,SAAS,GAAK,CAClG,GAAwB,eAAe,QAAU,IAChD,SAAS,GAAO,CACjB,EAAQ,QAAQ,MAAM,MAEvB,KACA,GAAoB,OAAO,YAAY,OAExC,YAA6B,GAAS,CACrC,GAAI,GAAS,GAAU,IACnB,EAAQ,GAAkC,EAAI,GAAU,GAAkC,EAC9F,GAAkC,GAClC,EAAa,MAAQ,EACrB,GAAI,GAAK,EAAc,aACnB,EAAI,OAAO,WACX,GAAI,OAAO,YACX,GAAI,GACJ,GAAK,KAAK,MAAM,EAAI,IACpB,GAAK,KAAK,MAAM,GAAI,IACxB,AAAK,IAAM,EAAG,oBAAsB,IAAM,EAAG,qBAC5C,GAAY,MAAQ,KAAK,MAAM,IAC/B,EAAY,OAAS,KAAK,MAAM,KAEjC,GAAI,IAAY,GAAK,GACrB,AAAG,GAAY,QAAU,IACxB,IAAY,OAAS,GACrB,GAAY,0BAEb,GAAY,EAAO,EAAQ,KAC3B,GAAI,GAAiB,IAAqB,GAAkB,EACxD,GAAmB,EAAiB,GAA4B,QAAQ,GAAuB,OAAO,GAAG,GAAG,CAAE,UAAY,GAAoB,aAAc,UAAY,GAAoB,aAAc,YAAc,GAAM,KAAO,GAAsB,cAAe,SAAW,GAAsB,eAAgB,YAAc,IAAM,KAC/U,GAAe,EAAc,YAQjC,GAPG,GACF,GAAc,YAAc,GAAkB,eAE/C,EAAc,gBAAgB,IAC9B,EAAc,YAAY,EAAE,EAAE,GAAG,IACjC,EAAc,MAAM,GAAK,GAAK,IAC9B,EAAc,OAAO,GAAW,IAC7B,GAAkB,GAAK,GAAmB,CAC5C,GAAI,IAA2B,GAAiB,KAAK,cAAc,GAAiB,QAAQ,GAAqB,GAAgB,IACjI,GAAmB,SAAS,SAAS,MAAQ,GAC7C,GAAmB,SAAS,WAAW,MAAQ,GAC/C,GAAmB,SAAS,cAAc,MAAQ,GAClD,GAAsB,OAAO,GAAiB,GAAmB,UAElE,AAAG,GACF,GAAc,YAAc,GAC5B,GAAiB,qBAAqB,GAAiB,QAAQ,OAEhE,OAAO,sBAAsB,IAE9B,YAAqB,GAAO,EAAM,CACjC,GAAI,GAAQ,EACZ,EAAM,aAAa,KAAK,GACxB,EAAM,cAAc,KAAK,GACzB,EAAM,OAAO,KAAK,GAClB,EAAM,SAAS,EAAI,EAAM,OAAO,MAAQ,KAAK,IAAI,EAAM,aAAa,OAAS,KAAK,IAAI,EAAM,cAAc,OAC1G,EAAM,SAAS,EAAI,EAAM,OAAO,MAAQ,KAAK,IAAI,EAAM,aAAa,OAAS,KAAK,IAAI,EAAM,cAAc,OAC1G,EAAM,SAAS,EAAI,EAAM,OAAO,MAAQ,KAAK,IAAI,EAAM,cAAc,OACrE,GAAI,GAAQ,EAAM,aAAa,MAC3B,EAAK,KAAK,IAAI,EAAQ,IACtB,GAAI,EAAI,EACR,GAAI,EAAI,EACR,GAAI,EAAI,EACR,GAAI,KAAK,IAAI,EAAQ,IACrB,GAAS,CAAC,EAAM,cAAc,MAC9B,EAAM,KAAK,IAAI,GAAS,IACxB,GAAK,EAAI,EACT,GAAK,EAAI,EACT,GAAK,EAAI,EACT,GAAK,KAAK,IAAI,GAAS,IACvB,GAAQ,EAAM,YAClB,GAAM,EAAI,GAAI,GAAK,GAAI,GAAK,GAAI,GAAK,GAAI,GACzC,GAAM,EAAI,CAAC,GAAI,GAAK,GAAI,GAAK,GAAI,GAAK,GAAI,GAC1C,GAAM,EAAI,GAAI,GAAK,GAAI,GAAK,GAAI,GAAK,GAAI,GACzC,GAAM,EAAI,CAAC,GAAI,GAAK,GAAI,GAAK,GAAI,GAAK,GAAI,GAC1C,EAAoB,cAAc,IAEnC,QAAc,OACN,OAAM,EAAE,EAAO,CACrB,GAAI,CACH,MAAO,GAAE,SACD,EAAP,CACD,MAAO,aAGF,QAAO,EAAG,CAChB,GAAI,GAAI,GACR,GAAG,GAAK,KAAM,CACb,GAAI,GAAiB,OAAO,UAAU,eACtC,OAAS,KAAK,GACd,AAAG,GAAK,UAAY,GAAK,kBAAoB,EAAe,KAAK,EAAE,IAClE,EAAE,KAAK,GAIT,MAAO,IAGT,QAAU,OACF,UAAS,EAAG,CAClB,GAAG,GAAK,KAAM,CACb,GAAI,GAAK,EACL,EAAM,EAAE,OACZ,KAAM,EAAK,GAAK,CACf,GAAI,GAAI,IACJ,GAAI,EAAE,WAAW,GACrB,GAAG,IAAK,GAAK,IAAK,IAAM,IAAK,IAAM,IAAK,GAAI,CAC3C,GAAI,IAAK,EAAE,WAAW,EAAI,GACtB,GAAI,SAAS,EAAE,IAAM,KAAO,IAAM,GAAK,GAAK,IAChD,MAAG,OAAM,IACD,KAEA,KAKX,MAAO,OAGT,YAA6B,GAAK,EAAa,CAC9C,GAAI,GAAW,GACf,GAAG,IAAQ,KAAM,CAChB,GAAI,GAAK,EACL,EAAM,GAAQ,OAAO,IACzB,KAAM,EAAK,EAAI,QAAQ,CACtB,GAAI,IAAQ,EAAI,GAChB,EAAE,EACF,EAAS,IAAS,GAAQ,MAAM,GAAK,KAGvC,GAAG,GAAe,KAAM,CACvB,GAAI,GAAK,EACL,EAAM,GAAQ,OAAO,GACzB,KAAM,EAAK,EAAI,QAAQ,CACtB,GAAI,IAAQ,EAAI,GAChB,EAAE,EACF,EAAS,IAAS,GAAQ,MAAM,EAAY,KAG9C,MAAO,GAER,QAAe,CACd,YAAY,EAAE,EAAG,CAChB,KAAK,EAAI,EACT,KAAK,EAAI,GAGX,QAAsB,CACrB,YAAY,EAAa,EAAO,EAAS,EAAQ,GAAS,GAAU,CACnE,AAAG,IAAY,MACd,IAAW,GAET,GAAW,MACb,GAAU,IAER,GAAY,MACd,GAAW,IAEZ,KAAK,mBAAqB,KAC1B,KAAK,MAAQ,EACb,KAAK,OAAS,GAAiB,EAC/B,KAAK,SAAW,EAChB,KAAK,QAAU,EACf,KAAK,SAAW,GAChB,KAAK,SAAW,GAEjB,KAAK,EAAM,CACV,GAAI,GAAK,KAAK,SACV,EAAK,KAAK,MAAQ,KAAK,OAC3B,GAAG,GAAM,GAAK,GAAM,GAAK,GAAQ,EAChC,OAED,GAAI,GAAI,KAAK,SACT,GAAI,KAAK,QACb,GAAG,GAAM,EAAK,EAAK,GAAM,EAAI,EAAK,EAAK,KAAK,mBAC3C,KAAK,SAAW,EAChB,KAAK,MAAQ,KAAK,WACZ,CACN,GAAI,IAAW,EAAI,EAAI,GAAI,GAC3B,GAAG,GAAW,EAAG,CAChB,GAAI,IAAI,GAAM,KAAK,KAAK,IACpB,GAAK,IAAI,EAAK,GAAM,GAAM,GAC1B,GAAI,KAAK,IAAI,CAAC,GAAI,GAAM,GACxB,EAAI,KAAK,IAAI,GAAI,GACjB,GAAI,KAAK,IAAI,GAAI,GACrB,KAAK,SAAW,GAAM,KAAI,GAAI,GAAM,EAAK,IAAK,EAAK,EAAC,EAAK,GAAI,GAAM,GAAI,IAAK,IAC5E,KAAK,MAAQ,GAAK,GAAK,EAAI,GAAI,IAAK,KAAK,eAChC,GAAW,EAAG,CACvB,GAAI,IAAI,GAAM,KAAK,KAAK,CAAC,IACrB,GAAI,IAAO,GAAI,GACf,GAAI,IAAO,GAAI,GACf,EAAI,CAAE,IAAI,EAAK,GAAO,GAAI,IAC1B,GAAI,EAAK,EACT,GAAK,KAAK,IAAI,GAAI,GAClB,GAAK,KAAK,IAAI,GAAI,GACtB,KAAK,SAAW,GAAI,GAAI,GAAK,EAAI,GAAI,GACrC,KAAK,MAAQ,GAAI,GAAK,EAAI,GAAK,KAAK,WAC9B,CACN,GAAI,IAAI,KAAK,KAAK,GACd,GAAI,EAAK,GAAI,EACb,GAAI,KAAK,IAAI,CAAC,GAAI,GACtB,KAAK,SAAY,IAAI,GAAK,GAAK,GAAI,IAAS,GAC5C,KAAK,MAAS,GAAK,GAAI,GAAQ,GAAI,KAAK,QAG1C,AAAG,KAAK,UAAY,MACnB,KAAK,SAAS,KAAK,MAAM,KAAK,UAGhC,gBAAgB,EAAG,CAClB,AAAG,GAAK,MACP,MAAK,OAAS,GAEf,KAAK,MAAQ,KAAK,OAClB,KAAK,SAAW,EACb,KAAK,UAAY,MACnB,KAAK,SAAS,KAAK,MAAM,KAAK,WAIjC,QAA8B,EAE9B,QAA6B,CAC5B,YAAY,EAAU,EAAY,EAAU,EAAO,GAAQ,GAAE,GAAE,GAAM,GAAO,EAAU,GAAW,GAAS,GAAmB,GAAM,GAAM,GAAO,CAC/I,KAAK,UAAY,EACjB,KAAK,YAAc,EACnB,KAAK,UAAY,EACjB,KAAK,OAAS,EACd,KAAK,QAAU,GACf,KAAK,EAAI,GACT,KAAK,EAAI,GACT,KAAK,MAAQ,GACb,KAAK,OAAS,GACd,KAAK,UAAY,EACjB,KAAK,WAAa,GAClB,KAAK,SAAW,GAChB,KAAK,mBAAqB,GAC1B,KAAK,MAAQ,GACb,KAAK,MAAQ,GACb,KAAK,MAAQ,IAGf,QAA2B,CAC1B,YAAY,EAAO,EAAO,EAAO,EAAE,GAAE,GAAO,GAAQ,GAAQ,GAAS,EAAa,CACjF,KAAK,OAAS,EACd,KAAK,OAAS,EACd,KAAK,OAAS,EACd,KAAK,EAAI,EACT,KAAK,EAAI,GACT,KAAK,OAAS,GACd,KAAK,QAAU,GACf,KAAK,QAAU,GACf,KAAK,SAAW,GAChB,KAAK,YAAc,GAGrB,QAAmB,CAClB,YAAY,EAAM,CACjB,OAAO,OACF,QAAS,KACb,KAAK,IAAM,EACX,KAAK,KAAO,GACZ,OAED,GAAI,GAAK,EAAK,YAAY,KACtB,EAAK,EAAK,YAAY,MAC1B,AAAG,EAAK,EACP,MAAK,IAAM,EAAY,OAAO,EAAK,EAAE,GACrC,EAAO,EAAY,OAAO,EAAK,EAAK,EAAE,MACtC,KAAK,UAAY,IACX,AAAG,EAAK,EACd,MAAK,IAAM,EAAY,OAAO,EAAK,EAAE,GACrC,EAAO,EAAY,OAAO,EAAK,EAAK,EAAE,OAEtC,KAAK,IAAM,KAEZ,GAAI,GAAK,EAAK,YAAY,KAC1B,AAAG,GAAM,GACR,MAAK,IAAM,EAAY,OAAO,EAAK,EAAK,EAAE,MAC1C,KAAK,KAAO,EAAY,OAAO,EAAK,EAAE,IAEtC,MAAK,IAAM,KACX,KAAK,KAAO,GAGd,UAAW,CACV,MAAQ,MAAK,KAAO,KAAO,GAAK,KAAK,IAAO,MAAK,UAAY,KAAO,MAAQ,KAAK,KAAQ,MAAK,KAAO,KAAO,GAAK,IAAM,KAAK,WAEtH,kBAAiB,EAAM,CAC7B,GAAI,GAAI,GAAI,IAAa,GACzB,SAAE,IAAM,KACD,EAAE,iBAEH,WAAU,EAAM,CACtB,GAAI,GAAI,GAAI,IAAa,GACzB,MAAG,GAAE,KAAO,KACJ,GAED,EAAE,KAGX,QAAmC,CAClC,YAAY,EAAO,CAClB,KAAK,QAAU,EACf,KAAK,MAAQ,EAEd,SAAU,CACT,MAAO,MAAK,QAAU,KAAK,MAAM,OAElC,MAAO,CACN,MAAO,MAAK,MAAM,KAAK,YAGzB,gBAA8C,GAAqB,CAClE,YAAY,EAAmB,EAAY,CAC1C,GAAI,GAAM,GAAoB,GAAM,UAAU,SAAS,SAAS,GAChE,MAAM,GAAoB,CAAE,QAAU,CAAE,SAAa,GAAI,SAAa,IAAK,SAAW,EAAK,aAAe,GAAM,UAAU,SAAS,aAAc,eAAiB,GAAM,UAAU,SAAS,eAAgB,IAAM,IAAM,IACvN,KAAK,MAAQ,GAAI,IAAY,UAC7B,KAAK,UAAY,EACjB,KAAK,UAAY,EACjB,KAAK,IAAM,KACX,KAAK,SAAW,KAChB,KAAK,kBAAoB,EACzB,KAAK,MAAQ,KACb,KAAK,eAAiB,EACtB,KAAK,SAAW,GAAI,IAAY,GAChC,KAAK,kBAAoB,EACzB,KAAK,YAAc,KACnB,KAAK,QAAU,KACf,KAAK,UAAY,EACjB,KAAK,SAAW,KAChB,KAAK,cAAgB,GAAqB,sBAC1C,KAAK,YAAc,GAAI,IAAc,EAAE,GACvC,KAAK,gBAAkB,KACvB,KAAK,kBAAoB,EACzB,KAAK,iBAAmB,EACxB,KAAK,aAAe,KACpB,KAAK,aAAe,KACpB,KAAK,SAAW,KAChB,KAAK,OAAS,KACd,KAAK,gBAAkB,EACvB,KAAK,gBAAkB,IACvB,KAAK,iBAAmB,QACxB,KAAK,kBAAoB,QACzB,KAAK,eAAiB,GACtB,KAAK,uBAAyB,GAC9B,KAAK,UAAY,EACjB,KAAK,aAAe,KACpB,KAAK,mBAAqB,EAC1B,KAAK,sBAAwB,KAC7B,KAAK,qBAAuB,GAAI,IAAc,EAAE,GAChD,KAAK,mBAAqB,KAC1B,KAAK,aAAe,GACpB,KAAK,MAAQ,KACb,KAAK,aAAe,EACpB,KAAK,aAAe,EACpB,KAAK,IAAM,IACX,KAAK,uBAAyB,IAGhC,gBAAmC,GAAwB,CAC1D,aAAc,CACb,GAAI,GAAW,GAAI,IAAc,MAC7B,EAAW,GAAI,IAAc,GACjC,MAAM,CAAE,SAAW,CAAE,SAAW,EAAU,SAAW,GAAW,aAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmM,eAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4Q,KAAO,GAAW,WAAY,WAAa,GAAO,UAAY,GAAO,IAAM,GAAO,OAAS,GAAO,WAAa,GAAO,SAAW,GAAe,aAC/rB,KAAK,SAAW,EAChB,KAAK,SAAW,EAEjB,UAAU,EAAQ,EAAS,CAC1B,KAAK,SAAS,MAAQ,EACtB,KAAK,SAAS,MAAQ,GAGxB,gBAAiC,GAAwB,CACxD,aAAc,CACb,GAAI,GAAW,GAAI,IAAc,MAC7B,EAAa,GAAI,IAAc,IAC/B,EAAgB,GAAI,IAAc,GACtC,MAAM,CAAE,SAAW,CAAE,SAAW,EAAU,WAAa,EAAY,cAAgB,GAAgB,aAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuM,eAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoY,KAAO,GAAW,WAAY,SAAW,GAAe,mBACtwB,KAAK,SAAW,EAChB,KAAK,WAAa,EAClB,KAAK,cAAgB,GAGvB,gBAA6B,GAAwB,CACpD,YAAY,EAAI,EAAO,EAAgB,EAAW,GAAW,GAAgB,CAC5E,GAAI,IAAW,GAAI,IAAc,MAC7B,GAAa,GAAI,IAAc,GAAI,IAAc,EAAE,IACnD,GAAc,GAAe,oBAAoB,EAAI,EAAO,EAAgB,EAAW,GAAW,IAClG,EAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAwI,GAAY,oBAAoB,KAAK;AAAA,GAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAkJ,GAAY,cAAc,KAAK;AAAA,GAAQ;AAAA;AAAA;AAAA;AAAA,KACpX,GAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAAmG,GAAY,qBAAqB,KAAK;AAAA,GAAQ;AAAA;AAAA;AAAA,EAAmB,GAAY,oBAAoB,KAAK;AAAA,GAAQ;AAAA;AAAA;AAAA;AAAA,EAA4C,GAAY,kBAAkB,KAAK;AAAA,GAAQ;AAAA;AAAA;AAAA;AAAA,EAAwD,GAAY,eAAe,KAAK;AAAA,GAAQ;AAAA;AAAA;AAAA,KACnZ,MAAM,CAAE,SAAW,CAAE,QAAU,GAAU,cAAgB,IAAa,aAAe,EAAK,eAAiB,KAC3G,KAAK,SAAW,GAChB,KAAK,WAAa,GAClB,KAAK,OAAS,EACd,KAAK,WAAa,EAClB,KAAK,WAAa,SAEZ,qBAAoB,EAAI,EAAO,EAAgB,EAAW,GAAW,GAAgB,CAC3F,GAAI,IAAI,GAAe,kBAAkB,GACrC,GAAe,IAAI,GAAK,EACxB,GAAU,GACV,EAAU,GACV,GAAc,EACd,GAAK,EACT,KAAM,GAAK,IAAG,CACb,GAAI,IAAI,KACJ,GAAI,GAAe,eAAe,GAAK,IAAI,GAAK,EAAM,EAAE,GAC5D,GAAQ,IAAK,GAAI,GACjB,EAAQ,IAAK,GACb,IAAe,GAEhB,GAAI,IAAM,EACN,GAAM,EAAQ,OAClB,KAAM,GAAM,IAAK,EAAQ,OAAU,GACnC,GAAG,GAAgB,CAClB,GAAI,IAAoB,GACpB,GAAoB,GACpB,GAAI,EACR,KAAM,GAAI,IAAG,CACZ,GAAI,IAAI,EAAQ,IACZ,GAAa,GAAQ,IACzB,GAAG,GAAI,EAAI,GAAG,CACb,GAAI,IAAI,EAAQ,GAAI,GACpB,GAAkB,KAAK,GAAa,GAAK,IAAI,KAC7C,GAAkB,KAAK,GAAI,QAE3B,IAAkB,KAAK,IACvB,GAAkB,KAAK,IAExB,IAAK,EAEN,GAAU,GACV,EAAU,GAEX,GAAI,IAAiB,EAAI,aAAa,OAClC,GAAe,KAAK,IAAI,GAAQ,OAAO,IAAkB,EACzD,GAAM,GACN,GAAM,EACV,KAAM,GAAM,IAAc,GAAI,KAAK,2BAA6B,KAAQ,KACxE,GAAI,IAAM,GACN,GAAM,EACV,KAAM,GAAM,IAAc,CACzB,GAAI,IAAI,KACR,GAAI,KAAK,cAAgB,GAAI,wBAA0B,GAAe,UAAU,GAAQ,IAAK,GAAc,KAAO,GAAe,UAAU,GAAQ,IAAK,IAAc,sBAEvK,GAAI,IAAM,GACN,GAAM,GACN,GAAM,GAAQ,OAClB,KAAM,GAAM,IAAK,CAChB,GAAI,IAAI,KACR,GAAI,KAAK,mBAAqB,GAAI,0BAA4B,GAAe,UAAW,IAAQ,IAAK,GAAQ,IAAM,GAAc,KAAO,GAAe,UAAW,IAAQ,IAAK,GAAQ,IAAM,IAAc,sBAE5M,GAAI,IAAO,GACP,GAAO,EACP,GAAO,GAAQ,OACnB,KAAM,GAAO,IAAM,CAClB,GAAI,IAAI,KACR,GAAK,KAAK,0CAA4C,GAAI,OAAS,GAAe,UAAU,EAAQ,KAAM,KAE3G,MAAO,CAAE,oBAAsB,GAAK,cAAgB,GAAK,qBAAuB,GAAe,GAAQ,OAAS,CAAC,+BAAiC,CAAC,IAAK,kBAAoB,GAAK,eAAiB,UAE5L,mBAAkB,EAAa,CACrC,GAAI,GAAI,KAAK,MAAM,GACnB,GAAG,EAAI,GAAK,GAAK,KAAK,MAAM,EAAI,GAAK,GAAK,GAAK,EAAI,EAClD,MAAO,MAAK,IAAI,EAAE,GAAK,EAExB,GAAI,GAAI,EAAI,EACZ,GAAG,EAAI,GAAK,GAAK,KAAK,MAAM,EAAI,GAAK,GAAK,GAAK,EAAI,EAClD,MAAO,MAAK,IAAI,EAAE,GAAK,EAExB,GAAI,GAAK,EAAI,EACb,GAAG,EAAK,GAAK,GAAK,KAAK,MAAM,EAAK,GAAK,GAAK,GAAK,EAAK,EACrD,MAAO,MAAK,IAAI,EAAG,GAAK,EAEzB,GAAI,IAAK,EAAI,EACb,GAAG,GAAK,GAAK,GAAK,KAAK,MAAM,GAAK,GAAK,GAAK,GAAK,GAAK,EACrD,MAAO,MAAK,IAAI,GAAG,GAAK,EAEzB,GAAI,IAAK,EAAI,EACb,MAAG,IAAK,GAAK,GAAK,KAAK,MAAM,GAAK,GAAK,GAAK,GAAK,GAAK,EAC9C,KAAK,IAAI,GAAG,GAAK,EAElB,KAAK,IAAI,EAAE,GAAK,QAEjB,gBAAe,EAAE,EAAiB,CACxC,MAAO,GAAO,MAAK,KAAK,EAAM,KAAK,IAAM,GAAmB,KAAK,IAAI,CAAE,GAAI,EAAK,GAAM,EAAkB,WAElG,WAAU,EAAG,CACnB,GAAI,GAAI,GAAK,KAAO,OAAS,GAAK,EAClC,MAAG,GAAE,QAAQ,MAAQ,IACpB,IAAK,KAEC,GAGT,GAAI,IAAgB,KAChB,GAA0B,KAAiB,kBAC3C,GAAuB,KACvB,GAAoB,KACpB,GAAsB,KAAiB,cACvC,GAAgB,KAAiB,QACjC,GAAgB,KAAiB,QACjC,GAAmD,UAAiD,WACpG,GAA8B,KAAiB,eACnD,gBAAgC,GAA4B,CAC3D,YAAY,EAAU,CACrB,MAAM,GAEP,iBAAiB,EAAiB,CACjC,GAAI,GAAS,CAAE,UAAY,GAAoB,cAAe,UAAY,GAAoB,cAAe,gBAAkB,GAAO,KAAO,GAAsB,iBAAkB,OAAS,GAAkB,WAAY,SAAW,KAAK,OAAO,GAAmB,EAAgB,SAAW,GAAsB,aAAc,YAAc,GAAO,cAAgB,IACtW,EAAqB,KAAK,oBAAoB,GAClD,SAAmB,YAAc,GAAmB,KACpD,KAAK,sBAAwB,KAAK,oBAAoB,GAC/C,EAER,OAAO,EAAS,CACf,MAAG,IAAW,MAAQ,EAAQ,MAAQ,GAAsB,iBACpD,GAEH,EAAQ,UAAY,GAAsB,gBAAkB,EAAQ,UAAY,GAAsB,aAGnG,GAFA,EAAQ,UAAY,GAAsB,cAKnD,oBAAoB,EAAQ,CAC3B,GAAI,GAAqB,GAAI,IAAwB,EAAI,GAAkB,SAAS,EAAI,GAAkB,SAAS,GACnH,SAAmB,QAAQ,QAAU,GAAc,wBACnD,EAAmB,QAAQ,KAAO,eAClC,EAAmB,YAAc,GAC1B,GAGT,AAAG,OAAO,cAAgB,YAAc,MAAO,aAAY,KAAQ,WAAa,KAC/E,GAAY,IAAM,YAAY,IAAI,KAAK,cAIxC,GAAI,IAAU,GAAI,IAAa,CAAE,OAAS,KAC1C,GAAuB,SAAW,CAAE,SAAW,IAAK,QAAU,IAAK,UAAY,EAAG,aAAe,EAAG,cAAgB,EAAG,OAAS,EAAG,UAAY,GAC/I,GAAuB,WAAc,SAAS,GAAO,CACpD,GAAI,GACJ,GAAI,GAAS,GAAI,IACb,EAAW,GAAI,cAAa,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,IAC3C,EAAK,GAAI,cAAa,EAAS,IAAI,SAAS,GAAG,CAClD,MAAO,IAAI,GAAM,MAElB,SAAO,aAAa,WAAW,GAAI,IAAsB,EAAS,IAClE,EAAO,aAAa,KAAK,GAAI,IAAsB,EAAG,IACtD,EAAK,EACE,GACN,MACF,GAA2B,SAAW,GAAI,IAC1C,GAA2B,UAAY,GAAI,IAAyB,GAAG,EAAE,EAAE,GAAG,EAAE,GAChF,GAA2B,QAAW,SAAS,GAAO,CACrD,GAAI,GACJ,GAAI,GAAO,GAAI,IAAuB,MACtC,UAA2B,SAAS,IAAI,GACxC,EAAK,EACE,GACN,MACF,GAAI,IAAkB,KAAK,IAAI,OAAO,iBAAiB,GACnD,GAAuC,GACvC,GAAa,GAAI,IACjB,GAAc,GAAI,IAAwB,IAAI,EAAE,KAAO,IACvD,EAAe,SAAS,GAAO,CAClC,GAAI,GACJ,GAAI,GAAI,OAAO,SAAS,cAAc,UACtC,SAAE,MAAM,SAAW,WACnB,EAAE,MAAM,OAAS,KACjB,EAAE,MAAM,IAAM,IACd,EAAE,MAAM,KAAO,IACf,EAAE,MAAM,MAAQ,OAChB,EAAE,MAAM,OAAS,OACjB,EAAK,EACE,GACN,MACE,EAAiB,SAAS,GAAO,CACpC,GAAI,GACJ,GAAI,GAAI,GAAI,IAAoB,CAAE,OAAS,EAAa,UAAY,GAAM,gBAAkB,qBAC5F,EAAE,UAAY,GACd,EAAE,eAAiB,GACnB,EAAE,eAAiB,GACnB,EAAE,UAAU,QAAU,GACtB,EAAE,eAAiB,GAAsB,aACzC,EAAE,YAAc,GAAkB,sBAClC,EAAE,oBAAsB,GACxB,EAAE,wBAA0B,GAC5B,GAAI,GAA+B,EAAE,4BACjC,EAAW,GAAI,GACnB,SAAE,4BAA8B,UAAW,CAC1C,MAAI,IAGJ,GAAE,mBAAmB,GACd,GAA4B,QAAQ,GAAuB,eAAe,EAAS,MAAM,EAAS,OAAO,CAAE,UAAY,GAAoB,aAAc,UAAY,GAAoB,yBAA0B,YAAc,GAAM,KAAO,GAAsB,cAAe,SAAW,GAAsB,eAAgB,gBAAkB,GAAM,YAAc,KAHzW,KAKT,EAAK,EACE,GACN,MACE,EAAU,EAAc,aACxB,EAAoB,GAAI,IAA6B,GACrD,EAAsB,GAAI,IAAuB,CAAE,yBAA2B,EAAmB,OAAS,IAAK,UAAY,EAAI,UAAY,IAC3I,EAAe,GAAI,IAAc,GACjC,GAA0B,GAAI,IAAmB,EAAc,IAC/D,GAAkB,GAAI,IACtB,GAAwB,GAAI,IAA2B,GACvD,GAAyB,GAAI,IAC7B,GAAmB,GAAI,IAAsB,GAC7C,GAAoB,GACpB,GAAkB,IAClB,GAAqB,IACrB,GAAkB,IAClB,GAAuB,KACvB,GAAqC,EACrC,GAAe,SAAS,GAAO,CAClC,GAAI,GACJ,GAAI,GAAI,GAAI,IAAW,GAAI,IAAqB,EAAE,GAAG,IAAI,GAAI,IAA2B,CAAE,UAAY,EAAK,MAAQ,SAAU,aAAe,GAAK,gBAAkB,GAAI,IAAY,OAAQ,oBAAsB,IAAK,UAAY,MAClO,SAAE,SAAS,UAAY,IACvB,EAAK,EACE,GACN,MACE,GAAY,GAAI,IAAW,GAAI,IAAkB,GAAI,GAAI,IAAK,GAAI,IAA2B,CAAE,MAAQ,SAAU,SAAW,SAAU,kBAAoB,MAC1J,GAAkB,SAAS,GAAO,CACrC,GAAI,GACJ,GAAI,GAAkB,GAAI,cAAa,KACvC,CACC,GAAI,IAAK,EACT,KAAM,GAAK,KAAO,CACjB,GAAI,IAAI,KAAK,SACT,GAAI,KAAK,SACT,EAAI,KAAK,SACT,GAAK,KAAK,SACV,GAAK,KAAK,SACV,GAAK,KAAK,SACV,GAAS,KAAO,EACpB,EAAgB,IAAU,GAC1B,EAAgB,EAAI,IAAU,GAC9B,EAAgB,EAAI,IAAU,EAC9B,GAAI,IAAI,GAAS,EACjB,EAAgB,IAAK,GACrB,EAAgB,EAAI,IAAK,GACzB,EAAgB,EAAI,IAAK,GACzB,EAAgB,EAAI,IAAK,GAG3B,GAAI,GAAoB,GAAI,IAAwB,EAAgB,GAChE,EAAe,GAAI,IACvB,EAAa,aAAa,WAAW,GAAI,IAAiC,EAAkB,EAAE,IAC9F,EAAa,aAAa,UAAU,GAAI,IAAiC,EAAkB,EAAE,IAC7F,GAAI,IAAI,GAAI,IAAqB,CAAE,OAAS,IAAM,QAAU,EAAI,gBAAkB,IAAK,aAAe,GAAK,qBAAuB,IAAK,UAAY,IAAK,kBAAoB,MACxK,GAAI,GAAI,IAAa,EAAa,IACtC,UAAE,eAAiB,SAAS,GAAS,GAAM,GAAO,EAAS,GAAS,GAAO,CAC1E,GAAI,IAAK,GAAS,kBAClB,GAAE,WAAW,MAAS,KAAM,KAAO,GAAG,OAAS,EAAQ,qBAAuB,MAE/E,EAAK,GACE,GACN,MACE,GAAkC,GACtC,GAAmB,SAAW,GAAI,IAClC,GAAe,UAAY,GAAI,IAC/B,GAAkB,QAAU,EAC5B,GAAkB,SAAW,KAAK,IAAI,EAAE,GAAkB,SAC1D,OACG,MAAO,SAAU,YAAc,OAAS,MAAO,SAAU,YAAc,OAAS,MAAO,OAAQ,YAAc,KAAO",
  "names": []
}
